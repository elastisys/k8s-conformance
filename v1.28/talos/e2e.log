  I0817 11:35:42.762137      24 e2e.go:117] Starting e2e run "815ae65c-ddc3-42f2-8b3f-4a02ca022df4" on Ginkgo node 1
  Aug 17 11:35:42.782: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1692272142 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Aug 17 11:35:42.896: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:35:42.897: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Aug 17 11:35:42.925: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Aug 17 11:35:42.929: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-flannel' (0 seconds elapsed)
  Aug 17 11:35:42.929: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Aug 17 11:35:42.929: INFO: e2e test version: v1.28.0
  Aug 17 11:35:42.930: INFO: kube-apiserver version: v1.28.0
  Aug 17 11:35:42.930: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:35:42.933: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.037 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 08/17/23 11:35:43.079
  Aug 17 11:35:43.079: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/17/23 11:35:43.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:35:43.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:35:43.092
  STEP: Creating two CSIDrivers @ 08/17/23 11:35:43.094
  STEP: Getting "inline-driver-6edddead-b864-434d-8e37-15cb87d3d397" & "inline-driver-e7dcfebb-a411-4433-9b32-e768d40c474d" @ 08/17/23 11:35:43.104
  STEP: Patching the CSIDriver "inline-driver-e7dcfebb-a411-4433-9b32-e768d40c474d" @ 08/17/23 11:35:43.108
  STEP: Updating the CSIDriver "inline-driver-e7dcfebb-a411-4433-9b32-e768d40c474d" @ 08/17/23 11:35:43.112
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8467" @ 08/17/23 11:35:43.117
  STEP: Deleting CSIDriver "inline-driver-6edddead-b864-434d-8e37-15cb87d3d397" @ 08/17/23 11:35:43.12
  STEP: Confirm deletion of CSIDriver "inline-driver-6edddead-b864-434d-8e37-15cb87d3d397" @ 08/17/23 11:35:43.123
  STEP: Deleting CSIDriver "inline-driver-e7dcfebb-a411-4433-9b32-e768d40c474d" via DeleteCollection @ 08/17/23 11:35:43.125
  STEP: Confirm deletion of CSIDriver "inline-driver-e7dcfebb-a411-4433-9b32-e768d40c474d" @ 08/17/23 11:35:43.13
  Aug 17 11:35:43.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8467" for this suite. @ 08/17/23 11:35:43.136
• [0.061 seconds]
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 08/17/23 11:35:43.14
  Aug 17 11:35:43.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename job @ 08/17/23 11:35:43.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:35:43.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:35:43.153
  STEP: Creating a job @ 08/17/23 11:35:43.155
  STEP: Ensuring job reaches completions @ 08/17/23 11:35:43.159
  Aug 17 11:35:53.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9157" for this suite. @ 08/17/23 11:35:53.167
• [10.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 08/17/23 11:35:53.174
  Aug 17 11:35:53.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename runtimeclass @ 08/17/23 11:35:53.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:35:53.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:35:53.189
  Aug 17 11:35:55.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8884" for this suite. @ 08/17/23 11:35:55.214
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 08/17/23 11:35:55.22
  Aug 17 11:35:55.220: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 11:35:55.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:35:55.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:35:55.236
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/17/23 11:35:55.239
  STEP: Saw pod success @ 08/17/23 11:35:59.256
  Aug 17 11:35:59.259: INFO: Trying to get logs from node talos-default-worker-1 pod pod-92daa1c6-6e73-4391-924f-9d3d251bc93f container test-container: <nil>
  STEP: delete the pod @ 08/17/23 11:35:59.272
  Aug 17 11:35:59.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-818" for this suite. @ 08/17/23 11:35:59.286
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 08/17/23 11:35:59.293
  Aug 17 11:35:59.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 11:35:59.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:35:59.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:35:59.309
  Aug 17 11:35:59.318: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Aug 17 11:36:04.322: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/17/23 11:36:04.322
  Aug 17 11:36:04.322: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Aug 17 11:36:06.326: INFO: Creating deployment "test-rollover-deployment"
  Aug 17 11:36:06.330: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Aug 17 11:36:08.337: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Aug 17 11:36:08.343: INFO: Ensure that both replica sets have 1 created replica
  Aug 17 11:36:08.348: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Aug 17 11:36:08.356: INFO: Updating deployment test-rollover-deployment
  Aug 17 11:36:08.356: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Aug 17 11:36:10.362: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Aug 17 11:36:10.367: INFO: Make sure deployment "test-rollover-deployment" is complete
  Aug 17 11:36:10.373: INFO: all replica sets need to contain the pod-template-hash label
  Aug 17 11:36:10.373: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:36:12.381: INFO: all replica sets need to contain the pod-template-hash label
  Aug 17 11:36:12.381: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:36:14.380: INFO: all replica sets need to contain the pod-template-hash label
  Aug 17 11:36:14.380: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:36:16.381: INFO: all replica sets need to contain the pod-template-hash label
  Aug 17 11:36:16.381: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:36:18.380: INFO: all replica sets need to contain the pod-template-hash label
  Aug 17 11:36:18.380: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 36, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 36, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:36:20.380: INFO: 
  Aug 17 11:36:20.380: INFO: Ensure that both old replica sets have no replicas
  Aug 17 11:36:20.386: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6953",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27c5c013-e574-4b56-95d6-53e2c96f7ee0",
      ResourceVersion: (string) (len=4) "1479",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827868966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 17 11:36:20.391: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6953",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d2e0801-c7bf-4e76-abe3-0b8e21c193ac",
      ResourceVersion: (string) (len=4) "1469",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827868968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "27c5c013-e574-4b56-95d6-53e2c96f7ee0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 37 63 35 63 30  31 33 2d 65 35 37 34 2d  |\"27c5c013-e574-|
              00000120  34 62 35 36 2d 39 35 64  36 2d 35 33 65 32 63 39  |4b56-95d6-53e2c9|
              00000130  36 66 37 65 65 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f7ee0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 11:36:20.393: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Aug 17 11:36:20.393: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6953",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8f159ff-eb02-480d-9aba-c95d37945008",
      ResourceVersion: (string) (len=4) "1478",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827868959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "27c5c013-e574-4b56-95d6-53e2c96f7ee0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 37 63 35 63 30 31 33  2d 65 35 37 34 2d 34 62  |27c5c013-e574-4b|
              000000c0  35 36 2d 39 35 64 36 2d  35 33 65 32 63 39 36 66  |56-95d6-53e2c96f|
              000000d0  37 65 65 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7ee0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 11:36:20.395: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6953",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "618b3af2-91ca-4662-907f-ace392cbdbd5",
      ResourceVersion: (string) (len=4) "1425",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827868966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "27c5c013-e574-4b56-95d6-53e2c96f7ee0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 37 63 35 63 30  31 33 2d 65 35 37 34 2d  |\"27c5c013-e574-|
              00000120  34 62 35 36 2d 39 35 64  36 2d 35 33 65 32 63 39  |4b56-95d6-53e2c9|
              00000130  36 66 37 65 65 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f7ee0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 11:36:20.400: INFO: Pod "test-rollover-deployment-5d484bf7f9-g7s82" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-g7s82",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-6953",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ffde764-1a82-4eec-80c5-023dde097a56",
      ResourceVersion: (string) (len=4) "1443",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827868968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "3d2e0801-c7bf-4e76-abe3-0b8e21c193ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 64  32 65 30 38 30 31 2d 63  |d\":\"3d2e0801-c|
              00000090  37 62 66 2d 34 65 37 36  2d 61 62 65 33 2d 30 62  |7bf-4e76-abe3-0b|
              000000a0  38 65 32 31 63 31 39 33  61 63 5c 22 7d 22 3a 7b  |8e21c193ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 38 5c 22 7d 22 3a 7b  |10.244.1.8\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dp9pw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dp9pw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827868968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.244.1.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827868968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827868968,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://7a3a9065528f3b8512e3f928bdb6737758b9e088a79b07434476d538071fcf8b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 11:36:20.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6953" for this suite. @ 08/17/23 11:36:20.407
• [21.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 08/17/23 11:36:20.414
  Aug 17 11:36:20.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename discovery @ 08/17/23 11:36:20.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:36:20.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:36:20.433
  STEP: Setting up server cert @ 08/17/23 11:36:20.437
  STEP: Requesting APIResourceList from "/api/v1" @ 08/17/23 11:36:20.587
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 08/17/23 11:36:20.588
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 08/17/23 11:36:20.589
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 08/17/23 11:36:20.59
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 08/17/23 11:36:20.59
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 08/17/23 11:36:20.592
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 08/17/23 11:36:20.593
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 08/17/23 11:36:20.594
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 08/17/23 11:36:20.594
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 08/17/23 11:36:20.595
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 08/17/23 11:36:20.595
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 08/17/23 11:36:20.596
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 08/17/23 11:36:20.596
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 08/17/23 11:36:20.597
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 08/17/23 11:36:20.597
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 08/17/23 11:36:20.598
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 08/17/23 11:36:20.598
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 08/17/23 11:36:20.599
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 08/17/23 11:36:20.6
  Aug 17 11:36:20.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8001" for this suite. @ 08/17/23 11:36:20.603
• [0.191 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 08/17/23 11:36:20.606
  Aug 17 11:36:20.606: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 11:36:20.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:36:20.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:36:20.614
  STEP: creating a ConfigMap @ 08/17/23 11:36:20.616
  STEP: fetching the ConfigMap @ 08/17/23 11:36:20.618
  STEP: patching the ConfigMap @ 08/17/23 11:36:20.619
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 08/17/23 11:36:20.621
  STEP: deleting the ConfigMap by collection with a label selector @ 08/17/23 11:36:20.623
  STEP: listing all ConfigMaps in test namespace @ 08/17/23 11:36:20.626
  Aug 17 11:36:20.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4791" for this suite. @ 08/17/23 11:36:20.63
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 08/17/23 11:36:20.633
  Aug 17 11:36:20.633: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename events @ 08/17/23 11:36:20.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:36:20.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:36:20.641
  STEP: creating a test event @ 08/17/23 11:36:20.642
  STEP: listing events in all namespaces @ 08/17/23 11:36:20.645
  STEP: listing events in test namespace @ 08/17/23 11:36:20.648
  STEP: listing events with field selection filtering on source @ 08/17/23 11:36:20.649
  STEP: listing events with field selection filtering on reportingController @ 08/17/23 11:36:20.65
  STEP: getting the test event @ 08/17/23 11:36:20.652
  STEP: patching the test event @ 08/17/23 11:36:20.653
  STEP: getting the test event @ 08/17/23 11:36:20.657
  STEP: updating the test event @ 08/17/23 11:36:20.658
  STEP: getting the test event @ 08/17/23 11:36:20.66
  STEP: deleting the test event @ 08/17/23 11:36:20.662
  STEP: listing events in all namespaces @ 08/17/23 11:36:20.665
  STEP: listing events in test namespace @ 08/17/23 11:36:20.667
  Aug 17 11:36:20.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-694" for this suite. @ 08/17/23 11:36:20.67
• [0.040 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 08/17/23 11:36:20.673
  Aug 17 11:36:20.673: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 11:36:20.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:36:20.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:36:20.681
  STEP: Setting up server cert @ 08/17/23 11:36:20.691
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 11:36:20.864
  STEP: Deploying the webhook pod @ 08/17/23 11:36:20.87
  STEP: Wait for the deployment to be ready @ 08/17/23 11:36:20.877
  Aug 17 11:36:20.881: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/17/23 11:36:22.892
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 11:36:22.905
  Aug 17 11:36:23.905: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 08/17/23 11:36:23.911
  STEP: Creating a custom resource definition that should be denied by the webhook @ 08/17/23 11:36:23.925
  Aug 17 11:36:23.925: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:36:23.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6514" for this suite. @ 08/17/23 11:36:23.977
  STEP: Destroying namespace "webhook-markers-5142" for this suite. @ 08/17/23 11:36:23.982
• [3.315 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 08/17/23 11:36:23.988
  Aug 17 11:36:23.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:36:23.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:36:24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:36:24.002
  STEP: Creating projection with secret that has name projected-secret-test-11bedd15-7e27-4c33-a938-3256a96d82fa @ 08/17/23 11:36:24.005
  STEP: Creating a pod to test consume secrets @ 08/17/23 11:36:24.008
  STEP: Saw pod success @ 08/17/23 11:36:26.021
  Aug 17 11:36:26.022: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-secrets-510b682d-1e0c-48ec-bf5c-e12f79d5bbaf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 11:36:26.026
  Aug 17 11:36:26.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7975" for this suite. @ 08/17/23 11:36:26.035
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 08/17/23 11:36:26.039
  Aug 17 11:36:26.039: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename taint-multiple-pods @ 08/17/23 11:36:26.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:36:26.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:36:26.049
  Aug 17 11:36:26.051: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 17 11:37:26.066: INFO: Waiting for terminating namespaces to be deleted...
  Aug 17 11:37:26.069: INFO: Starting informer...
  STEP: Starting pods... @ 08/17/23 11:37:26.069
  Aug 17 11:37:26.283: INFO: Pod1 is running on talos-default-worker-1. Tainting Node
  Aug 17 11:37:28.495: INFO: Pod2 is running on talos-default-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/17/23 11:37:28.495
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/17/23 11:37:28.502
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 08/17/23 11:37:28.505
  Aug 17 11:37:33.819: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Aug 17 11:37:53.859: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Aug 17 11:37:53.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/17/23 11:37:53.867
  STEP: Destroying namespace "taint-multiple-pods-8998" for this suite. @ 08/17/23 11:37:53.868
• [87.832 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 08/17/23 11:37:53.871
  Aug 17 11:37:53.871: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename watch @ 08/17/23 11:37:53.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:37:53.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:37:53.881
  STEP: creating a watch on configmaps with a certain label @ 08/17/23 11:37:53.883
  STEP: creating a new configmap @ 08/17/23 11:37:53.883
  STEP: modifying the configmap once @ 08/17/23 11:37:53.885
  STEP: changing the label value of the configmap @ 08/17/23 11:37:53.889
  STEP: Expecting to observe a delete notification for the watched object @ 08/17/23 11:37:53.893
  Aug 17 11:37:53.893: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8931  427b8569-6535-41c7-b979-c39591971d83 1879 0 2023-08-17 11:37:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-17 11:37:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:37:53.893: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8931  427b8569-6535-41c7-b979-c39591971d83 1880 0 2023-08-17 11:37:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-17 11:37:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:37:53.893: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8931  427b8569-6535-41c7-b979-c39591971d83 1881 0 2023-08-17 11:37:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-17 11:37:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 08/17/23 11:37:53.893
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 08/17/23 11:37:53.897
  STEP: changing the label value of the configmap back @ 08/17/23 11:38:03.898
  STEP: modifying the configmap a third time @ 08/17/23 11:38:03.905
  STEP: deleting the configmap @ 08/17/23 11:38:03.911
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 08/17/23 11:38:03.915
  Aug 17 11:38:03.915: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8931  427b8569-6535-41c7-b979-c39591971d83 1922 0 2023-08-17 11:37:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-17 11:38:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:38:03.916: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8931  427b8569-6535-41c7-b979-c39591971d83 1923 0 2023-08-17 11:37:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-17 11:38:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:38:03.916: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8931  427b8569-6535-41c7-b979-c39591971d83 1924 0 2023-08-17 11:37:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-17 11:38:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:38:03.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8931" for this suite. @ 08/17/23 11:38:03.921
• [10.054 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 08/17/23 11:38:03.926
  Aug 17 11:38:03.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 11:38:03.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:03.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:03.941
  STEP: creating service endpoint-test2 in namespace services-6755 @ 08/17/23 11:38:03.943
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6755 to expose endpoints map[] @ 08/17/23 11:38:03.953
  Aug 17 11:38:03.957: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Aug 17 11:38:04.964: INFO: successfully validated that service endpoint-test2 in namespace services-6755 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6755 @ 08/17/23 11:38:04.964
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6755 to expose endpoints map[pod1:[80]] @ 08/17/23 11:38:06.978
  Aug 17 11:38:06.983: INFO: successfully validated that service endpoint-test2 in namespace services-6755 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 08/17/23 11:38:06.984
  Aug 17 11:38:06.984: INFO: Creating new exec pod
  Aug 17 11:38:09.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6755 exec execpodxrcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 17 11:38:10.193: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 17 11:38:10.193: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 11:38:10.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6755 exec execpodxrcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.144.15 80'
  Aug 17 11:38:10.365: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.144.15 80\nConnection to 10.108.144.15 80 port [tcp/http] succeeded!\n"
  Aug 17 11:38:10.365: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-6755 @ 08/17/23 11:38:10.365
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6755 to expose endpoints map[pod1:[80] pod2:[80]] @ 08/17/23 11:38:12.377
  Aug 17 11:38:12.388: INFO: successfully validated that service endpoint-test2 in namespace services-6755 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 08/17/23 11:38:12.388
  Aug 17 11:38:13.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6755 exec execpodxrcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 17 11:38:13.582: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 17 11:38:13.582: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 11:38:13.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6755 exec execpodxrcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.144.15 80'
  Aug 17 11:38:13.773: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.144.15 80\nConnection to 10.108.144.15 80 port [tcp/http] succeeded!\n"
  Aug 17 11:38:13.773: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6755 @ 08/17/23 11:38:13.773
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6755 to expose endpoints map[pod2:[80]] @ 08/17/23 11:38:13.78
  Aug 17 11:38:14.798: INFO: successfully validated that service endpoint-test2 in namespace services-6755 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 08/17/23 11:38:14.798
  Aug 17 11:38:15.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6755 exec execpodxrcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 17 11:38:15.939: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 17 11:38:15.939: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 11:38:15.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6755 exec execpodxrcth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.144.15 80'
  Aug 17 11:38:16.067: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.144.15 80\nConnection to 10.108.144.15 80 port [tcp/http] succeeded!\n"
  Aug 17 11:38:16.067: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-6755 @ 08/17/23 11:38:16.067
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6755 to expose endpoints map[] @ 08/17/23 11:38:16.073
  Aug 17 11:38:17.086: INFO: successfully validated that service endpoint-test2 in namespace services-6755 exposes endpoints map[]
  Aug 17 11:38:17.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6755" for this suite. @ 08/17/23 11:38:17.108
• [13.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 08/17/23 11:38:17.116
  Aug 17 11:38:17.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 11:38:17.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:17.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:17.134
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/17/23 11:38:17.137
  STEP: Saw pod success @ 08/17/23 11:38:19.15
  Aug 17 11:38:19.152: INFO: Trying to get logs from node talos-default-worker-1 pod pod-3b2d3ada-80a1-401c-b6b0-11df6991db84 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 11:38:19.161
  Aug 17 11:38:19.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2461" for this suite. @ 08/17/23 11:38:19.175
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 08/17/23 11:38:19.18
  Aug 17 11:38:19.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:38:19.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:19.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:19.194
  STEP: Creating configMap with name projected-configmap-test-volume-map-ee3a0355-9203-440f-93f7-f97f451c878c @ 08/17/23 11:38:19.196
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:38:19.2
  STEP: Saw pod success @ 08/17/23 11:38:21.213
  Aug 17 11:38:21.215: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-88a5598d-3162-412a-b205-745fb3e0b012 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 11:38:21.221
  Aug 17 11:38:21.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8584" for this suite. @ 08/17/23 11:38:21.236
• [2.061 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 08/17/23 11:38:21.241
  Aug 17 11:38:21.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename field-validation @ 08/17/23 11:38:21.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:21.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:21.256
  Aug 17 11:38:21.258: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  W0817 11:38:23.780366      24 warnings.go:70] unknown field "alpha"
  W0817 11:38:23.780394      24 warnings.go:70] unknown field "beta"
  W0817 11:38:23.780404      24 warnings.go:70] unknown field "delta"
  W0817 11:38:23.780414      24 warnings.go:70] unknown field "epsilon"
  W0817 11:38:23.780423      24 warnings.go:70] unknown field "gamma"
  Aug 17 11:38:24.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5213" for this suite. @ 08/17/23 11:38:24.318
• [3.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 08/17/23 11:38:24.322
  Aug 17 11:38:24.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename subpath @ 08/17/23 11:38:24.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:24.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:24.333
  STEP: Setting up data @ 08/17/23 11:38:24.335
  STEP: Creating pod pod-subpath-test-configmap-24tm @ 08/17/23 11:38:24.341
  STEP: Creating a pod to test atomic-volume-subpath @ 08/17/23 11:38:24.341
  STEP: Saw pod success @ 08/17/23 11:38:48.396
  Aug 17 11:38:48.397: INFO: Trying to get logs from node talos-default-worker-1 pod pod-subpath-test-configmap-24tm container test-container-subpath-configmap-24tm: <nil>
  STEP: delete the pod @ 08/17/23 11:38:48.402
  STEP: Deleting pod pod-subpath-test-configmap-24tm @ 08/17/23 11:38:48.409
  Aug 17 11:38:48.409: INFO: Deleting pod "pod-subpath-test-configmap-24tm" in namespace "subpath-6914"
  Aug 17 11:38:48.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6914" for this suite. @ 08/17/23 11:38:48.414
• [24.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 08/17/23 11:38:48.419
  Aug 17 11:38:48.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename cronjob @ 08/17/23 11:38:48.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:48.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:48.432
  STEP: Creating a cronjob @ 08/17/23 11:38:48.434
  STEP: creating @ 08/17/23 11:38:48.434
  STEP: getting @ 08/17/23 11:38:48.438
  STEP: listing @ 08/17/23 11:38:48.44
  STEP: watching @ 08/17/23 11:38:48.443
  Aug 17 11:38:48.443: INFO: starting watch
  STEP: cluster-wide listing @ 08/17/23 11:38:48.444
  STEP: cluster-wide watching @ 08/17/23 11:38:48.446
  Aug 17 11:38:48.446: INFO: starting watch
  STEP: patching @ 08/17/23 11:38:48.447
  STEP: updating @ 08/17/23 11:38:48.453
  Aug 17 11:38:48.460: INFO: waiting for watch events with expected annotations
  Aug 17 11:38:48.460: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/17/23 11:38:48.46
  STEP: updating /status @ 08/17/23 11:38:48.465
  STEP: get /status @ 08/17/23 11:38:48.471
  STEP: deleting @ 08/17/23 11:38:48.474
  STEP: deleting a collection @ 08/17/23 11:38:48.484
  Aug 17 11:38:48.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6321" for this suite. @ 08/17/23 11:38:48.496
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 08/17/23 11:38:48.501
  Aug 17 11:38:48.501: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 11:38:48.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:48.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:48.515
  STEP: Creating configMap configmap-6107/configmap-test-6613c510-53b7-4103-bb83-714bcced23fc @ 08/17/23 11:38:48.517
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:38:48.521
  STEP: Saw pod success @ 08/17/23 11:38:52.537
  Aug 17 11:38:52.539: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-d0b3c174-cd39-4a37-a4f0-0458ea0bc77e container env-test: <nil>
  STEP: delete the pod @ 08/17/23 11:38:52.543
  Aug 17 11:38:52.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6107" for this suite. @ 08/17/23 11:38:52.551
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 08/17/23 11:38:52.555
  Aug 17 11:38:52.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename init-container @ 08/17/23 11:38:52.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:52.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:52.565
  STEP: creating the pod @ 08/17/23 11:38:52.567
  Aug 17 11:38:52.567: INFO: PodSpec: initContainers in spec.initContainers
  Aug 17 11:38:56.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6745" for this suite. @ 08/17/23 11:38:56.085
• [3.534 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 08/17/23 11:38:56.09
  Aug 17 11:38:56.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 11:38:56.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:56.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:56.102
  STEP: creating secret secrets-1241/secret-test-745bf6c6-dae8-45d1-b1ed-9050d3d68c80 @ 08/17/23 11:38:56.105
  STEP: Creating a pod to test consume secrets @ 08/17/23 11:38:56.108
  STEP: Saw pod success @ 08/17/23 11:38:58.12
  Aug 17 11:38:58.122: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-b8484081-c6d2-407b-a72f-dfe33ad575dd container env-test: <nil>
  STEP: delete the pod @ 08/17/23 11:38:58.127
  Aug 17 11:38:58.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1241" for this suite. @ 08/17/23 11:38:58.137
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 08/17/23 11:38:58.142
  Aug 17 11:38:58.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-preemption @ 08/17/23 11:38:58.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:38:58.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:38:58.155
  Aug 17 11:38:58.167: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 17 11:39:58.183: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/17/23 11:39:58.186
  Aug 17 11:39:58.202: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 17 11:39:58.207: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 17 11:39:58.222: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 17 11:39:58.227: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/17/23 11:39:58.227
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 08/17/23 11:40:00.242
  Aug 17 11:40:02.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5015" for this suite. @ 08/17/23 11:40:02.293
• [64.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 08/17/23 11:40:02.298
  Aug 17 11:40:02.299: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-watch @ 08/17/23 11:40:02.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:40:02.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:40:02.314
  Aug 17 11:40:02.316: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Creating first CR  @ 08/17/23 11:40:04.842
  Aug 17 11:40:04.845: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-17T11:40:04Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-17T11:40:04Z]] name:name1 resourceVersion:2529 uid:fba250c1-cea1-4efd-a12f-e5e245927cf5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 08/17/23 11:40:14.846
  Aug 17 11:40:14.851: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-17T11:40:14Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-17T11:40:14Z]] name:name2 resourceVersion:2602 uid:b44c9e64-3024-44c2-a7f7-5fa8415ea2ea] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 08/17/23 11:40:24.853
  Aug 17 11:40:24.859: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-17T11:40:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-17T11:40:24Z]] name:name1 resourceVersion:2624 uid:fba250c1-cea1-4efd-a12f-e5e245927cf5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 08/17/23 11:40:34.859
  Aug 17 11:40:34.863: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-17T11:40:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-17T11:40:34Z]] name:name2 resourceVersion:2646 uid:b44c9e64-3024-44c2-a7f7-5fa8415ea2ea] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 08/17/23 11:40:44.866
  Aug 17 11:40:44.872: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-17T11:40:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-17T11:40:24Z]] name:name1 resourceVersion:2668 uid:fba250c1-cea1-4efd-a12f-e5e245927cf5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 08/17/23 11:40:54.873
  Aug 17 11:40:54.879: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-17T11:40:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-17T11:40:34Z]] name:name2 resourceVersion:2689 uid:b44c9e64-3024-44c2-a7f7-5fa8415ea2ea] num:map[num1:9223372036854775807 num2:1000000]]}
  Aug 17 11:41:05.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2932" for this suite. @ 08/17/23 11:41:05.39
• [63.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 08/17/23 11:41:05.396
  Aug 17 11:41:05.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename init-container @ 08/17/23 11:41:05.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:05.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:05.412
  STEP: creating the pod @ 08/17/23 11:41:05.414
  Aug 17 11:41:05.414: INFO: PodSpec: initContainers in spec.initContainers
  Aug 17 11:41:08.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2939" for this suite. @ 08/17/23 11:41:08.181
• [2.790 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 08/17/23 11:41:08.187
  Aug 17 11:41:08.187: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename daemonsets @ 08/17/23 11:41:08.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:08.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:08.202
  STEP: Creating a simple DaemonSet "daemon-set" @ 08/17/23 11:41:08.218
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/17/23 11:41:08.223
  Aug 17 11:41:08.227: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:08.227: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:08.227: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:08.230: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 11:41:08.230: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  Aug 17 11:41:09.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:09.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:09.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:09.236: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 11:41:09.236: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  Aug 17 11:41:10.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:10.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:10.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:10.236: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 11:41:10.236: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  Aug 17 11:41:11.235: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:11.235: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:11.235: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:11.238: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 11:41:11.238: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 08/17/23 11:41:11.241
  Aug 17 11:41:11.252: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:11.252: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:11.252: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:11.256: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 11:41:11.256: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  Aug 17 11:41:12.261: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:12.261: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:12.261: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:12.265: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 11:41:12.265: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 08/17/23 11:41:12.265
  STEP: Deleting DaemonSet "daemon-set" @ 08/17/23 11:41:12.271
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5055, will wait for the garbage collector to delete the pods @ 08/17/23 11:41:12.271
  Aug 17 11:41:12.334: INFO: Deleting DaemonSet.extensions daemon-set took: 5.206566ms
  Aug 17 11:41:12.435: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.69233ms
  Aug 17 11:41:14.238: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 11:41:14.238: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 17 11:41:14.242: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2838"},"items":null}

  Aug 17 11:41:14.245: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2838"},"items":null}

  Aug 17 11:41:14.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5055" for this suite. @ 08/17/23 11:41:14.257
• [6.075 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 08/17/23 11:41:14.262
  Aug 17 11:41:14.262: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 11:41:14.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:14.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:14.277
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/17/23 11:41:14.28
  STEP: Saw pod success @ 08/17/23 11:41:18.298
  Aug 17 11:41:18.301: INFO: Trying to get logs from node talos-default-worker-1 pod pod-995977e4-007a-4384-8f2c-4eafe92b360c container test-container: <nil>
  STEP: delete the pod @ 08/17/23 11:41:18.313
  Aug 17 11:41:18.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5791" for this suite. @ 08/17/23 11:41:18.327
• [4.068 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 08/17/23 11:41:18.331
  Aug 17 11:41:18.331: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename daemonsets @ 08/17/23 11:41:18.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:18.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:18.342
  STEP: Creating simple DaemonSet "daemon-set" @ 08/17/23 11:41:18.353
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/17/23 11:41:18.356
  Aug 17 11:41:18.359: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:18.359: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:18.359: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:18.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 11:41:18.361: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  Aug 17 11:41:19.364: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:19.364: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:19.364: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:19.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 11:41:19.366: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 08/17/23 11:41:19.368
  Aug 17 11:41:19.377: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:19.377: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:19.377: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:19.379: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 11:41:19.379: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  Aug 17 11:41:20.383: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:20.383: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:20.383: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:20.386: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 11:41:20.386: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  Aug 17 11:41:21.383: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:21.383: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:21.383: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 11:41:21.386: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 11:41:21.386: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/17/23 11:41:21.389
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1422, will wait for the garbage collector to delete the pods @ 08/17/23 11:41:21.389
  Aug 17 11:41:21.451: INFO: Deleting DaemonSet.extensions daemon-set took: 4.866488ms
  Aug 17 11:41:21.552: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.04206ms
  Aug 17 11:41:23.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 11:41:23.254: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 17 11:41:23.256: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2955"},"items":null}

  Aug 17 11:41:23.258: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2955"},"items":null}

  Aug 17 11:41:23.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1422" for this suite. @ 08/17/23 11:41:23.266
• [4.939 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 08/17/23 11:41:23.27
  Aug 17 11:41:23.270: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 11:41:23.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:23.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:23.282
  STEP: Creating the pod @ 08/17/23 11:41:23.284
  Aug 17 11:41:25.812: INFO: Successfully updated pod "annotationupdatece71a46e-459d-4845-85bc-e0e2cb487447"
  Aug 17 11:41:29.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3664" for this suite. @ 08/17/23 11:41:29.834
• [6.569 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 08/17/23 11:41:29.84
  Aug 17 11:41:29.840: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 11:41:29.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:29.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:29.855
  Aug 17 11:41:29.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8016 create -f -'
  Aug 17 11:41:30.166: INFO: stderr: ""
  Aug 17 11:41:30.166: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Aug 17 11:41:30.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8016 create -f -'
  Aug 17 11:41:30.297: INFO: stderr: ""
  Aug 17 11:41:30.297: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/17/23 11:41:30.297
  Aug 17 11:41:31.300: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 17 11:41:31.300: INFO: Found 1 / 1
  Aug 17 11:41:31.300: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 17 11:41:31.302: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 17 11:41:31.302: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 17 11:41:31.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8016 describe pod agnhost-primary-d269q'
  Aug 17 11:41:31.384: INFO: stderr: ""
  Aug 17 11:41:31.384: INFO: stdout: "Name:             agnhost-primary-d269q\nNamespace:        kubectl-8016\nPriority:         0\nService Account:  default\nNode:             talos-default-worker-1/172.20.0.5\nStart Time:       Thu, 17 Aug 2023 11:41:30 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.27\nIPs:\n  IP:           10.244.1.27\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7aaa1a6e4792dfd6c2605f80af429b24459ec8add9f2d533b071eed421dbfb52\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 17 Aug 2023 11:41:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-x8gkv (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-x8gkv:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8016/agnhost-primary-d269q to talos-default-worker-1\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Aug 17 11:41:31.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8016 describe rc agnhost-primary'
  Aug 17 11:41:31.459: INFO: stderr: ""
  Aug 17 11:41:31.459: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8016\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-d269q\n"
  Aug 17 11:41:31.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8016 describe service agnhost-primary'
  Aug 17 11:41:31.535: INFO: stderr: ""
  Aug 17 11:41:31.535: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8016\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.97.91.184\nIPs:               10.97.91.184\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.27:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Aug 17 11:41:31.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8016 describe node talos-default-controlplane-1'
  Aug 17 11:41:31.629: INFO: stderr: ""
  Aug 17 11:41:31.629: INFO: stdout: "Name:               talos-default-controlplane-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=talos-default-controlplane-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"36:49:28:89:a1:b6\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.20.0.2\n                    node.alpha.kubernetes.io/ttl: 0\n                    talos.dev/owned-labels: [\"node-role.kubernetes.io/control-plane\"]\n                    talos.dev/owned-taints: [\"node-role.kubernetes.io/control-plane\"]\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 17 Aug 2023 11:32:19 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  talos-default-controlplane-1\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 17 Aug 2023 11:41:30 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 17 Aug 2023 11:33:11 +0000   Thu, 17 Aug 2023 11:33:11 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Thu, 17 Aug 2023 11:38:46 +0000   Thu, 17 Aug 2023 11:32:19 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 17 Aug 2023 11:38:46 +0000   Thu, 17 Aug 2023 11:32:19 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 17 Aug 2023 11:38:46 +0000   Thu, 17 Aug 2023 11:32:19 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 17 Aug 2023 11:38:46 +0000   Thu, 17 Aug 2023 11:33:07 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.20.0.2\n  Hostname:    talos-default-controlplane-1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  4876Mi\n  hugepages-2Mi:      0\n  memory:             2954560Ki\n  pods:               110\nAllocatable:\n  cpu:                3950m\n  ephemeral-storage:  4333135455\n  hugepages-2Mi:      0\n  memory:             2655552Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 6231b31fc41d6dd5b7d39b1261be3e7b\n  System UUID:                b5044d59-ce36-4269-bdc5-580b4d465d9d\n  Boot ID:                    e23bfcc5-7288-4a5b-8ae1-df15099f8924\n  Kernel Version:             6.1.45-talos\n  OS Image:                   Talos (v1.5.0)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.23\n  Kubelet Version:            v1.28.0\n  Kube-Proxy Version:         v1.28.0\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                    ------------  ----------  ---------------  -------------  ---\n  kube-system                 kube-apiserver-talos-default-controlplane-1             200m (5%)     0 (0%)      512Mi (19%)      0 (0%)         8m17s\n  kube-system                 kube-controller-manager-talos-default-controlplane-1    50m (1%)      0 (0%)      256Mi (9%)       0 (0%)         7m37s\n  kube-system                 kube-flannel-dncdh                                      100m (2%)     0 (0%)      50Mi (1%)        0 (0%)         9m12s\n  kube-system                 kube-proxy-4hskw                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m12s\n  kube-system                 kube-scheduler-talos-default-controlplane-1             10m (0%)      0 (0%)      64Mi (2%)        0 (0%)         8m2s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                360m (9%)    0 (0%)\n  memory             882Mi (34%)  0 (0%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:\n  Type    Reason          Age    From             Message\n  ----    ------          ----   ----             -------\n  Normal  Starting        8m27s  kube-proxy       \n  Normal  RegisteredNode  9m8s   node-controller  Node talos-default-controlplane-1 event: Registered Node talos-default-controlplane-1 in Controller\n"
  Aug 17 11:41:31.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8016 describe namespace kubectl-8016'
  Aug 17 11:41:31.705: INFO: stderr: ""
  Aug 17 11:41:31.705: INFO: stdout: "Name:         kubectl-8016\nLabels:       e2e-framework=kubectl\n              e2e-run=815ae65c-ddc3-42f2-8b3f-4a02ca022df4\n              kubernetes.io/metadata.name=kubectl-8016\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Aug 17 11:41:31.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8016" for this suite. @ 08/17/23 11:41:31.708
• [1.874 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 08/17/23 11:41:31.715
  Aug 17 11:41:31.715: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/17/23 11:41:31.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:31.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:31.731
  STEP: create the container to handle the HTTPGet hook request. @ 08/17/23 11:41:31.736
  STEP: create the pod with lifecycle hook @ 08/17/23 11:41:33.752
  STEP: check poststart hook @ 08/17/23 11:41:35.765
  STEP: delete the pod with lifecycle hook @ 08/17/23 11:41:35.77
  Aug 17 11:41:39.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6783" for this suite. @ 08/17/23 11:41:39.788
• [8.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 08/17/23 11:41:39.795
  Aug 17 11:41:39.795: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svcaccounts @ 08/17/23 11:41:39.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:39.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:39.81
  Aug 17 11:41:39.815: INFO: Got root ca configmap in namespace "svcaccounts-7650"
  Aug 17 11:41:39.820: INFO: Deleted root ca configmap in namespace "svcaccounts-7650"
  STEP: waiting for a new root ca configmap created @ 08/17/23 11:41:40.321
  Aug 17 11:41:40.323: INFO: Recreated root ca configmap in namespace "svcaccounts-7650"
  Aug 17 11:41:40.325: INFO: Updated root ca configmap in namespace "svcaccounts-7650"
  STEP: waiting for the root ca configmap reconciled @ 08/17/23 11:41:40.826
  Aug 17 11:41:40.829: INFO: Reconciled root ca configmap in namespace "svcaccounts-7650"
  Aug 17 11:41:40.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7650" for this suite. @ 08/17/23 11:41:40.833
• [1.044 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 08/17/23 11:41:40.839
  Aug 17 11:41:40.839: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-runtime @ 08/17/23 11:41:40.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:40.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:40.855
  STEP: create the container @ 08/17/23 11:41:40.857
  W0817 11:41:40.863709      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/17/23 11:41:40.863
  STEP: get the container status @ 08/17/23 11:41:43.877
  STEP: the container should be terminated @ 08/17/23 11:41:43.879
  STEP: the termination message should be set @ 08/17/23 11:41:43.879
  Aug 17 11:41:43.879: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 08/17/23 11:41:43.879
  Aug 17 11:41:43.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5756" for this suite. @ 08/17/23 11:41:43.889
• [3.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 08/17/23 11:41:43.894
  Aug 17 11:41:43.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/17/23 11:41:43.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:43.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:43.906
  STEP: create the container to handle the HTTPGet hook request. @ 08/17/23 11:41:43.912
  STEP: create the pod with lifecycle hook @ 08/17/23 11:41:45.927
  STEP: delete the pod with lifecycle hook @ 08/17/23 11:41:47.941
  STEP: check prestop hook @ 08/17/23 11:41:49.953
  Aug 17 11:41:49.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-873" for this suite. @ 08/17/23 11:41:49.965
• [6.075 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 08/17/23 11:41:49.969
  Aug 17 11:41:49.970: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replication-controller @ 08/17/23 11:41:49.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:49.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:49.985
  STEP: Creating replication controller my-hostname-basic-8275575f-58a6-499f-aae3-a16cdfd0ab37 @ 08/17/23 11:41:49.988
  Aug 17 11:41:49.994: INFO: Pod name my-hostname-basic-8275575f-58a6-499f-aae3-a16cdfd0ab37: Found 0 pods out of 1
  Aug 17 11:41:55.000: INFO: Pod name my-hostname-basic-8275575f-58a6-499f-aae3-a16cdfd0ab37: Found 1 pods out of 1
  Aug 17 11:41:55.000: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-8275575f-58a6-499f-aae3-a16cdfd0ab37" are running
  Aug 17 11:41:55.003: INFO: Pod "my-hostname-basic-8275575f-58a6-499f-aae3-a16cdfd0ab37-k4blv" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 11:41:50 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 11:41:51 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 11:41:51 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 11:41:50 +0000 UTC Reason: Message:}])
  Aug 17 11:41:55.003: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/17/23 11:41:55.003
  Aug 17 11:41:55.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4882" for this suite. @ 08/17/23 11:41:55.016
• [5.053 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 08/17/23 11:41:55.023
  Aug 17 11:41:55.023: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 11:41:55.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:55.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:55.039
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/17/23 11:41:55.042
  STEP: Saw pod success @ 08/17/23 11:41:59.06
  Aug 17 11:41:59.063: INFO: Trying to get logs from node talos-default-worker-1 pod pod-50aa9f07-d822-4926-8029-cd9edb718465 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 11:41:59.069
  Aug 17 11:41:59.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7252" for this suite. @ 08/17/23 11:41:59.085
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 08/17/23 11:41:59.091
  Aug 17 11:41:59.091: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 11:41:59.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:41:59.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:41:59.107
  STEP: Creating pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636 @ 08/17/23 11:41:59.11
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 11:42:01.123
  Aug 17 11:42:01.127: INFO: Initial restart count of pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 is 0
  Aug 17 11:42:01.130: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:03.133: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:05.138: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:07.141: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:09.145: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:11.149: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:13.152: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:15.157: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:17.161: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:19.165: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:21.170: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:23.174: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:25.177: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:27.181: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:29.183: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:31.188: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:33.192: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:35.197: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:37.201: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:39.205: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:41.210: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:43.212: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:45.216: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:47.221: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:49.225: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:51.230: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:53.233: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:55.236: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:57.239: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:42:59.243: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:01.248: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:03.251: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:05.256: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:07.260: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:09.264: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:11.269: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:13.273: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:15.277: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:17.282: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:19.285: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:21.291: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:23.295: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:25.299: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:27.302: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:29.307: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:31.311: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:33.315: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:35.318: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:37.322: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:39.325: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:41.330: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:43.334: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:45.337: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:47.341: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:49.344: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:51.349: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:53.352: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:55.356: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:57.360: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:43:59.364: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:01.369: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:03.371: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:05.376: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:07.380: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:09.383: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:11.387: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:13.391: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:15.394: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:17.399: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:19.403: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:21.407: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:23.411: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:25.415: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:27.420: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:29.424: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:31.429: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:33.432: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:35.436: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:37.439: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:39.443: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:41.447: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:43.450: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:45.454: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:47.457: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:49.461: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:51.465: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:53.469: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:55.473: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:57.477: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:44:59.480: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:01.484: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:03.488: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:05.492: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:07.496: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:09.500: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:11.504: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:13.507: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:15.511: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:17.516: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:19.519: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:21.524: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:23.527: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:25.531: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:27.536: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:29.540: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:31.545: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:33.548: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:35.553: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:37.557: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:39.561: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:41.565: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:43.570: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:45.574: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:47.579: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:49.583: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:51.588: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:53.591: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:55.594: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:57.598: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:45:59.602: INFO: Get pod test-webserver-bf353600-2b0a-4f42-9354-0c39e6711ea4 in namespace container-probe-1636
  Aug 17 11:46:01.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 11:46:01.606
  STEP: Destroying namespace "container-probe-1636" for this suite. @ 08/17/23 11:46:01.61
• [242.522 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 08/17/23 11:46:01.614
  Aug 17 11:46:01.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 11:46:01.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:46:01.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:46:01.623
  STEP: Counting existing ResourceQuota @ 08/17/23 11:46:01.624
  STEP: Creating a ResourceQuota @ 08/17/23 11:46:06.628
  STEP: Ensuring resource quota status is calculated @ 08/17/23 11:46:06.633
  Aug 17 11:46:08.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4713" for this suite. @ 08/17/23 11:46:08.64
• [7.032 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 08/17/23 11:46:08.645
  Aug 17 11:46:08.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:46:08.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:46:08.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:46:08.66
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 11:46:08.663
  STEP: Saw pod success @ 08/17/23 11:46:12.68
  Aug 17 11:46:12.683: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-3d3a5652-3b9e-489f-ab9d-da13fbc09391 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 11:46:12.695
  Aug 17 11:46:12.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4919" for this suite. @ 08/17/23 11:46:12.711
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 08/17/23 11:46:12.716
  Aug 17 11:46:12.716: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-preemption @ 08/17/23 11:46:12.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:46:12.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:46:12.732
  Aug 17 11:46:12.744: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 17 11:47:12.762: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/17/23 11:47:12.765
  Aug 17 11:47:12.779: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 17 11:47:12.784: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 17 11:47:12.796: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 17 11:47:12.801: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/17/23 11:47:12.801
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 08/17/23 11:47:14.816
  Aug 17 11:47:18.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4652" for this suite. @ 08/17/23 11:47:18.891
• [66.180 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 08/17/23 11:47:18.896
  Aug 17 11:47:18.896: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename namespaces @ 08/17/23 11:47:18.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:18.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:18.915
  STEP: creating a Namespace @ 08/17/23 11:47:18.918
  STEP: patching the Namespace @ 08/17/23 11:47:18.93
  STEP: get the Namespace and ensuring it has the label @ 08/17/23 11:47:18.933
  Aug 17 11:47:18.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-398" for this suite. @ 08/17/23 11:47:18.94
  STEP: Destroying namespace "nspatchtest-74b77d11-8a55-4a40-847b-7c481e10b9b9-3321" for this suite. @ 08/17/23 11:47:18.945
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 08/17/23 11:47:18.951
  Aug 17 11:47:18.951: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 11:47:18.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:18.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:18.966
  STEP: Setting up server cert @ 08/17/23 11:47:18.984
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 11:47:19.351
  STEP: Deploying the webhook pod @ 08/17/23 11:47:19.354
  STEP: Wait for the deployment to be ready @ 08/17/23 11:47:19.36
  Aug 17 11:47:19.364: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/17/23 11:47:21.374
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 11:47:21.387
  Aug 17 11:47:22.388: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/17/23 11:47:22.394
  STEP: create a pod @ 08/17/23 11:47:22.407
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 08/17/23 11:47:24.42
  Aug 17 11:47:24.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=webhook-5592 attach --namespace=webhook-5592 to-be-attached-pod -i -c=container1'
  Aug 17 11:47:24.471: INFO: rc: 1
  Aug 17 11:47:24.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5592" for this suite. @ 08/17/23 11:47:24.5
  STEP: Destroying namespace "webhook-markers-4652" for this suite. @ 08/17/23 11:47:24.504
• [5.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 08/17/23 11:47:24.509
  Aug 17 11:47:24.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename security-context-test @ 08/17/23 11:47:24.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:24.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:24.518
  Aug 17 11:47:28.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5591" for this suite. @ 08/17/23 11:47:28.543
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 08/17/23 11:47:28.548
  Aug 17 11:47:28.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 11:47:28.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:28.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:28.563
  STEP: Creating a test headless service @ 08/17/23 11:47:28.566
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4088.svc.cluster.local;sleep 1; done
   @ 08/17/23 11:47:28.57
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4088.svc.cluster.local;sleep 1; done
   @ 08/17/23 11:47:28.57
  STEP: creating a pod to probe DNS @ 08/17/23 11:47:28.57
  STEP: submitting the pod to kubernetes @ 08/17/23 11:47:28.57
  STEP: retrieving the pod @ 08/17/23 11:47:34.593
  STEP: looking for the results for each expected name from probers @ 08/17/23 11:47:34.596
  Aug 17 11:47:34.600: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.603: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.606: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.609: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.612: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.615: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.618: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.621: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4088.svc.cluster.local from pod dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d: the server could not find the requested resource (get pods dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d)
  Aug 17 11:47:34.621: INFO: Lookups using dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4088.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4088.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4088.svc.cluster.local jessie_udp@dns-test-service-2.dns-4088.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4088.svc.cluster.local]

  Aug 17 11:47:34.628: INFO: Pod client logs for webserver: 
  Aug 17 11:47:34.634: INFO: Pod client logs for querier: 
  Aug 17 11:47:34.639: INFO: Pod client logs for jessie-querier: 
  Aug 17 11:47:39.659: INFO: DNS probes using dns-4088/dns-test-c3402be2-bcb8-494c-936d-94aa636bb91d succeeded

  Aug 17 11:47:39.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 11:47:39.662
  STEP: deleting the test headless service @ 08/17/23 11:47:39.671
  STEP: Destroying namespace "dns-4088" for this suite. @ 08/17/23 11:47:39.68
• [11.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 08/17/23 11:47:39.687
  Aug 17 11:47:39.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replication-controller @ 08/17/23 11:47:39.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:39.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:39.704
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 08/17/23 11:47:39.706
  STEP: When a replication controller with a matching selector is created @ 08/17/23 11:47:41.72
  STEP: Then the orphan pod is adopted @ 08/17/23 11:47:41.723
  Aug 17 11:47:42.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8346" for this suite. @ 08/17/23 11:47:42.734
• [3.052 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 08/17/23 11:47:42.739
  Aug 17 11:47:42.739: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 11:47:42.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:42.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:42.757
  STEP: Creating a pod to test substitution in volume subpath @ 08/17/23 11:47:42.76
  STEP: Saw pod success @ 08/17/23 11:47:46.781
  Aug 17 11:47:46.783: INFO: Trying to get logs from node talos-default-worker-2 pod var-expansion-74f369ab-ee90-44d2-940b-2c6a044d066b container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 11:47:46.788
  Aug 17 11:47:46.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6786" for this suite. @ 08/17/23 11:47:46.803
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 08/17/23 11:47:46.809
  Aug 17 11:47:46.809: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svcaccounts @ 08/17/23 11:47:46.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:46.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:46.825
  STEP: Creating a pod to test service account token:  @ 08/17/23 11:47:46.827
  STEP: Saw pod success @ 08/17/23 11:47:50.843
  Aug 17 11:47:50.846: INFO: Trying to get logs from node talos-default-worker-2 pod test-pod-4a9ea765-a151-4e2b-ad63-a80f1e9b7288 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 11:47:50.852
  Aug 17 11:47:50.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7204" for this suite. @ 08/17/23 11:47:50.866
• [4.062 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 08/17/23 11:47:50.871
  Aug 17 11:47:50.871: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 11:47:50.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:50.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:50.887
  STEP: Creating a test headless service @ 08/17/23 11:47:50.89
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 212.205.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.205.212_udp@PTR;check="$$(dig +tcp +noall +answer +search 212.205.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.205.212_tcp@PTR;sleep 1; done
   @ 08/17/23 11:47:50.905
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4648.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4648.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4648.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4648.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 212.205.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.205.212_udp@PTR;check="$$(dig +tcp +noall +answer +search 212.205.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.205.212_tcp@PTR;sleep 1; done
   @ 08/17/23 11:47:50.905
  STEP: creating a pod to probe DNS @ 08/17/23 11:47:50.905
  STEP: submitting the pod to kubernetes @ 08/17/23 11:47:50.905
  STEP: retrieving the pod @ 08/17/23 11:47:52.922
  STEP: looking for the results for each expected name from probers @ 08/17/23 11:47:52.925
  Aug 17 11:47:52.928: INFO: Unable to read wheezy_udp@dns-test-service.dns-4648.svc.cluster.local from pod dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a: the server could not find the requested resource (get pods dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a)
  Aug 17 11:47:52.931: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4648.svc.cluster.local from pod dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a: the server could not find the requested resource (get pods dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a)
  Aug 17 11:47:52.934: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local from pod dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a: the server could not find the requested resource (get pods dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a)
  Aug 17 11:47:52.937: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local from pod dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a: the server could not find the requested resource (get pods dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a)
  Aug 17 11:47:52.951: INFO: Unable to read jessie_udp@dns-test-service.dns-4648.svc.cluster.local from pod dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a: the server could not find the requested resource (get pods dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a)
  Aug 17 11:47:52.954: INFO: Unable to read jessie_tcp@dns-test-service.dns-4648.svc.cluster.local from pod dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a: the server could not find the requested resource (get pods dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a)
  Aug 17 11:47:52.960: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local from pod dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a: the server could not find the requested resource (get pods dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a)
  Aug 17 11:47:52.972: INFO: Lookups using dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a failed for: [wheezy_udp@dns-test-service.dns-4648.svc.cluster.local wheezy_tcp@dns-test-service.dns-4648.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local jessie_udp@dns-test-service.dns-4648.svc.cluster.local jessie_tcp@dns-test-service.dns-4648.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4648.svc.cluster.local]

  Aug 17 11:47:52.976: INFO: Pod client logs for webserver: 
  Aug 17 11:47:52.980: INFO: Pod client logs for querier: 
  Aug 17 11:47:52.985: INFO: Pod client logs for jessie-querier: 
  Aug 17 11:47:58.036: INFO: DNS probes using dns-4648/dns-test-8a2b5a6e-9b60-4cbd-bb3a-15459364871a succeeded

  Aug 17 11:47:58.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 11:47:58.04
  STEP: deleting the test service @ 08/17/23 11:47:58.05
  STEP: deleting the test headless service @ 08/17/23 11:47:58.067
  STEP: Destroying namespace "dns-4648" for this suite. @ 08/17/23 11:47:58.075
• [7.209 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 08/17/23 11:47:58.08
  Aug 17 11:47:58.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 11:47:58.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:47:58.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:47:58.094
  STEP: Creating secret with name secret-test-973efdb4-ef83-45e7-afe6-66cc36d9951a @ 08/17/23 11:47:58.097
  STEP: Creating a pod to test consume secrets @ 08/17/23 11:47:58.1
  STEP: Saw pod success @ 08/17/23 11:48:00.112
  Aug 17 11:48:00.114: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-851815b5-aacf-4fa2-b199-d2547f407f7d container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 11:48:00.118
  Aug 17 11:48:00.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-985" for this suite. @ 08/17/23 11:48:00.128
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 08/17/23 11:48:00.131
  Aug 17 11:48:00.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename watch @ 08/17/23 11:48:00.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:48:00.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:48:00.14
  STEP: creating a watch on configmaps with label A @ 08/17/23 11:48:00.142
  STEP: creating a watch on configmaps with label B @ 08/17/23 11:48:00.142
  STEP: creating a watch on configmaps with label A or B @ 08/17/23 11:48:00.143
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 08/17/23 11:48:00.143
  Aug 17 11:48:00.145: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4563 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:48:00.146: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4563 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 08/17/23 11:48:00.146
  Aug 17 11:48:00.149: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4564 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:48:00.149: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4564 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 08/17/23 11:48:00.149
  Aug 17 11:48:00.153: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4565 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:48:00.153: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4565 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 08/17/23 11:48:00.153
  Aug 17 11:48:00.156: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4566 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:48:00.156: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6314  1700f36f-7aab-4254-93fd-58b0002c2104 4566 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 08/17/23 11:48:00.156
  Aug 17 11:48:00.159: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6314  89bf02f7-c6f6-4aa9-83bc-d4f92932b014 4567 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:48:00.159: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6314  89bf02f7-c6f6-4aa9-83bc-d4f92932b014 4567 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 08/17/23 11:48:10.159
  Aug 17 11:48:10.170: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6314  89bf02f7-c6f6-4aa9-83bc-d4f92932b014 4614 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:48:10.170: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6314  89bf02f7-c6f6-4aa9-83bc-d4f92932b014 4614 0 2023-08-17 11:48:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-17 11:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 11:48:20.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6314" for this suite. @ 08/17/23 11:48:20.176
• [20.048 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 08/17/23 11:48:20.179
  Aug 17 11:48:20.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename aggregator @ 08/17/23 11:48:20.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:48:20.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:48:20.191
  Aug 17 11:48:20.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Registering the sample API server. @ 08/17/23 11:48:20.193
  Aug 17 11:48:20.442: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Aug 17 11:48:20.453: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Aug 17 11:48:22.484: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:24.490: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:26.490: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:28.488: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:30.490: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:32.490: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:34.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:36.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:38.487: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:40.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:42.490: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:44.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 17 11:48:46.602: INFO: Waited 110.133883ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 08/17/23 11:48:46.632
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 08/17/23 11:48:46.635
  STEP: List APIServices @ 08/17/23 11:48:46.639
  Aug 17 11:48:46.644: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 08/17/23 11:48:46.644
  Aug 17 11:48:46.653: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 08/17/23 11:48:46.653
  Aug 17 11:48:46.660: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.August, 17, 11, 48, 46, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 08/17/23 11:48:46.66
  Aug 17 11:48:46.663: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-08-17 11:48:46 +0000 UTC Passed all checks passed}
  Aug 17 11:48:46.663: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 17 11:48:46.663: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 08/17/23 11:48:46.663
  Aug 17 11:48:46.671: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1700431912" @ 08/17/23 11:48:46.671
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 08/17/23 11:48:46.68
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 08/17/23 11:48:46.686
  STEP: Patch APIService Status @ 08/17/23 11:48:46.689
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 08/17/23 11:48:46.693
  Aug 17 11:48:46.697: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-08-17 11:48:46 +0000 UTC Passed all checks passed}
  Aug 17 11:48:46.697: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 17 11:48:46.697: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Aug 17 11:48:46.697: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 08/17/23 11:48:46.697
  STEP: Confirm that the generated APIService has been deleted @ 08/17/23 11:48:46.701
  Aug 17 11:48:46.701: INFO: Requesting list of APIServices to confirm quantity
  Aug 17 11:48:46.705: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Aug 17 11:48:46.705: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Aug 17 11:48:46.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-630" for this suite. @ 08/17/23 11:48:46.771
• [26.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 08/17/23 11:48:46.775
  Aug 17 11:48:46.775: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 11:48:46.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:48:46.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:48:46.785
  STEP: Creating configMap with name configmap-test-volume-319e003d-a665-4c5f-8214-19dbfd7f462a @ 08/17/23 11:48:46.787
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:48:46.789
  STEP: Saw pod success @ 08/17/23 11:48:50.804
  Aug 17 11:48:50.807: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-8afdd66a-c9a7-46ff-a94f-7f6e84be43ce container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 11:48:50.813
  Aug 17 11:48:50.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9976" for this suite. @ 08/17/23 11:48:50.828
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 08/17/23 11:48:50.835
  Aug 17 11:48:50.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:48:50.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:48:50.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:48:50.85
  STEP: Creating projection with secret that has name projected-secret-test-6a19dc2d-b0e9-4215-b58f-056662c7e70c @ 08/17/23 11:48:50.853
  STEP: Creating a pod to test consume secrets @ 08/17/23 11:48:50.856
  STEP: Saw pod success @ 08/17/23 11:48:54.874
  Aug 17 11:48:54.877: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-secrets-38aa423c-7291-47e0-bb2d-8123c66afc44 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 11:48:54.883
  Aug 17 11:48:54.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3148" for this suite. @ 08/17/23 11:48:54.899
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 08/17/23 11:48:54.904
  Aug 17 11:48:54.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svcaccounts @ 08/17/23 11:48:54.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:48:54.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:48:54.92
  STEP: reading a file in the container @ 08/17/23 11:48:56.938
  Aug 17 11:48:56.938: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-65 pod-service-account-258e147b-3679-4c13-a5bc-c1fbd6ab9fd1 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 08/17/23 11:48:57.108
  Aug 17 11:48:57.108: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-65 pod-service-account-258e147b-3679-4c13-a5bc-c1fbd6ab9fd1 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 08/17/23 11:48:57.271
  Aug 17 11:48:57.271: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-65 pod-service-account-258e147b-3679-4c13-a5bc-c1fbd6ab9fd1 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Aug 17 11:48:57.408: INFO: Got root ca configmap in namespace "svcaccounts-65"
  Aug 17 11:48:57.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-65" for this suite. @ 08/17/23 11:48:57.415
• [2.516 seconds]
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 08/17/23 11:48:57.421
  Aug 17 11:48:57.421: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 11:48:57.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:48:57.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:48:57.436
  Aug 17 11:48:57.438: INFO: Creating deployment "test-recreate-deployment"
  Aug 17 11:48:57.440: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Aug 17 11:48:57.447: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Aug 17 11:48:59.455: INFO: Waiting deployment "test-recreate-deployment" to complete
  Aug 17 11:48:59.458: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Aug 17 11:48:59.471: INFO: Updating deployment test-recreate-deployment
  Aug 17 11:48:59.471: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Aug 17 11:48:59.533: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9d2cccf-e3f5-4af3-b039-16e8767bf4db",
      ResourceVersion: (string) (len=4) "4910",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827869737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 17 11:48:59.540: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7622098a-f17b-41c5-8f35-ed41e0bfb1fb",
      ResourceVersion: (string) (len=4) "4907",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827869739,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e9d2cccf-e3f5-4af3-b039-16e8767bf4db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 39 64 32 63 63  63 66 2d 65 33 66 35 2d  |\"e9d2cccf-e3f5-|
              00000120  34 61 66 33 2d 62 30 33  39 2d 31 36 65 38 37 36  |4af3-b039-16e876|
              00000130  37 62 66 34 64 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7bf4db\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 11:48:59.542: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Aug 17 11:48:59.543: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14d7c859-db46-4eba-959b-bfbc7520d261",
      ResourceVersion: (string) (len=4) "4898",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827869737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e9d2cccf-e3f5-4af3-b039-16e8767bf4db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 39 64 32 63 63  63 66 2d 65 33 66 35 2d  |\"e9d2cccf-e3f5-|
              00000120  34 61 66 33 2d 62 30 33  39 2d 31 36 65 38 37 36  |4af3-b039-16e876|
              00000130  37 62 66 34 64 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7bf4db\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 11:48:59.551: INFO: Pod "test-recreate-deployment-76fb77d45-m6kwj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-m6kwj",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-6979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40c31c96-046a-48dc-b59c-0f3d1fbb0488",
      ResourceVersion: (string) (len=4) "4909",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827869739,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "7622098a-f17b-41c5-8f35-ed41e0bfb1fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  32 32 30 39 38 61 2d 66  |d\":\"7622098a-f|
              00000090  31 37 62 2d 34 31 63 35  2d 38 66 33 35 2d 65 64  |17b-41c5-8f35-ed|
              000000a0  34 31 65 30 62 66 62 31  66 62 5c 22 7d 22 3a 7b  |41e0bfb1fb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnqpb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnqpb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827869739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827869739,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 11:48:59.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6979" for this suite. @ 08/17/23 11:48:59.562
• [2.147 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 08/17/23 11:48:59.568
  Aug 17 11:48:59.568: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/17/23 11:48:59.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:48:59.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:48:59.579
  STEP: Creating 50 configmaps @ 08/17/23 11:48:59.58
  STEP: Creating RC which spawns configmap-volume pods @ 08/17/23 11:48:59.821
  Aug 17 11:48:59.923: INFO: Pod name wrapped-volume-race-db2098f4-9ae0-4e19-86d1-aa98cb5ac571: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/17/23 11:48:59.923
  STEP: Creating RC which spawns configmap-volume pods @ 08/17/23 11:49:03.994
  Aug 17 11:49:04.004: INFO: Pod name wrapped-volume-race-f342da44-b268-4e20-b710-461396da438c: Found 0 pods out of 5
  Aug 17 11:49:09.011: INFO: Pod name wrapped-volume-race-f342da44-b268-4e20-b710-461396da438c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/17/23 11:49:09.011
  STEP: Creating RC which spawns configmap-volume pods @ 08/17/23 11:49:09.029
  Aug 17 11:49:09.040: INFO: Pod name wrapped-volume-race-fa178f3c-44b7-40ae-80eb-25102ac20f0e: Found 0 pods out of 5
  Aug 17 11:49:14.050: INFO: Pod name wrapped-volume-race-fa178f3c-44b7-40ae-80eb-25102ac20f0e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/17/23 11:49:14.05
  Aug 17 11:49:14.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-fa178f3c-44b7-40ae-80eb-25102ac20f0e in namespace emptydir-wrapper-5502, will wait for the garbage collector to delete the pods @ 08/17/23 11:49:14.066
  Aug 17 11:49:14.125: INFO: Deleting ReplicationController wrapped-volume-race-fa178f3c-44b7-40ae-80eb-25102ac20f0e took: 4.798622ms
  Aug 17 11:49:14.226: INFO: Terminating ReplicationController wrapped-volume-race-fa178f3c-44b7-40ae-80eb-25102ac20f0e pods took: 100.677883ms
  STEP: deleting ReplicationController wrapped-volume-race-f342da44-b268-4e20-b710-461396da438c in namespace emptydir-wrapper-5502, will wait for the garbage collector to delete the pods @ 08/17/23 11:49:16.927
  Aug 17 11:49:16.984: INFO: Deleting ReplicationController wrapped-volume-race-f342da44-b268-4e20-b710-461396da438c took: 3.533511ms
  Aug 17 11:49:17.084: INFO: Terminating ReplicationController wrapped-volume-race-f342da44-b268-4e20-b710-461396da438c pods took: 100.609217ms
  STEP: deleting ReplicationController wrapped-volume-race-db2098f4-9ae0-4e19-86d1-aa98cb5ac571 in namespace emptydir-wrapper-5502, will wait for the garbage collector to delete the pods @ 08/17/23 11:49:19.885
  Aug 17 11:49:19.945: INFO: Deleting ReplicationController wrapped-volume-race-db2098f4-9ae0-4e19-86d1-aa98cb5ac571 took: 5.552332ms
  Aug 17 11:49:20.045: INFO: Terminating ReplicationController wrapped-volume-race-db2098f4-9ae0-4e19-86d1-aa98cb5ac571 pods took: 100.360049ms
  STEP: Cleaning up the configMaps @ 08/17/23 11:49:22.246
  STEP: Destroying namespace "emptydir-wrapper-5502" for this suite. @ 08/17/23 11:49:22.421
• [22.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 08/17/23 11:49:22.425
  Aug 17 11:49:22.425: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svcaccounts @ 08/17/23 11:49:22.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:22.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:22.436
  STEP: creating a ServiceAccount @ 08/17/23 11:49:22.438
  STEP: watching for the ServiceAccount to be added @ 08/17/23 11:49:22.442
  STEP: patching the ServiceAccount @ 08/17/23 11:49:22.443
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 08/17/23 11:49:22.446
  STEP: deleting the ServiceAccount @ 08/17/23 11:49:22.448
  Aug 17 11:49:22.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9020" for this suite. @ 08/17/23 11:49:22.457
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 08/17/23 11:49:22.46
  Aug 17 11:49:22.461: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 11:49:22.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:22.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:22.472
  STEP: Creating service test in namespace statefulset-3254 @ 08/17/23 11:49:22.474
  STEP: Looking for a node to schedule stateful set and pod @ 08/17/23 11:49:22.477
  STEP: Creating pod with conflicting port in namespace statefulset-3254 @ 08/17/23 11:49:22.479
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3254 @ 08/17/23 11:49:22.484
  STEP: Creating statefulset with conflicting port in namespace statefulset-3254 @ 08/17/23 11:49:24.491
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3254 @ 08/17/23 11:49:24.501
  Aug 17 11:49:24.519: INFO: Observed stateful pod in namespace: statefulset-3254, name: ss-0, uid: 7d3220ae-9568-45db-a3a5-ae4f2ab4d594, status phase: Pending. Waiting for statefulset controller to delete.
  Aug 17 11:49:24.528: INFO: Observed stateful pod in namespace: statefulset-3254, name: ss-0, uid: 7d3220ae-9568-45db-a3a5-ae4f2ab4d594, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 17 11:49:24.537: INFO: Observed stateful pod in namespace: statefulset-3254, name: ss-0, uid: 7d3220ae-9568-45db-a3a5-ae4f2ab4d594, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 17 11:49:24.539: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3254
  STEP: Removing pod with conflicting port in namespace statefulset-3254 @ 08/17/23 11:49:24.539
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3254 and will be in running state @ 08/17/23 11:49:24.55
  Aug 17 11:49:26.557: INFO: Deleting all statefulset in ns statefulset-3254
  Aug 17 11:49:26.559: INFO: Scaling statefulset ss to 0
  Aug 17 11:49:36.569: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 11:49:36.572: INFO: Deleting statefulset ss
  Aug 17 11:49:36.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3254" for this suite. @ 08/17/23 11:49:36.587
• [14.132 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 08/17/23 11:49:36.593
  Aug 17 11:49:36.593: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 11:49:36.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:36.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:36.608
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 08/17/23 11:49:36.611
  Aug 17 11:49:36.617: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4782  ea47c28b-4978-4387-a4e1-f65cdb9d085f 5567 0 2023-08-17 11:49:36 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-08-17 11:49:36 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f49gt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f49gt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 08/17/23 11:49:38.623
  Aug 17 11:49:38.623: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4782 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 11:49:38.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:49:38.624: INFO: ExecWithOptions: Clientset creation
  Aug 17 11:49:38.624: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-4782/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 08/17/23 11:49:38.771
  Aug 17 11:49:38.771: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4782 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 11:49:38.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:49:38.771: INFO: ExecWithOptions: Clientset creation
  Aug 17 11:49:38.771: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-4782/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 17 11:49:38.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 11:49:38.925: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-4782" for this suite. @ 08/17/23 11:49:38.934
• [2.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 08/17/23 11:49:38.94
  Aug 17 11:49:38.940: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:49:38.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:38.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:38.956
  STEP: Creating configMap with name projected-configmap-test-volume-f136ce95-17bf-4a2b-a4d5-dba17a5138d7 @ 08/17/23 11:49:38.958
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:49:38.962
  STEP: Saw pod success @ 08/17/23 11:49:42.979
  Aug 17 11:49:42.981: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-6172ad3a-9954-4077-b1c3-66f49a69a891 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 11:49:42.985
  Aug 17 11:49:42.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7525" for this suite. @ 08/17/23 11:49:42.998
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 08/17/23 11:49:43.004
  Aug 17 11:49:43.004: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 11:49:43.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:43.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:43.019
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 11:49:43.022
  STEP: Saw pod success @ 08/17/23 11:49:47.039
  Aug 17 11:49:47.041: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-b07f548d-1355-49ba-a59c-9dcad9523bcd container client-container: <nil>
  STEP: delete the pod @ 08/17/23 11:49:47.046
  Aug 17 11:49:47.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7995" for this suite. @ 08/17/23 11:49:47.057
• [4.057 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 08/17/23 11:49:47.061
  Aug 17 11:49:47.061: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename events @ 08/17/23 11:49:47.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:47.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:47.073
  STEP: Create set of events @ 08/17/23 11:49:47.075
  Aug 17 11:49:47.080: INFO: created test-event-1
  Aug 17 11:49:47.083: INFO: created test-event-2
  Aug 17 11:49:47.087: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 08/17/23 11:49:47.087
  STEP: delete collection of events @ 08/17/23 11:49:47.089
  Aug 17 11:49:47.089: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/17/23 11:49:47.105
  Aug 17 11:49:47.105: INFO: requesting list of events to confirm quantity
  Aug 17 11:49:47.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4638" for this suite. @ 08/17/23 11:49:47.11
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 08/17/23 11:49:47.116
  Aug 17 11:49:47.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 11:49:47.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:47.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:47.127
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/17/23 11:49:47.129
  STEP: Saw pod success @ 08/17/23 11:49:51.145
  Aug 17 11:49:51.148: INFO: Trying to get logs from node talos-default-worker-1 pod pod-7e0e1344-adcc-40a4-a252-8560553af712 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 11:49:51.153
  Aug 17 11:49:51.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-573" for this suite. @ 08/17/23 11:49:51.17
• [4.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 08/17/23 11:49:51.175
  Aug 17 11:49:51.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename ingress @ 08/17/23 11:49:51.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:51.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:51.19
  STEP: getting /apis @ 08/17/23 11:49:51.192
  STEP: getting /apis/networking.k8s.io @ 08/17/23 11:49:51.195
  STEP: getting /apis/networking.k8s.iov1 @ 08/17/23 11:49:51.197
  STEP: creating @ 08/17/23 11:49:51.197
  STEP: getting @ 08/17/23 11:49:51.206
  STEP: listing @ 08/17/23 11:49:51.208
  STEP: watching @ 08/17/23 11:49:51.21
  Aug 17 11:49:51.210: INFO: starting watch
  STEP: cluster-wide listing @ 08/17/23 11:49:51.211
  STEP: cluster-wide watching @ 08/17/23 11:49:51.213
  Aug 17 11:49:51.213: INFO: starting watch
  STEP: patching @ 08/17/23 11:49:51.215
  STEP: updating @ 08/17/23 11:49:51.219
  Aug 17 11:49:51.225: INFO: waiting for watch events with expected annotations
  Aug 17 11:49:51.225: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/17/23 11:49:51.225
  STEP: updating /status @ 08/17/23 11:49:51.23
  STEP: get /status @ 08/17/23 11:49:51.235
  STEP: deleting @ 08/17/23 11:49:51.238
  STEP: deleting a collection @ 08/17/23 11:49:51.246
  Aug 17 11:49:51.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6192" for this suite. @ 08/17/23 11:49:51.261
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 08/17/23 11:49:51.266
  Aug 17 11:49:51.266: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename endpointslicemirroring @ 08/17/23 11:49:51.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:51.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:51.281
  STEP: mirroring a new custom Endpoint @ 08/17/23 11:49:51.289
  Aug 17 11:49:51.294: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 08/17/23 11:49:53.298
  Aug 17 11:49:53.305: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 08/17/23 11:49:55.309
  Aug 17 11:49:55.316: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Aug 17 11:49:57.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6687" for this suite. @ 08/17/23 11:49:57.325
• [6.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 08/17/23 11:49:57.331
  Aug 17 11:49:57.331: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl-logs @ 08/17/23 11:49:57.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:49:57.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:49:57.347
  STEP: creating an pod @ 08/17/23 11:49:57.35
  Aug 17 11:49:57.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Aug 17 11:49:57.427: INFO: stderr: ""
  Aug 17 11:49:57.427: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 08/17/23 11:49:57.427
  Aug 17 11:49:57.427: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Aug 17 11:49:59.435: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 08/17/23 11:49:59.435
  Aug 17 11:49:59.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 logs logs-generator logs-generator'
  Aug 17 11:49:59.514: INFO: stderr: ""
  Aug 17 11:49:59.514: INFO: stdout: "I0817 11:49:58.061206       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/8zv 298\nI0817 11:49:58.261530       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/rws6 471\nI0817 11:49:58.461820       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/drls 392\nI0817 11:49:58.662165       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/mqv 249\nI0817 11:49:58.861531       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/68v 201\nI0817 11:49:59.061874       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/bc9 416\nI0817 11:49:59.261198       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/dvc 410\nI0817 11:49:59.461525       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kvwv 539\n"
  STEP: limiting log lines @ 08/17/23 11:49:59.515
  Aug 17 11:49:59.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 logs logs-generator logs-generator --tail=1'
  Aug 17 11:49:59.598: INFO: stderr: ""
  Aug 17 11:49:59.598: INFO: stdout: "I0817 11:49:59.461525       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kvwv 539\n"
  Aug 17 11:49:59.598: INFO: got output "I0817 11:49:59.461525       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kvwv 539\n"
  STEP: limiting log bytes @ 08/17/23 11:49:59.598
  Aug 17 11:49:59.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 logs logs-generator logs-generator --limit-bytes=1'
  Aug 17 11:49:59.672: INFO: stderr: ""
  Aug 17 11:49:59.672: INFO: stdout: "I"
  Aug 17 11:49:59.672: INFO: got output "I"
  STEP: exposing timestamps @ 08/17/23 11:49:59.672
  Aug 17 11:49:59.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 logs logs-generator logs-generator --tail=1 --timestamps'
  Aug 17 11:49:59.745: INFO: stderr: ""
  Aug 17 11:49:59.745: INFO: stdout: "2023-08-17T11:49:59.662039641Z I0817 11:49:59.661912       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/4zf 216\n"
  Aug 17 11:49:59.745: INFO: got output "2023-08-17T11:49:59.662039641Z I0817 11:49:59.661912       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/4zf 216\n"
  STEP: restricting to a time range @ 08/17/23 11:49:59.745
  Aug 17 11:50:02.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 logs logs-generator logs-generator --since=1s'
  Aug 17 11:50:02.322: INFO: stderr: ""
  Aug 17 11:50:02.322: INFO: stdout: "I0817 11:50:01.461963       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/r4n7 260\nI0817 11:50:01.661207       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/k42 577\nI0817 11:50:01.861568       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/9dmx 237\nI0817 11:50:02.061894       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/7t8 280\nI0817 11:50:02.261200       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/gns 351\n"
  Aug 17 11:50:02.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 logs logs-generator logs-generator --since=24h'
  Aug 17 11:50:02.387: INFO: stderr: ""
  Aug 17 11:50:02.387: INFO: stdout: "I0817 11:49:58.061206       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/8zv 298\nI0817 11:49:58.261530       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/rws6 471\nI0817 11:49:58.461820       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/drls 392\nI0817 11:49:58.662165       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/mqv 249\nI0817 11:49:58.861531       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/68v 201\nI0817 11:49:59.061874       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/bc9 416\nI0817 11:49:59.261198       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/dvc 410\nI0817 11:49:59.461525       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/kvwv 539\nI0817 11:49:59.661912       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/4zf 216\nI0817 11:49:59.862221       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/ds9 330\nI0817 11:50:00.061610       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/zgz4 263\nI0817 11:50:00.261995       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/tkxh 496\nI0817 11:50:00.461267       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/2wb 286\nI0817 11:50:00.661661       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/9s4 344\nI0817 11:50:00.861982       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/m7bz 475\nI0817 11:50:01.061252       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/lhn 480\nI0817 11:50:01.261582       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/k4km 439\nI0817 11:50:01.461963       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/r4n7 260\nI0817 11:50:01.661207       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/k42 577\nI0817 11:50:01.861568       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/9dmx 237\nI0817 11:50:02.061894       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/7t8 280\nI0817 11:50:02.261200       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/gns 351\n"
  Aug 17 11:50:02.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-logs-1929 delete pod logs-generator'
  Aug 17 11:50:03.144: INFO: stderr: ""
  Aug 17 11:50:03.144: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Aug 17 11:50:03.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1929" for this suite. @ 08/17/23 11:50:03.148
• [5.822 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 08/17/23 11:50:03.153
  Aug 17 11:50:03.153: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename endpointslice @ 08/17/23 11:50:03.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:50:03.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:50:03.168
  STEP: getting /apis @ 08/17/23 11:50:03.17
  STEP: getting /apis/discovery.k8s.io @ 08/17/23 11:50:03.173
  STEP: getting /apis/discovery.k8s.iov1 @ 08/17/23 11:50:03.173
  STEP: creating @ 08/17/23 11:50:03.174
  STEP: getting @ 08/17/23 11:50:03.184
  STEP: listing @ 08/17/23 11:50:03.186
  STEP: watching @ 08/17/23 11:50:03.188
  Aug 17 11:50:03.188: INFO: starting watch
  STEP: cluster-wide listing @ 08/17/23 11:50:03.189
  STEP: cluster-wide watching @ 08/17/23 11:50:03.192
  Aug 17 11:50:03.192: INFO: starting watch
  STEP: patching @ 08/17/23 11:50:03.192
  STEP: updating @ 08/17/23 11:50:03.196
  Aug 17 11:50:03.201: INFO: waiting for watch events with expected annotations
  Aug 17 11:50:03.201: INFO: saw patched and updated annotations
  STEP: deleting @ 08/17/23 11:50:03.201
  STEP: deleting a collection @ 08/17/23 11:50:03.209
  Aug 17 11:50:03.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9499" for this suite. @ 08/17/23 11:50:03.221
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 08/17/23 11:50:03.227
  Aug 17 11:50:03.228: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 11:50:03.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:50:03.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:50:03.241
  Aug 17 11:50:05.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 11:50:05.259: INFO: Deleting pod "var-expansion-5f825403-550d-46bf-9e5b-c7a911afcb0e" in namespace "var-expansion-6501"
  Aug 17 11:50:05.264: INFO: Wait up to 5m0s for pod "var-expansion-5f825403-550d-46bf-9e5b-c7a911afcb0e" to be fully deleted
  STEP: Destroying namespace "var-expansion-6501" for this suite. @ 08/17/23 11:50:07.271
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 08/17/23 11:50:07.278
  Aug 17 11:50:07.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 11:50:07.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:50:07.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:50:07.294
  STEP: Creating pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726 @ 08/17/23 11:50:07.297
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 11:50:09.31
  Aug 17 11:50:09.313: INFO: Initial restart count of pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e is 0
  Aug 17 11:50:09.316: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:11.320: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:13.324: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:15.329: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:17.333: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:19.336: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:21.340: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:23.344: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:25.348: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:27.352: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:29.356: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:31.358: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:33.362: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:35.365: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:37.370: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:39.373: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:41.378: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:43.381: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:45.385: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:47.389: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:49.394: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:51.399: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:53.403: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:55.407: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:57.411: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:50:59.416: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:01.421: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:03.424: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:05.428: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:07.431: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:09.436: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:11.439: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:13.443: INFO: Get pod test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e in namespace container-probe-4726
  Aug 17 11:51:13.443: INFO: Restart count of pod container-probe-4726/test-grpc-6ce29778-3362-4e13-81b2-ba778c78c92e is now 1 (1m4.129642629s elapsed)
  Aug 17 11:51:13.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 11:51:13.447
  STEP: Destroying namespace "container-probe-4726" for this suite. @ 08/17/23 11:51:13.455
• [66.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 08/17/23 11:51:13.461
  Aug 17 11:51:13.461: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 11:51:13.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:51:13.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:51:13.477
  STEP: Creating pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839 @ 08/17/23 11:51:13.48
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 11:51:15.496
  Aug 17 11:51:15.499: INFO: Initial restart count of pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 is 0
  Aug 17 11:51:15.501: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:17.505: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:19.509: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:21.513: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:23.517: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:25.521: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:27.525: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:29.530: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:31.534: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:33.537: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:35.540: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:37.544: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:39.548: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:41.553: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:43.557: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:45.560: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:47.565: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:49.569: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:51.574: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:53.576: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:55.581: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:57.586: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:51:59.591: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:01.595: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:03.599: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:05.603: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:07.607: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:09.611: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:11.616: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:13.619: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:15.622: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:17.627: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:19.632: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:21.635: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:23.639: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:25.642: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:27.647: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:29.651: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:31.656: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:33.659: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:35.664: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:37.667: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:39.669: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:41.674: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:43.678: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:45.682: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:47.686: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:49.690: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:51.693: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:53.697: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:55.700: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:57.704: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:52:59.709: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:01.713: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:03.717: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:05.722: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:07.726: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:09.730: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:11.734: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:13.738: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:15.743: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:17.746: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:19.751: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:21.756: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:23.760: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:25.763: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:27.767: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:29.772: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:31.776: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:33.779: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:35.783: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:37.788: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:39.792: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:41.795: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:43.800: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:45.803: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:47.807: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:49.812: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:51.816: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:53.820: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:55.823: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:57.827: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:53:59.831: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:01.835: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:03.838: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:05.842: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:07.845: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:09.849: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:11.852: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:13.856: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:15.861: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:17.865: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:19.870: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:21.874: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:23.878: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:25.882: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:27.886: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:29.890: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:31.894: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:33.898: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:35.902: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:37.906: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:39.910: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:41.914: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:43.917: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:45.921: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:47.924: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:49.928: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:51.931: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:53.935: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:55.939: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:57.943: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:54:59.947: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:01.951: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:03.955: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:05.959: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:07.963: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:09.968: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:11.972: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:13.975: INFO: Get pod busybox-9d2fef48-fff2-4ac4-9c0d-326a442a21a8 in namespace container-probe-8839
  Aug 17 11:55:15.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 11:55:15.98
  STEP: Destroying namespace "container-probe-8839" for this suite. @ 08/17/23 11:55:15.99
• [242.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 08/17/23 11:55:15.998
  Aug 17 11:55:15.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replicaset @ 08/17/23 11:55:15.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:16.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:16.016
  Aug 17 11:55:16.028: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 17 11:55:21.035: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/17/23 11:55:21.035
  STEP: Scaling up "test-rs" replicaset  @ 08/17/23 11:55:21.035
  Aug 17 11:55:21.043: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 08/17/23 11:55:21.043
  Aug 17 11:55:21.052: INFO: observed ReplicaSet test-rs in namespace replicaset-6824 with ReadyReplicas 1, AvailableReplicas 1
  Aug 17 11:55:21.062: INFO: observed ReplicaSet test-rs in namespace replicaset-6824 with ReadyReplicas 1, AvailableReplicas 1
  Aug 17 11:55:21.070: INFO: observed ReplicaSet test-rs in namespace replicaset-6824 with ReadyReplicas 1, AvailableReplicas 1
  Aug 17 11:55:21.073: INFO: observed ReplicaSet test-rs in namespace replicaset-6824 with ReadyReplicas 1, AvailableReplicas 1
  Aug 17 11:55:22.440: INFO: observed ReplicaSet test-rs in namespace replicaset-6824 with ReadyReplicas 2, AvailableReplicas 2
  Aug 17 11:55:22.630: INFO: observed Replicaset test-rs in namespace replicaset-6824 with ReadyReplicas 3 found true
  Aug 17 11:55:22.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6824" for this suite. @ 08/17/23 11:55:22.634
• [6.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 08/17/23 11:55:22.641
  Aug 17 11:55:22.641: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename gc @ 08/17/23 11:55:22.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:22.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:22.656
  STEP: create the rc @ 08/17/23 11:55:22.658
  W0817 11:55:22.662727      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 08/17/23 11:55:27.666
  STEP: wait for all pods to be garbage collected @ 08/17/23 11:55:27.674
  STEP: Gathering metrics @ 08/17/23 11:55:32.68
  Aug 17 11:55:32.724: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 17 11:55:32.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5304" for this suite. @ 08/17/23 11:55:32.728
• [10.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 08/17/23 11:55:32.734
  Aug 17 11:55:32.734: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:55:32.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:32.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:32.749
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 11:55:32.752
  STEP: Saw pod success @ 08/17/23 11:55:36.771
  Aug 17 11:55:36.774: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-83688f81-195a-4646-b52c-27d534317354 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 11:55:36.786
  Aug 17 11:55:36.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8639" for this suite. @ 08/17/23 11:55:36.801
• [4.071 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 08/17/23 11:55:36.806
  Aug 17 11:55:36.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename certificates @ 08/17/23 11:55:36.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:36.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:36.822
  STEP: getting /apis @ 08/17/23 11:55:37.06
  STEP: getting /apis/certificates.k8s.io @ 08/17/23 11:55:37.063
  STEP: getting /apis/certificates.k8s.io/v1 @ 08/17/23 11:55:37.063
  STEP: creating @ 08/17/23 11:55:37.064
  STEP: getting @ 08/17/23 11:55:37.072
  STEP: listing @ 08/17/23 11:55:37.073
  STEP: watching @ 08/17/23 11:55:37.075
  Aug 17 11:55:37.075: INFO: starting watch
  STEP: patching @ 08/17/23 11:55:37.076
  STEP: updating @ 08/17/23 11:55:37.079
  Aug 17 11:55:37.081: INFO: waiting for watch events with expected annotations
  Aug 17 11:55:37.081: INFO: saw patched and updated annotations
  STEP: getting /approval @ 08/17/23 11:55:37.081
  STEP: patching /approval @ 08/17/23 11:55:37.083
  STEP: updating /approval @ 08/17/23 11:55:37.086
  STEP: getting /status @ 08/17/23 11:55:37.089
  STEP: patching /status @ 08/17/23 11:55:37.09
  STEP: updating /status @ 08/17/23 11:55:37.093
  STEP: deleting @ 08/17/23 11:55:37.096
  STEP: deleting a collection @ 08/17/23 11:55:37.102
  Aug 17 11:55:37.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5905" for this suite. @ 08/17/23 11:55:37.111
• [0.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 08/17/23 11:55:37.115
  Aug 17 11:55:37.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:55:37.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:37.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:37.124
  STEP: Creating configMap with name projected-configmap-test-volume-map-ce72d8a9-f1ca-40f8-b4af-651e9872313d @ 08/17/23 11:55:37.125
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:55:37.128
  STEP: Saw pod success @ 08/17/23 11:55:41.141
  Aug 17 11:55:41.142: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-8312630b-e359-4f7e-8cf5-086fe7c9aaf7 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 11:55:41.145
  Aug 17 11:55:41.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2218" for this suite. @ 08/17/23 11:55:41.153
• [4.041 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 08/17/23 11:55:41.156
  Aug 17 11:55:41.156: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename gc @ 08/17/23 11:55:41.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:41.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:41.166
  STEP: create the deployment @ 08/17/23 11:55:41.168
  W0817 11:55:41.171052      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/17/23 11:55:41.171
  STEP: delete the deployment @ 08/17/23 11:55:41.675
  STEP: wait for all rs to be garbage collected @ 08/17/23 11:55:41.679
  STEP: expected 0 pods, got 2 pods @ 08/17/23 11:55:41.681
  STEP: expected 0 rs, got 1 rs @ 08/17/23 11:55:41.684
  STEP: Gathering metrics @ 08/17/23 11:55:42.193
  Aug 17 11:55:42.235: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 17 11:55:42.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8887" for this suite. @ 08/17/23 11:55:42.238
• [1.086 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 08/17/23 11:55:42.242
  Aug 17 11:55:42.242: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename job @ 08/17/23 11:55:42.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:42.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:42.253
  STEP: Creating a suspended job @ 08/17/23 11:55:42.256
  STEP: Patching the Job @ 08/17/23 11:55:42.259
  STEP: Watching for Job to be patched @ 08/17/23 11:55:42.266
  Aug 17 11:55:42.267: INFO: Event ADDED observed for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-job-label:e2e-4p5mr] and annotations: map[]
  Aug 17 11:55:42.267: INFO: Event MODIFIED observed for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-job-label:e2e-4p5mr] and annotations: map[]
  Aug 17 11:55:42.267: INFO: Event MODIFIED found for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[]
  STEP: Updating the job @ 08/17/23 11:55:42.267
  STEP: Watching for Job to be updated @ 08/17/23 11:55:42.272
  Aug 17 11:55:42.273: INFO: Event MODIFIED found for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[updated:true]
  Aug 17 11:55:42.273: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 08/17/23 11:55:42.273
  Aug 17 11:55:42.274: INFO: Job: e2e-4p5mr as labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr]
  STEP: Waiting for job to complete @ 08/17/23 11:55:42.274
  STEP: Delete a job collection with a labelselector @ 08/17/23 11:55:50.278
  STEP: Watching for Job to be deleted @ 08/17/23 11:55:50.284
  Aug 17 11:55:50.285: INFO: Event MODIFIED observed for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[updated:true]
  Aug 17 11:55:50.285: INFO: Event MODIFIED observed for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[updated:true]
  Aug 17 11:55:50.285: INFO: Event MODIFIED observed for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[updated:true]
  Aug 17 11:55:50.285: INFO: Event MODIFIED observed for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[updated:true]
  Aug 17 11:55:50.285: INFO: Event MODIFIED observed for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[updated:true]
  Aug 17 11:55:50.285: INFO: Event DELETED found for Job e2e-4p5mr in namespace job-2749 with labels: map[e2e-4p5mr:patched e2e-job-label:e2e-4p5mr] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 08/17/23 11:55:50.285
  Aug 17 11:55:50.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2749" for this suite. @ 08/17/23 11:55:50.291
• [8.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 08/17/23 11:55:50.3
  Aug 17 11:55:50.300: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 11:55:50.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:50.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:50.316
  STEP: validating api versions @ 08/17/23 11:55:50.318
  Aug 17 11:55:50.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-1501 api-versions'
  Aug 17 11:55:50.384: INFO: stderr: ""
  Aug 17 11:55:50.384: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Aug 17 11:55:50.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1501" for this suite. @ 08/17/23 11:55:50.388
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 08/17/23 11:55:50.394
  Aug 17 11:55:50.394: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 11:55:50.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:50.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:50.408
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 08/17/23 11:55:50.411
  Aug 17 11:55:50.412: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:55:51.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:55:56.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1907" for this suite. @ 08/17/23 11:55:56.949
• [6.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 08/17/23 11:55:56.954
  Aug 17 11:55:56.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 11:55:56.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:56.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:56.965
  STEP: Creating configMap with name configmap-test-volume-5d06a8d2-79cf-4cd0-b5c7-dfee5e61eb11 @ 08/17/23 11:55:56.967
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:55:56.971
  STEP: Saw pod success @ 08/17/23 11:55:58.985
  Aug 17 11:55:58.988: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-936fe9d1-abf5-4e2f-8511-cce222cad223 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 11:55:58.994
  Aug 17 11:55:59.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6913" for this suite. @ 08/17/23 11:55:59.008
• [2.059 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 08/17/23 11:55:59.013
  Aug 17 11:55:59.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:55:59.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:55:59.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:55:59.03
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 11:55:59.033
  STEP: Saw pod success @ 08/17/23 11:56:01.046
  Aug 17 11:56:01.047: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-cadb1472-78ba-4cdd-80a3-c9d87f693982 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 11:56:01.051
  Aug 17 11:56:01.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5914" for this suite. @ 08/17/23 11:56:01.061
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 08/17/23 11:56:01.065
  Aug 17 11:56:01.065: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 11:56:01.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:01.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:01.078
  STEP: set up a multi version CRD @ 08/17/23 11:56:01.08
  Aug 17 11:56:01.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: rename a version @ 08/17/23 11:56:04.198
  STEP: check the new version name is served @ 08/17/23 11:56:04.205
  STEP: check the old version name is removed @ 08/17/23 11:56:04.934
  STEP: check the other version is not changed @ 08/17/23 11:56:05.554
  Aug 17 11:56:08.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8840" for this suite. @ 08/17/23 11:56:08.131
• [7.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 08/17/23 11:56:08.136
  Aug 17 11:56:08.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 11:56:08.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:08.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:08.147
  STEP: creating a replication controller @ 08/17/23 11:56:08.15
  Aug 17 11:56:08.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 create -f -'
  Aug 17 11:56:08.469: INFO: stderr: ""
  Aug 17 11:56:08.469: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/17/23 11:56:08.469
  Aug 17 11:56:08.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 17 11:56:08.532: INFO: stderr: ""
  Aug 17 11:56:08.532: INFO: stdout: "update-demo-nautilus-jckbx update-demo-nautilus-wvbft "
  Aug 17 11:56:08.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods update-demo-nautilus-jckbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 11:56:08.592: INFO: stderr: ""
  Aug 17 11:56:08.592: INFO: stdout: ""
  Aug 17 11:56:08.592: INFO: update-demo-nautilus-jckbx is created but not running
  Aug 17 11:56:13.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 17 11:56:13.668: INFO: stderr: ""
  Aug 17 11:56:13.668: INFO: stdout: "update-demo-nautilus-jckbx update-demo-nautilus-wvbft "
  Aug 17 11:56:13.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods update-demo-nautilus-jckbx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 11:56:13.737: INFO: stderr: ""
  Aug 17 11:56:13.737: INFO: stdout: "true"
  Aug 17 11:56:13.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods update-demo-nautilus-jckbx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 11:56:13.803: INFO: stderr: ""
  Aug 17 11:56:13.803: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 11:56:13.803: INFO: validating pod update-demo-nautilus-jckbx
  Aug 17 11:56:13.808: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 11:56:13.808: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 11:56:13.808: INFO: update-demo-nautilus-jckbx is verified up and running
  Aug 17 11:56:13.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods update-demo-nautilus-wvbft -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 11:56:13.875: INFO: stderr: ""
  Aug 17 11:56:13.875: INFO: stdout: "true"
  Aug 17 11:56:13.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods update-demo-nautilus-wvbft -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 11:56:13.928: INFO: stderr: ""
  Aug 17 11:56:13.928: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 11:56:13.928: INFO: validating pod update-demo-nautilus-wvbft
  Aug 17 11:56:13.931: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 11:56:13.931: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 11:56:13.931: INFO: update-demo-nautilus-wvbft is verified up and running
  STEP: using delete to clean up resources @ 08/17/23 11:56:13.931
  Aug 17 11:56:13.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 delete --grace-period=0 --force -f -'
  Aug 17 11:56:13.978: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 11:56:13.978: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 17 11:56:13.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get rc,svc -l name=update-demo --no-headers'
  Aug 17 11:56:14.030: INFO: stderr: "No resources found in kubectl-8671 namespace.\n"
  Aug 17 11:56:14.030: INFO: stdout: ""
  Aug 17 11:56:14.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8671 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 17 11:56:14.075: INFO: stderr: ""
  Aug 17 11:56:14.075: INFO: stdout: ""
  Aug 17 11:56:14.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8671" for this suite. @ 08/17/23 11:56:14.078
• [5.944 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 08/17/23 11:56:14.081
  Aug 17 11:56:14.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:56:14.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:14.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:14.09
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 11:56:14.092
  STEP: Saw pod success @ 08/17/23 11:56:18.103
  Aug 17 11:56:18.106: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-d4af17a7-d0d7-4fae-8dbc-339ffbbf7a36 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 11:56:18.116
  Aug 17 11:56:18.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6684" for this suite. @ 08/17/23 11:56:18.128
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 08/17/23 11:56:18.133
  Aug 17 11:56:18.133: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 11:56:18.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:18.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:18.147
  Aug 17 11:56:18.150: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: creating the pod @ 08/17/23 11:56:18.15
  STEP: submitting the pod to kubernetes @ 08/17/23 11:56:18.15
  Aug 17 11:56:20.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9968" for this suite. @ 08/17/23 11:56:20.173
• [2.044 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 08/17/23 11:56:20.178
  Aug 17 11:56:20.178: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 11:56:20.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:20.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:20.193
  STEP: creating service in namespace services-4597 @ 08/17/23 11:56:20.196
  STEP: creating service affinity-clusterip in namespace services-4597 @ 08/17/23 11:56:20.196
  STEP: creating replication controller affinity-clusterip in namespace services-4597 @ 08/17/23 11:56:20.206
  I0817 11:56:20.210791      24 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4597, replica count: 3
  I0817 11:56:23.262409      24 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 11:56:23.266: INFO: Creating new exec pod
  Aug 17 11:56:26.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-4597 exec execpod-affinitypvp76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Aug 17 11:56:26.472: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Aug 17 11:56:26.472: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 11:56:26.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-4597 exec execpod-affinitypvp76 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.167.72 80'
  Aug 17 11:56:26.631: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.167.72 80\nConnection to 10.102.167.72 80 port [tcp/http] succeeded!\n"
  Aug 17 11:56:26.631: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 11:56:26.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-4597 exec execpod-affinitypvp76 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.102.167.72:80/ ; done'
  Aug 17 11:56:26.809: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.167.72:80/\n"
  Aug 17 11:56:26.809: INFO: stdout: "\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8\naffinity-clusterip-4m9n8"
  Aug 17 11:56:26.809: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.809: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.809: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Received response from host: affinity-clusterip-4m9n8
  Aug 17 11:56:26.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 11:56:26.812: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4597, will wait for the garbage collector to delete the pods @ 08/17/23 11:56:26.818
  Aug 17 11:56:26.873: INFO: Deleting ReplicationController affinity-clusterip took: 3.401369ms
  Aug 17 11:56:26.974: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.51442ms
  STEP: Destroying namespace "services-4597" for this suite. @ 08/17/23 11:56:29.893
• [9.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 08/17/23 11:56:29.899
  Aug 17 11:56:29.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 11:56:29.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:29.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:29.917
  STEP: Counting existing ResourceQuota @ 08/17/23 11:56:29.919
  STEP: Creating a ResourceQuota @ 08/17/23 11:56:34.922
  STEP: Ensuring resource quota status is calculated @ 08/17/23 11:56:34.924
  STEP: Creating a Pod that fits quota @ 08/17/23 11:56:36.928
  STEP: Ensuring ResourceQuota status captures the pod usage @ 08/17/23 11:56:36.938
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 08/17/23 11:56:38.941
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 08/17/23 11:56:38.943
  STEP: Ensuring a pod cannot update its resource requirements @ 08/17/23 11:56:38.945
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 08/17/23 11:56:38.947
  STEP: Deleting the pod @ 08/17/23 11:56:40.951
  STEP: Ensuring resource quota status released the pod usage @ 08/17/23 11:56:40.959
  Aug 17 11:56:42.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4572" for this suite. @ 08/17/23 11:56:42.964
• [13.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 08/17/23 11:56:42.968
  Aug 17 11:56:42.968: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 11:56:42.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:42.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:42.977
  STEP: creating a Service @ 08/17/23 11:56:42.98
  STEP: watching for the Service to be added @ 08/17/23 11:56:42.988
  Aug 17 11:56:42.989: INFO: Found Service test-service-t9l6j in namespace services-4083 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Aug 17 11:56:42.989: INFO: Service test-service-t9l6j created
  STEP: Getting /status @ 08/17/23 11:56:42.989
  Aug 17 11:56:42.991: INFO: Service test-service-t9l6j has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 08/17/23 11:56:42.991
  STEP: watching for the Service to be patched @ 08/17/23 11:56:42.994
  Aug 17 11:56:42.995: INFO: observed Service test-service-t9l6j in namespace services-4083 with annotations: map[] & LoadBalancer: {[]}
  Aug 17 11:56:42.995: INFO: Found Service test-service-t9l6j in namespace services-4083 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Aug 17 11:56:42.995: INFO: Service test-service-t9l6j has service status patched
  STEP: updating the ServiceStatus @ 08/17/23 11:56:42.995
  Aug 17 11:56:43.002: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 08/17/23 11:56:43.002
  Aug 17 11:56:43.003: INFO: Observed Service test-service-t9l6j in namespace services-4083 with annotations: map[] & Conditions: {[]}
  Aug 17 11:56:43.003: INFO: Observed event: &Service{ObjectMeta:{test-service-t9l6j  services-4083  2a799b75-3084-48b7-9f51-30c01ac966f1 7434 0 2023-08-17 11:56:42 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-08-17 11:56:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-08-17 11:56:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.107.128.161,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.107.128.161],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Aug 17 11:56:43.003: INFO: Found Service test-service-t9l6j in namespace services-4083 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 17 11:56:43.003: INFO: Service test-service-t9l6j has service status updated
  STEP: patching the service @ 08/17/23 11:56:43.003
  STEP: watching for the Service to be patched @ 08/17/23 11:56:43.01
  Aug 17 11:56:43.011: INFO: observed Service test-service-t9l6j in namespace services-4083 with labels: map[test-service-static:true]
  Aug 17 11:56:43.011: INFO: observed Service test-service-t9l6j in namespace services-4083 with labels: map[test-service-static:true]
  Aug 17 11:56:43.011: INFO: observed Service test-service-t9l6j in namespace services-4083 with labels: map[test-service-static:true]
  Aug 17 11:56:43.011: INFO: Found Service test-service-t9l6j in namespace services-4083 with labels: map[test-service:patched test-service-static:true]
  Aug 17 11:56:43.011: INFO: Service test-service-t9l6j patched
  STEP: deleting the service @ 08/17/23 11:56:43.011
  STEP: watching for the Service to be deleted @ 08/17/23 11:56:43.017
  Aug 17 11:56:43.018: INFO: Observed event: ADDED
  Aug 17 11:56:43.018: INFO: Observed event: MODIFIED
  Aug 17 11:56:43.018: INFO: Observed event: MODIFIED
  Aug 17 11:56:43.019: INFO: Observed event: MODIFIED
  Aug 17 11:56:43.019: INFO: Found Service test-service-t9l6j in namespace services-4083 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Aug 17 11:56:43.019: INFO: Service test-service-t9l6j deleted
  Aug 17 11:56:43.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4083" for this suite. @ 08/17/23 11:56:43.022
• [0.056 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 08/17/23 11:56:43.025
  Aug 17 11:56:43.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-runtime @ 08/17/23 11:56:43.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:43.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:43.035
  STEP: create the container @ 08/17/23 11:56:43.036
  W0817 11:56:43.039588      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 08/17/23 11:56:43.039
  STEP: get the container status @ 08/17/23 11:56:45.046
  STEP: the container should be terminated @ 08/17/23 11:56:45.049
  STEP: the termination message should be set @ 08/17/23 11:56:45.049
  Aug 17 11:56:45.049: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/17/23 11:56:45.049
  Aug 17 11:56:45.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3835" for this suite. @ 08/17/23 11:56:45.059
• [2.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 08/17/23 11:56:45.064
  Aug 17 11:56:45.064: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 11:56:45.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:45.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:45.076
  STEP: Creating configMap with name configmap-test-volume-d1ace6ab-d4ab-4340-99cb-a3b693814b04 @ 08/17/23 11:56:45.078
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:56:45.081
  STEP: Saw pod success @ 08/17/23 11:56:49.093
  Aug 17 11:56:49.095: INFO: Trying to get logs from node talos-default-worker-2 pod pod-configmaps-4f289598-3354-4020-b4c6-2494d8d67faf container configmap-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 11:56:49.104
  Aug 17 11:56:49.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9309" for this suite. @ 08/17/23 11:56:49.114
• [4.054 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 08/17/23 11:56:49.118
  Aug 17 11:56:49.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename prestop @ 08/17/23 11:56:49.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:49.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:49.129
  STEP: Creating server pod server in namespace prestop-3879 @ 08/17/23 11:56:49.131
  STEP: Waiting for pods to come up. @ 08/17/23 11:56:49.137
  STEP: Creating tester pod tester in namespace prestop-3879 @ 08/17/23 11:56:51.143
  STEP: Deleting pre-stop pod @ 08/17/23 11:56:53.15
  Aug 17 11:56:58.163: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Aug 17 11:56:58.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 08/17/23 11:56:58.167
  STEP: Destroying namespace "prestop-3879" for this suite. @ 08/17/23 11:56:58.181
• [9.069 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 08/17/23 11:56:58.187
  Aug 17 11:56:58.187: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sysctl @ 08/17/23 11:56:58.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:58.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:58.203
  STEP: Creating a pod with one valid and two invalid sysctls @ 08/17/23 11:56:58.206
  Aug 17 11:56:58.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8918" for this suite. @ 08/17/23 11:56:58.214
• [0.032 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 08/17/23 11:56:58.219
  Aug 17 11:56:58.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 11:56:58.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:56:58.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:56:58.234
  Aug 17 11:56:58.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/17/23 11:56:59.449
  Aug 17 11:56:59.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-595 --namespace=crd-publish-openapi-595 create -f -'
  Aug 17 11:57:01.753: INFO: stderr: ""
  Aug 17 11:57:01.753: INFO: stdout: "e2e-test-crd-publish-openapi-3170-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 17 11:57:01.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-595 --namespace=crd-publish-openapi-595 delete e2e-test-crd-publish-openapi-3170-crds test-cr'
  Aug 17 11:57:01.845: INFO: stderr: ""
  Aug 17 11:57:01.845: INFO: stdout: "e2e-test-crd-publish-openapi-3170-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Aug 17 11:57:01.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-595 --namespace=crd-publish-openapi-595 apply -f -'
  Aug 17 11:57:02.099: INFO: stderr: ""
  Aug 17 11:57:02.099: INFO: stdout: "e2e-test-crd-publish-openapi-3170-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 17 11:57:02.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-595 --namespace=crd-publish-openapi-595 delete e2e-test-crd-publish-openapi-3170-crds test-cr'
  Aug 17 11:57:02.153: INFO: stderr: ""
  Aug 17 11:57:02.153: INFO: stdout: "e2e-test-crd-publish-openapi-3170-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/17/23 11:57:02.153
  Aug 17 11:57:02.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-595 explain e2e-test-crd-publish-openapi-3170-crds'
  Aug 17 11:57:02.253: INFO: stderr: ""
  Aug 17 11:57:02.253: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3170-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Aug 17 11:57:03.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-595" for this suite. @ 08/17/23 11:57:03.482
• [5.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 08/17/23 11:57:03.485
  Aug 17 11:57:03.485: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 11:57:03.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:03.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:03.494
  STEP: Creating secret with name secret-test-4154077e-43c9-47e8-801b-93d3836622fd @ 08/17/23 11:57:03.496
  STEP: Creating a pod to test consume secrets @ 08/17/23 11:57:03.498
  STEP: Saw pod success @ 08/17/23 11:57:07.509
  Aug 17 11:57:07.510: INFO: Trying to get logs from node talos-default-worker-2 pod pod-secrets-a04a0248-ebf8-427a-878d-c4588e437505 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 11:57:07.513
  Aug 17 11:57:07.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2864" for this suite. @ 08/17/23 11:57:07.521
• [4.038 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 08/17/23 11:57:07.523
  Aug 17 11:57:07.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 11:57:07.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:07.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:07.537
  STEP: Creating secret with name secret-test-map-545c6129-082e-454b-ac7c-b0ff45440dc4 @ 08/17/23 11:57:07.539
  STEP: Creating a pod to test consume secrets @ 08/17/23 11:57:07.542
  STEP: Saw pod success @ 08/17/23 11:57:11.556
  Aug 17 11:57:11.558: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-3f0c3d85-157b-48ce-9d03-f355ae1524d0 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 11:57:11.561
  Aug 17 11:57:11.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6876" for this suite. @ 08/17/23 11:57:11.57
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 08/17/23 11:57:11.573
  Aug 17 11:57:11.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 11:57:11.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:11.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:11.583
  STEP: Creating a pod to test substitution in container's args @ 08/17/23 11:57:11.584
  STEP: Saw pod success @ 08/17/23 11:57:15.597
  Aug 17 11:57:15.598: INFO: Trying to get logs from node talos-default-worker-2 pod var-expansion-77337edf-b368-4c2a-b252-948113f30636 container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 11:57:15.601
  Aug 17 11:57:15.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4064" for this suite. @ 08/17/23 11:57:15.608
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 08/17/23 11:57:15.612
  Aug 17 11:57:15.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:57:15.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:15.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:15.621
  STEP: Creating projection with secret that has name projected-secret-test-map-e6697837-1793-40a3-8091-c1851500baa3 @ 08/17/23 11:57:15.622
  STEP: Creating a pod to test consume secrets @ 08/17/23 11:57:15.624
  STEP: Saw pod success @ 08/17/23 11:57:19.638
  Aug 17 11:57:19.641: INFO: Trying to get logs from node talos-default-worker-2 pod pod-projected-secrets-820fc2bc-91ec-4a66-9eb9-eb4d7dc572ed container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 11:57:19.645
  Aug 17 11:57:19.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-357" for this suite. @ 08/17/23 11:57:19.659
• [4.052 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 08/17/23 11:57:19.664
  Aug 17 11:57:19.664: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 11:57:19.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:19.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:19.677
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/17/23 11:57:19.679
  STEP: Saw pod success @ 08/17/23 11:57:23.692
  Aug 17 11:57:23.695: INFO: Trying to get logs from node talos-default-worker-2 pod pod-fc0bd66c-4547-45c2-b7a4-63e6c6f1da4a container test-container: <nil>
  STEP: delete the pod @ 08/17/23 11:57:23.699
  Aug 17 11:57:23.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1317" for this suite. @ 08/17/23 11:57:23.711
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 08/17/23 11:57:23.716
  Aug 17 11:57:23.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-runtime @ 08/17/23 11:57:23.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:23.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:23.732
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 08/17/23 11:57:23.74
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 08/17/23 11:57:41.798
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 08/17/23 11:57:41.8
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 08/17/23 11:57:41.804
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 08/17/23 11:57:41.804
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 08/17/23 11:57:41.816
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 08/17/23 11:57:44.827
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 08/17/23 11:57:45.834
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 08/17/23 11:57:45.838
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 08/17/23 11:57:45.838
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 08/17/23 11:57:45.851
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 08/17/23 11:57:46.857
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 08/17/23 11:57:48.865
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 08/17/23 11:57:48.869
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 08/17/23 11:57:48.869
  Aug 17 11:57:48.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2063" for this suite. @ 08/17/23 11:57:48.886
• [25.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 08/17/23 11:57:48.891
  Aug 17 11:57:48.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/17/23 11:57:48.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:48.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:48.905
  STEP: creating a target pod @ 08/17/23 11:57:48.908
  STEP: adding an ephemeral container @ 08/17/23 11:57:50.919
  STEP: checking pod container endpoints @ 08/17/23 11:57:52.929
  Aug 17 11:57:52.929: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-958 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 11:57:52.929: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 11:57:52.930: INFO: ExecWithOptions: Clientset creation
  Aug 17 11:57:52.930: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-958/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 17 11:57:53.046: INFO: Exec stderr: ""
  Aug 17 11:57:53.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-958" for this suite. @ 08/17/23 11:57:53.054
• [4.167 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 08/17/23 11:57:53.058
  Aug 17 11:57:53.058: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 11:57:53.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:53.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:53.073
  STEP: Creating configMap with name projected-configmap-test-volume-ac7c550f-4561-490a-a880-6a715f7fdc54 @ 08/17/23 11:57:53.076
  STEP: Creating a pod to test consume configMaps @ 08/17/23 11:57:53.08
  STEP: Saw pod success @ 08/17/23 11:57:57.092
  Aug 17 11:57:57.093: INFO: Trying to get logs from node talos-default-worker-2 pod pod-projected-configmaps-1ddf4ad6-94e7-4250-8410-c3ea492d67a3 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 11:57:57.097
  Aug 17 11:57:57.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5885" for this suite. @ 08/17/23 11:57:57.106
• [4.050 seconds]
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 08/17/23 11:57:57.109
  Aug 17 11:57:57.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 11:57:57.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:57.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:57.12
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 11:57:57.122
  STEP: Saw pod success @ 08/17/23 11:57:59.132
  Aug 17 11:57:59.133: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-19b36f44-53ca-4747-9467-29abe248b8ed container client-container: <nil>
  STEP: delete the pod @ 08/17/23 11:57:59.137
  Aug 17 11:57:59.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1585" for this suite. @ 08/17/23 11:57:59.147
• [2.042 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 08/17/23 11:57:59.151
  Aug 17 11:57:59.151: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 11:57:59.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:57:59.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:57:59.163
  STEP: Creating a test headless service @ 08/17/23 11:57:59.165
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7438 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7438;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7438 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7438;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7438.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7438.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7438.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7438.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7438.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7438.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7438.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7438.svc;check="$$(dig +notcp +noall +answer +search 25.215.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.215.25_udp@PTR;check="$$(dig +tcp +noall +answer +search 25.215.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.215.25_tcp@PTR;sleep 1; done
   @ 08/17/23 11:57:59.175
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7438 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7438;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7438 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7438;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7438.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7438.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7438.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7438.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7438.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7438.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7438.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7438.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7438.svc;check="$$(dig +notcp +noall +answer +search 25.215.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.215.25_udp@PTR;check="$$(dig +tcp +noall +answer +search 25.215.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.215.25_tcp@PTR;sleep 1; done
   @ 08/17/23 11:57:59.175
  STEP: creating a pod to probe DNS @ 08/17/23 11:57:59.175
  STEP: submitting the pod to kubernetes @ 08/17/23 11:57:59.175
  STEP: retrieving the pod @ 08/17/23 11:58:01.188
  STEP: looking for the results for each expected name from probers @ 08/17/23 11:58:01.191
  Aug 17 11:58:01.194: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.197: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.200: INFO: Unable to read wheezy_udp@dns-test-service.dns-7438 from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.203: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7438 from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.206: INFO: Unable to read wheezy_udp@dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.208: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.211: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.214: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.228: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.230: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.233: INFO: Unable to read jessie_udp@dns-test-service.dns-7438 from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.236: INFO: Unable to read jessie_tcp@dns-test-service.dns-7438 from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.239: INFO: Unable to read jessie_udp@dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.242: INFO: Unable to read jessie_tcp@dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.245: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.247: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7438.svc from pod dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207: the server could not find the requested resource (get pods dns-test-874566f2-4757-4571-8940-440cba33d207)
  Aug 17 11:58:01.258: INFO: Lookups using dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7438 wheezy_tcp@dns-test-service.dns-7438 wheezy_udp@dns-test-service.dns-7438.svc wheezy_tcp@dns-test-service.dns-7438.svc wheezy_udp@_http._tcp.dns-test-service.dns-7438.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7438.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7438 jessie_tcp@dns-test-service.dns-7438 jessie_udp@dns-test-service.dns-7438.svc jessie_tcp@dns-test-service.dns-7438.svc jessie_udp@_http._tcp.dns-test-service.dns-7438.svc jessie_tcp@_http._tcp.dns-test-service.dns-7438.svc]

  Aug 17 11:58:01.263: INFO: Pod client logs for webserver: 
  Aug 17 11:58:01.267: INFO: Pod client logs for querier: 
  Aug 17 11:58:01.272: INFO: Pod client logs for jessie-querier: 
  Aug 17 11:58:06.339: INFO: DNS probes using dns-7438/dns-test-874566f2-4757-4571-8940-440cba33d207 succeeded

  Aug 17 11:58:06.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 11:58:06.343
  STEP: deleting the test service @ 08/17/23 11:58:06.352
  STEP: deleting the test headless service @ 08/17/23 11:58:06.369
  STEP: Destroying namespace "dns-7438" for this suite. @ 08/17/23 11:58:06.377
• [7.230 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 08/17/23 11:58:06.381
  Aug 17 11:58:06.381: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 11:58:06.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 11:58:06.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 11:58:06.396
  STEP: creating the pod with failed condition @ 08/17/23 11:58:06.399
  STEP: updating the pod @ 08/17/23 12:00:06.405
  Aug 17 12:00:06.912: INFO: Successfully updated pod "var-expansion-4cfecda0-b6be-4aec-b494-910dc4694f10"
  STEP: waiting for pod running @ 08/17/23 12:00:06.912
  STEP: deleting the pod gracefully @ 08/17/23 12:00:08.917
  Aug 17 12:00:08.917: INFO: Deleting pod "var-expansion-4cfecda0-b6be-4aec-b494-910dc4694f10" in namespace "var-expansion-1200"
  Aug 17 12:00:08.921: INFO: Wait up to 5m0s for pod "var-expansion-4cfecda0-b6be-4aec-b494-910dc4694f10" to be fully deleted
  Aug 17 12:00:40.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1200" for this suite. @ 08/17/23 12:00:40.979
• [154.601 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 08/17/23 12:00:40.982
  Aug 17 12:00:40.982: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:00:40.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:00:40.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:00:40.997
  STEP: Creating resourceQuota "e2e-rq-status-qqsbm" @ 08/17/23 12:00:41.002
  Aug 17 12:00:41.008: INFO: Resource quota "e2e-rq-status-qqsbm" reports spec: hard cpu limit of 500m
  Aug 17 12:00:41.008: INFO: Resource quota "e2e-rq-status-qqsbm" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-qqsbm" /status @ 08/17/23 12:00:41.008
  STEP: Confirm /status for "e2e-rq-status-qqsbm" resourceQuota via watch @ 08/17/23 12:00:41.014
  Aug 17 12:00:41.015: INFO: observed resourceQuota "e2e-rq-status-qqsbm" in namespace "resourcequota-5804" with hard status: v1.ResourceList(nil)
  Aug 17 12:00:41.015: INFO: Found resourceQuota "e2e-rq-status-qqsbm" in namespace "resourcequota-5804" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 17 12:00:41.015: INFO: ResourceQuota "e2e-rq-status-qqsbm" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 08/17/23 12:00:41.017
  Aug 17 12:00:41.021: INFO: Resource quota "e2e-rq-status-qqsbm" reports spec: hard cpu limit of 1
  Aug 17 12:00:41.021: INFO: Resource quota "e2e-rq-status-qqsbm" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-qqsbm" /status @ 08/17/23 12:00:41.021
  STEP: Confirm /status for "e2e-rq-status-qqsbm" resourceQuota via watch @ 08/17/23 12:00:41.025
  Aug 17 12:00:41.026: INFO: observed resourceQuota "e2e-rq-status-qqsbm" in namespace "resourcequota-5804" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 17 12:00:41.026: INFO: Found resourceQuota "e2e-rq-status-qqsbm" in namespace "resourcequota-5804" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Aug 17 12:00:41.026: INFO: ResourceQuota "e2e-rq-status-qqsbm" /status was patched
  STEP: Get "e2e-rq-status-qqsbm" /status @ 08/17/23 12:00:41.026
  Aug 17 12:00:41.029: INFO: Resourcequota "e2e-rq-status-qqsbm" reports status: hard cpu of 1
  Aug 17 12:00:41.029: INFO: Resourcequota "e2e-rq-status-qqsbm" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-qqsbm" /status before checking Spec is unchanged @ 08/17/23 12:00:41.032
  Aug 17 12:00:41.035: INFO: Resourcequota "e2e-rq-status-qqsbm" reports status: hard cpu of 2
  Aug 17 12:00:41.035: INFO: Resourcequota "e2e-rq-status-qqsbm" reports status: hard memory of 2Gi
  Aug 17 12:00:41.036: INFO: Found resourceQuota "e2e-rq-status-qqsbm" in namespace "resourcequota-5804" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Aug 17 12:00:46.043: INFO: ResourceQuota "e2e-rq-status-qqsbm" Spec was unchanged and /status reset
  Aug 17 12:00:46.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5804" for this suite. @ 08/17/23 12:00:46.045
• [5.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 08/17/23 12:00:46.049
  Aug 17 12:00:46.049: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 12:00:46.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:00:46.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:00:46.058
  STEP: Creating secret with name secret-test-e75c2bac-2dba-4734-805e-a7b8fc336c7a @ 08/17/23 12:00:46.059
  STEP: Creating a pod to test consume secrets @ 08/17/23 12:00:46.061
  STEP: Saw pod success @ 08/17/23 12:00:50.073
  Aug 17 12:00:50.076: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-cc23bb40-129a-4e1a-9d4a-e004043c8987 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 12:00:50.088
  Aug 17 12:00:50.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6087" for this suite. @ 08/17/23 12:00:50.1
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 08/17/23 12:00:50.106
  Aug 17 12:00:50.106: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:00:50.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:00:50.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:00:50.121
  STEP: creating Agnhost RC @ 08/17/23 12:00:50.123
  Aug 17 12:00:50.123: INFO: namespace kubectl-999
  Aug 17 12:00:50.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-999 create -f -'
  Aug 17 12:00:50.343: INFO: stderr: ""
  Aug 17 12:00:50.343: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/17/23 12:00:50.343
  Aug 17 12:00:51.346: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 17 12:00:51.346: INFO: Found 1 / 1
  Aug 17 12:00:51.346: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 17 12:00:51.348: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 17 12:00:51.348: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 17 12:00:51.348: INFO: wait on agnhost-primary startup in kubectl-999 
  Aug 17 12:00:51.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-999 logs agnhost-primary-wrsln agnhost-primary'
  Aug 17 12:00:51.426: INFO: stderr: ""
  Aug 17 12:00:51.426: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 08/17/23 12:00:51.426
  Aug 17 12:00:51.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-999 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Aug 17 12:00:51.504: INFO: stderr: ""
  Aug 17 12:00:51.505: INFO: stdout: "service/rm2 exposed\n"
  Aug 17 12:00:51.507: INFO: Service rm2 in namespace kubectl-999 found.
  STEP: exposing service @ 08/17/23 12:00:53.513
  Aug 17 12:00:53.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-999 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Aug 17 12:00:53.593: INFO: stderr: ""
  Aug 17 12:00:53.593: INFO: stdout: "service/rm3 exposed\n"
  Aug 17 12:00:53.596: INFO: Service rm3 in namespace kubectl-999 found.
  Aug 17 12:00:55.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-999" for this suite. @ 08/17/23 12:00:55.603
• [5.500 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 08/17/23 12:00:55.606
  Aug 17 12:00:55.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename security-context-test @ 08/17/23 12:00:55.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:00:55.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:00:55.621
  Aug 17 12:00:59.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6966" for this suite. @ 08/17/23 12:00:59.642
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 08/17/23 12:00:59.647
  Aug 17 12:00:59.647: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename init-container @ 08/17/23 12:00:59.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:00:59.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:00:59.661
  STEP: creating the pod @ 08/17/23 12:00:59.664
  Aug 17 12:00:59.664: INFO: PodSpec: initContainers in spec.initContainers
  Aug 17 12:01:46.318: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-1cd21062-1a91-457f-91a5-bfd7d8a8319c", GenerateName:"", Namespace:"init-container-9361", SelfLink:"", UID:"d1b8f6cb-2adf-4509-9987-53fe38ff5492", ResourceVersion:"8757", Generation:0, CreationTimestamp:time.Date(2023, time.August, 17, 12, 0, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"664089549"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 17, 12, 0, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00469e2d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 17, 12, 1, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00469e318), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-z4dwq", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00519a380), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-z4dwq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-z4dwq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-z4dwq", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0033386f8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"talos-default-worker-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000636460), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003338770)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003338790)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003338798), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00333879c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0012ee2d0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 17, 12, 0, 59, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 17, 12, 0, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 17, 12, 0, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 17, 12, 0, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.20.0.5", HostIPs:[]v1.HostIP(nil), PodIP:"10.244.1.100", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.100"}}, StartTime:time.Date(2023, time.August, 17, 12, 0, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0006365b0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000636620)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://cdd89418111bd0541b6e4c53969c77dbf8a882aa4e25cf2f8b611047975e04b8", Started:(*bool)(0xc00333883a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00519a4c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc00333884f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00519a480), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00333881f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Aug 17 12:01:46.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9361" for this suite. @ 08/17/23 12:01:46.322
• [46.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 08/17/23 12:01:46.326
  Aug 17 12:01:46.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename gc @ 08/17/23 12:01:46.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:01:46.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:01:46.338
  STEP: create the deployment @ 08/17/23 12:01:46.34
  W0817 12:01:46.342672      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/17/23 12:01:46.342
  STEP: delete the deployment @ 08/17/23 12:01:46.848
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 08/17/23 12:01:46.85
  STEP: Gathering metrics @ 08/17/23 12:01:47.362
  Aug 17 12:01:47.406: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 17 12:01:47.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5327" for this suite. @ 08/17/23 12:01:47.409
• [1.087 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 08/17/23 12:01:47.413
  Aug 17 12:01:47.413: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 12:01:47.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:01:47.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:01:47.426
  Aug 17 12:01:47.428: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/17/23 12:01:48.69
  Aug 17 12:01:48.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5230 --namespace=crd-publish-openapi-5230 create -f -'
  Aug 17 12:01:50.948: INFO: stderr: ""
  Aug 17 12:01:50.948: INFO: stdout: "e2e-test-crd-publish-openapi-6919-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 17 12:01:50.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5230 --namespace=crd-publish-openapi-5230 delete e2e-test-crd-publish-openapi-6919-crds test-cr'
  Aug 17 12:01:51.022: INFO: stderr: ""
  Aug 17 12:01:51.023: INFO: stdout: "e2e-test-crd-publish-openapi-6919-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Aug 17 12:01:51.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5230 --namespace=crd-publish-openapi-5230 apply -f -'
  Aug 17 12:01:51.342: INFO: stderr: ""
  Aug 17 12:01:51.342: INFO: stdout: "e2e-test-crd-publish-openapi-6919-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 17 12:01:51.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5230 --namespace=crd-publish-openapi-5230 delete e2e-test-crd-publish-openapi-6919-crds test-cr'
  Aug 17 12:01:51.417: INFO: stderr: ""
  Aug 17 12:01:51.417: INFO: stdout: "e2e-test-crd-publish-openapi-6919-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/17/23 12:01:51.417
  Aug 17 12:01:51.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5230 explain e2e-test-crd-publish-openapi-6919-crds'
  Aug 17 12:01:51.500: INFO: stderr: ""
  Aug 17 12:01:51.500: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-6919-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Aug 17 12:01:52.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5230" for this suite. @ 08/17/23 12:01:52.725
• [5.316 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 08/17/23 12:01:52.729
  Aug 17 12:01:52.729: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 12:01:52.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:01:52.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:01:52.739
  STEP: Creating pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395 @ 08/17/23 12:01:52.74
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 12:01:54.75
  Aug 17 12:01:54.752: INFO: Initial restart count of pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e is 0
  Aug 17 12:01:54.754: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:01:56.758: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:01:58.763: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:00.767: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:02.771: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:04.774: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:06.778: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:08.782: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:10.787: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:12.791: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:14.796: INFO: Get pod liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e in namespace container-probe-7395
  Aug 17 12:02:14.796: INFO: Restart count of pod container-probe-7395/liveness-1f7ba808-b50d-4091-a3d1-b182c49e728e is now 1 (20.043288024s elapsed)
  Aug 17 12:02:14.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 12:02:14.8
  STEP: Destroying namespace "container-probe-7395" for this suite. @ 08/17/23 12:02:14.81
• [22.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 08/17/23 12:02:14.816
  Aug 17 12:02:14.816: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replication-controller @ 08/17/23 12:02:14.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:14.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:14.833
  STEP: creating a ReplicationController @ 08/17/23 12:02:14.839
  STEP: waiting for RC to be added @ 08/17/23 12:02:14.844
  STEP: waiting for available Replicas @ 08/17/23 12:02:14.844
  STEP: patching ReplicationController @ 08/17/23 12:02:16.374
  STEP: waiting for RC to be modified @ 08/17/23 12:02:16.382
  STEP: patching ReplicationController status @ 08/17/23 12:02:16.382
  STEP: waiting for RC to be modified @ 08/17/23 12:02:16.387
  STEP: waiting for available Replicas @ 08/17/23 12:02:16.387
  STEP: fetching ReplicationController status @ 08/17/23 12:02:16.392
  STEP: patching ReplicationController scale @ 08/17/23 12:02:16.395
  STEP: waiting for RC to be modified @ 08/17/23 12:02:16.401
  STEP: waiting for ReplicationController's scale to be the max amount @ 08/17/23 12:02:16.401
  STEP: fetching ReplicationController; ensuring that it's patched @ 08/17/23 12:02:17.085
  STEP: updating ReplicationController status @ 08/17/23 12:02:17.087
  STEP: waiting for RC to be modified @ 08/17/23 12:02:17.091
  STEP: listing all ReplicationControllers @ 08/17/23 12:02:17.091
  STEP: checking that ReplicationController has expected values @ 08/17/23 12:02:17.093
  STEP: deleting ReplicationControllers by collection @ 08/17/23 12:02:17.093
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 08/17/23 12:02:17.099
  Aug 17 12:02:17.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0817 12:02:17.140158      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6802" for this suite. @ 08/17/23 12:02:17.144
• [2.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 08/17/23 12:02:17.15
  Aug 17 12:02:17.150: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 12:02:17.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:17.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:17.165
  STEP: Creating secret with name secret-test-3aec7c2d-3389-484c-9739-98b17d30c3d7 @ 08/17/23 12:02:17.167
  STEP: Creating a pod to test consume secrets @ 08/17/23 12:02:17.171
  E0817 12:02:18.140349      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:19.140743      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:20.141544      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:21.141626      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:02:21.186
  Aug 17 12:02:21.188: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-1b606689-e6a1-45cb-b465-b0f40c1bae36 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 12:02:21.201
  Aug 17 12:02:21.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3175" for this suite. @ 08/17/23 12:02:21.216
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 08/17/23 12:02:21.223
  Aug 17 12:02:21.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:02:21.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:21.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:21.238
  STEP: Creating a ResourceQuota @ 08/17/23 12:02:21.241
  STEP: Getting a ResourceQuota @ 08/17/23 12:02:21.245
  STEP: Updating a ResourceQuota @ 08/17/23 12:02:21.248
  STEP: Verifying a ResourceQuota was modified @ 08/17/23 12:02:21.252
  STEP: Deleting a ResourceQuota @ 08/17/23 12:02:21.255
  STEP: Verifying the deleted ResourceQuota @ 08/17/23 12:02:21.26
  Aug 17 12:02:21.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5369" for this suite. @ 08/17/23 12:02:21.267
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 08/17/23 12:02:21.274
  Aug 17 12:02:21.274: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename gc @ 08/17/23 12:02:21.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:21.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:21.289
  Aug 17 12:02:21.315: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ea46eedd-eefa-4de5-ae8d-b9f8591f494c", Controller:(*bool)(0xc0050dddf6), BlockOwnerDeletion:(*bool)(0xc0050dddf7)}}
  Aug 17 12:02:21.320: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"cba3ffca-096b-4892-a4c8-4ac3680b6e67", Controller:(*bool)(0xc0019d1596), BlockOwnerDeletion:(*bool)(0xc0019d1597)}}
  Aug 17 12:02:21.324: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"52e9d075-0b7a-4914-8ba1-8c282ddcb17a", Controller:(*bool)(0xc00564de5a), BlockOwnerDeletion:(*bool)(0xc00564de5b)}}
  E0817 12:02:22.142670      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:23.143019      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:24.144034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:25.144157      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:26.144235      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:02:26.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5324" for this suite. @ 08/17/23 12:02:26.335
• [5.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 08/17/23 12:02:26.34
  Aug 17 12:02:26.340: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 12:02:26.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:26.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:26.353
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/17/23 12:02:26.355
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/17/23 12:02:26.355
  STEP: creating a pod to probe DNS @ 08/17/23 12:02:26.355
  STEP: submitting the pod to kubernetes @ 08/17/23 12:02:26.355
  E0817 12:02:27.144645      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:28.145190      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/17/23 12:02:28.368
  STEP: looking for the results for each expected name from probers @ 08/17/23 12:02:28.371
  Aug 17 12:02:28.386: INFO: DNS probes using dns-9113/dns-test-912873df-7258-436e-bef9-e3ede6aec235 succeeded

  Aug 17 12:02:28.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 12:02:28.39
  STEP: Destroying namespace "dns-9113" for this suite. @ 08/17/23 12:02:28.401
• [2.067 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 08/17/23 12:02:28.407
  Aug 17 12:02:28.407: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename security-context-test @ 08/17/23 12:02:28.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:28.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:28.424
  E0817 12:02:29.145412      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:30.145584      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:31.146231      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:32.146362      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:02:32.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2890" for this suite. @ 08/17/23 12:02:32.448
• [4.045 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 08/17/23 12:02:32.452
  Aug 17 12:02:32.453: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:02:32.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:32.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:32.467
  STEP: Creating a ResourceQuota with terminating scope @ 08/17/23 12:02:32.47
  STEP: Ensuring ResourceQuota status is calculated @ 08/17/23 12:02:32.474
  E0817 12:02:33.147220      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:34.147443      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 08/17/23 12:02:34.478
  STEP: Ensuring ResourceQuota status is calculated @ 08/17/23 12:02:34.482
  E0817 12:02:35.147830      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:36.148034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 08/17/23 12:02:36.486
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 08/17/23 12:02:36.498
  E0817 12:02:37.149109      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:38.149681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 08/17/23 12:02:38.502
  E0817 12:02:39.150151      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:40.150381      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/17/23 12:02:40.506
  STEP: Ensuring resource quota status released the pod usage @ 08/17/23 12:02:40.517
  E0817 12:02:41.150852      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:42.151502      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 08/17/23 12:02:42.521
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 08/17/23 12:02:42.53
  E0817 12:02:43.152095      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:44.152316      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 08/17/23 12:02:44.534
  E0817 12:02:45.153013      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:46.153136      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/17/23 12:02:46.537
  STEP: Ensuring resource quota status released the pod usage @ 08/17/23 12:02:46.545
  E0817 12:02:47.153584      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:48.154662      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:02:48.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6094" for this suite. @ 08/17/23 12:02:48.551
• [16.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 08/17/23 12:02:48.554
  Aug 17 12:02:48.554: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:02:48.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:48.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:48.564
  STEP: validating cluster-info @ 08/17/23 12:02:48.566
  Aug 17 12:02:48.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8776 cluster-info'
  Aug 17 12:02:48.612: INFO: stderr: ""
  Aug 17 12:02:48.612: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Aug 17 12:02:48.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8776" for this suite. @ 08/17/23 12:02:48.618
• [0.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 08/17/23 12:02:48.624
  Aug 17 12:02:48.624: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:02:48.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:48.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:48.638
  STEP: creating an Endpoint @ 08/17/23 12:02:48.643
  STEP: waiting for available Endpoint @ 08/17/23 12:02:48.647
  STEP: listing all Endpoints @ 08/17/23 12:02:48.648
  STEP: updating the Endpoint @ 08/17/23 12:02:48.651
  STEP: fetching the Endpoint @ 08/17/23 12:02:48.656
  STEP: patching the Endpoint @ 08/17/23 12:02:48.658
  STEP: fetching the Endpoint @ 08/17/23 12:02:48.687
  STEP: deleting the Endpoint by Collection @ 08/17/23 12:02:48.689
  STEP: waiting for Endpoint deletion @ 08/17/23 12:02:48.693
  STEP: fetching the Endpoint @ 08/17/23 12:02:48.694
  Aug 17 12:02:48.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6687" for this suite. @ 08/17/23 12:02:48.698
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 08/17/23 12:02:48.701
  Aug 17 12:02:48.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-pred @ 08/17/23 12:02:48.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:02:48.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:02:48.711
  Aug 17 12:02:48.713: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 17 12:02:48.717: INFO: Waiting for terminating namespaces to be deleted...
  Aug 17 12:02:48.719: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Aug 17 12:02:48.722: INFO: kube-flannel-xzfkd from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:02:48.722: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:02:48.722: INFO: kube-proxy-hnc5q from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:02:48.722: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:02:48.722: INFO: sonobuoy from sonobuoy started at 2023-08-17 11:35:15 +0000 UTC (1 container statuses recorded)
  Aug 17 12:02:48.722: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 17 12:02:48.722: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Aug 17 12:02:48.725: INFO: kube-flannel-rfh4z from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:02:48.725: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:02:48.725: INFO: kube-proxy-g8g7c from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:02:48.725: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:02:48.725: INFO: sonobuoy-e2e-job-5ab025959c564c77 from sonobuoy started at 2023-08-17 11:35:17 +0000 UTC (2 container statuses recorded)
  Aug 17 12:02:48.725: INFO: 	Container e2e ready: true, restart count 0
  Aug 17 12:02:48.725: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/17/23 12:02:48.725
  E0817 12:02:49.154693      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:50.154981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/17/23 12:02:50.739
  STEP: Trying to apply a random label on the found node. @ 08/17/23 12:02:50.75
  STEP: verifying the node has the label kubernetes.io/e2e-adfab41f-07da-47d8-9da0-da55d3c24ffd 95 @ 08/17/23 12:02:50.755
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 08/17/23 12:02:50.757
  E0817 12:02:51.155760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:52.155975      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.20.0.5 on the node which pod4 resides and expect not scheduled @ 08/17/23 12:02:52.766
  E0817 12:02:53.156689      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:54.156874      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:55.157513      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:56.157755      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:57.158380      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:58.158968      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:02:59.159604      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:00.159785      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:01.160640      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:02.160861      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:03.160892      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:04.161961      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:05.162443      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:06.162637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:07.163163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:08.163238      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:09.164011      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:10.164190      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:11.164266      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:12.164476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:13.165074      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:14.165141      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:15.165322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:16.165522      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:17.166444      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:18.166602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:19.166759      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:20.166998      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:21.167723      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:22.167936      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:23.168939      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:24.169119      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:25.169724      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:26.169834      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:27.170394      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:28.170759      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:29.170800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:30.170866      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:31.171407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:32.172325      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:33.173347      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:34.173469      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:35.173537      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:36.173653      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:37.173754      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:38.174867      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:39.175643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:40.175844      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:41.176742      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:42.176873      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:43.177683      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:44.177894      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:45.178345      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:46.178543      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:47.178959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:48.179882      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:49.180341      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:50.180934      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:51.180955      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:52.181123      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:53.181917      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:54.182083      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:55.182749      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:56.182985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:57.183397      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:58.183776      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:03:59.184318      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:00.184430      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:01.185457      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:02.186538      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:03.186704      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:04.187520      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:05.187891      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:06.188108      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:07.188737      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:08.188924      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:09.189448      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:10.190298      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:11.191011      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:12.191260      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:13.192256      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:14.192470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:15.193230      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:16.193480      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:17.194110      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:18.194194      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:19.194637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:20.194873      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:21.195651      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:22.195798      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:23.195866      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:24.196112      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:25.196697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:26.196856      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:27.197578      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:28.198052      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:29.198273      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:30.198373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:31.199176      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:32.199391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:33.200355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:34.200580      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:35.201150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:36.201355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:37.201775      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:38.202061      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:39.202100      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:40.202392      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:41.203305      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:42.203540      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:43.204566      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:44.204744      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:45.204938      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:46.205198      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:47.205539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:48.205852      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:49.206803      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:50.207071      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:51.207138      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:52.207305      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:53.207863      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:54.208035      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:55.208601      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:56.208805      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:57.209265      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:58.209583      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:04:59.210090      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:00.210349      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:01.211163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:02.211325      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:03.212191      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:04.212377      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:05.212514      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:06.212659      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:07.213297      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:08.213676      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:09.214176      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:10.214325      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:11.214388      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:12.214508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:13.215381      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:14.216134      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:15.216803      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:16.217019      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:17.217440      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:18.217880      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:19.217992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:20.218546      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:21.219477      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:22.219630      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:23.220285      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:24.220484      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:25.220763      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:26.220975      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:27.221365      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:28.221728      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:29.221860      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:30.222057      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:31.222552      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:32.222764      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:33.222831      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:34.223483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:35.224192      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:36.224401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:37.224979      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:38.225168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:39.225783      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:40.226201      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:41.227032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:42.227211      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:43.227479      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:44.228515      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:45.228985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:46.229269      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:47.229913      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:48.230705      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:49.231483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:50.231573      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:51.232263      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:52.232475      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:53.233280      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:54.233943      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:55.234968      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:56.235281      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:57.235701      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:58.236008      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:05:59.236639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:00.236797      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:01.237396      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:02.237567      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:03.237563      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:04.237726      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:05.238032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:06.238394      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:07.238861      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:08.239867      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:09.240107      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:10.240301      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:11.241206      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:12.241888      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:13.242511      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:14.243082      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:15.243588      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:16.243790      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:17.244378      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:18.244764      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:19.245609      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:20.245844      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:21.246631      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:22.246812      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:23.247769      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:24.247925      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:25.248325      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:26.248476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:27.249453      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:28.249812      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:29.250156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:30.250381      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:31.251152      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:32.251382      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:33.251447      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:34.252144      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:35.252761      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:36.252893      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:37.253355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:38.253478      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:39.254338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:40.254767      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:41.255039      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:42.255171      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:43.256078      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:44.256251      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:45.256882      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:46.257113      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:47.257811      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:48.258015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:49.258075      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:50.258222      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:51.258975      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:52.259149      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:53.259447      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:54.259634      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:55.260422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:56.260689      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:57.261208      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:58.261545      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:06:59.261748      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:00.261895      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:01.262806      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:02.262992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:03.263339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:04.263536      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:05.264034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:06.264249      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:07.265051      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:08.265194      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:09.265584      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:10.265707      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:11.266334      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:12.266547      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:13.267363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:14.267514      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:15.267836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:16.267952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:17.268679      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:18.268898      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:19.269681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:20.269866      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:21.270096      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:22.270771      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:23.270892      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:24.270991      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:25.271168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:26.271702      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:27.271796      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:28.272470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:29.272681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:30.272782      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:31.272964      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:32.273558      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:33.274589      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:34.275132      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:35.275382      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:36.276052      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:37.276155      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:38.276970      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:39.277170      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:40.277839      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:41.278034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:42.278140      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:43.278576      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:44.279576      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:45.279759      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:46.280100      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:47.280187      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:48.280875      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:49.281808      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:50.282227      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:51.282675      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:52.282985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-adfab41f-07da-47d8-9da0-da55d3c24ffd off the node talos-default-worker-1 @ 08/17/23 12:07:52.773
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-adfab41f-07da-47d8-9da0-da55d3c24ffd @ 08/17/23 12:07:52.782
  Aug 17 12:07:52.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5102" for this suite. @ 08/17/23 12:07:52.789
• [304.092 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 08/17/23 12:07:52.794
  Aug 17 12:07:52.794: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pod-network-test @ 08/17/23 12:07:52.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:07:52.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:07:52.81
  STEP: Performing setup for networking test in namespace pod-network-test-5896 @ 08/17/23 12:07:52.812
  STEP: creating a selector @ 08/17/23 12:07:52.812
  STEP: Creating the service pods in kubernetes @ 08/17/23 12:07:52.812
  Aug 17 12:07:52.812: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0817 12:07:53.283688      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:54.284088      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:55.284711      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:56.284939      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:57.285755      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:58.285792      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:07:59.286769      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:00.287017      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:01.287754      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:02.287929      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:03.288178      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:04.288323      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/17/23 12:08:04.862
  E0817 12:08:05.288575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:06.288739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:08:06.884: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 17 12:08:06.884: INFO: Going to poll 10.244.1.109 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Aug 17 12:08:06.887: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.109 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5896 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:08:06.887: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:08:06.887: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:08:06.887: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5896/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.109+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0817 12:08:07.289135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:08:07.987: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 17 12:08:07.987: INFO: Going to poll 10.244.2.40 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Aug 17 12:08:07.990: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.40 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5896 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:08:07.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:08:07.991: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:08:07.991: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5896/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.40+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0817 12:08:08.289300      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:08:09.079: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 17 12:08:09.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5896" for this suite. @ 08/17/23 12:08:09.084
• [16.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 08/17/23 12:08:09.09
  Aug 17 12:08:09.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 12:08:09.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:08:09.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:08:09.105
  STEP: Creating service test in namespace statefulset-584 @ 08/17/23 12:08:09.108
  STEP: Creating a new StatefulSet @ 08/17/23 12:08:09.111
  Aug 17 12:08:09.120: INFO: Found 0 stateful pods, waiting for 3
  E0817 12:08:09.289916      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:10.290212      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:11.290416      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:12.291527      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:13.291600      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:14.291688      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:15.291864      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:16.291990      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:17.292180      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:18.292482      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:08:19.124: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:08:19.124: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:08:19.124: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/17/23 12:08:19.133
  Aug 17 12:08:19.151: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/17/23 12:08:19.151
  E0817 12:08:19.293196      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:20.293398      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:21.293624      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:22.293696      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:23.293835      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:24.294355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:25.294539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:26.294757      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:27.294835      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:28.295106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 08/17/23 12:08:29.165
  STEP: Performing a canary update @ 08/17/23 12:08:29.165
  Aug 17 12:08:29.182: INFO: Updating stateful set ss2
  Aug 17 12:08:29.187: INFO: Waiting for Pod statefulset-584/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0817 12:08:29.295910      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:30.296079      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:31.296234      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:32.297197      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:33.297606      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:34.297756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:35.298763      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:36.299012      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:37.299152      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:38.299702      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 08/17/23 12:08:39.195
  Aug 17 12:08:39.217: INFO: Found 1 stateful pods, waiting for 3
  E0817 12:08:39.300753      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:40.300959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:41.301161      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:42.301420      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:43.302048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:44.302284      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:45.302522      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:46.302648      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:47.302762      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:48.303096      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:08:49.221: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:08:49.221: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:08:49.221: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 08/17/23 12:08:49.227
  Aug 17 12:08:49.245: INFO: Updating stateful set ss2
  Aug 17 12:08:49.251: INFO: Waiting for Pod statefulset-584/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0817 12:08:49.303242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:50.303359      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:51.303561      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:52.303671      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:53.304259      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:54.304378      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:55.304585      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:56.304800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:57.304908      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:08:58.305208      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:08:59.272: INFO: Updating stateful set ss2
  Aug 17 12:08:59.277: INFO: Waiting for StatefulSet statefulset-584/ss2 to complete update
  Aug 17 12:08:59.277: INFO: Waiting for Pod statefulset-584/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0817 12:08:59.305996      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:00.306366      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:01.306465      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:02.306677      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:03.306805      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:04.307482      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:05.307693      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:06.308268      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:07.308407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:08.308517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:09.285: INFO: Deleting all statefulset in ns statefulset-584
  Aug 17 12:09:09.288: INFO: Scaling statefulset ss2 to 0
  E0817 12:09:09.308984      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:10.309021      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:11.309195      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:12.309426      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:13.309942      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:14.310184      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:15.310388      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:16.310534      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:17.310643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:18.310831      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:19.302: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 12:09:19.305: INFO: Deleting statefulset ss2
  E0817 12:09:19.311442      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:19.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-584" for this suite. @ 08/17/23 12:09:19.318
• [70.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 08/17/23 12:09:19.326
  Aug 17 12:09:19.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:09:19.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:19.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:19.338
  STEP: Creating configMap with name configmap-test-volume-map-d1640a4c-07f5-4b44-84c6-126f27b51249 @ 08/17/23 12:09:19.34
  STEP: Creating a pod to test consume configMaps @ 08/17/23 12:09:19.343
  E0817 12:09:20.311533      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:21.311623      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:09:21.354
  Aug 17 12:09:21.356: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-7c6a18d4-8676-4ada-b382-7535f475ad59 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:09:21.367
  Aug 17 12:09:21.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2730" for this suite. @ 08/17/23 12:09:21.383
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 08/17/23 12:09:21.393
  Aug 17 12:09:21.393: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename job @ 08/17/23 12:09:21.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:21.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:21.409
  STEP: Creating a job @ 08/17/23 12:09:21.411
  STEP: Ensuring active pods == parallelism @ 08/17/23 12:09:21.415
  E0817 12:09:22.311717      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:23.312338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 08/17/23 12:09:23.42
  Aug 17 12:09:23.933: INFO: Successfully updated pod "adopt-release-mf8nw"
  STEP: Checking that the Job readopts the Pod @ 08/17/23 12:09:23.933
  E0817 12:09:24.313314      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:25.314010      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 08/17/23 12:09:25.938
  E0817 12:09:26.314942      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:26.447: INFO: Successfully updated pod "adopt-release-mf8nw"
  STEP: Checking that the Job releases the Pod @ 08/17/23 12:09:26.447
  E0817 12:09:27.315988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:28.316941      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:28.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6698" for this suite. @ 08/17/23 12:09:28.458
• [7.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 08/17/23 12:09:28.464
  Aug 17 12:09:28.464: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename namespaces @ 08/17/23 12:09:28.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:28.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:28.479
  STEP: Creating namespace "e2e-ns-hz2m4" @ 08/17/23 12:09:28.482
  Aug 17 12:09:28.493: INFO: Namespace "e2e-ns-hz2m4-1947" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-hz2m4-1947" @ 08/17/23 12:09:28.493
  Aug 17 12:09:28.500: INFO: Namespace "e2e-ns-hz2m4-1947" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-hz2m4-1947" @ 08/17/23 12:09:28.5
  Aug 17 12:09:28.506: INFO: Namespace "e2e-ns-hz2m4-1947" has []v1.FinalizerName{"kubernetes"}
  Aug 17 12:09:28.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7521" for this suite. @ 08/17/23 12:09:28.509
  STEP: Destroying namespace "e2e-ns-hz2m4-1947" for this suite. @ 08/17/23 12:09:28.514
• [0.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 08/17/23 12:09:28.519
  Aug 17 12:09:28.519: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename limitrange @ 08/17/23 12:09:28.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:28.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:28.535
  STEP: Creating a LimitRange @ 08/17/23 12:09:28.537
  STEP: Setting up watch @ 08/17/23 12:09:28.537
  STEP: Submitting a LimitRange @ 08/17/23 12:09:28.641
  STEP: Verifying LimitRange creation was observed @ 08/17/23 12:09:28.646
  STEP: Fetching the LimitRange to ensure it has proper values @ 08/17/23 12:09:28.646
  Aug 17 12:09:28.649: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 17 12:09:28.649: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 08/17/23 12:09:28.649
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 08/17/23 12:09:28.653
  Aug 17 12:09:28.656: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 17 12:09:28.656: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 08/17/23 12:09:28.656
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 08/17/23 12:09:28.66
  Aug 17 12:09:28.663: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Aug 17 12:09:28.663: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 08/17/23 12:09:28.663
  STEP: Failing to create a Pod with more than max resources @ 08/17/23 12:09:28.665
  STEP: Updating a LimitRange @ 08/17/23 12:09:28.667
  STEP: Verifying LimitRange updating is effective @ 08/17/23 12:09:28.671
  E0817 12:09:29.317319      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:30.317414      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 08/17/23 12:09:30.675
  STEP: Failing to create a Pod with more than max resources @ 08/17/23 12:09:30.679
  STEP: Deleting a LimitRange @ 08/17/23 12:09:30.681
  STEP: Verifying the LimitRange was deleted @ 08/17/23 12:09:30.687
  E0817 12:09:31.318469      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:32.318554      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:33.319002      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:34.319224      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:35.319357      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:35.690: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 08/17/23 12:09:35.69
  Aug 17 12:09:35.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9139" for this suite. @ 08/17/23 12:09:35.698
• [7.183 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 08/17/23 12:09:35.702
  Aug 17 12:09:35.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 12:09:35.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:35.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:35.714
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/17/23 12:09:35.715
  E0817 12:09:36.320216      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:37.321347      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:38.321881      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:39.322112      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:09:39.73
  Aug 17 12:09:39.733: INFO: Trying to get logs from node talos-default-worker-1 pod pod-1ef878b8-6e89-405d-9148-6183f2245100 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:09:39.739
  Aug 17 12:09:39.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2732" for this suite. @ 08/17/23 12:09:39.754
• [4.057 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 08/17/23 12:09:39.76
  Aug 17 12:09:39.760: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:09:39.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:39.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:39.773
  STEP: Setting up server cert @ 08/17/23 12:09:39.785
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:09:39.943
  STEP: Deploying the webhook pod @ 08/17/23 12:09:39.948
  STEP: Wait for the deployment to be ready @ 08/17/23 12:09:39.953
  Aug 17 12:09:39.957: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:09:40.322871      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:41.323915      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:09:41.967
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:09:41.977
  E0817 12:09:42.324902      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:42.978: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 17 12:09:42.984: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:09:43.325209      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2780-crds.webhook.example.com via the AdmissionRegistration API @ 08/17/23 12:09:43.491
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/17/23 12:09:43.5
  E0817 12:09:44.325495      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:45.325694      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:45.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9391" for this suite. @ 08/17/23 12:09:46.042
  STEP: Destroying namespace "webhook-markers-2347" for this suite. @ 08/17/23 12:09:46.047
• [6.293 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 08/17/23 12:09:46.053
  Aug 17 12:09:46.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename daemonsets @ 08/17/23 12:09:46.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:46.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:46.068
  Aug 17 12:09:46.088: INFO: Create a RollingUpdate DaemonSet
  Aug 17 12:09:46.092: INFO: Check that daemon pods launch on every node of the cluster
  Aug 17 12:09:46.095: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:46.096: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:46.096: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:46.099: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:09:46.099: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:09:46.326125      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:47.102: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:47.103: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:47.103: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:47.105: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 12:09:47.105: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E0817 12:09:47.326780      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:48.103: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:48.103: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:48.103: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:48.107: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 12:09:48.107: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Aug 17 12:09:48.107: INFO: Update the DaemonSet to trigger a rollout
  Aug 17 12:09:48.114: INFO: Updating DaemonSet daemon-set
  E0817 12:09:48.327524      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:49.127: INFO: Roll back the DaemonSet before rollout is complete
  Aug 17 12:09:49.134: INFO: Updating DaemonSet daemon-set
  Aug 17 12:09:49.134: INFO: Make sure DaemonSet rollback is complete
  Aug 17 12:09:49.138: INFO: Wrong image for pod: daemon-set-zh545. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Aug 17 12:09:49.138: INFO: Pod daemon-set-zh545 is not available
  Aug 17 12:09:49.142: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:49.142: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:49.142: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0817 12:09:49.327902      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:50.147: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:50.147: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:50.147: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0817 12:09:50.328400      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:51.148: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:51.148: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:51.148: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0817 12:09:51.328540      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:52.145: INFO: Pod daemon-set-k58r9 is not available
  Aug 17 12:09:52.148: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:52.148: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:09:52.148: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 08/17/23 12:09:52.151
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9802, will wait for the garbage collector to delete the pods @ 08/17/23 12:09:52.151
  Aug 17 12:09:52.213: INFO: Deleting DaemonSet.extensions daemon-set took: 10.014097ms
  Aug 17 12:09:52.314: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.532539ms
  E0817 12:09:52.329490      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:53.330532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:54.217: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:09:54.217: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 17 12:09:54.220: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10916"},"items":null}

  Aug 17 12:09:54.223: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10916"},"items":null}

  Aug 17 12:09:54.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9802" for this suite. @ 08/17/23 12:09:54.236
• [8.189 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 08/17/23 12:09:54.242
  Aug 17 12:09:54.242: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:09:54.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:09:54.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:09:54.258
  STEP: Creating the pod @ 08/17/23 12:09:54.261
  E0817 12:09:54.331523      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:55.332523      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:56.333498      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:09:56.788: INFO: Successfully updated pod "labelsupdate9da771ea-1d7b-45a1-8652-404196631370"
  E0817 12:09:57.334335      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:58.334692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:09:59.334836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:00.334860      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:00.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7022" for this suite. @ 08/17/23 12:10:00.809
• [6.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 08/17/23 12:10:00.814
  Aug 17 12:10:00.814: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename ingressclass @ 08/17/23 12:10:00.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:00.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:00.83
  STEP: getting /apis @ 08/17/23 12:10:00.833
  STEP: getting /apis/networking.k8s.io @ 08/17/23 12:10:00.837
  STEP: getting /apis/networking.k8s.iov1 @ 08/17/23 12:10:00.838
  STEP: creating @ 08/17/23 12:10:00.839
  STEP: getting @ 08/17/23 12:10:00.848
  STEP: listing @ 08/17/23 12:10:00.851
  STEP: watching @ 08/17/23 12:10:00.854
  Aug 17 12:10:00.854: INFO: starting watch
  STEP: patching @ 08/17/23 12:10:00.855
  STEP: updating @ 08/17/23 12:10:00.858
  Aug 17 12:10:00.861: INFO: waiting for watch events with expected annotations
  Aug 17 12:10:00.862: INFO: saw patched and updated annotations
  STEP: deleting @ 08/17/23 12:10:00.862
  STEP: deleting a collection @ 08/17/23 12:10:00.872
  Aug 17 12:10:00.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5958" for this suite. @ 08/17/23 12:10:00.886
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 08/17/23 12:10:00.892
  Aug 17 12:10:00.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 12:10:00.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:00.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:00.906
  STEP: Creating service test in namespace statefulset-8128 @ 08/17/23 12:10:00.909
  Aug 17 12:10:00.919: INFO: Found 0 stateful pods, waiting for 1
  E0817 12:10:01.335750      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:02.336020      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:03.336165      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:04.337206      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:05.337339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:06.337557      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:07.337734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:08.338026      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:09.338192      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:10.338407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:10.924: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 08/17/23 12:10:10.929
  W0817 12:10:10.941191      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Aug 17 12:10:10.947: INFO: Found 1 stateful pods, waiting for 2
  E0817 12:10:11.339415      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:12.340405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:13.341184      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:14.341400      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:15.341489      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:16.341683      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:17.341916      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:18.342281      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:19.342511      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:20.342692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:20.951: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:10:20.951: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 08/17/23 12:10:20.957
  STEP: Delete all of the StatefulSets @ 08/17/23 12:10:20.96
  STEP: Verify that StatefulSets have been deleted @ 08/17/23 12:10:20.967
  Aug 17 12:10:20.970: INFO: Deleting all statefulset in ns statefulset-8128
  Aug 17 12:10:20.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8128" for this suite. @ 08/17/23 12:10:20.983
• [20.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 08/17/23 12:10:20.992
  Aug 17 12:10:20.992: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:10:20.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:21.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:21.008
  STEP: Creating configMap with name configmap-test-volume-map-8b6efe22-2f69-4fd2-9a5d-7d49fe4c72c9 @ 08/17/23 12:10:21.011
  STEP: Creating a pod to test consume configMaps @ 08/17/23 12:10:21.014
  E0817 12:10:21.342724      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:22.343433      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:23.344172      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:24.344381      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:10:25.03
  Aug 17 12:10:25.032: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-104f8eca-cb41-4516-83e2-7a5023393f6a container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:10:25.036
  Aug 17 12:10:25.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7066" for this suite. @ 08/17/23 12:10:25.045
• [4.056 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 08/17/23 12:10:25.048
  Aug 17 12:10:25.048: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 12:10:25.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:25.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:25.057
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 08/17/23 12:10:25.059
  E0817 12:10:25.344821      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:26.345343      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:27.346106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:28.346539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:10:29.071
  Aug 17 12:10:29.073: INFO: Trying to get logs from node talos-default-worker-1 pod pod-47ecab55-eb2b-43db-b29c-bd3d2a9a2f4b container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:10:29.078
  Aug 17 12:10:29.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7176" for this suite. @ 08/17/23 12:10:29.089
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 08/17/23 12:10:29.094
  Aug 17 12:10:29.094: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:10:29.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:29.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:29.105
  STEP: Setting up server cert @ 08/17/23 12:10:29.117
  E0817 12:10:29.347400      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:10:29.359
  STEP: Deploying the webhook pod @ 08/17/23 12:10:29.365
  STEP: Wait for the deployment to be ready @ 08/17/23 12:10:29.371
  Aug 17 12:10:29.376: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0817 12:10:30.347801      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:31.348642      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:10:31.386
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:10:31.397
  E0817 12:10:32.349141      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:32.397: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 17 12:10:32.403: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1995-crds.webhook.example.com via the AdmissionRegistration API @ 08/17/23 12:10:32.916
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/17/23 12:10:32.929
  E0817 12:10:33.349288      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:34.349548      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:34.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0817 12:10:35.349789      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-6348" for this suite. @ 08/17/23 12:10:35.505
  STEP: Destroying namespace "webhook-markers-1556" for this suite. @ 08/17/23 12:10:35.511
• [6.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 08/17/23 12:10:35.52
  Aug 17 12:10:35.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replication-controller @ 08/17/23 12:10:35.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:35.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:35.536
  STEP: Given a ReplicationController is created @ 08/17/23 12:10:35.539
  STEP: When the matched label of one of its pods change @ 08/17/23 12:10:35.544
  Aug 17 12:10:35.547: INFO: Pod name pod-release: Found 0 pods out of 1
  E0817 12:10:36.349966      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:37.350237      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:38.350636      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:39.350756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:40.350860      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:40.550: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/17/23 12:10:40.559
  E0817 12:10:41.351113      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:41.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7974" for this suite. @ 08/17/23 12:10:41.571
• [6.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 08/17/23 12:10:41.576
  Aug 17 12:10:41.576: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename field-validation @ 08/17/23 12:10:41.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:41.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:41.589
  Aug 17 12:10:41.591: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:10:42.351300      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:43.352277      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0817 12:10:44.117596      24 warnings.go:70] unknown field "alpha"
  W0817 12:10:44.117622      24 warnings.go:70] unknown field "beta"
  W0817 12:10:44.117632      24 warnings.go:70] unknown field "delta"
  W0817 12:10:44.117641      24 warnings.go:70] unknown field "epsilon"
  W0817 12:10:44.117651      24 warnings.go:70] unknown field "gamma"
  E0817 12:10:44.353110      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:44.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9443" for this suite. @ 08/17/23 12:10:44.654
• [3.087 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 08/17/23 12:10:44.663
  Aug 17 12:10:44.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename server-version @ 08/17/23 12:10:44.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:44.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:44.679
  STEP: Request ServerVersion @ 08/17/23 12:10:44.682
  STEP: Confirm major version @ 08/17/23 12:10:44.683
  Aug 17 12:10:44.683: INFO: Major version: 1
  STEP: Confirm minor version @ 08/17/23 12:10:44.683
  Aug 17 12:10:44.683: INFO: cleanMinorVersion: 28
  Aug 17 12:10:44.683: INFO: Minor version: 28
  Aug 17 12:10:44.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7713" for this suite. @ 08/17/23 12:10:44.687
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 08/17/23 12:10:44.694
  Aug 17 12:10:44.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:10:44.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:44.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:44.71
  STEP: creating the pod @ 08/17/23 12:10:44.713
  STEP: submitting the pod to kubernetes @ 08/17/23 12:10:44.713
  STEP: verifying QOS class is set on the pod @ 08/17/23 12:10:44.72
  Aug 17 12:10:44.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7576" for this suite. @ 08/17/23 12:10:44.727
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 08/17/23 12:10:44.735
  Aug 17 12:10:44.735: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:10:44.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:44.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:44.75
  STEP: Setting up server cert @ 08/17/23 12:10:44.769
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:10:44.984
  STEP: Deploying the webhook pod @ 08/17/23 12:10:44.987
  STEP: Wait for the deployment to be ready @ 08/17/23 12:10:44.994
  Aug 17 12:10:44.998: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:10:45.354093      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:46.354416      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:10:47.006
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:10:47.014
  E0817 12:10:47.355450      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:48.014: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 08/17/23 12:10:48.02
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 08/17/23 12:10:48.036
  STEP: Creating a configMap that should not be mutated @ 08/17/23 12:10:48.041
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 08/17/23 12:10:48.049
  STEP: Creating a configMap that should be mutated @ 08/17/23 12:10:48.054
  Aug 17 12:10:48.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6642" for this suite. @ 08/17/23 12:10:48.107
  STEP: Destroying namespace "webhook-markers-7516" for this suite. @ 08/17/23 12:10:48.112
• [3.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 08/17/23 12:10:48.116
  Aug 17 12:10:48.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename field-validation @ 08/17/23 12:10:48.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:48.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:48.126
  STEP: apply creating a deployment @ 08/17/23 12:10:48.127
  Aug 17 12:10:48.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1808" for this suite. @ 08/17/23 12:10:48.136
• [0.022 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 08/17/23 12:10:48.139
  Aug 17 12:10:48.139: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:10:48.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:48.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:48.148
  STEP: Creating configMap configmap-2203/configmap-test-7d503c7d-0ded-46ff-8114-30118b10f6c4 @ 08/17/23 12:10:48.149
  STEP: Creating a pod to test consume configMaps @ 08/17/23 12:10:48.151
  E0817 12:10:48.356060      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:49.357129      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:50.357635      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:51.358665      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:10:52.165
  Aug 17 12:10:52.168: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-d2a68d11-4a04-419e-bfcd-bcda83dda430 container env-test: <nil>
  STEP: delete the pod @ 08/17/23 12:10:52.175
  Aug 17 12:10:52.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2203" for this suite. @ 08/17/23 12:10:52.191
• [4.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 08/17/23 12:10:52.197
  Aug 17 12:10:52.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:10:52.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:10:52.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:10:52.213
  STEP: creating service in namespace services-363 @ 08/17/23 12:10:52.216
  STEP: creating service affinity-clusterip-transition in namespace services-363 @ 08/17/23 12:10:52.216
  STEP: creating replication controller affinity-clusterip-transition in namespace services-363 @ 08/17/23 12:10:52.227
  I0817 12:10:52.232823      24 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-363, replica count: 3
  E0817 12:10:52.359601      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:53.360385      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:54.361392      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:10:55.283474      24 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 12:10:55.289: INFO: Creating new exec pod
  E0817 12:10:55.362340      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:56.362552      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:10:57.363618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:58.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-363 exec execpod-affinityf2hkz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0817 12:10:58.364514      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:58.523: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Aug 17 12:10:58.523: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:10:58.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-363 exec execpod-affinityf2hkz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.228.27 80'
  Aug 17 12:10:58.705: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.228.27 80\nConnection to 10.97.228.27 80 port [tcp/http] succeeded!\n"
  Aug 17 12:10:58.705: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:10:58.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-363 exec execpod-affinityf2hkz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.228.27:80/ ; done'
  Aug 17 12:10:58.978: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n"
  Aug 17 12:10:58.978: INFO: stdout: "\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-g458f\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-wsg8x\naffinity-clusterip-transition-g458f\naffinity-clusterip-transition-g458f\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-g458f\naffinity-clusterip-transition-g458f\naffinity-clusterip-transition-g458f\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-wsg8x\naffinity-clusterip-transition-g458f"
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-g458f
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-wsg8x
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-g458f
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-g458f
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-g458f
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-g458f
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-g458f
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-wsg8x
  Aug 17 12:10:58.978: INFO: Received response from host: affinity-clusterip-transition-g458f
  Aug 17 12:10:58.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-363 exec execpod-affinityf2hkz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.228.27:80/ ; done'
  Aug 17 12:10:59.267: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.228.27:80/\n"
  Aug 17 12:10:59.267: INFO: stdout: "\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs\naffinity-clusterip-transition-t2nbs"
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.267: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.268: INFO: Received response from host: affinity-clusterip-transition-t2nbs
  Aug 17 12:10:59.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:10:59.272: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-363, will wait for the garbage collector to delete the pods @ 08/17/23 12:10:59.281
  Aug 17 12:10:59.340: INFO: Deleting ReplicationController affinity-clusterip-transition took: 4.669459ms
  E0817 12:10:59.365467      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:10:59.440: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.47061ms
  E0817 12:11:00.366024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:01.366728      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-363" for this suite. @ 08/17/23 12:11:02.358
• [10.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 08/17/23 12:11:02.365
  Aug 17 12:11:02.365: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename subpath @ 08/17/23 12:11:02.366
  E0817 12:11:02.366718      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:11:02.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:11:02.38
  STEP: Setting up data @ 08/17/23 12:11:02.383
  STEP: Creating pod pod-subpath-test-secret-282g @ 08/17/23 12:11:02.39
  STEP: Creating a pod to test atomic-volume-subpath @ 08/17/23 12:11:02.39
  E0817 12:11:03.367620      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:04.367680      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:05.368479      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:06.368516      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:07.368707      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:08.369631      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:09.370184      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:10.370348      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:11.370473      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:12.370691      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:13.371555      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:14.371742      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:15.371963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:16.372200      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:17.372823      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:18.372995      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:19.372999      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:20.373181      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:21.373291      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:22.373510      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:23.374609      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:24.375602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:11:24.438
  Aug 17 12:11:24.440: INFO: Trying to get logs from node talos-default-worker-1 pod pod-subpath-test-secret-282g container test-container-subpath-secret-282g: <nil>
  STEP: delete the pod @ 08/17/23 12:11:24.444
  STEP: Deleting pod pod-subpath-test-secret-282g @ 08/17/23 12:11:24.453
  Aug 17 12:11:24.453: INFO: Deleting pod "pod-subpath-test-secret-282g" in namespace "subpath-9010"
  Aug 17 12:11:24.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9010" for this suite. @ 08/17/23 12:11:24.458
• [22.097 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 08/17/23 12:11:24.462
  Aug 17 12:11:24.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 12:11:24.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:11:24.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:11:24.475
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/17/23 12:11:24.477
  E0817 12:11:25.375855      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:26.376038      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:11:26.488
  Aug 17 12:11:26.490: INFO: Trying to get logs from node talos-default-worker-1 pod pod-963ed39a-8586-4fd0-8d98-4e3dea46fc8f container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:11:26.495
  Aug 17 12:11:26.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3798" for this suite. @ 08/17/23 12:11:26.506
• [2.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 08/17/23 12:11:26.511
  Aug 17 12:11:26.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 12:11:26.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:11:26.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:11:26.521
  Aug 17 12:11:26.523: INFO: Creating simple deployment test-new-deployment
  Aug 17 12:11:26.529: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0817 12:11:27.377035      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:28.377350      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 08/17/23 12:11:28.541
  STEP: updating a scale subresource @ 08/17/23 12:11:28.543
  STEP: verifying the deployment Spec.Replicas was modified @ 08/17/23 12:11:28.548
  STEP: Patch a scale subresource @ 08/17/23 12:11:28.55
  Aug 17 12:11:28.562: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8857",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33f796b6-0347-4118-8ee5-51fd5f129c96",
      ResourceVersion: (string) (len=5) "11810",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827871086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 17 12:11:28.569: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8857",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4158ac11-c8c3-4d48-964c-addc08853528",
      ResourceVersion: (string) (len=5) "11815",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827871086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "33f796b6-0347-4118-8ee5-51fd5f129c96",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 33 66 37 39 36  62 36 2d 30 33 34 37 2d  |\"33f796b6-0347-|
              00000120  34 31 31 38 2d 38 65 65  35 2d 35 31 66 64 35 66  |4118-8ee5-51fd5f|
              00000130  31 32 39 63 39 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |129c96\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 12:11:28.580: INFO: Pod "test-new-deployment-557759b7c7-8vnww" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-8vnww",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8857",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6a2fe88-e2da-4b3e-ae53-dc3cbfe2d502",
      ResourceVersion: (string) (len=5) "11814",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827871088,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4158ac11-c8c3-4d48-964c-addc08853528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  35 38 61 63 31 31 2d 63  |d\":\"4158ac11-c|
              00000090  38 63 33 2d 34 64 34 38  2d 39 36 34 63 2d 61 64  |8c3-4d48-964c-ad|
              000000a0  64 63 30 38 38 35 33 35  32 38 5c 22 7d 22 3a 7b  |dc08853528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxzzj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxzzj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:11:28.585: INFO: Pod "test-new-deployment-557759b7c7-w22ff" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-w22ff",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8857",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eca85e6a-28e0-4bfb-8e8f-04d9ffbe7dea",
      ResourceVersion: (string) (len=5) "11801",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827871086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4158ac11-c8c3-4d48-964c-addc08853528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  35 38 61 63 31 31 2d 63  |d\":\"4158ac11-c|
              00000090  38 63 33 2d 34 64 34 38  2d 39 36 34 63 2d 61 64  |8c3-4d48-964c-ad|
              000000a0  64 63 30 38 38 35 33 35  32 38 5c 22 7d 22 3a 7b  |dc08853528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 31 33 35 5c 22 7d 22  |10.244.1.135\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqzpr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqzpr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827871086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.1.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827871086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827871087,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2431b015e793c0089f16691699232433d7e0213167c7e066e1ab626f11b91a2c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:11:28.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8857" for this suite. @ 08/17/23 12:11:28.597
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 08/17/23 12:11:28.605
  Aug 17 12:11:28.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 12:11:28.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:11:28.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:11:28.615
  STEP: Creating service test in namespace statefulset-8185 @ 08/17/23 12:11:28.617
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 08/17/23 12:11:28.619
  STEP: Creating stateful set ss in namespace statefulset-8185 @ 08/17/23 12:11:28.62
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8185 @ 08/17/23 12:11:28.623
  Aug 17 12:11:28.624: INFO: Found 0 stateful pods, waiting for 1
  E0817 12:11:29.378289      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:30.379055      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:31.379284      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:32.379481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:33.379900      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:34.380089      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:35.380274      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:36.380373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:37.380486      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:38.380806      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:38.629: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 08/17/23 12:11:38.629
  Aug 17 12:11:38.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 17 12:11:38.819: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:11:38.819: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:11:38.819: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:11:38.823: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0817 12:11:39.380902      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:40.381008      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:41.381242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:42.381495      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:43.381737      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:44.382014      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:45.382231      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:46.382528      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:47.382708      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:11:48.382868      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:48.827: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:11:48.827: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 17 12:11:48.840: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999789s
  E0817 12:11:49.383123      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:49.843: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996719844s
  E0817 12:11:50.383283      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:50.846: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.993536741s
  E0817 12:11:51.383978      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:51.850: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.990952179s
  E0817 12:11:52.384779      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:52.854: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.986715004s
  E0817 12:11:53.384836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:53.857: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.982998555s
  E0817 12:11:54.385015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:54.861: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.978756283s
  E0817 12:11:55.385842      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:55.864: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.976067481s
  E0817 12:11:56.385932      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:56.869: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.97182331s
  E0817 12:11:57.386848      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:11:57.872: INFO: Verifying statefulset ss doesn't scale past 1 for another 967.893538ms
  E0817 12:11:58.386990      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8185 @ 08/17/23 12:11:58.872
  Aug 17 12:11:58.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:11:59.051: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 17 12:11:59.051: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:11:59.051: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 17 12:11:59.054: INFO: Found 1 stateful pods, waiting for 3
  E0817 12:11:59.388073      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:00.388784      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:01.389680      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:02.389864      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:03.390287      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:04.390408      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:05.390518      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:06.390675      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:07.390914      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:08.391197      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:09.058: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:12:09.058: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:12:09.058: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 08/17/23 12:12:09.058
  STEP: Scale down will halt with unhealthy stateful pod @ 08/17/23 12:12:09.058
  Aug 17 12:12:09.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 17 12:12:09.257: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:12:09.257: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:12:09.257: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:12:09.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0817 12:12:09.391286      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:09.446: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:12:09.446: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:12:09.446: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:12:09.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 17 12:12:09.627: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:12:09.627: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:12:09.627: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:12:09.627: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 17 12:12:09.630: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0817 12:12:10.391592      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:11.391850      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:12.392084      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:13.392476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:14.392704      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:15.392927      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:16.393027      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:17.393185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:18.393543      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:19.394053      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:19.638: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:12:19.638: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:12:19.638: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:12:19.648: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999975s
  E0817 12:12:20.394105      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:20.652: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996809195s
  E0817 12:12:21.394994      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:21.656: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993022903s
  E0817 12:12:22.395718      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:22.661: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988002206s
  E0817 12:12:23.396091      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:23.665: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983745333s
  E0817 12:12:24.396835      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:24.670: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.979038912s
  E0817 12:12:25.397331      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:25.673: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.974511252s
  E0817 12:12:26.398195      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:26.677: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.971660516s
  E0817 12:12:27.398546      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:27.681: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.967304365s
  E0817 12:12:28.398614      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:12:28.685: INFO: Verifying statefulset ss doesn't scale past 3 for another 963.255689ms
  E0817 12:12:29.399315      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8185 @ 08/17/23 12:12:29.685
  Aug 17 12:12:29.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:12:29.890: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 17 12:12:29.891: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:12:29.891: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 17 12:12:29.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:12:30.079: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 17 12:12:30.079: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:12:30.079: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 17 12:12:30.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-8185 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:12:30.229: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 17 12:12:30.229: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:12:30.229: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 17 12:12:30.229: INFO: Scaling statefulset ss to 0
  E0817 12:12:30.399923      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:31.400923      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:32.401271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:33.401437      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:34.402295      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:35.402536      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:36.402715      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:37.402892      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:38.403660      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:39.403815      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 08/17/23 12:12:40.24
  Aug 17 12:12:40.240: INFO: Deleting all statefulset in ns statefulset-8185
  Aug 17 12:12:40.243: INFO: Scaling statefulset ss to 0
  Aug 17 12:12:40.253: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 12:12:40.255: INFO: Deleting statefulset ss
  Aug 17 12:12:40.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8185" for this suite. @ 08/17/23 12:12:40.27
• [71.669 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 08/17/23 12:12:40.274
  Aug 17 12:12:40.274: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:12:40.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:12:40.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:12:40.286
  STEP: Creating a pod to test downward api env vars @ 08/17/23 12:12:40.288
  E0817 12:12:40.403885      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:41.404102      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:42.404639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:43.405200      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:12:44.304
  Aug 17 12:12:44.307: INFO: Trying to get logs from node talos-default-worker-1 pod downward-api-082e8d13-05df-452f-b333-350feaf08c6e container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 12:12:44.314
  Aug 17 12:12:44.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9993" for this suite. @ 08/17/23 12:12:44.327
• [4.058 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 08/17/23 12:12:44.332
  Aug 17 12:12:44.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:12:44.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:12:44.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:12:44.348
  Aug 17 12:12:44.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8156" for this suite. @ 08/17/23 12:12:44.356
• [0.029 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 08/17/23 12:12:44.362
  Aug 17 12:12:44.362: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename job @ 08/17/23 12:12:44.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:12:44.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:12:44.377
  STEP: Creating Indexed job @ 08/17/23 12:12:44.379
  STEP: Ensuring job reaches completions @ 08/17/23 12:12:44.383
  E0817 12:12:44.405605      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:45.406684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:46.407664      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:47.407899      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:48.408833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:49.408933      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:50.409845      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:51.410047      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 08/17/23 12:12:52.387
  Aug 17 12:12:52.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2923" for this suite. @ 08/17/23 12:12:52.394
• [8.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 08/17/23 12:12:52.4
  Aug 17 12:12:52.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:12:52.401
  E0817 12:12:52.410163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:12:52.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:12:52.415
  STEP: Create a pod @ 08/17/23 12:12:52.417
  E0817 12:12:53.410704      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:54.410930      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/17/23 12:12:54.43
  Aug 17 12:12:54.435: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Aug 17 12:12:54.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8067" for this suite. @ 08/17/23 12:12:54.44
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 08/17/23 12:12:54.446
  Aug 17 12:12:54.446: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename cronjob @ 08/17/23 12:12:54.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:12:54.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:12:54.463
  STEP: Creating a ForbidConcurrent cronjob @ 08/17/23 12:12:54.465
  STEP: Ensuring a job is scheduled @ 08/17/23 12:12:54.469
  E0817 12:12:55.411617      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:56.412365      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:57.412859      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:58.413173      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:12:59.413676      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:00.413901      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 08/17/23 12:13:00.472
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/17/23 12:13:00.474
  STEP: Ensuring no more jobs are scheduled @ 08/17/23 12:13:00.477
  E0817 12:13:01.414032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:02.414113      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:03.414635      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:04.414822      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:05.415337      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:06.415526      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:07.415959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:08.416024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:09.416369      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:10.416427      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:11.416476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:12.416597      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:13.416952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:14.417107      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:15.417523      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:16.418505      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:17.418963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:18.419254      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:19.420246      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:20.420460      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:21.420787      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:22.420880      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:23.421049      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:24.421271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:25.421953      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:26.422213      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:27.422699      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:28.423012      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:29.423578      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:30.423808      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:31.424182      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:32.424395      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:33.425168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:34.425403      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:35.425692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:36.425910      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:37.426698      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:38.427037      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:39.427461      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:40.427702      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:41.428180      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:42.428390      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:43.428736      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:44.428825      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:45.429189      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:46.429428      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:47.429978      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:48.430360      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:49.430647      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:50.430812      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:51.431519      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:52.431803      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:53.432560      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:54.432787      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:55.433086      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:56.433342      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:57.433562      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:58.433623      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:13:59.434143      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:00.434355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:01.434524      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:02.434771      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:03.434958      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:04.435553      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:05.435928      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:06.436144      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:07.436845      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:08.437175      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:09.437284      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:10.437497      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:11.438190      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:12.438392      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:13.438562      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:14.438692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:15.439030      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:16.439261      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:17.439772      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:18.439840      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:19.440868      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:20.441103      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:21.441556      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:22.441733      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:23.442844      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:24.442920      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:25.443333      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:26.443525      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:27.443945      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:28.444338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:29.445153      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:30.445306      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:31.445470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:32.445701      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:33.446321      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:34.446529      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:35.446918      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:36.447264      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:37.447631      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:38.448044      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:39.448476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:40.448836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:41.449360      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:42.449534      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:43.449750      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:44.450013      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:45.450372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:46.450690      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:47.451220      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:48.451367      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:49.451810      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:50.451954      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:51.452097      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:52.452291      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:53.453355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:54.453734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:55.454018      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:56.454157      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:57.454807      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:58.455192      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:14:59.455659      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:00.455853      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:01.456230      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:02.456411      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:03.456899      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:04.457094      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:05.457484      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:06.457686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:07.458734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:08.459075      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:09.459819      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:10.460015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:11.460863      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:12.461100      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:13.461734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:14.461884      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:15.462849      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:16.463067      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:17.463574      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:18.463743      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:19.464132      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:20.464336      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:21.465154      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:22.465370      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:23.465948      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:24.466147      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:25.466883      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:26.467104      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:27.467894      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:28.468163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:29.468545      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:30.469118      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:31.469534      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:32.469697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:33.470637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:34.471479      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:35.471564      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:36.471629      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:37.472216      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:38.472649      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:39.473504      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:40.473708      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:41.473957      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:42.474099      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:43.475029      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:44.475772      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:45.475849      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:46.476027      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:47.476608      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:48.477094      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:49.477697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:50.477721      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:51.478376      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:52.478668      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:53.479714      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:54.480126      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:55.481090      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:56.481566      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:57.481810      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:58.482064      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:15:59.482239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:00.482942      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:01.483015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:02.483697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:03.484257      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:04.484470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:05.484681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:06.485593      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:07.485792      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:08.486596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:09.486846      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:10.487358      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:11.488204      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:12.488581      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:13.488993      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:14.489405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:15.489598      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:16.490681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:17.490910      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:18.491419      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:19.491578      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:20.492125      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:21.492313      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:22.492760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:23.493253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:24.493661      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:25.493830      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:26.494297      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:27.494427      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:28.494910      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:29.495593      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:30.496037      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:31.496225      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:32.496845      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:33.497264      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:34.498049      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:35.498215      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:36.499083      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:37.499359      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:38.500135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:39.500365      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:40.500379      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:41.500592      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:42.500896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:43.501993      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:44.502405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:45.502777      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:46.503331      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:47.503542      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:48.504106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:49.504277      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:50.504695      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:51.504921      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:52.505536      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:53.505684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:54.506061      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:55.506231      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:56.506538      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:57.507451      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:58.507480      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:16:59.507579      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:00.508179      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:01.508341      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:02.508701      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:03.509000      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:04.509491      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:05.509643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:06.510041      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:07.510208      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:08.511071      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:09.511234      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:10.512091      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:11.512295      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:12.513250      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:13.513650      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:14.513868      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:15.514999      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:16.515709      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:17.515901      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:18.516815      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:19.517015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:20.517683      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:21.517865      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:22.518663      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:23.518919      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:24.519365      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:25.519619      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:26.520450      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:27.520704      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:28.521427      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:29.521616      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:30.522596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:31.522780      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:32.523808      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:33.524355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:34.525198      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:35.525427      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:36.525940      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:37.526898      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:38.527752      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:39.527895      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:40.527964      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:41.528101      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:42.528710      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:43.529194      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:44.530106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:45.530320      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:46.530851      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:47.531450      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:48.531979      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:49.532195      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:50.532624      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:51.533024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:52.533598      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:53.534221      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:54.534756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:55.534935      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:56.535922      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:57.536158      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:58.536684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:17:59.536907      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 08/17/23 12:18:00.482
  Aug 17 12:18:00.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6149" for this suite. @ 08/17/23 12:18:00.488
• [306.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 08/17/23 12:18:00.491
  Aug 17 12:18:00.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 12:18:00.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:00.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:00.502
  STEP: Creating secret with name secret-test-map-3f3ae267-8a28-43b1-8806-2cb1493ff1da @ 08/17/23 12:18:00.504
  STEP: Creating a pod to test consume secrets @ 08/17/23 12:18:00.506
  E0817 12:18:00.537503      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:01.538012      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:02.538924      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:03.539391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:18:04.521
  Aug 17 12:18:04.523: INFO: Trying to get logs from node talos-default-worker-2 pod pod-secrets-580d9e3a-5ac7-4c97-9f16-e94ad9f6c8bb container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 12:18:04.531
  E0817 12:18:04.539497      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:04.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8788" for this suite. @ 08/17/23 12:18:04.545
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 08/17/23 12:18:04.55
  Aug 17 12:18:04.550: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:18:04.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:04.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:04.566
  STEP: Creating the pod @ 08/17/23 12:18:04.568
  E0817 12:18:05.540239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:06.540867      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:07.105: INFO: Successfully updated pod "annotationupdatec9bfe084-8aa5-4b07-a835-d1089451bc50"
  E0817 12:18:07.541003      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:08.541327      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:09.541473      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:10.541618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:11.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1475" for this suite. @ 08/17/23 12:18:11.128
• [6.582 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 08/17/23 12:18:11.133
  Aug 17 12:18:11.133: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename namespaces @ 08/17/23 12:18:11.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:11.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:11.148
  STEP: Creating a test namespace @ 08/17/23 12:18:11.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:11.161
  STEP: Creating a service in the namespace @ 08/17/23 12:18:11.163
  STEP: Deleting the namespace @ 08/17/23 12:18:11.173
  STEP: Waiting for the namespace to be removed. @ 08/17/23 12:18:11.179
  E0817 12:18:11.542556      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:12.543463      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:13.544135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:14.544894      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:15.545731      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:16.545883      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 08/17/23 12:18:17.182
  STEP: Verifying there is no service in the namespace @ 08/17/23 12:18:17.195
  Aug 17 12:18:17.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4196" for this suite. @ 08/17/23 12:18:17.201
  STEP: Destroying namespace "nsdeletetest-6751" for this suite. @ 08/17/23 12:18:17.206
  Aug 17 12:18:17.208: INFO: Namespace nsdeletetest-6751 was already deleted
  STEP: Destroying namespace "nsdeletetest-8113" for this suite. @ 08/17/23 12:18:17.208
• [6.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 08/17/23 12:18:17.214
  Aug 17 12:18:17.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svcaccounts @ 08/17/23 12:18:17.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:17.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:17.231
  STEP: Creating ServiceAccount "e2e-sa-qxd9x"  @ 08/17/23 12:18:17.234
  Aug 17 12:18:17.237: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-qxd9x"  @ 08/17/23 12:18:17.237
  Aug 17 12:18:17.242: INFO: AutomountServiceAccountToken: true
  Aug 17 12:18:17.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6954" for this suite. @ 08/17/23 12:18:17.245
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 08/17/23 12:18:17.249
  Aug 17 12:18:17.249: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-pred @ 08/17/23 12:18:17.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:17.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:17.261
  Aug 17 12:18:17.263: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 17 12:18:17.269: INFO: Waiting for terminating namespaces to be deleted...
  Aug 17 12:18:17.271: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Aug 17 12:18:17.274: INFO: kube-flannel-xzfkd from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:18:17.274: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:18:17.274: INFO: kube-proxy-hnc5q from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:18:17.274: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:18:17.274: INFO: sonobuoy from sonobuoy started at 2023-08-17 11:35:15 +0000 UTC (1 container statuses recorded)
  Aug 17 12:18:17.274: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 17 12:18:17.274: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Aug 17 12:18:17.278: INFO: kube-flannel-rfh4z from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:18:17.278: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:18:17.278: INFO: kube-proxy-g8g7c from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:18:17.278: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:18:17.278: INFO: sonobuoy-e2e-job-5ab025959c564c77 from sonobuoy started at 2023-08-17 11:35:17 +0000 UTC (2 container statuses recorded)
  Aug 17 12:18:17.278: INFO: 	Container e2e ready: true, restart count 0
  Aug 17 12:18:17.278: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/17/23 12:18:17.278
  E0817 12:18:17.546710      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:18.547063      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/17/23 12:18:19.291
  STEP: Trying to apply a random label on the found node. @ 08/17/23 12:18:19.297
  STEP: verifying the node has the label kubernetes.io/e2e-c5627e54-72bf-4087-8dc0-04ffd7596908 42 @ 08/17/23 12:18:19.301
  STEP: Trying to relaunch the pod, now with labels. @ 08/17/23 12:18:19.304
  E0817 12:18:19.547932      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:20.548219      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-c5627e54-72bf-4087-8dc0-04ffd7596908 off the node talos-default-worker-1 @ 08/17/23 12:18:21.316
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c5627e54-72bf-4087-8dc0-04ffd7596908 @ 08/17/23 12:18:21.328
  Aug 17 12:18:21.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3195" for this suite. @ 08/17/23 12:18:21.332
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 08/17/23 12:18:21.335
  Aug 17 12:18:21.335: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/17/23 12:18:21.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:21.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:21.345
  Aug 17 12:18:21.346: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:18:21.548429      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:22.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4463" for this suite. @ 08/17/23 12:18:22.363
• [1.030 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 08/17/23 12:18:22.366
  Aug 17 12:18:22.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:18:22.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:22.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:22.377
  STEP: creating a Pod with a static label @ 08/17/23 12:18:22.381
  STEP: watching for Pod to be ready @ 08/17/23 12:18:22.384
  Aug 17 12:18:22.385: INFO: observed Pod pod-test in namespace pods-4782 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Aug 17 12:18:22.387: INFO: observed Pod pod-test in namespace pods-4782 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:22 +0000 UTC  }]
  Aug 17 12:18:22.394: INFO: observed Pod pod-test in namespace pods-4782 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:22 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:22 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:22 +0000 UTC  }]
  E0817 12:18:22.548724      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:23.443: INFO: Found Pod pod-test in namespace pods-4782 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:22 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:23 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:23 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:18:22 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 08/17/23 12:18:23.446
  STEP: getting the Pod and ensuring that it's patched @ 08/17/23 12:18:23.452
  STEP: replacing the Pod's status Ready condition to False @ 08/17/23 12:18:23.455
  STEP: check the Pod again to ensure its Ready conditions are False @ 08/17/23 12:18:23.462
  STEP: deleting the Pod via a Collection with a LabelSelector @ 08/17/23 12:18:23.462
  STEP: watching for the Pod to be deleted @ 08/17/23 12:18:23.468
  Aug 17 12:18:23.469: INFO: observed event type MODIFIED
  E0817 12:18:23.549571      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:24.550511      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:25.449: INFO: observed event type MODIFIED
  E0817 12:18:25.550575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:25.568: INFO: observed event type MODIFIED
  Aug 17 12:18:26.448: INFO: observed event type MODIFIED
  Aug 17 12:18:26.452: INFO: observed event type MODIFIED
  Aug 17 12:18:26.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4782" for this suite. @ 08/17/23 12:18:26.458
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 08/17/23 12:18:26.462
  Aug 17 12:18:26.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename disruption @ 08/17/23 12:18:26.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:26.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:26.472
  STEP: creating the pdb @ 08/17/23 12:18:26.473
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:18:26.476
  E0817 12:18:26.551256      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:27.551369      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 08/17/23 12:18:28.48
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:18:28.485
  E0817 12:18:28.551861      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:29.552052      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 08/17/23 12:18:30.49
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:18:30.498
  E0817 12:18:30.552829      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:31.553099      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 08/17/23 12:18:32.509
  Aug 17 12:18:32.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6413" for this suite. @ 08/17/23 12:18:32.516
• [6.058 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 08/17/23 12:18:32.521
  Aug 17 12:18:32.521: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubelet-test @ 08/17/23 12:18:32.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:32.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:32.536
  E0817 12:18:32.553891      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:33.554539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:34.554765      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:35.554963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:36.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0817 12:18:36.555163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubelet-test-8040" for this suite. @ 08/17/23 12:18:36.555
• [4.045 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 08/17/23 12:18:36.566
  Aug 17 12:18:36.566: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:18:36.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:36.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:36.582
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:18:36.585
  E0817 12:18:37.556054      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:38.556556      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:39.557122      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:40.557302      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:18:40.602
  Aug 17 12:18:40.606: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-1e8a4e42-51f8-40be-a974-85f1462282eb container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:18:40.611
  Aug 17 12:18:40.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-895" for this suite. @ 08/17/23 12:18:40.624
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 08/17/23 12:18:40.629
  Aug 17 12:18:40.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:18:40.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:40.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:40.645
  STEP: Discovering how many secrets are in namespace by default @ 08/17/23 12:18:40.647
  E0817 12:18:41.557440      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:42.557784      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:43.558220      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:44.558422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:45.558797      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/17/23 12:18:45.651
  E0817 12:18:46.559260      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:47.560261      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:48.560905      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:49.561237      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:50.561581      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/17/23 12:18:50.654
  STEP: Ensuring resource quota status is calculated @ 08/17/23 12:18:50.658
  E0817 12:18:51.562636      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:52.562952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 08/17/23 12:18:52.662
  STEP: Ensuring resource quota status captures secret creation @ 08/17/23 12:18:52.671
  E0817 12:18:53.563469      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:54.563586      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 08/17/23 12:18:54.675
  STEP: Ensuring resource quota status released usage @ 08/17/23 12:18:54.68
  E0817 12:18:55.564387      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:18:56.564519      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:56.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7577" for this suite. @ 08/17/23 12:18:56.688
• [16.064 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 08/17/23 12:18:56.693
  Aug 17 12:18:56.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 12:18:56.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:18:56.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:18:56.708
  Aug 17 12:18:56.711: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:18:57.565332      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 08/17/23 12:18:58.03
  Aug 17 12:18:58.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 create -f -'
  Aug 17 12:18:58.265: INFO: stderr: ""
  Aug 17 12:18:58.265: INFO: stdout: "e2e-test-crd-publish-openapi-4729-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 17 12:18:58.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 delete e2e-test-crd-publish-openapi-4729-crds test-foo'
  Aug 17 12:18:58.305: INFO: stderr: ""
  Aug 17 12:18:58.305: INFO: stdout: "e2e-test-crd-publish-openapi-4729-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Aug 17 12:18:58.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 apply -f -'
  Aug 17 12:18:58.391: INFO: stderr: ""
  Aug 17 12:18:58.391: INFO: stdout: "e2e-test-crd-publish-openapi-4729-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 17 12:18:58.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 delete e2e-test-crd-publish-openapi-4729-crds test-foo'
  Aug 17 12:18:58.439: INFO: stderr: ""
  Aug 17 12:18:58.439: INFO: stdout: "e2e-test-crd-publish-openapi-4729-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 08/17/23 12:18:58.439
  Aug 17 12:18:58.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 create -f -'
  Aug 17 12:18:58.521: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 08/17/23 12:18:58.521
  Aug 17 12:18:58.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 create -f -'
  E0817 12:18:58.565657      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:58.725: INFO: rc: 1
  Aug 17 12:18:58.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 apply -f -'
  Aug 17 12:18:58.857: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 08/17/23 12:18:58.857
  Aug 17 12:18:58.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 create -f -'
  Aug 17 12:18:58.942: INFO: rc: 1
  Aug 17 12:18:58.942: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 --namespace=crd-publish-openapi-3446 apply -f -'
  Aug 17 12:18:59.026: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 08/17/23 12:18:59.026
  Aug 17 12:18:59.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 explain e2e-test-crd-publish-openapi-4729-crds'
  Aug 17 12:18:59.284: INFO: stderr: ""
  Aug 17 12:18:59.284: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4729-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 08/17/23 12:18:59.285
  Aug 17 12:18:59.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 explain e2e-test-crd-publish-openapi-4729-crds.metadata'
  Aug 17 12:18:59.421: INFO: stderr: ""
  Aug 17 12:18:59.421: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4729-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Aug 17 12:18:59.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 explain e2e-test-crd-publish-openapi-4729-crds.spec'
  Aug 17 12:18:59.516: INFO: stderr: ""
  Aug 17 12:18:59.516: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4729-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Aug 17 12:18:59.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 explain e2e-test-crd-publish-openapi-4729-crds.spec.bars'
  E0817 12:18:59.566296      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:18:59.597: INFO: stderr: ""
  Aug 17 12:18:59.597: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4729-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 08/17/23 12:18:59.598
  Aug 17 12:18:59.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-3446 explain e2e-test-crd-publish-openapi-4729-crds.spec.bars2'
  Aug 17 12:18:59.680: INFO: rc: 1
  E0817 12:19:00.567215      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:19:00.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3446" for this suite. @ 08/17/23 12:19:00.987
• [4.296 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 08/17/23 12:19:00.99
  Aug 17 12:19:00.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:19:00.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:00.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:01
  STEP: creating the pod @ 08/17/23 12:19:01.002
  STEP: submitting the pod to kubernetes @ 08/17/23 12:19:01.002
  E0817 12:19:01.568112      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:02.568330      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/17/23 12:19:03.015
  STEP: updating the pod @ 08/17/23 12:19:03.018
  Aug 17 12:19:03.527: INFO: Successfully updated pod "pod-update-ef84a9aa-d230-474a-a179-2c6f4dbdbac9"
  STEP: verifying the updated pod is in kubernetes @ 08/17/23 12:19:03.531
  Aug 17 12:19:03.534: INFO: Pod update OK
  Aug 17 12:19:03.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7574" for this suite. @ 08/17/23 12:19:03.538
• [2.553 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 08/17/23 12:19:03.544
  Aug 17 12:19:03.544: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:19:03.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:03.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:03.56
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:19:03.563
  E0817 12:19:03.569048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:04.569908      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:05.570233      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:06.571139      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:07.571307      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:19:07.582
  Aug 17 12:19:07.585: INFO: Trying to get logs from node talos-default-worker-2 pod downwardapi-volume-d5844300-33e5-4cb0-8931-f8cb964ff806 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:19:07.59
  Aug 17 12:19:07.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7172" for this suite. @ 08/17/23 12:19:07.606
• [4.067 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 08/17/23 12:19:07.611
  Aug 17 12:19:07.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 12:19:07.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:07.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:07.627
  STEP: Creating service test in namespace statefulset-7347 @ 08/17/23 12:19:07.63
  STEP: Creating statefulset ss in namespace statefulset-7347 @ 08/17/23 12:19:07.634
  Aug 17 12:19:07.642: INFO: Found 0 stateful pods, waiting for 1
  E0817 12:19:08.571679      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:09.571793      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:10.571914      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:11.572048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:12.572173      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:13.572682      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:14.572908      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:15.573001      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:16.573211      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:17.573398      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:19:17.646: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 08/17/23 12:19:17.651
  STEP: updating a scale subresource @ 08/17/23 12:19:17.654
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/17/23 12:19:17.658
  STEP: Patch a scale subresource @ 08/17/23 12:19:17.661
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/17/23 12:19:17.665
  Aug 17 12:19:17.668: INFO: Deleting all statefulset in ns statefulset-7347
  Aug 17 12:19:17.671: INFO: Scaling statefulset ss to 0
  E0817 12:19:18.573571      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:19.573756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:20.573860      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:21.573959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:22.574227      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:23.574739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:24.574759      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:25.574887      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:26.575059      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:27.575155      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:19:27.686: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 12:19:27.689: INFO: Deleting statefulset ss
  Aug 17 12:19:27.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7347" for this suite. @ 08/17/23 12:19:27.703
• [20.098 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 08/17/23 12:19:27.709
  Aug 17 12:19:27.709: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename field-validation @ 08/17/23 12:19:27.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:27.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:27.727
  Aug 17 12:19:27.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:19:28.575612      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:29.575893      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:30.576343      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:19:30.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9148" for this suite. @ 08/17/23 12:19:30.79
• [3.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 08/17/23 12:19:30.796
  Aug 17 12:19:30.796: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sysctl @ 08/17/23 12:19:30.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:30.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:30.812
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 08/17/23 12:19:30.814
  STEP: Watching for error events or started pod @ 08/17/23 12:19:30.82
  E0817 12:19:31.576601      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:32.576897      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 08/17/23 12:19:32.823
  E0817 12:19:33.577152      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:34.577310      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 08/17/23 12:19:34.831
  STEP: Getting logs from the pod @ 08/17/23 12:19:34.831
  STEP: Checking that the sysctl is actually updated @ 08/17/23 12:19:34.836
  Aug 17 12:19:34.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2706" for this suite. @ 08/17/23 12:19:34.84
• [4.049 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 08/17/23 12:19:34.846
  Aug 17 12:19:34.846: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/17/23 12:19:34.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:34.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:34.861
  STEP: fetching the /apis discovery document @ 08/17/23 12:19:34.863
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 08/17/23 12:19:34.864
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 08/17/23 12:19:34.864
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 08/17/23 12:19:34.864
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 08/17/23 12:19:34.865
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 08/17/23 12:19:34.865
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 08/17/23 12:19:34.866
  Aug 17 12:19:34.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6319" for this suite. @ 08/17/23 12:19:34.871
• [0.030 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 08/17/23 12:19:34.876
  Aug 17 12:19:34.876: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:19:34.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:34.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:34.891
  STEP: Setting up server cert @ 08/17/23 12:19:34.908
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:19:35.201
  STEP: Deploying the webhook pod @ 08/17/23 12:19:35.207
  STEP: Wait for the deployment to be ready @ 08/17/23 12:19:35.214
  Aug 17 12:19:35.219: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:19:35.578228      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:36.578549      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:19:37.228
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:19:37.238
  E0817 12:19:37.578690      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:19:38.238: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/17/23 12:19:38.242
  STEP: create a pod that should be denied by the webhook @ 08/17/23 12:19:38.25
  STEP: create a pod that causes the webhook to hang @ 08/17/23 12:19:38.259
  E0817 12:19:38.579737      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:39.579978      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:40.580322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:41.580530      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:42.580774      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:43.581284      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:44.581333      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:45.581428      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:46.581632      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:47.581809      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 08/17/23 12:19:48.265
  STEP: create a configmap that should be admitted by the webhook @ 08/17/23 12:19:48.28
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/17/23 12:19:48.288
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/17/23 12:19:48.295
  STEP: create a namespace that bypass the webhook @ 08/17/23 12:19:48.299
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 08/17/23 12:19:48.311
  Aug 17 12:19:48.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7896" for this suite. @ 08/17/23 12:19:48.36
  STEP: Destroying namespace "webhook-markers-1492" for this suite. @ 08/17/23 12:19:48.365
  STEP: Destroying namespace "exempted-namespace-3271" for this suite. @ 08/17/23 12:19:48.37
• [13.499 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 08/17/23 12:19:48.375
  Aug 17 12:19:48.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-preemption @ 08/17/23 12:19:48.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:19:48.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:19:48.388
  Aug 17 12:19:48.396: INFO: Waiting up to 1m0s for all nodes to be ready
  E0817 12:19:48.582661      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:49.583400      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:50.584209      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:51.584325      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:52.585178      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:53.585705      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:54.585820      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:55.585980      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:56.586955      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:57.587204      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:58.588309      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:19:59.588556      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:00.588842      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:01.589422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:02.590118      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:03.590707      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:04.591595      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:05.591786      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:06.592021      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:07.592378      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:08.593112      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:09.593274      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:10.594059      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:11.594276      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:12.594778      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:13.595261      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:14.595951      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:15.596119      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:16.596710      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:17.596928      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:18.597492      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:19.597626      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:20.598328      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:21.599107      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:22.599800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:23.600391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:24.600779      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:25.600990      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:26.601534      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:27.601684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:28.602760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:29.603462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:30.603908      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:31.604113      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:32.604648      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:33.605013      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:34.605160      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:35.605307      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:36.605832      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:37.606608      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:38.607488      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:39.607753      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:40.608531      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:41.608733      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:42.609666      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:43.610150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:44.610981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:45.611148      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:46.611339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:47.611512      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:20:48.409: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/17/23 12:20:48.411
  Aug 17 12:20:48.411: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/17/23 12:20:48.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:20:48.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:20:48.428
  Aug 17 12:20:48.440: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Aug 17 12:20:48.442: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Aug 17 12:20:48.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:20:48.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3852" for this suite. @ 08/17/23 12:20:48.48
  STEP: Destroying namespace "sched-preemption-6510" for this suite. @ 08/17/23 12:20:48.483
• [60.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 08/17/23 12:20:48.486
  Aug 17 12:20:48.486: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 12:20:48.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:20:48.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:20:48.497
  STEP: Creating pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939 @ 08/17/23 12:20:48.498
  E0817 12:20:48.612481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:49.612662      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 12:20:50.508
  Aug 17 12:20:50.510: INFO: Initial restart count of pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 is 0
  Aug 17 12:20:50.513: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:20:50.613641      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:51.613833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:20:52.517: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:20:52.614375      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:53.614832      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:20:54.520: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:20:54.615042      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:55.615169      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:20:56.524: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:20:56.615684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:57.615847      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:20:58.527: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:20:58.615833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:20:59.615981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:00.530: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:00.616880      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:01.617132      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:02.533: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:02.617445      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:03.617968      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:04.537: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:04.618505      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:05.618821      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:06.541: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:06.619716      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:07.619896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:08.545: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:08.620461      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:09.620663      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:10.549: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:10.621643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:11.621805      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:12.552: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:12.622198      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:13.622690      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:14.556: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:14.623755      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:15.624853      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:16.560: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:16.625574      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:17.625795      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:18.563: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:18.626219      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:19.626410      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:20.567: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:20.626460      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:21.626609      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:22.570: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:22.626661      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:23.627095      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:24.574: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:24.627751      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:25.628880      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:26.578: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:26.629586      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:27.629775      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:28.582: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:28.630271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:29.630410      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:30.586: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:30.630943      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:31.631059      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:32.590: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:32.631774      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:33.632372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:34.593: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:34.632818      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:35.633507      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:36.597: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:36.634370      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:37.634566      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:38.601: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  E0817 12:21:38.634973      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:39.635163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:21:40.605: INFO: Get pod busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 in namespace container-probe-6939
  Aug 17 12:21:40.605: INFO: Restart count of pod container-probe-6939/busybox-e39bcc21-ed77-42ed-a05e-1f87bc1f0743 is now 1 (50.094796611s elapsed)
  Aug 17 12:21:40.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 12:21:40.609
  STEP: Destroying namespace "container-probe-6939" for this suite. @ 08/17/23 12:21:40.617
• [52.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 08/17/23 12:21:40.625
  Aug 17 12:21:40.625: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename cronjob @ 08/17/23 12:21:40.626
  E0817 12:21:40.635993      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:21:40.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:21:40.641
  STEP: Creating a suspended cronjob @ 08/17/23 12:21:40.643
  STEP: Ensuring no jobs are scheduled @ 08/17/23 12:21:40.647
  E0817 12:21:41.636607      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:42.636770      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:43.636947      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:44.637080      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:45.637610      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:46.638637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:47.639022      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:48.639757      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:49.640320      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:50.640594      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:51.641288      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:52.641528      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:53.642554      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:54.642795      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:55.642920      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:56.643107      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:57.643343      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:58.643483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:21:59.643680      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:00.643812      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:01.644850      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:02.644952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:03.645110      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:04.646026      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:05.646175      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:06.646379      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:07.647266      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:08.648245      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:09.648559      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:10.648787      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:11.649104      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:12.650133      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:13.650208      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:14.650575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:15.651384      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:16.651428      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:17.652425      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:18.653291      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:19.653470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:20.654022      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:21.654216      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:22.654613      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:23.655021      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:24.655857      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:25.656057      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:26.656753      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:27.656940      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:28.657897      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:29.658242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:30.658988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:31.659203      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:32.659814      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:33.659978      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:34.660363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:35.660900      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:36.661127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:37.661296      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:38.661574      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:39.661772      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:40.662602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:41.663478      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:42.663998      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:43.664480      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:44.665365      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:45.666411      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:46.666776      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:47.666988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:48.667710      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:49.668517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:50.669276      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:51.669472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:52.670035      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:53.670530      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:54.670747      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:55.670804      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:56.671195      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:57.671380      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:58.672103      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:22:59.672316      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:00.673017      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:01.673215      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:02.674193      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:03.674690      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:04.675582      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:05.675752      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:06.676324      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:07.676544      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:08.677215      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:09.677352      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:10.677885      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:11.678705      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:12.679449      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:13.679967      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:14.680656      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:15.680868      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:16.681242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:17.681407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:18.682462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:19.683449      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:20.684069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:21.684200      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:22.684358      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:23.684727      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:24.685372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:25.685598      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:26.685941      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:27.686075      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:28.687124      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:29.687654      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:30.688242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:31.688423      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:32.689149      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:33.689642      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:34.689857      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:35.690042      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:36.690824      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:37.690964      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:38.690998      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:39.691233      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:40.691773      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:41.691962      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:42.692097      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:43.692472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:44.692589      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:45.692750      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:46.693089      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:47.693263      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:48.693582      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:49.693800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:50.694730      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:51.695834      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:52.696305      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:53.696735      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:54.697073      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:55.697214      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:56.697783      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:57.697943      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:58.698923      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:23:59.699136      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:00.699656      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:01.699953      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:02.700206      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:03.700981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:04.701029      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:05.701238      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:06.702081      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:07.702340      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:08.703007      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:09.703319      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:10.704053      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:11.704253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:12.704512      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:13.705045      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:14.705997      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:15.706114      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:16.706883      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:17.707060      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:18.708057      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:19.708214      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:20.708449      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:21.708574      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:22.709372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:23.709752      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:24.710356      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:25.710528      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:26.711145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:27.711370      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:28.711862      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:29.712047      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:30.712569      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:31.712697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:32.713233      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:33.713392      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:34.714316      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:35.714488      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:36.715261      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:37.715494      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:38.716437      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:39.716612      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:40.717301      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:41.717443      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:42.718153      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:43.718322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:44.719377      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:45.719535      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:46.720513      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:47.720717      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:48.721665      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:49.721889      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:50.722749      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:51.722923      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:52.723436      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:53.723578      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:54.723830      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:55.723954      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:56.724471      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:57.724699      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:58.724815      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:24:59.725010      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:00.725668      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:01.725879      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:02.726483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:03.726619      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:04.727319      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:05.727536      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:06.727918      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:07.728101      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:08.728125      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:09.728360      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:10.729115      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:11.729459      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:12.729918      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:13.730377      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:14.730416      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:15.730673      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:16.730794      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:17.730990      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:18.731296      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:19.731508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:20.732072      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:21.732127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:22.732416      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:23.732930      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:24.733590      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:25.733753      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:26.734206      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:27.734376      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:28.734636      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:29.734792      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:30.735283      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:31.735540      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:32.736550      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:33.736842      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:34.737737      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:35.737937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:36.738185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:37.738402      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:38.738997      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:39.739163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:40.739470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:41.739725      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:42.740057      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:43.740527      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:44.740810      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:45.740985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:46.741295      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:47.741992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:48.742233      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:49.742405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:50.742491      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:51.742659      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:52.743268      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:53.743742      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:54.743836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:55.743985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:56.744341      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:57.744549      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:58.745488      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:25:59.745756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:00.745707      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:01.745816      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:02.746530      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:03.746909      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:04.747462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:05.747638      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:06.748152      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:07.748246      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:08.748941      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:09.749114      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:10.749425      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:11.749628      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:12.749929      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:13.750261      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:14.750326      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:15.750750      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:16.751404      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:17.751596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:18.752255      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:19.752399      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:20.752910      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:21.753101      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:22.754084      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:23.754169      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:24.754623      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:25.754758      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:26.755288      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:27.755466      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:28.756248      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:29.756453      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:30.757309      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:31.757430      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:32.757648      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:33.758048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:34.758629      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:35.759486      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:36.759810      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:37.759968      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:38.760575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:39.760795      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 08/17/23 12:26:40.653
  STEP: Removing cronjob @ 08/17/23 12:26:40.656
  Aug 17 12:26:40.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7586" for this suite. @ 08/17/23 12:26:40.665
• [300.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 08/17/23 12:26:40.672
  Aug 17 12:26:40.672: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 08/17/23 12:26:40.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:26:40.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:26:40.69
  STEP: Setting up the test @ 08/17/23 12:26:40.692
  STEP: Creating hostNetwork=false pod @ 08/17/23 12:26:40.692
  E0817 12:26:40.761787      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:41.762749      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 08/17/23 12:26:42.708
  E0817 12:26:42.763468      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:43.763684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 08/17/23 12:26:44.721
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 08/17/23 12:26:44.721
  Aug 17 12:26:44.721: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:44.721: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:44.721: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:44.721: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0817 12:26:44.764181      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:26:44.814: INFO: Exec stderr: ""
  Aug 17 12:26:44.814: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:44.814: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:44.815: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:44.815: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 17 12:26:44.920: INFO: Exec stderr: ""
  Aug 17 12:26:44.920: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:44.920: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:44.920: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:44.920: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 17 12:26:45.030: INFO: Exec stderr: ""
  Aug 17 12:26:45.030: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:45.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:45.031: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:45.031: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 17 12:26:45.166: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 08/17/23 12:26:45.166
  Aug 17 12:26:45.166: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:45.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:45.167: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:45.167: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 17 12:26:45.289: INFO: Exec stderr: ""
  Aug 17 12:26:45.289: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:45.289: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:45.289: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:45.289: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 17 12:26:45.408: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 08/17/23 12:26:45.408
  Aug 17 12:26:45.408: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:45.408: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:45.409: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:45.409: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 17 12:26:45.525: INFO: Exec stderr: ""
  Aug 17 12:26:45.525: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:45.525: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:45.525: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:45.525: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 17 12:26:45.643: INFO: Exec stderr: ""
  Aug 17 12:26:45.643: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:45.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:45.644: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:45.644: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 17 12:26:45.743: INFO: Exec stderr: ""
  Aug 17 12:26:45.743: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4110 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:26:45.743: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:26:45.743: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:26:45.743: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0817 12:26:45.764586      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:26:45.841: INFO: Exec stderr: ""
  Aug 17 12:26:45.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4110" for this suite. @ 08/17/23 12:26:45.845
• [5.177 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 08/17/23 12:26:45.849
  Aug 17 12:26:45.849: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:26:45.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:26:45.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:26:45.862
  STEP: Creating configMap with name configmap-test-upd-1a0fbb79-b67d-4e48-9ee9-e80414a68a89 @ 08/17/23 12:26:45.867
  STEP: Creating the pod @ 08/17/23 12:26:45.87
  E0817 12:26:46.764952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:47.765375      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 08/17/23 12:26:47.883
  STEP: Waiting for pod with binary data @ 08/17/23 12:26:47.897
  Aug 17 12:26:47.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4203" for this suite. @ 08/17/23 12:26:47.907
• [2.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 08/17/23 12:26:47.913
  Aug 17 12:26:47.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 12:26:47.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:26:47.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:26:47.928
  Aug 17 12:26:47.931: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:26:48.766177      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/17/23 12:26:49.264
  Aug 17 12:26:49.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5525 --namespace=crd-publish-openapi-5525 create -f -'
  Aug 17 12:26:49.526: INFO: stderr: ""
  Aug 17 12:26:49.526: INFO: stdout: "e2e-test-crd-publish-openapi-3648-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 17 12:26:49.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5525 --namespace=crd-publish-openapi-5525 delete e2e-test-crd-publish-openapi-3648-crds test-cr'
  Aug 17 12:26:49.583: INFO: stderr: ""
  Aug 17 12:26:49.583: INFO: stdout: "e2e-test-crd-publish-openapi-3648-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Aug 17 12:26:49.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5525 --namespace=crd-publish-openapi-5525 apply -f -'
  Aug 17 12:26:49.676: INFO: stderr: ""
  Aug 17 12:26:49.676: INFO: stdout: "e2e-test-crd-publish-openapi-3648-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 17 12:26:49.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5525 --namespace=crd-publish-openapi-5525 delete e2e-test-crd-publish-openapi-3648-crds test-cr'
  Aug 17 12:26:49.721: INFO: stderr: ""
  Aug 17 12:26:49.721: INFO: stdout: "e2e-test-crd-publish-openapi-3648-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 08/17/23 12:26:49.721
  Aug 17 12:26:49.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=crd-publish-openapi-5525 explain e2e-test-crd-publish-openapi-3648-crds'
  E0817 12:26:49.766438      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:26:49.956: INFO: stderr: ""
  Aug 17 12:26:49.956: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3648-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0817 12:26:50.767419      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:26:51.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5525" for this suite. @ 08/17/23 12:26:51.216
• [3.308 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 08/17/23 12:26:51.221
  Aug 17 12:26:51.221: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 12:26:51.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:26:51.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:26:51.233
  Aug 17 12:26:51.235: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Aug 17 12:26:51.241: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0817 12:26:51.767529      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:52.768184      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:53.768413      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:54.768618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:55.768722      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:26:56.244: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/17/23 12:26:56.244
  Aug 17 12:26:56.244: INFO: Creating deployment "test-rolling-update-deployment"
  Aug 17 12:26:56.248: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Aug 17 12:26:56.253: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0817 12:26:56.769421      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:57.769493      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:26:58.260: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Aug 17 12:26:58.263: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Aug 17 12:26:58.271: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1500",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7231211-a910-460e-9033-476320bc0da7",
      ResourceVersion: (string) (len=5) "15033",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872016,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 17 12:26:58.278: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1500",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eab2df8c-9fd8-450c-8100-896cacd57c9f",
      ResourceVersion: (string) (len=5) "15021",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872016,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e7231211-a910-460e-9033-476320bc0da7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 37 32 33 31 32  31 31 2d 61 39 31 30 2d  |\"e7231211-a910-|
              00000120  34 36 30 65 2d 39 30 33  33 2d 34 37 36 33 32 30  |460e-9033-476320|
              00000130  62 63 30 64 61 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bc0da7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 12:26:58.282: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Aug 17 12:26:58.282: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1500",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f83577b5-18b8-455b-bb70-989c3967ccec",
      ResourceVersion: (string) (len=5) "15032",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872011,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e7231211-a910-460e-9033-476320bc0da7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872011,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 65 37 32 33 31 32 31  |"uid\":\"e723121|
              000000b0  31 2d 61 39 31 30 2d 34  36 30 65 2d 39 30 33 33  |1-a910-460e-9033|
              000000c0  2d 34 37 36 33 32 30 62  63 30 64 61 37 5c 22 7d  |-476320bc0da7\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 12:26:58.289: INFO: Pod "test-rolling-update-deployment-7f5c55c64-zkhjs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-zkhjs",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-1500",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b8f830b-2dfc-4fa8-b7b6-8e5272bbe679",
      ResourceVersion: (string) (len=5) "15020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872016,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "eab2df8c-9fd8-450c-8100-896cacd57c9f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  62 32 64 66 38 63 2d 39  |d\":\"eab2df8c-9|
              00000090  66 64 38 2d 34 35 30 63  2d 38 31 30 30 2d 38 39  |fd8-450c-8100-89|
              000000a0  36 63 61 63 64 35 37 63  39 66 5c 22 7d 22 3a 7b  |6cacd57c9f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 31 35 37 5c 22 7d 22  |10.244.1.157\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j6hvr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j6hvr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.1.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872016,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827872016,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://8ce2b2bb3a21cbf35636be69f5c2856f8c89889b8b2979c5ef06534fe93fce60",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:26:58.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1500" for this suite. @ 08/17/23 12:26:58.298
• [7.084 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 08/17/23 12:26:58.305
  Aug 17 12:26:58.305: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:26:58.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:26:58.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:26:58.317
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:26:58.319
  E0817 12:26:58.769840      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:26:59.770069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:00.770486      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:01.770769      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:27:02.332
  Aug 17 12:27:02.335: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-e3dc4f81-746d-402f-b1d6-ecd0dd28cda1 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:27:02.341
  Aug 17 12:27:02.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3483" for this suite. @ 08/17/23 12:27:02.355
• [4.055 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 08/17/23 12:27:02.36
  Aug 17 12:27:02.360: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:27:02.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:27:02.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:27:02.376
  STEP: Creating a ResourceQuota with best effort scope @ 08/17/23 12:27:02.379
  STEP: Ensuring ResourceQuota status is calculated @ 08/17/23 12:27:02.383
  E0817 12:27:02.771083      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:03.771142      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 08/17/23 12:27:04.386
  STEP: Ensuring ResourceQuota status is calculated @ 08/17/23 12:27:04.39
  E0817 12:27:04.771746      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:05.771862      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 08/17/23 12:27:06.393
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 08/17/23 12:27:06.403
  E0817 12:27:06.771947      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:07.772384      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 08/17/23 12:27:08.407
  E0817 12:27:08.772975      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:09.773187      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/17/23 12:27:10.41
  STEP: Ensuring resource quota status released the pod usage @ 08/17/23 12:27:10.414
  E0817 12:27:10.774284      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:11.774595      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 08/17/23 12:27:12.418
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 08/17/23 12:27:12.427
  E0817 12:27:12.774914      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:13.775152      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 08/17/23 12:27:14.431
  E0817 12:27:14.775854      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:15.776404      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/17/23 12:27:16.435
  STEP: Ensuring resource quota status released the pod usage @ 08/17/23 12:27:16.444
  E0817 12:27:16.777316      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:17.777575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:27:18.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7919" for this suite. @ 08/17/23 12:27:18.452
• [16.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 08/17/23 12:27:18.458
  Aug 17 12:27:18.458: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:27:18.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:27:18.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:27:18.473
  STEP: creating all guestbook components @ 08/17/23 12:27:18.476
  Aug 17 12:27:18.476: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Aug 17 12:27:18.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 create -f -'
  E0817 12:27:18.778423      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:27:18.864: INFO: stderr: ""
  Aug 17 12:27:18.864: INFO: stdout: "service/agnhost-replica created\n"
  Aug 17 12:27:18.864: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Aug 17 12:27:18.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 create -f -'
  Aug 17 12:27:19.188: INFO: stderr: ""
  Aug 17 12:27:19.188: INFO: stdout: "service/agnhost-primary created\n"
  Aug 17 12:27:19.188: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Aug 17 12:27:19.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 create -f -'
  Aug 17 12:27:19.337: INFO: stderr: ""
  Aug 17 12:27:19.337: INFO: stdout: "service/frontend created\n"
  Aug 17 12:27:19.337: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Aug 17 12:27:19.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 create -f -'
  Aug 17 12:27:19.605: INFO: stderr: ""
  Aug 17 12:27:19.605: INFO: stdout: "deployment.apps/frontend created\n"
  Aug 17 12:27:19.605: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 17 12:27:19.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 create -f -'
  Aug 17 12:27:19.719: INFO: stderr: ""
  Aug 17 12:27:19.719: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Aug 17 12:27:19.719: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 17 12:27:19.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 create -f -'
  E0817 12:27:19.779161      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:27:19.830: INFO: stderr: ""
  Aug 17 12:27:19.830: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 08/17/23 12:27:19.83
  Aug 17 12:27:19.830: INFO: Waiting for all frontend pods to be Running.
  E0817 12:27:20.779453      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:21.779578      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:22.780110      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:23.780278      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:24.780487      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:27:24.881: INFO: Waiting for frontend to serve content.
  Aug 17 12:27:24.890: INFO: Trying to add a new entry to the guestbook.
  Aug 17 12:27:24.901: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 08/17/23 12:27:24.907
  Aug 17 12:27:24.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 delete --grace-period=0 --force -f -'
  Aug 17 12:27:24.995: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:27:24.995: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 08/17/23 12:27:24.995
  Aug 17 12:27:24.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 delete --grace-period=0 --force -f -'
  Aug 17 12:27:25.066: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:27:25.066: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/17/23 12:27:25.066
  Aug 17 12:27:25.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 delete --grace-period=0 --force -f -'
  Aug 17 12:27:25.141: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:27:25.141: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/17/23 12:27:25.141
  Aug 17 12:27:25.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 delete --grace-period=0 --force -f -'
  Aug 17 12:27:25.208: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:27:25.208: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/17/23 12:27:25.208
  Aug 17 12:27:25.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 delete --grace-period=0 --force -f -'
  Aug 17 12:27:25.276: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:27:25.276: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/17/23 12:27:25.276
  Aug 17 12:27:25.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6210 delete --grace-period=0 --force -f -'
  Aug 17 12:27:25.326: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:27:25.326: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Aug 17 12:27:25.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6210" for this suite. @ 08/17/23 12:27:25.329
• [6.876 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 08/17/23 12:27:25.335
  Aug 17 12:27:25.335: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename gc @ 08/17/23 12:27:25.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:27:25.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:27:25.345
  STEP: create the rc1 @ 08/17/23 12:27:25.349
  STEP: create the rc2 @ 08/17/23 12:27:25.351
  E0817 12:27:25.782672      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:26.786878      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:27.787598      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:28.787774      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:29.787793      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:30.787882      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 08/17/23 12:27:31.356
  STEP: delete the rc simpletest-rc-to-be-deleted @ 08/17/23 12:27:31.516
  STEP: wait for the rc to be deleted @ 08/17/23 12:27:31.518
  E0817 12:27:31.788945      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:32.789848      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:33.789903      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:34.789998      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:35.790084      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:27:36.527: INFO: 66 pods remaining
  Aug 17 12:27:36.527: INFO: 66 pods has nil DeletionTimestamp
  Aug 17 12:27:36.527: INFO: 
  E0817 12:27:36.790146      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:37.790411      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:38.790537      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:39.791440      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:40.791622      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/17/23 12:27:41.53
  Aug 17 12:27:41.591: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 17 12:27:41.591: INFO: Deleting pod "simpletest-rc-to-be-deleted-2n42r" in namespace "gc-6171"
  Aug 17 12:27:41.600: INFO: Deleting pod "simpletest-rc-to-be-deleted-2q2jp" in namespace "gc-6171"
  Aug 17 12:27:41.610: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xhgn" in namespace "gc-6171"
  Aug 17 12:27:41.617: INFO: Deleting pod "simpletest-rc-to-be-deleted-42ncr" in namespace "gc-6171"
  Aug 17 12:27:41.627: INFO: Deleting pod "simpletest-rc-to-be-deleted-45z49" in namespace "gc-6171"
  Aug 17 12:27:41.635: INFO: Deleting pod "simpletest-rc-to-be-deleted-4lrhv" in namespace "gc-6171"
  Aug 17 12:27:41.641: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pt2k" in namespace "gc-6171"
  Aug 17 12:27:41.648: INFO: Deleting pod "simpletest-rc-to-be-deleted-5b4n8" in namespace "gc-6171"
  Aug 17 12:27:41.654: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hghc" in namespace "gc-6171"
  Aug 17 12:27:41.659: INFO: Deleting pod "simpletest-rc-to-be-deleted-5s8v8" in namespace "gc-6171"
  Aug 17 12:27:41.664: INFO: Deleting pod "simpletest-rc-to-be-deleted-5wkf2" in namespace "gc-6171"
  Aug 17 12:27:41.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-68wtf" in namespace "gc-6171"
  Aug 17 12:27:41.674: INFO: Deleting pod "simpletest-rc-to-be-deleted-6v9hl" in namespace "gc-6171"
  Aug 17 12:27:41.679: INFO: Deleting pod "simpletest-rc-to-be-deleted-75h4q" in namespace "gc-6171"
  Aug 17 12:27:41.686: INFO: Deleting pod "simpletest-rc-to-be-deleted-765c2" in namespace "gc-6171"
  Aug 17 12:27:41.692: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lmmt" in namespace "gc-6171"
  Aug 17 12:27:41.709: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mmst" in namespace "gc-6171"
  Aug 17 12:27:41.714: INFO: Deleting pod "simpletest-rc-to-be-deleted-7x8kz" in namespace "gc-6171"
  Aug 17 12:27:41.720: INFO: Deleting pod "simpletest-rc-to-be-deleted-85wp2" in namespace "gc-6171"
  Aug 17 12:27:41.725: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bv6x" in namespace "gc-6171"
  Aug 17 12:27:41.729: INFO: Deleting pod "simpletest-rc-to-be-deleted-96czd" in namespace "gc-6171"
  Aug 17 12:27:41.735: INFO: Deleting pod "simpletest-rc-to-be-deleted-97g5q" in namespace "gc-6171"
  Aug 17 12:27:41.741: INFO: Deleting pod "simpletest-rc-to-be-deleted-9sjn7" in namespace "gc-6171"
  Aug 17 12:27:41.748: INFO: Deleting pod "simpletest-rc-to-be-deleted-9zsz5" in namespace "gc-6171"
  Aug 17 12:27:41.754: INFO: Deleting pod "simpletest-rc-to-be-deleted-b4lj7" in namespace "gc-6171"
  Aug 17 12:27:41.759: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjt9s" in namespace "gc-6171"
  Aug 17 12:27:41.766: INFO: Deleting pod "simpletest-rc-to-be-deleted-crjjh" in namespace "gc-6171"
  Aug 17 12:27:41.772: INFO: Deleting pod "simpletest-rc-to-be-deleted-d45c9" in namespace "gc-6171"
  Aug 17 12:27:41.777: INFO: Deleting pod "simpletest-rc-to-be-deleted-d762v" in namespace "gc-6171"
  Aug 17 12:27:41.783: INFO: Deleting pod "simpletest-rc-to-be-deleted-djkg6" in namespace "gc-6171"
  Aug 17 12:27:41.788: INFO: Deleting pod "simpletest-rc-to-be-deleted-dtdqb" in namespace "gc-6171"
  E0817 12:27:41.791985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:27:41.793: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6zs9" in namespace "gc-6171"
  Aug 17 12:27:41.798: INFO: Deleting pod "simpletest-rc-to-be-deleted-fngvf" in namespace "gc-6171"
  Aug 17 12:27:41.803: INFO: Deleting pod "simpletest-rc-to-be-deleted-fp9vq" in namespace "gc-6171"
  Aug 17 12:27:41.808: INFO: Deleting pod "simpletest-rc-to-be-deleted-gbmpz" in namespace "gc-6171"
  Aug 17 12:27:41.814: INFO: Deleting pod "simpletest-rc-to-be-deleted-gg662" in namespace "gc-6171"
  Aug 17 12:27:41.820: INFO: Deleting pod "simpletest-rc-to-be-deleted-gg7m7" in namespace "gc-6171"
  Aug 17 12:27:41.826: INFO: Deleting pod "simpletest-rc-to-be-deleted-grnpq" in namespace "gc-6171"
  Aug 17 12:27:41.831: INFO: Deleting pod "simpletest-rc-to-be-deleted-gs9kz" in namespace "gc-6171"
  Aug 17 12:27:41.837: INFO: Deleting pod "simpletest-rc-to-be-deleted-gv7ms" in namespace "gc-6171"
  Aug 17 12:27:41.843: INFO: Deleting pod "simpletest-rc-to-be-deleted-gwjrm" in namespace "gc-6171"
  Aug 17 12:27:41.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-h4jng" in namespace "gc-6171"
  Aug 17 12:27:41.853: INFO: Deleting pod "simpletest-rc-to-be-deleted-h78fn" in namespace "gc-6171"
  Aug 17 12:27:41.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-hsqb2" in namespace "gc-6171"
  Aug 17 12:27:41.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4vkr" in namespace "gc-6171"
  Aug 17 12:27:41.871: INFO: Deleting pod "simpletest-rc-to-be-deleted-jmmz8" in namespace "gc-6171"
  Aug 17 12:27:41.876: INFO: Deleting pod "simpletest-rc-to-be-deleted-jnffs" in namespace "gc-6171"
  Aug 17 12:27:41.883: INFO: Deleting pod "simpletest-rc-to-be-deleted-khwvj" in namespace "gc-6171"
  Aug 17 12:27:41.889: INFO: Deleting pod "simpletest-rc-to-be-deleted-kn29p" in namespace "gc-6171"
  Aug 17 12:27:41.896: INFO: Deleting pod "simpletest-rc-to-be-deleted-l62fn" in namespace "gc-6171"
  Aug 17 12:27:41.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6171" for this suite. @ 08/17/23 12:27:41.907
• [16.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 08/17/23 12:27:41.912
  Aug 17 12:27:41.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename subpath @ 08/17/23 12:27:41.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:27:41.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:27:41.923
  STEP: Setting up data @ 08/17/23 12:27:41.924
  STEP: Creating pod pod-subpath-test-projected-xzz2 @ 08/17/23 12:27:41.929
  STEP: Creating a pod to test atomic-volume-subpath @ 08/17/23 12:27:41.929
  E0817 12:27:42.792841      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:43.793040      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:44.793129      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:45.793457      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:46.794228      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:47.794555      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:48.794892      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:49.795659      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:50.796147      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:51.797090      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:52.798157      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:53.798401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:54.799441      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:55.799614      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:56.800658      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:57.801038      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:58.801308      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:27:59.802040      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:00.802599      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:01.803623      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:02.804276      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:03.804381      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:04.804994      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:05.805441      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:28:05.979
  Aug 17 12:28:05.983: INFO: Trying to get logs from node talos-default-worker-1 pod pod-subpath-test-projected-xzz2 container test-container-subpath-projected-xzz2: <nil>
  STEP: delete the pod @ 08/17/23 12:28:05.99
  STEP: Deleting pod pod-subpath-test-projected-xzz2 @ 08/17/23 12:28:06
  Aug 17 12:28:06.000: INFO: Deleting pod "pod-subpath-test-projected-xzz2" in namespace "subpath-9321"
  Aug 17 12:28:06.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9321" for this suite. @ 08/17/23 12:28:06.007
• [24.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 08/17/23 12:28:06.013
  Aug 17 12:28:06.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:28:06.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:28:06.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:28:06.03
  STEP: starting the proxy server @ 08/17/23 12:28:06.033
  Aug 17 12:28:06.033: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-4833 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 08/17/23 12:28:06.087
  Aug 17 12:28:06.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4833" for this suite. @ 08/17/23 12:28:06.097
• [0.089 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 08/17/23 12:28:06.102
  Aug 17 12:28:06.102: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename containers @ 08/17/23 12:28:06.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:28:06.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:28:06.117
  STEP: Creating a pod to test override arguments @ 08/17/23 12:28:06.119
  E0817 12:28:06.806042      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:07.806539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:08.807434      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:09.807996      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:28:10.136
  Aug 17 12:28:10.138: INFO: Trying to get logs from node talos-default-worker-1 pod client-containers-6d04e66a-3686-4bc8-bd55-fb9255c93b85 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:28:10.144
  Aug 17 12:28:10.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3231" for this suite. @ 08/17/23 12:28:10.159
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 08/17/23 12:28:10.166
  Aug 17 12:28:10.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 12:28:10.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:28:10.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:28:10.181
  Aug 17 12:28:10.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2859" for this suite. @ 08/17/23 12:28:10.216
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 08/17/23 12:28:10.222
  Aug 17 12:28:10.222: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:28:10.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:28:10.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:28:10.235
  STEP: Setting up server cert @ 08/17/23 12:28:10.25
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:28:10.506
  STEP: Deploying the webhook pod @ 08/17/23 12:28:10.511
  STEP: Wait for the deployment to be ready @ 08/17/23 12:28:10.517
  Aug 17 12:28:10.521: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0817 12:28:10.808272      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:11.808873      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:28:12.531
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:28:12.541
  E0817 12:28:12.809557      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:28:13.541: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 17 12:28:13.547: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:28:13.809691      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9901-crds.webhook.example.com via the AdmissionRegistration API @ 08/17/23 12:28:14.057
  STEP: Creating a custom resource while v1 is storage version @ 08/17/23 12:28:14.071
  E0817 12:28:14.810735      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:15.810933      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 08/17/23 12:28:16.095
  STEP: Patching the custom resource while v2 is storage version @ 08/17/23 12:28:16.11
  Aug 17 12:28:16.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7757" for this suite. @ 08/17/23 12:28:16.681
  STEP: Destroying namespace "webhook-markers-2897" for this suite. @ 08/17/23 12:28:16.688
• [6.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 08/17/23 12:28:16.694
  Aug 17 12:28:16.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:28:16.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:28:16.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:28:16.711
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5621 @ 08/17/23 12:28:16.714
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/17/23 12:28:16.724
  STEP: creating service externalsvc in namespace services-5621 @ 08/17/23 12:28:16.724
  STEP: creating replication controller externalsvc in namespace services-5621 @ 08/17/23 12:28:16.736
  I0817 12:28:16.740714      24 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5621, replica count: 2
  E0817 12:28:16.811384      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:17.812508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:18.812651      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:28:19.791759      24 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 08/17/23 12:28:19.795
  Aug 17 12:28:19.808: INFO: Creating new exec pod
  E0817 12:28:19.813103      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:20.813825      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:21.814820      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:28:21.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-5621 exec execpoddz7kf -- /bin/sh -x -c nslookup clusterip-service.services-5621.svc.cluster.local'
  Aug 17 12:28:22.007: INFO: stderr: "+ nslookup clusterip-service.services-5621.svc.cluster.local\n"
  Aug 17 12:28:22.007: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-5621.svc.cluster.local\tcanonical name = externalsvc.services-5621.svc.cluster.local.\nName:\texternalsvc.services-5621.svc.cluster.local\nAddress: 10.102.84.111\n\n"
  Aug 17 12:28:22.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5621, will wait for the garbage collector to delete the pods @ 08/17/23 12:28:22.011
  Aug 17 12:28:22.070: INFO: Deleting ReplicationController externalsvc took: 5.499279ms
  Aug 17 12:28:22.170: INFO: Terminating ReplicationController externalsvc pods took: 100.135907ms
  E0817 12:28:22.815641      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:23.816298      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:28:24.682: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-5621" for this suite. @ 08/17/23 12:28:24.689
• [8.000 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 08/17/23 12:28:24.694
  Aug 17 12:28:24.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename csistoragecapacity @ 08/17/23 12:28:24.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:28:24.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:28:24.706
  STEP: getting /apis @ 08/17/23 12:28:24.709
  STEP: getting /apis/storage.k8s.io @ 08/17/23 12:28:24.713
  STEP: getting /apis/storage.k8s.io/v1 @ 08/17/23 12:28:24.714
  STEP: creating @ 08/17/23 12:28:24.715
  STEP: watching @ 08/17/23 12:28:24.724
  Aug 17 12:28:24.724: INFO: starting watch
  STEP: getting @ 08/17/23 12:28:24.728
  STEP: listing in namespace @ 08/17/23 12:28:24.73
  STEP: listing across namespaces @ 08/17/23 12:28:24.732
  STEP: patching @ 08/17/23 12:28:24.734
  STEP: updating @ 08/17/23 12:28:24.738
  Aug 17 12:28:24.740: INFO: waiting for watch events with expected annotations in namespace
  Aug 17 12:28:24.740: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 08/17/23 12:28:24.74
  STEP: deleting a collection @ 08/17/23 12:28:24.747
  Aug 17 12:28:24.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9322" for this suite. @ 08/17/23 12:28:24.759
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 08/17/23 12:28:24.763
  Aug 17 12:28:24.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 12:28:24.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:28:24.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:28:24.774
  STEP: Creating service test in namespace statefulset-2910 @ 08/17/23 12:28:24.776
  STEP: Creating a new StatefulSet @ 08/17/23 12:28:24.779
  Aug 17 12:28:24.784: INFO: Found 0 stateful pods, waiting for 3
  E0817 12:28:24.816735      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:25.816844      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:26.817307      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:27.817428      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:28.817639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:29.817795      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:30.817992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:31.818415      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:32.819014      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:33.819076      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:28:34.788: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:28:34.788: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:28:34.788: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:28:34.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-2910 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0817 12:28:34.819289      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:28:34.999: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:28:34.999: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:28:34.999: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0817 12:28:35.819791      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:36.820336      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:37.820721      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:38.820947      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:39.821083      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:40.821281      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:41.821688      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:42.822279      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:43.822532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:44.822838      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/17/23 12:28:45.013
  Aug 17 12:28:45.030: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/17/23 12:28:45.03
  E0817 12:28:45.823322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:46.823512      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:47.823942      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:48.824163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:49.824421      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:50.825030      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:51.825341      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:52.826123      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:53.826382      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:54.826739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 08/17/23 12:28:55.044
  Aug 17 12:28:55.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-2910 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:28:55.235: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 17 12:28:55.235: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:28:55.235: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0817 12:28:55.827321      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:56.828150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:57.828506      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:58.828623      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:28:59.828839      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:00.829104      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:01.830087      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:02.830548      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:03.831355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:04.831561      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 08/17/23 12:29:05.254
  Aug 17 12:29:05.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-2910 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 17 12:29:05.437: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:29:05.437: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:29:05.437: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0817 12:29:05.831860      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:06.831952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:07.832655      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:08.832798      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:09.833241      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:10.833388      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:11.833473      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:12.834100      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:13.834286      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:14.834479      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:29:15.469: INFO: Updating stateful set ss2
  E0817 12:29:15.835119      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:16.835462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:17.835497      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:18.835946      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:19.836096      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:20.836312      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:21.836517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:22.837015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:23.837197      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:24.838030      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 08/17/23 12:29:25.483
  Aug 17 12:29:25.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-2910 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:29:25.668: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 17 12:29:25.668: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:29:25.668: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0817 12:29:25.838106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:26.838382      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:27.838736      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:28.838955      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:29.839179      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:30.839353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:31.840321      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:32.840995      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:33.841212      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:34.841426      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:29:35.686: INFO: Deleting all statefulset in ns statefulset-2910
  Aug 17 12:29:35.689: INFO: Scaling statefulset ss2 to 0
  E0817 12:29:35.842391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:36.842593      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:37.843560      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:38.843772      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:39.843986      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:40.844200      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:41.844477      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:42.845318      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:43.845739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:44.845901      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:29:45.703: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 12:29:45.706: INFO: Deleting statefulset ss2
  Aug 17 12:29:45.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2910" for this suite. @ 08/17/23 12:29:45.719
• [80.961 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 08/17/23 12:29:45.725
  Aug 17 12:29:45.725: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/17/23 12:29:45.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:29:45.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:29:45.74
  STEP: creating @ 08/17/23 12:29:45.742
  STEP: getting @ 08/17/23 12:29:45.756
  STEP: listing in namespace @ 08/17/23 12:29:45.759
  STEP: patching @ 08/17/23 12:29:45.762
  STEP: deleting @ 08/17/23 12:29:45.77
  Aug 17 12:29:45.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1928" for this suite. @ 08/17/23 12:29:45.777
• [0.056 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 08/17/23 12:29:45.78
  Aug 17 12:29:45.780: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:29:45.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:29:45.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:29:45.791
  STEP: creating Agnhost RC @ 08/17/23 12:29:45.792
  Aug 17 12:29:45.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6040 create -f -'
  E0817 12:29:45.846212      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:29:45.982: INFO: stderr: ""
  Aug 17 12:29:45.982: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/17/23 12:29:45.982
  E0817 12:29:46.846974      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:29:46.985: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 17 12:29:46.985: INFO: Found 1 / 1
  Aug 17 12:29:46.985: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 08/17/23 12:29:46.985
  Aug 17 12:29:46.987: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 17 12:29:46.987: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 17 12:29:46.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-6040 patch pod agnhost-primary-mps6j -p {"metadata":{"annotations":{"x":"y"}}}'
  Aug 17 12:29:47.059: INFO: stderr: ""
  Aug 17 12:29:47.059: INFO: stdout: "pod/agnhost-primary-mps6j patched\n"
  STEP: checking annotations @ 08/17/23 12:29:47.059
  Aug 17 12:29:47.062: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 17 12:29:47.062: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 17 12:29:47.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6040" for this suite. @ 08/17/23 12:29:47.066
• [1.290 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 08/17/23 12:29:47.071
  Aug 17 12:29:47.071: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:29:47.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:29:47.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:29:47.086
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-058dd945-4527-492b-a67f-58154152bede @ 08/17/23 12:29:47.091
  STEP: Creating the pod @ 08/17/23 12:29:47.094
  E0817 12:29:47.847686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:48.847907      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-058dd945-4527-492b-a67f-58154152bede @ 08/17/23 12:29:49.116
  STEP: waiting to observe update in volume @ 08/17/23 12:29:49.118
  E0817 12:29:49.848957      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:50.849083      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:51.849254      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:52.849701      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:29:53.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8534" for this suite. @ 08/17/23 12:29:53.137
• [6.071 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 08/17/23 12:29:53.142
  Aug 17 12:29:53.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pod-network-test @ 08/17/23 12:29:53.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:29:53.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:29:53.157
  STEP: Performing setup for networking test in namespace pod-network-test-1894 @ 08/17/23 12:29:53.159
  STEP: creating a selector @ 08/17/23 12:29:53.159
  STEP: Creating the service pods in kubernetes @ 08/17/23 12:29:53.159
  Aug 17 12:29:53.159: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0817 12:29:53.850117      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:54.850356      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:55.850657      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:56.851470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:57.852520      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:58.852728      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:29:59.853184      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:00.853384      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:01.854441      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:02.854964      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:03.855325      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:04.855590      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/17/23 12:30:05.208
  E0817 12:30:05.856618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:06.856816      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:07.219: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 17 12:30:07.219: INFO: Breadth first check of 10.244.1.225 on host 172.20.0.5...
  Aug 17 12:30:07.221: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.226:9080/dial?request=hostname&protocol=http&host=10.244.1.225&port=8083&tries=1'] Namespace:pod-network-test-1894 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:30:07.221: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:30:07.221: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:30:07.221: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1894/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.226%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.225%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 17 12:30:07.335: INFO: Waiting for responses: map[]
  Aug 17 12:30:07.335: INFO: reached 10.244.1.225 after 0/1 tries
  Aug 17 12:30:07.335: INFO: Breadth first check of 10.244.2.113 on host 172.20.0.6...
  Aug 17 12:30:07.338: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.226:9080/dial?request=hostname&protocol=http&host=10.244.2.113&port=8083&tries=1'] Namespace:pod-network-test-1894 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:30:07.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:30:07.339: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:30:07.339: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1894/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.226%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.113%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 17 12:30:07.441: INFO: Waiting for responses: map[]
  Aug 17 12:30:07.441: INFO: reached 10.244.2.113 after 0/1 tries
  Aug 17 12:30:07.441: INFO: Going to retry 0 out of 2 pods....
  Aug 17 12:30:07.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1894" for this suite. @ 08/17/23 12:30:07.445
• [14.313 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 08/17/23 12:30:07.455
  Aug 17 12:30:07.455: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:30:07.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:07.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:07.469
  STEP: Creating configMap with name projected-configmap-test-volume-bdbe5426-9466-4129-ba6b-1cf65066239b @ 08/17/23 12:30:07.471
  STEP: Creating a pod to test consume configMaps @ 08/17/23 12:30:07.474
  E0817 12:30:07.857686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:08.857856      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:09.858826      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:10.858944      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:30:11.489
  Aug 17 12:30:11.491: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-2c16cd77-fecb-48d9-a64d-ff527be197d2 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:30:11.497
  Aug 17 12:30:11.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7612" for this suite. @ 08/17/23 12:30:11.51
• [4.060 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 08/17/23 12:30:11.515
  Aug 17 12:30:11.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 12:30:11.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:11.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:11.529
  STEP: Creating a pod to test env composition @ 08/17/23 12:30:11.532
  E0817 12:30:11.859919      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:12.860352      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:13.861340      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:14.861531      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:30:15.547
  Aug 17 12:30:15.550: INFO: Trying to get logs from node talos-default-worker-2 pod var-expansion-f9f30fee-c5a4-4c1e-b4a6-86ae2e76a491 container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 12:30:15.556
  Aug 17 12:30:15.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-413" for this suite. @ 08/17/23 12:30:15.569
• [4.058 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 08/17/23 12:30:15.574
  Aug 17 12:30:15.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename subjectreview @ 08/17/23 12:30:15.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:15.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:15.586
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6311" @ 08/17/23 12:30:15.588
  Aug 17 12:30:15.591: INFO: saUsername: "system:serviceaccount:subjectreview-6311:e2e"
  Aug 17 12:30:15.591: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6311"}
  Aug 17 12:30:15.591: INFO: saUID: "d5565823-0d52-496d-b248-89d5e8dc4470"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6311:e2e" @ 08/17/23 12:30:15.591
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6311:e2e" @ 08/17/23 12:30:15.591
  Aug 17 12:30:15.592: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6311:e2e" api 'list' configmaps in "subjectreview-6311" namespace @ 08/17/23 12:30:15.592
  Aug 17 12:30:15.593: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6311:e2e" @ 08/17/23 12:30:15.593
  Aug 17 12:30:15.594: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Aug 17 12:30:15.594: INFO: LocalSubjectAccessReview has been verified
  Aug 17 12:30:15.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6311" for this suite. @ 08/17/23 12:30:15.597
• [0.027 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 08/17/23 12:30:15.601
  Aug 17 12:30:15.601: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:30:15.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:15.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:15.613
  STEP: Creating configMap with name configmap-test-volume-map-61f298f5-4079-41fd-8393-97cc2900acf2 @ 08/17/23 12:30:15.614
  STEP: Creating a pod to test consume configMaps @ 08/17/23 12:30:15.617
  E0817 12:30:15.862567      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:16.862787      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:17.862815      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:18.863123      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:30:19.634
  Aug 17 12:30:19.637: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-87585d15-721f-42dc-b362-31e33bad71fe container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:30:19.643
  Aug 17 12:30:19.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6294" for this suite. @ 08/17/23 12:30:19.657
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 08/17/23 12:30:19.662
  Aug 17 12:30:19.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename daemonsets @ 08/17/23 12:30:19.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:19.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:19.678
  Aug 17 12:30:19.693: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 08/17/23 12:30:19.697
  Aug 17 12:30:19.699: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:30:19.699: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 08/17/23 12:30:19.699
  Aug 17 12:30:19.715: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:30:19.715: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E0817 12:30:19.863475      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:20.718: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:30:20.718: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E0817 12:30:20.864279      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:21.719: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 12:30:21.719: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 08/17/23 12:30:21.72
  Aug 17 12:30:21.728: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 12:30:21.728: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0817 12:30:21.864981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:22.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:30:22.732: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 08/17/23 12:30:22.732
  Aug 17 12:30:22.743: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:30:22.743: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E0817 12:30:22.865460      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:23.748: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:30:23.748: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E0817 12:30:23.866494      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:24.747: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 12:30:24.747: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/17/23 12:30:24.752
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3297, will wait for the garbage collector to delete the pods @ 08/17/23 12:30:24.752
  Aug 17 12:30:24.810: INFO: Deleting DaemonSet.extensions daemon-set took: 4.481623ms
  E0817 12:30:24.867432      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:24.911: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.081754ms
  E0817 12:30:25.867819      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:25.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:30:25.914: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 17 12:30:25.917: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18563"},"items":null}

  Aug 17 12:30:25.920: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18563"},"items":null}

  Aug 17 12:30:25.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3297" for this suite. @ 08/17/23 12:30:25.938
• [6.281 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 08/17/23 12:30:25.946
  Aug 17 12:30:25.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:30:25.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:25.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:25.964
  STEP: Creating configMap with name configmap-projected-all-test-volume-817bd075-e209-4db8-af2c-1fb73645dbad @ 08/17/23 12:30:25.966
  STEP: Creating secret with name secret-projected-all-test-volume-805205c6-9d5a-40cb-a262-35c06ba687ef @ 08/17/23 12:30:25.97
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 08/17/23 12:30:25.973
  E0817 12:30:26.868162      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:27.868563      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:30:27.986
  Aug 17 12:30:27.989: INFO: Trying to get logs from node talos-default-worker-1 pod projected-volume-477adb2f-bb60-4fb9-a39d-1d0b08ce58bc container projected-all-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 12:30:27.994
  Aug 17 12:30:28.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1413" for this suite. @ 08/17/23 12:30:28.01
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 08/17/23 12:30:28.015
  Aug 17 12:30:28.015: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:30:28.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:28.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:28.031
  STEP: Creating secret with name s-test-opt-del-a61735aa-725b-4f67-ba17-42eac9eb11bd @ 08/17/23 12:30:28.037
  STEP: Creating secret with name s-test-opt-upd-6ca82546-99dd-47f4-8a47-b38a58b3ab91 @ 08/17/23 12:30:28.04
  STEP: Creating the pod @ 08/17/23 12:30:28.043
  E0817 12:30:28.869250      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:29.869397      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-a61735aa-725b-4f67-ba17-42eac9eb11bd @ 08/17/23 12:30:30.074
  STEP: Updating secret s-test-opt-upd-6ca82546-99dd-47f4-8a47-b38a58b3ab91 @ 08/17/23 12:30:30.079
  STEP: Creating secret with name s-test-opt-create-07b3aa5c-3048-4ca5-bde3-a172fbb11e14 @ 08/17/23 12:30:30.082
  STEP: waiting to observe update in volume @ 08/17/23 12:30:30.086
  E0817 12:30:30.869540      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:31.869719      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:32.869773      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:33.869893      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:34.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6177" for this suite. @ 08/17/23 12:30:34.117
• [6.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 08/17/23 12:30:34.122
  Aug 17 12:30:34.122: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-webhook @ 08/17/23 12:30:34.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:34.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:34.137
  STEP: Setting up server cert @ 08/17/23 12:30:34.139
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/17/23 12:30:34.361
  STEP: Deploying the custom resource conversion webhook pod @ 08/17/23 12:30:34.364
  STEP: Wait for the deployment to be ready @ 08/17/23 12:30:34.369
  Aug 17 12:30:34.372: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0817 12:30:34.870945      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:35.871268      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:30:36.381
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:30:36.392
  E0817 12:30:36.871709      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:37.392: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 17 12:30:37.399: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:30:37.872386      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:38.873386      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:39.873587      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 08/17/23 12:30:39.936
  STEP: v2 custom resource should be converted @ 08/17/23 12:30:39.938
  Aug 17 12:30:39.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2342" for this suite. @ 08/17/23 12:30:40.47
• [6.352 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 08/17/23 12:30:40.475
  Aug 17 12:30:40.475: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replication-controller @ 08/17/23 12:30:40.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:40.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:40.488
  STEP: Creating ReplicationController "e2e-rc-th465" @ 08/17/23 12:30:40.49
  Aug 17 12:30:40.492: INFO: Get Replication Controller "e2e-rc-th465" to confirm replicas
  E0817 12:30:40.874046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:41.494: INFO: Get Replication Controller "e2e-rc-th465" to confirm replicas
  Aug 17 12:30:41.497: INFO: Found 1 replicas for "e2e-rc-th465" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-th465" @ 08/17/23 12:30:41.497
  STEP: Updating a scale subresource @ 08/17/23 12:30:41.5
  STEP: Verifying replicas where modified for replication controller "e2e-rc-th465" @ 08/17/23 12:30:41.504
  Aug 17 12:30:41.504: INFO: Get Replication Controller "e2e-rc-th465" to confirm replicas
  E0817 12:30:41.874339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:42.506: INFO: Get Replication Controller "e2e-rc-th465" to confirm replicas
  Aug 17 12:30:42.510: INFO: Found 2 replicas for "e2e-rc-th465" replication controller
  Aug 17 12:30:42.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1756" for this suite. @ 08/17/23 12:30:42.514
• [2.044 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 08/17/23 12:30:42.519
  Aug 17 12:30:42.519: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:30:42.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:42.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:42.534
  STEP: Setting up server cert @ 08/17/23 12:30:42.601
  E0817 12:30:42.874340      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:30:42.928
  STEP: Deploying the webhook pod @ 08/17/23 12:30:42.932
  STEP: Wait for the deployment to be ready @ 08/17/23 12:30:42.94
  Aug 17 12:30:42.946: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:30:43.875422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:44.875535      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:30:44.954
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:30:44.961
  E0817 12:30:45.876289      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:45.961: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/17/23 12:30:46.005
  STEP: Creating a configMap that should be mutated @ 08/17/23 12:30:46.017
  STEP: Deleting the collection of validation webhooks @ 08/17/23 12:30:46.041
  STEP: Creating a configMap that should not be mutated @ 08/17/23 12:30:46.076
  Aug 17 12:30:46.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9100" for this suite. @ 08/17/23 12:30:46.109
  STEP: Destroying namespace "webhook-markers-3636" for this suite. @ 08/17/23 12:30:46.112
• [3.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 08/17/23 12:30:46.117
  Aug 17 12:30:46.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubelet-test @ 08/17/23 12:30:46.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:46.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:46.129
  E0817 12:30:46.876866      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:47.877295      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:48.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2558" for this suite. @ 08/17/23 12:30:48.152
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 08/17/23 12:30:48.157
  Aug 17 12:30:48.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:30:48.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:48.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:48.172
  STEP: creating the pod @ 08/17/23 12:30:48.174
  STEP: setting up watch @ 08/17/23 12:30:48.174
  STEP: submitting the pod to kubernetes @ 08/17/23 12:30:48.277
  STEP: verifying the pod is in kubernetes @ 08/17/23 12:30:48.284
  STEP: verifying pod creation was observed @ 08/17/23 12:30:48.287
  E0817 12:30:48.877931      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:49.878797      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 08/17/23 12:30:50.298
  STEP: verifying pod deletion was observed @ 08/17/23 12:30:50.303
  E0817 12:30:50.879781      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:30:51.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-260" for this suite. @ 08/17/23 12:30:51.725
• [3.573 seconds]
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 08/17/23 12:30:51.73
  Aug 17 12:30:51.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename hostport @ 08/17/23 12:30:51.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:30:51.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:30:51.745
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 08/17/23 12:30:51.75
  E0817 12:30:51.880677      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:52.881150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.20.0.5 on the node which pod1 resides and expect scheduled @ 08/17/23 12:30:53.763
  E0817 12:30:53.881992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:54.882142      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:55.882831      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:56.882975      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:57.883053      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:58.883192      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:30:59.883854      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:00.884087      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:01.884597      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:02.885124      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:03.886165      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:04.886397      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.20.0.5 but use UDP protocol on the node which pod2 resides @ 08/17/23 12:31:05.793
  E0817 12:31:05.887242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:06.887555      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:07.888092      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:08.888191      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 08/17/23 12:31:09.817
  Aug 17 12:31:09.817: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.20.0.5 http://127.0.0.1:54323/hostname] Namespace:hostport-7416 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:31:09.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:31:09.817: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:31:09.817: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7416/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.20.0.5+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0817 12:31:09.888833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.5, port: 54323 @ 08/17/23 12:31:09.946
  Aug 17 12:31:09.946: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.20.0.5:54323/hostname] Namespace:hostport-7416 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:31:09.946: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:31:09.947: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:31:09.947: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7416/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.20.0.5%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.5, port: 54323 UDP @ 08/17/23 12:31:10.064
  Aug 17 12:31:10.064: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.20.0.5 54323] Namespace:hostport-7416 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:31:10.064: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:31:10.065: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:31:10.065: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7416/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.20.0.5+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0817 12:31:10.889391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:11.889596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:12.890171      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:13.890417      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:14.890668      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:31:15.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7416" for this suite. @ 08/17/23 12:31:15.181
• [23.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 08/17/23 12:31:15.187
  Aug 17 12:31:15.187: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 12:31:15.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:31:15.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:31:15.203
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/17/23 12:31:15.205
  E0817 12:31:15.891464      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:16.891686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:31:17.218
  Aug 17 12:31:17.221: INFO: Trying to get logs from node talos-default-worker-2 pod pod-5598296b-db04-4afe-aea7-d34ed1143e7a container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:31:17.227
  Aug 17 12:31:17.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3445" for this suite. @ 08/17/23 12:31:17.243
• [2.060 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 08/17/23 12:31:17.248
  Aug 17 12:31:17.248: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename endpointslice @ 08/17/23 12:31:17.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:31:17.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:31:17.264
  E0817 12:31:17.891701      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:18.892212      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:19.892304      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:20.892379      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:21.892526      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 08/17/23 12:31:22.32
  E0817 12:31:22.892730      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:23.892952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:24.893175      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:25.893378      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:26.893602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 08/17/23 12:31:27.326
  E0817 12:31:27.893700      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:28.894507      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:29.894614      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:30.894732      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:31.894870      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 08/17/23 12:31:32.333
  E0817 12:31:32.894981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:33.895115      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:34.895373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:35.895628      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:36.896506      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 08/17/23 12:31:37.341
  Aug 17 12:31:37.358: INFO: EndpointSlice for Service endpointslice-1031/example-named-port not found
  E0817 12:31:37.897269      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:38.897433      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:39.898210      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:40.899209      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:41.899538      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:42.900411      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:43.900449      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:44.900624      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:45.900969      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:46.901289      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:31:47.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1031" for this suite. @ 08/17/23 12:31:47.37
• [30.128 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 08/17/23 12:31:47.376
  Aug 17 12:31:47.376: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename disruption @ 08/17/23 12:31:47.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:31:47.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:31:47.391
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:31:47.397
  E0817 12:31:47.901532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:48.901896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 08/17/23 12:31:49.404
  STEP: Waiting for all pods to be running @ 08/17/23 12:31:49.409
  Aug 17 12:31:49.412: INFO: running pods: 0 < 1
  E0817 12:31:49.902272      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:50.902398      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 08/17/23 12:31:51.416
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:31:51.426
  STEP: Patching PodDisruptionBudget status @ 08/17/23 12:31:51.431
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:31:51.439
  Aug 17 12:31:51.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8197" for this suite. @ 08/17/23 12:31:51.446
• [4.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 08/17/23 12:31:51.451
  Aug 17 12:31:51.451: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:31:51.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:31:51.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:31:51.467
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:31:51.469
  E0817 12:31:51.902757      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:52.903673      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:53.904503      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:54.904594      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:31:55.486
  Aug 17 12:31:55.490: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-cd9c8465-ba64-456c-8e04-f8116f8bf8b6 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:31:55.498
  Aug 17 12:31:55.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-41" for this suite. @ 08/17/23 12:31:55.512
• [4.066 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 08/17/23 12:31:55.517
  Aug 17 12:31:55.517: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 12:31:55.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:31:55.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:31:55.532
  STEP: creating a Deployment @ 08/17/23 12:31:55.538
  Aug 17 12:31:55.538: INFO: Creating simple deployment test-deployment-84wj6
  Aug 17 12:31:55.547: INFO: deployment "test-deployment-84wj6" doesn't have the required revision set
  E0817 12:31:55.905501      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:56.905604      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 08/17/23 12:31:57.555
  Aug 17 12:31:57.557: INFO: Deployment test-deployment-84wj6 has Conditions: [{Available True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-84wj6-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 08/17/23 12:31:57.557
  Aug 17 12:31:57.562: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 12, 31, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 12, 31, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 17, 12, 31, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 17, 12, 31, 55, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-84wj6-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 08/17/23 12:31:57.562
  Aug 17 12:31:57.563: INFO: Observed &Deployment event: ADDED
  Aug 17 12:31:57.563: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-84wj6-5d576bd769"}
  Aug 17 12:31:57.563: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.563: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-84wj6-5d576bd769"}
  Aug 17 12:31:57.563: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 17 12:31:57.563: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.564: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 17 12:31:57.564: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-84wj6-5d576bd769" is progressing.}
  Aug 17 12:31:57.564: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.564: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 17 12:31:57.564: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-84wj6-5d576bd769" has successfully progressed.}
  Aug 17 12:31:57.564: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.564: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 17 12:31:57.564: INFO: Observed Deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-84wj6-5d576bd769" has successfully progressed.}
  Aug 17 12:31:57.564: INFO: Found Deployment test-deployment-84wj6 in namespace deployment-5012 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 17 12:31:57.564: INFO: Deployment test-deployment-84wj6 has an updated status
  STEP: patching the Statefulset Status @ 08/17/23 12:31:57.564
  Aug 17 12:31:57.564: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 17 12:31:57.568: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 08/17/23 12:31:57.568
  Aug 17 12:31:57.569: INFO: Observed &Deployment event: ADDED
  Aug 17 12:31:57.569: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-84wj6-5d576bd769"}
  Aug 17 12:31:57.569: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.569: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-84wj6-5d576bd769"}
  Aug 17 12:31:57.569: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 17 12:31:57.569: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.569: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 17 12:31:57.570: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:55 +0000 UTC 2023-08-17 12:31:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-84wj6-5d576bd769" is progressing.}
  Aug 17 12:31:57.570: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.570: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 17 12:31:57.570: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-84wj6-5d576bd769" has successfully progressed.}
  Aug 17 12:31:57.570: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.570: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 17 12:31:57.570: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-17 12:31:56 +0000 UTC 2023-08-17 12:31:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-84wj6-5d576bd769" has successfully progressed.}
  Aug 17 12:31:57.570: INFO: Observed deployment test-deployment-84wj6 in namespace deployment-5012 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 17 12:31:57.570: INFO: Observed &Deployment event: MODIFIED
  Aug 17 12:31:57.570: INFO: Found deployment test-deployment-84wj6 in namespace deployment-5012 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Aug 17 12:31:57.570: INFO: Deployment test-deployment-84wj6 has a patched status
  Aug 17 12:31:57.572: INFO: Deployment "test-deployment-84wj6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-84wj6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5012",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e503a28d-5519-4a0e-ae36-e9dee6aec455",
      ResourceVersion: (string) (len=5) "19340",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-84wj6-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 17 12:31:57.580: INFO: New ReplicaSet "test-deployment-84wj6-5d576bd769" of Deployment "test-deployment-84wj6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-84wj6-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5012",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b457032-17f8-4ab5-b673-7d9a101f811b",
      ResourceVersion: (string) (len=5) "19336",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-84wj6",
          UID: (types.UID) (len=36) "e503a28d-5519-4a0e-ae36-e9dee6aec455",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 35 30  |k:{\"uid\":\"e50|
              00000120  33 61 32 38 64 2d 35 35  31 39 2d 34 61 30 65 2d  |3a28d-5519-4a0e-|
              00000130  61 65 33 36 2d 65 39 64  65 65 36 61 65 63 34 35  |ae36-e9dee6aec45|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 12:31:57.585: INFO: Pod "test-deployment-84wj6-5d576bd769-b7nzx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-84wj6-5d576bd769-b7nzx",
      GenerateName: (string) (len=33) "test-deployment-84wj6-5d576bd769-",
      Namespace: (string) (len=15) "deployment-5012",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cac5daa5-bf61-4b3d-844f-6b0f85edbbef",
      ResourceVersion: (string) (len=5) "19335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-84wj6-5d576bd769",
          UID: (types.UID) (len=36) "8b457032-17f8-4ab5-b673-7d9a101f811b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 62 34 35 37 30 33  32 2d 31 37 66 38 2d 34  |"8b457032-17f8-4|
              000000a0  61 62 35 2d 62 36 37 33  2d 37 64 39 61 31 30 31  |ab5-b673-7d9a101|
              000000b0  66 38 31 31 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |f811b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 32 32 5c 22 7d 22  |10.244.2.122\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qz2tt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qz2tt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827872315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.2.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827872315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827872316,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://10819327fe7d143692fc0ac6b574dd12b22baad9364e43ce2f58a6b4cbf3e1fb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:31:57.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5012" for this suite. @ 08/17/23 12:31:57.591
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 08/17/23 12:31:57.595
  Aug 17 12:31:57.595: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename security-context @ 08/17/23 12:31:57.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:31:57.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:31:57.605
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/17/23 12:31:57.606
  E0817 12:31:57.905904      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:58.906298      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:31:59.906997      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:00.907146      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:32:01.618
  Aug 17 12:32:01.620: INFO: Trying to get logs from node talos-default-worker-1 pod security-context-7296f982-f036-4b0d-848c-565eadfbf900 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:32:01.624
  Aug 17 12:32:01.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7067" for this suite. @ 08/17/23 12:32:01.633
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 08/17/23 12:32:01.638
  Aug 17 12:32:01.638: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/17/23 12:32:01.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:01.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:01.648
  STEP: creating a target pod @ 08/17/23 12:32:01.649
  E0817 12:32:01.907779      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:02.908339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 08/17/23 12:32:03.662
  E0817 12:32:03.909162      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:04.910150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 08/17/23 12:32:05.677
  Aug 17 12:32:05.677: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7040 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:32:05.677: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:32:05.677: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:32:05.677: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-7040/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 17 12:32:05.755: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 08/17/23 12:32:05.76
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 08/17/23 12:32:05.762
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 08/17/23 12:32:05.769
  Aug 17 12:32:05.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7040" for this suite. @ 08/17/23 12:32:05.775
• [4.141 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 08/17/23 12:32:05.78
  Aug 17 12:32:05.780: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:32:05.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:05.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:05.793
  STEP: creating the pod @ 08/17/23 12:32:05.795
  Aug 17 12:32:05.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 create -f -'
  E0817 12:32:05.910630      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:05.949: INFO: stderr: ""
  Aug 17 12:32:05.949: INFO: stdout: "pod/pause created\n"
  E0817 12:32:06.910888      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:07.911749      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 08/17/23 12:32:07.957
  Aug 17 12:32:07.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 label pods pause testing-label=testing-label-value'
  Aug 17 12:32:08.034: INFO: stderr: ""
  Aug 17 12:32:08.034: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 08/17/23 12:32:08.034
  Aug 17 12:32:08.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 get pod pause -L testing-label'
  Aug 17 12:32:08.100: INFO: stderr: ""
  Aug 17 12:32:08.100: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 08/17/23 12:32:08.1
  Aug 17 12:32:08.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 label pods pause testing-label-'
  Aug 17 12:32:08.171: INFO: stderr: ""
  Aug 17 12:32:08.171: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 08/17/23 12:32:08.171
  Aug 17 12:32:08.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 get pod pause -L testing-label'
  Aug 17 12:32:08.219: INFO: stderr: ""
  Aug 17 12:32:08.219: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 08/17/23 12:32:08.219
  Aug 17 12:32:08.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 delete --grace-period=0 --force -f -'
  Aug 17 12:32:08.270: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:32:08.270: INFO: stdout: "pod \"pause\" force deleted\n"
  Aug 17 12:32:08.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 get rc,svc -l name=pause --no-headers'
  Aug 17 12:32:08.309: INFO: stderr: "No resources found in kubectl-8800 namespace.\n"
  Aug 17 12:32:08.309: INFO: stdout: ""
  Aug 17 12:32:08.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-8800 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 17 12:32:08.343: INFO: stderr: ""
  Aug 17 12:32:08.343: INFO: stdout: ""
  Aug 17 12:32:08.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8800" for this suite. @ 08/17/23 12:32:08.346
• [2.571 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 08/17/23 12:32:08.351
  Aug 17 12:32:08.351: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename daemonsets @ 08/17/23 12:32:08.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:08.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:08.364
  Aug 17 12:32:08.378: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/17/23 12:32:08.381
  Aug 17 12:32:08.384: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:08.384: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:08.384: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:08.386: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:32:08.386: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:32:08.912547      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:09.391: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:09.391: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:09.391: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:09.394: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:32:09.394: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:32:09.912681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:10.390: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:10.390: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:10.390: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:10.393: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 12:32:10.393: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 08/17/23 12:32:10.401
  STEP: Check that daemon pods images are updated. @ 08/17/23 12:32:10.407
  Aug 17 12:32:10.409: INFO: Wrong image for pod: daemon-set-9bz9b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 17 12:32:10.409: INFO: Wrong image for pod: daemon-set-fwvt8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 17 12:32:10.412: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:10.412: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:10.412: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0817 12:32:10.913553      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:11.415: INFO: Wrong image for pod: daemon-set-fwvt8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 17 12:32:11.415: INFO: Pod daemon-set-w96dt is not available
  Aug 17 12:32:11.417: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:11.417: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:11.417: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0817 12:32:11.914463      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:12.417: INFO: Pod daemon-set-4tk9r is not available
  Aug 17 12:32:12.420: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:12.420: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:12.420: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 08/17/23 12:32:12.42
  Aug 17 12:32:12.424: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:12.424: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:12.424: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:12.428: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 12:32:12.428: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E0817 12:32:12.914827      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:13.432: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:13.432: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:13.432: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:32:13.437: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 12:32:13.437: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/17/23 12:32:13.45
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6303, will wait for the garbage collector to delete the pods @ 08/17/23 12:32:13.45
  Aug 17 12:32:13.507: INFO: Deleting DaemonSet.extensions daemon-set took: 3.294837ms
  Aug 17 12:32:13.607: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.459525ms
  E0817 12:32:13.915619      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:14.916188      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:15.011: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:32:15.011: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 17 12:32:15.014: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19571"},"items":null}

  Aug 17 12:32:15.017: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19571"},"items":null}

  Aug 17 12:32:15.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6303" for this suite. @ 08/17/23 12:32:15.029
• [6.683 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 08/17/23 12:32:15.034
  Aug 17 12:32:15.034: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename runtimeclass @ 08/17/23 12:32:15.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:15.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:15.048
  E0817 12:32:15.917244      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:16.917481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:17.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-910" for this suite. @ 08/17/23 12:32:17.075
• [2.046 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 08/17/23 12:32:17.08
  Aug 17 12:32:17.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename proxy @ 08/17/23 12:32:17.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:17.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:17.096
  Aug 17 12:32:17.099: INFO: Creating pod...
  E0817 12:32:17.918457      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:18.918769      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:19.113: INFO: Creating service...
  Aug 17 12:32:19.124: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/pods/agnhost/proxy?method=DELETE
  Aug 17 12:32:19.130: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 17 12:32:19.130: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/pods/agnhost/proxy?method=OPTIONS
  Aug 17 12:32:19.133: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 17 12:32:19.133: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/pods/agnhost/proxy?method=PATCH
  Aug 17 12:32:19.137: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 17 12:32:19.137: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/pods/agnhost/proxy?method=POST
  Aug 17 12:32:19.140: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 17 12:32:19.140: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/pods/agnhost/proxy?method=PUT
  Aug 17 12:32:19.143: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 17 12:32:19.143: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/services/e2e-proxy-test-service/proxy?method=DELETE
  Aug 17 12:32:19.148: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 17 12:32:19.148: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Aug 17 12:32:19.152: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 17 12:32:19.152: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/services/e2e-proxy-test-service/proxy?method=PATCH
  Aug 17 12:32:19.157: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 17 12:32:19.157: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/services/e2e-proxy-test-service/proxy?method=POST
  Aug 17 12:32:19.161: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 17 12:32:19.161: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/services/e2e-proxy-test-service/proxy?method=PUT
  Aug 17 12:32:19.165: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 17 12:32:19.165: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/pods/agnhost/proxy?method=GET
  Aug 17 12:32:19.168: INFO: http.Client request:GET StatusCode:301
  Aug 17 12:32:19.168: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/services/e2e-proxy-test-service/proxy?method=GET
  Aug 17 12:32:19.171: INFO: http.Client request:GET StatusCode:301
  Aug 17 12:32:19.171: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/pods/agnhost/proxy?method=HEAD
  Aug 17 12:32:19.174: INFO: http.Client request:HEAD StatusCode:301
  Aug 17 12:32:19.174: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8295/services/e2e-proxy-test-service/proxy?method=HEAD
  Aug 17 12:32:19.177: INFO: http.Client request:HEAD StatusCode:301
  Aug 17 12:32:19.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8295" for this suite. @ 08/17/23 12:32:19.18
• [2.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 08/17/23 12:32:19.183
  Aug 17 12:32:19.183: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-runtime @ 08/17/23 12:32:19.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:19.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:19.194
  STEP: create the container @ 08/17/23 12:32:19.196
  W0817 12:32:19.199956      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/17/23 12:32:19.2
  E0817 12:32:19.919647      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:20.919827      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/17/23 12:32:21.206
  STEP: the container should be terminated @ 08/17/23 12:32:21.208
  STEP: the termination message should be set @ 08/17/23 12:32:21.208
  Aug 17 12:32:21.208: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/17/23 12:32:21.208
  Aug 17 12:32:21.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7187" for this suite. @ 08/17/23 12:32:21.219
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 08/17/23 12:32:21.223
  Aug 17 12:32:21.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:32:21.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:21.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:21.234
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9955 @ 08/17/23 12:32:21.235
  STEP: changing the ExternalName service to type=ClusterIP @ 08/17/23 12:32:21.238
  STEP: creating replication controller externalname-service in namespace services-9955 @ 08/17/23 12:32:21.246
  I0817 12:32:21.249655      24 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9955, replica count: 2
  E0817 12:32:21.920143      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:22.920276      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:23.920932      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:32:24.300489      24 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 12:32:24.300: INFO: Creating new exec pod
  E0817 12:32:24.921264      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:25.921538      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:26.921687      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:27.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-9955 exec execpodtfk4g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 17 12:32:27.517: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 17 12:32:27.517: INFO: stdout: "externalname-service-l7r4m"
  Aug 17 12:32:27.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-9955 exec execpodtfk4g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.32.185 80'
  Aug 17 12:32:27.672: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.32.185 80\nConnection to 10.101.32.185 80 port [tcp/http] succeeded!\n"
  Aug 17 12:32:27.672: INFO: stdout: "externalname-service-l7r4m"
  Aug 17 12:32:27.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:32:27.675: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-9955" for this suite. @ 08/17/23 12:32:27.684
• [6.465 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 08/17/23 12:32:27.688
  Aug 17 12:32:27.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:32:27.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:27.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:27.698
  STEP: Creating a pod to test downward api env vars @ 08/17/23 12:32:27.699
  E0817 12:32:27.922270      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:28.923236      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:29.924106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:30.924383      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:32:31.712
  Aug 17 12:32:31.714: INFO: Trying to get logs from node talos-default-worker-1 pod downward-api-2e19c8f9-05d8-4901-8e96-0179f640d5fe container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 12:32:31.721
  Aug 17 12:32:31.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2694" for this suite. @ 08/17/23 12:32:31.736
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 08/17/23 12:32:31.742
  Aug 17 12:32:31.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename endpointslice @ 08/17/23 12:32:31.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:31.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:31.758
  E0817 12:32:31.925235      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:32.925656      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:32:33.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6812" for this suite. @ 08/17/23 12:32:33.803
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 08/17/23 12:32:33.809
  Aug 17 12:32:33.809: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename cronjob @ 08/17/23 12:32:33.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:32:33.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:32:33.824
  STEP: Creating a ReplaceConcurrent cronjob @ 08/17/23 12:32:33.827
  STEP: Ensuring a job is scheduled @ 08/17/23 12:32:33.831
  E0817 12:32:33.925674      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:34.925867      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:35.926292      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:36.926488      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:37.927247      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:38.927398      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:39.927516      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:40.927740      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:41.928338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:42.928657      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:43.929158      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:44.929386      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:45.930403      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:46.930517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:47.931436      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:48.931691      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:49.932637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:50.932759      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:51.933667      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:52.934227      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:53.934322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:54.934517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:55.935253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:56.935462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:57.935844      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:58.936026      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:32:59.936389      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:00.936633      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 08/17/23 12:33:01.834
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/17/23 12:33:01.837
  STEP: Ensuring the job is replaced with a new one @ 08/17/23 12:33:01.839
  E0817 12:33:01.937077      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:02.938049      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:03.938512      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:04.938775      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:05.939075      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:06.939408      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:07.939918      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:08.940082      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:09.940593      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:10.940762      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:11.941660      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:12.942135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:13.942408      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:14.943127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:15.943539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:16.943624      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:17.944185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:18.944384      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:19.945005      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:20.945283      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:21.946324      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:22.947049      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:23.947618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:24.947805      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:25.948037      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:26.948249      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:27.948695      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:28.949034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:29.949871      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:30.950032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:31.950520      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:32.951172      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:33.951230      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:34.951375      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:35.951588      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:36.951737      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:37.952155      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:38.952403      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:39.953006      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:40.953121      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:41.953332      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:42.953732      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:43.954093      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:44.954193      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:45.955289      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:46.955702      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:47.956462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:48.957340      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:49.957911      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:50.958145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:51.958658      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:52.959059      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:53.959119      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:54.959260      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:55.959414      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:56.959574      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:57.960337      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:58.960472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:33:59.961226      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:00.961358      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 08/17/23 12:34:01.842
  Aug 17 12:34:01.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1941" for this suite. @ 08/17/23 12:34:01.848
• [88.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 08/17/23 12:34:01.852
  Aug 17 12:34:01.852: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename job @ 08/17/23 12:34:01.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:34:01.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:34:01.865
  STEP: Creating a job @ 08/17/23 12:34:01.867
  STEP: Ensuring active pods == parallelism @ 08/17/23 12:34:01.87
  E0817 12:34:01.962380      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:02.962965      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 08/17/23 12:34:03.873
  STEP: deleting Job.batch foo in namespace job-7489, will wait for the garbage collector to delete the pods @ 08/17/23 12:34:03.873
  Aug 17 12:34:03.928: INFO: Deleting Job.batch foo took: 2.729071ms
  E0817 12:34:03.962985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:34:04.029: INFO: Terminating Job.batch foo pods took: 100.732743ms
  E0817 12:34:04.963700      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:05.964239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:06.965294      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:07.965753      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:08.965927      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:09.966117      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:10.966334      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:11.966588      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:12.967029      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:13.967234      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:14.967257      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:15.967310      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:16.967532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:17.968124      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:18.968405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:19.968685      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:20.968764      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:21.968979      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:22.969442      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:23.969719      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:24.969790      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:25.969934      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:26.970201      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:27.970552      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:28.970617      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:29.970799      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:30.971557      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:31.971591      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:32.972366      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:33.973127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:34.973935      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 08/17/23 12:34:35.229
  Aug 17 12:34:35.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7489" for this suite. @ 08/17/23 12:34:35.236
• [33.388 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 08/17/23 12:34:35.241
  Aug 17 12:34:35.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename subpath @ 08/17/23 12:34:35.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:34:35.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:34:35.254
  STEP: Setting up data @ 08/17/23 12:34:35.256
  STEP: Creating pod pod-subpath-test-downwardapi-6f85 @ 08/17/23 12:34:35.262
  STEP: Creating a pod to test atomic-volume-subpath @ 08/17/23 12:34:35.262
  E0817 12:34:35.974444      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:36.974636      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:37.975148      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:38.975281      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:39.975603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:40.975773      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:41.975879      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:42.976338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:43.976963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:44.977119      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:45.977156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:46.977311      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:47.978342      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:48.978592      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:49.978883      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:50.979027      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:51.979124      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:52.980106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:53.980271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:54.980409      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:55.981107      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:56.981182      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:34:57.307
  Aug 17 12:34:57.309: INFO: Trying to get logs from node talos-default-worker-1 pod pod-subpath-test-downwardapi-6f85 container test-container-subpath-downwardapi-6f85: <nil>
  STEP: delete the pod @ 08/17/23 12:34:57.316
  STEP: Deleting pod pod-subpath-test-downwardapi-6f85 @ 08/17/23 12:34:57.322
  Aug 17 12:34:57.322: INFO: Deleting pod "pod-subpath-test-downwardapi-6f85" in namespace "subpath-2959"
  Aug 17 12:34:57.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2959" for this suite. @ 08/17/23 12:34:57.326
• [22.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 08/17/23 12:34:57.328
  Aug 17 12:34:57.328: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubelet-test @ 08/17/23 12:34:57.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:34:57.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:34:57.338
  STEP: Waiting for pod completion @ 08/17/23 12:34:57.342
  E0817 12:34:57.982174      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:34:58.982401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:34:59.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5998" for this suite. @ 08/17/23 12:34:59.352
• [2.027 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 08/17/23 12:34:59.356
  Aug 17 12:34:59.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:34:59.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:34:59.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:34:59.365
  STEP: Setting up server cert @ 08/17/23 12:34:59.375
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:34:59.592
  STEP: Deploying the webhook pod @ 08/17/23 12:34:59.596
  STEP: Wait for the deployment to be ready @ 08/17/23 12:34:59.6
  Aug 17 12:34:59.604: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:34:59.982425      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:00.982545      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:35:01.611
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:35:01.618
  E0817 12:35:01.983554      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:35:02.619: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/17/23 12:35:02.623
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/17/23 12:35:02.632
  STEP: Creating a dummy validating-webhook-configuration object @ 08/17/23 12:35:02.64
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 08/17/23 12:35:02.644
  STEP: Creating a dummy mutating-webhook-configuration object @ 08/17/23 12:35:02.647
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 08/17/23 12:35:02.651
  Aug 17 12:35:02.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5121" for this suite. @ 08/17/23 12:35:02.681
  STEP: Destroying namespace "webhook-markers-1135" for this suite. @ 08/17/23 12:35:02.683
• [3.330 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 08/17/23 12:35:02.687
  Aug 17 12:35:02.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:35:02.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:35:02.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:35:02.696
  E0817 12:35:02.984167      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:03.984237      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:04.985050      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:05.985332      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:06.985905      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:07.986341      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:35:08.723
  Aug 17 12:35:08.725: INFO: Trying to get logs from node talos-default-worker-2 pod client-envvars-27caba30-d668-4143-99c7-e1577e9a79d2 container env3cont: <nil>
  STEP: delete the pod @ 08/17/23 12:35:08.729
  Aug 17 12:35:08.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5906" for this suite. @ 08/17/23 12:35:08.737
• [6.054 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 08/17/23 12:35:08.74
  Aug 17 12:35:08.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 12:35:08.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:35:08.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:35:08.75
  STEP: creating the pod @ 08/17/23 12:35:08.751
  STEP: waiting for pod running @ 08/17/23 12:35:08.755
  E0817 12:35:08.987410      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:09.987616      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 08/17/23 12:35:10.76
  Aug 17 12:35:10.763: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6007 PodName:var-expansion-b3b73f5c-6df1-40d2-b2a5-b48b66ad91e0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:35:10.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:35:10.763: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:35:10.763: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-6007/pods/var-expansion-b3b73f5c-6df1-40d2-b2a5-b48b66ad91e0/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 08/17/23 12:35:10.894
  Aug 17 12:35:10.897: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6007 PodName:var-expansion-b3b73f5c-6df1-40d2-b2a5-b48b66ad91e0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:35:10.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:35:10.898: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:35:10.898: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-6007/pods/var-expansion-b3b73f5c-6df1-40d2-b2a5-b48b66ad91e0/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  E0817 12:35:10.987681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the annotation value @ 08/17/23 12:35:11.008
  Aug 17 12:35:11.515: INFO: Successfully updated pod "var-expansion-b3b73f5c-6df1-40d2-b2a5-b48b66ad91e0"
  STEP: waiting for annotated pod running @ 08/17/23 12:35:11.515
  STEP: deleting the pod gracefully @ 08/17/23 12:35:11.518
  Aug 17 12:35:11.518: INFO: Deleting pod "var-expansion-b3b73f5c-6df1-40d2-b2a5-b48b66ad91e0" in namespace "var-expansion-6007"
  Aug 17 12:35:11.521: INFO: Wait up to 5m0s for pod "var-expansion-b3b73f5c-6df1-40d2-b2a5-b48b66ad91e0" to be fully deleted
  E0817 12:35:11.987867      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:12.988354      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:13.988972      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:14.989129      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:15.989739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:16.989888      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:17.990775      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:18.990963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:19.991168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:20.991305      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:21.991914      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:22.992322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:23.993203      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:24.993320      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:25.993859      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:26.994006      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:27.994663      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:28.995425      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:29.996142      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:30.996278      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:31.996316      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:32.997191      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:33.997319      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:34.997555      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:35.997649      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:36.997851      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:37.998367      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:38.998539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:39.999406      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:41.000186      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:42.000418      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:43.000718      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:44.001236      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:45.001441      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:35:45.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6007" for this suite. @ 08/17/23 12:35:45.58
• [36.844 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 08/17/23 12:35:45.585
  Aug 17 12:35:45.585: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-webhook @ 08/17/23 12:35:45.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:35:45.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:35:45.598
  STEP: Setting up server cert @ 08/17/23 12:35:45.6
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/17/23 12:35:45.835
  STEP: Deploying the custom resource conversion webhook pod @ 08/17/23 12:35:45.84
  STEP: Wait for the deployment to be ready @ 08/17/23 12:35:45.845
  Aug 17 12:35:45.848: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0817 12:35:46.001522      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:47.001790      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:35:47.857
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:35:47.866
  E0817 12:35:48.002657      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:35:48.866: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 17 12:35:48.871: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:35:49.002769      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:50.003204      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:51.003386      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 08/17/23 12:35:51.405
  STEP: Create a v2 custom resource @ 08/17/23 12:35:51.416
  STEP: List CRs in v1 @ 08/17/23 12:35:51.432
  STEP: List CRs in v2 @ 08/17/23 12:35:51.435
  Aug 17 12:35:51.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5996" for this suite. @ 08/17/23 12:35:51.977
• [6.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 08/17/23 12:35:51.988
  Aug 17 12:35:51.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename events @ 08/17/23 12:35:51.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:35:51.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:35:52
  STEP: Create set of events @ 08/17/23 12:35:52.002
  E0817 12:35:52.003676      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get a list of Events with a label in the current namespace @ 08/17/23 12:35:52.011
  STEP: delete a list of events @ 08/17/23 12:35:52.012
  Aug 17 12:35:52.012: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/17/23 12:35:52.022
  Aug 17 12:35:52.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3319" for this suite. @ 08/17/23 12:35:52.026
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 08/17/23 12:35:52.029
  Aug 17 12:35:52.029: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:35:52.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:35:52.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:35:52.038
  STEP: Counting existing ResourceQuota @ 08/17/23 12:35:52.039
  E0817 12:35:53.003929      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:54.004519      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:55.005157      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:56.005834      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:57.006685      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/17/23 12:35:57.043
  STEP: Ensuring resource quota status is calculated @ 08/17/23 12:35:57.046
  E0817 12:35:58.006843      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:35:59.007110      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 08/17/23 12:35:59.05
  STEP: Ensuring resource quota status captures replication controller creation @ 08/17/23 12:35:59.056
  E0817 12:36:00.007325      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:01.007495      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 08/17/23 12:36:01.06
  STEP: Ensuring resource quota status released usage @ 08/17/23 12:36:01.063
  E0817 12:36:02.007764      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:03.008008      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:03.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8707" for this suite. @ 08/17/23 12:36:03.069
• [11.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 08/17/23 12:36:03.073
  Aug 17 12:36:03.073: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename gc @ 08/17/23 12:36:03.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:36:03.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:36:03.085
  STEP: create the rc @ 08/17/23 12:36:03.089
  W0817 12:36:03.092129      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0817 12:36:04.014358      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:05.015135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:06.017150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:07.017251      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:08.017704      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:09.018729      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/17/23 12:36:09.095
  STEP: wait for the rc to be deleted @ 08/17/23 12:36:09.098
  E0817 12:36:10.019585      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:11.019744      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:12.019896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:13.020239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:14.020380      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 08/17/23 12:36:14.101
  E0817 12:36:15.020540      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:16.020785      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:17.020942      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:18.021602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:19.021626      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:20.021735      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:21.021805      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:22.021970      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:23.022341      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:24.022461      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:25.022610      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:26.022744      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:27.022870      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:28.023065      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:29.023204      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:30.023290      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:31.023389      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:32.023516      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:33.023970      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:34.024057      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:35.024147      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:36.024281      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:37.024406      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:38.024507      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:39.024652      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:40.024780      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:41.024918      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:42.025052      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:43.025179      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:44.025271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/17/23 12:36:44.11
  Aug 17 12:36:44.153: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 17 12:36:44.153: INFO: Deleting pod "simpletest.rc-2gtzg" in namespace "gc-7289"
  Aug 17 12:36:44.160: INFO: Deleting pod "simpletest.rc-2nc2m" in namespace "gc-7289"
  Aug 17 12:36:44.168: INFO: Deleting pod "simpletest.rc-2qs2q" in namespace "gc-7289"
  Aug 17 12:36:44.176: INFO: Deleting pod "simpletest.rc-2qwfk" in namespace "gc-7289"
  Aug 17 12:36:44.182: INFO: Deleting pod "simpletest.rc-2tvz5" in namespace "gc-7289"
  Aug 17 12:36:44.189: INFO: Deleting pod "simpletest.rc-44sz4" in namespace "gc-7289"
  Aug 17 12:36:44.194: INFO: Deleting pod "simpletest.rc-462gm" in namespace "gc-7289"
  Aug 17 12:36:44.201: INFO: Deleting pod "simpletest.rc-4f72f" in namespace "gc-7289"
  Aug 17 12:36:44.208: INFO: Deleting pod "simpletest.rc-4khvj" in namespace "gc-7289"
  Aug 17 12:36:44.216: INFO: Deleting pod "simpletest.rc-4lxt9" in namespace "gc-7289"
  Aug 17 12:36:44.222: INFO: Deleting pod "simpletest.rc-4mf2l" in namespace "gc-7289"
  Aug 17 12:36:44.229: INFO: Deleting pod "simpletest.rc-57bn2" in namespace "gc-7289"
  Aug 17 12:36:44.234: INFO: Deleting pod "simpletest.rc-5zms8" in namespace "gc-7289"
  Aug 17 12:36:44.239: INFO: Deleting pod "simpletest.rc-645gw" in namespace "gc-7289"
  Aug 17 12:36:44.244: INFO: Deleting pod "simpletest.rc-64ptb" in namespace "gc-7289"
  Aug 17 12:36:44.251: INFO: Deleting pod "simpletest.rc-6l668" in namespace "gc-7289"
  Aug 17 12:36:44.257: INFO: Deleting pod "simpletest.rc-75fkv" in namespace "gc-7289"
  Aug 17 12:36:44.263: INFO: Deleting pod "simpletest.rc-7929g" in namespace "gc-7289"
  Aug 17 12:36:44.270: INFO: Deleting pod "simpletest.rc-7bhg2" in namespace "gc-7289"
  Aug 17 12:36:44.275: INFO: Deleting pod "simpletest.rc-7t6jd" in namespace "gc-7289"
  Aug 17 12:36:44.282: INFO: Deleting pod "simpletest.rc-85jm9" in namespace "gc-7289"
  Aug 17 12:36:44.289: INFO: Deleting pod "simpletest.rc-86mwb" in namespace "gc-7289"
  Aug 17 12:36:44.295: INFO: Deleting pod "simpletest.rc-8c9tf" in namespace "gc-7289"
  Aug 17 12:36:44.302: INFO: Deleting pod "simpletest.rc-8x4mn" in namespace "gc-7289"
  Aug 17 12:36:44.309: INFO: Deleting pod "simpletest.rc-8zlwg" in namespace "gc-7289"
  Aug 17 12:36:44.316: INFO: Deleting pod "simpletest.rc-95tts" in namespace "gc-7289"
  Aug 17 12:36:44.322: INFO: Deleting pod "simpletest.rc-9cq2k" in namespace "gc-7289"
  Aug 17 12:36:44.329: INFO: Deleting pod "simpletest.rc-9n88p" in namespace "gc-7289"
  Aug 17 12:36:44.336: INFO: Deleting pod "simpletest.rc-9qlnw" in namespace "gc-7289"
  Aug 17 12:36:44.344: INFO: Deleting pod "simpletest.rc-b2pvq" in namespace "gc-7289"
  Aug 17 12:36:44.351: INFO: Deleting pod "simpletest.rc-bj96x" in namespace "gc-7289"
  Aug 17 12:36:44.358: INFO: Deleting pod "simpletest.rc-bkclj" in namespace "gc-7289"
  Aug 17 12:36:44.364: INFO: Deleting pod "simpletest.rc-bqtps" in namespace "gc-7289"
  Aug 17 12:36:44.370: INFO: Deleting pod "simpletest.rc-c4nps" in namespace "gc-7289"
  Aug 17 12:36:44.377: INFO: Deleting pod "simpletest.rc-c9zwj" in namespace "gc-7289"
  Aug 17 12:36:44.384: INFO: Deleting pod "simpletest.rc-cdhnz" in namespace "gc-7289"
  Aug 17 12:36:44.389: INFO: Deleting pod "simpletest.rc-cp52b" in namespace "gc-7289"
  Aug 17 12:36:44.397: INFO: Deleting pod "simpletest.rc-cr5mm" in namespace "gc-7289"
  Aug 17 12:36:44.402: INFO: Deleting pod "simpletest.rc-cw7wd" in namespace "gc-7289"
  Aug 17 12:36:44.423: INFO: Deleting pod "simpletest.rc-dcp4h" in namespace "gc-7289"
  Aug 17 12:36:44.432: INFO: Deleting pod "simpletest.rc-dfxm5" in namespace "gc-7289"
  Aug 17 12:36:44.438: INFO: Deleting pod "simpletest.rc-dr28k" in namespace "gc-7289"
  Aug 17 12:36:44.446: INFO: Deleting pod "simpletest.rc-f6d5f" in namespace "gc-7289"
  Aug 17 12:36:44.452: INFO: Deleting pod "simpletest.rc-fdg7p" in namespace "gc-7289"
  Aug 17 12:36:44.458: INFO: Deleting pod "simpletest.rc-fx4hk" in namespace "gc-7289"
  Aug 17 12:36:44.463: INFO: Deleting pod "simpletest.rc-ggp2k" in namespace "gc-7289"
  Aug 17 12:36:44.470: INFO: Deleting pod "simpletest.rc-h874w" in namespace "gc-7289"
  Aug 17 12:36:44.477: INFO: Deleting pod "simpletest.rc-hbm77" in namespace "gc-7289"
  Aug 17 12:36:44.484: INFO: Deleting pod "simpletest.rc-hp6np" in namespace "gc-7289"
  Aug 17 12:36:44.490: INFO: Deleting pod "simpletest.rc-htfng" in namespace "gc-7289"
  Aug 17 12:36:44.495: INFO: Deleting pod "simpletest.rc-jdzqk" in namespace "gc-7289"
  Aug 17 12:36:44.501: INFO: Deleting pod "simpletest.rc-jfxgj" in namespace "gc-7289"
  Aug 17 12:36:44.508: INFO: Deleting pod "simpletest.rc-jkfmv" in namespace "gc-7289"
  Aug 17 12:36:44.513: INFO: Deleting pod "simpletest.rc-jstsg" in namespace "gc-7289"
  Aug 17 12:36:44.518: INFO: Deleting pod "simpletest.rc-kd8sv" in namespace "gc-7289"
  Aug 17 12:36:44.560: INFO: Deleting pod "simpletest.rc-kgh2w" in namespace "gc-7289"
  Aug 17 12:36:44.611: INFO: Deleting pod "simpletest.rc-kh597" in namespace "gc-7289"
  Aug 17 12:36:44.662: INFO: Deleting pod "simpletest.rc-kkvfv" in namespace "gc-7289"
  Aug 17 12:36:44.710: INFO: Deleting pod "simpletest.rc-kxqzv" in namespace "gc-7289"
  Aug 17 12:36:44.762: INFO: Deleting pod "simpletest.rc-lhq6v" in namespace "gc-7289"
  Aug 17 12:36:44.810: INFO: Deleting pod "simpletest.rc-lj466" in namespace "gc-7289"
  Aug 17 12:36:44.860: INFO: Deleting pod "simpletest.rc-lx6bs" in namespace "gc-7289"
  Aug 17 12:36:44.911: INFO: Deleting pod "simpletest.rc-lxx67" in namespace "gc-7289"
  Aug 17 12:36:44.960: INFO: Deleting pod "simpletest.rc-mgxkf" in namespace "gc-7289"
  Aug 17 12:36:45.010: INFO: Deleting pod "simpletest.rc-mjfdw" in namespace "gc-7289"
  E0817 12:36:45.025368      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:45.060: INFO: Deleting pod "simpletest.rc-mmlfz" in namespace "gc-7289"
  Aug 17 12:36:45.109: INFO: Deleting pod "simpletest.rc-mp4wh" in namespace "gc-7289"
  Aug 17 12:36:45.171: INFO: Deleting pod "simpletest.rc-n26vn" in namespace "gc-7289"
  Aug 17 12:36:45.209: INFO: Deleting pod "simpletest.rc-n6p6s" in namespace "gc-7289"
  Aug 17 12:36:45.259: INFO: Deleting pod "simpletest.rc-p6czr" in namespace "gc-7289"
  Aug 17 12:36:45.309: INFO: Deleting pod "simpletest.rc-plt5z" in namespace "gc-7289"
  Aug 17 12:36:45.359: INFO: Deleting pod "simpletest.rc-ppvsw" in namespace "gc-7289"
  Aug 17 12:36:45.409: INFO: Deleting pod "simpletest.rc-qbmgv" in namespace "gc-7289"
  Aug 17 12:36:45.460: INFO: Deleting pod "simpletest.rc-qlp5z" in namespace "gc-7289"
  Aug 17 12:36:45.509: INFO: Deleting pod "simpletest.rc-qtkr4" in namespace "gc-7289"
  Aug 17 12:36:45.559: INFO: Deleting pod "simpletest.rc-r2vkk" in namespace "gc-7289"
  Aug 17 12:36:45.609: INFO: Deleting pod "simpletest.rc-r9bdb" in namespace "gc-7289"
  Aug 17 12:36:45.659: INFO: Deleting pod "simpletest.rc-rcsnj" in namespace "gc-7289"
  Aug 17 12:36:45.709: INFO: Deleting pod "simpletest.rc-rdmwr" in namespace "gc-7289"
  Aug 17 12:36:45.759: INFO: Deleting pod "simpletest.rc-rfvrf" in namespace "gc-7289"
  Aug 17 12:36:45.809: INFO: Deleting pod "simpletest.rc-rrg58" in namespace "gc-7289"
  Aug 17 12:36:45.859: INFO: Deleting pod "simpletest.rc-rrg8n" in namespace "gc-7289"
  Aug 17 12:36:45.910: INFO: Deleting pod "simpletest.rc-slxjp" in namespace "gc-7289"
  Aug 17 12:36:45.960: INFO: Deleting pod "simpletest.rc-snmg8" in namespace "gc-7289"
  Aug 17 12:36:46.009: INFO: Deleting pod "simpletest.rc-tc2fr" in namespace "gc-7289"
  E0817 12:36:46.025937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:46.058: INFO: Deleting pod "simpletest.rc-td5lg" in namespace "gc-7289"
  Aug 17 12:36:46.109: INFO: Deleting pod "simpletest.rc-td8l2" in namespace "gc-7289"
  Aug 17 12:36:46.161: INFO: Deleting pod "simpletest.rc-thzdv" in namespace "gc-7289"
  Aug 17 12:36:46.209: INFO: Deleting pod "simpletest.rc-tng49" in namespace "gc-7289"
  Aug 17 12:36:46.259: INFO: Deleting pod "simpletest.rc-trfs7" in namespace "gc-7289"
  Aug 17 12:36:46.310: INFO: Deleting pod "simpletest.rc-vdljq" in namespace "gc-7289"
  Aug 17 12:36:46.359: INFO: Deleting pod "simpletest.rc-vh4qc" in namespace "gc-7289"
  Aug 17 12:36:46.408: INFO: Deleting pod "simpletest.rc-vnx6c" in namespace "gc-7289"
  Aug 17 12:36:46.459: INFO: Deleting pod "simpletest.rc-vwwk8" in namespace "gc-7289"
  Aug 17 12:36:46.509: INFO: Deleting pod "simpletest.rc-wnxht" in namespace "gc-7289"
  Aug 17 12:36:46.559: INFO: Deleting pod "simpletest.rc-x276r" in namespace "gc-7289"
  Aug 17 12:36:46.608: INFO: Deleting pod "simpletest.rc-xt6z9" in namespace "gc-7289"
  Aug 17 12:36:46.659: INFO: Deleting pod "simpletest.rc-zfd5g" in namespace "gc-7289"
  Aug 17 12:36:46.709: INFO: Deleting pod "simpletest.rc-zkj7s" in namespace "gc-7289"
  Aug 17 12:36:46.758: INFO: Deleting pod "simpletest.rc-zmjmr" in namespace "gc-7289"
  Aug 17 12:36:46.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7289" for this suite. @ 08/17/23 12:36:46.855
• [43.833 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 08/17/23 12:36:46.907
  Aug 17 12:36:46.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 12:36:46.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:36:46.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:36:46.917
  STEP: creating a Deployment @ 08/17/23 12:36:46.921
  STEP: waiting for Deployment to be created @ 08/17/23 12:36:46.924
  STEP: waiting for all Replicas to be Ready @ 08/17/23 12:36:46.924
  Aug 17 12:36:46.925: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 17 12:36:46.925: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 17 12:36:46.930: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 17 12:36:46.930: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 17 12:36:46.936: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 17 12:36:46.936: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 17 12:36:46.950: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 17 12:36:46.950: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0817 12:36:47.026828      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:47.872: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 17 12:36:47.872: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 17 12:36:47.968: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 08/17/23 12:36:47.968
  Aug 17 12:36:47.975: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 08/17/23 12:36:47.975
  Aug 17 12:36:47.976: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.976: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.976: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 0
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.977: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.981: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.981: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.991: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.991: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:47.994: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:47.994: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:47.999: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:47.999: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  E0817 12:36:48.027596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:48.782: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:48.782: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:48.790: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  STEP: listing Deployments @ 08/17/23 12:36:48.791
  Aug 17 12:36:48.793: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 08/17/23 12:36:48.793
  Aug 17 12:36:48.798: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 08/17/23 12:36:48.798
  Aug 17 12:36:48.802: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 17 12:36:48.803: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 17 12:36:48.812: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 17 12:36:48.818: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 17 12:36:48.821: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0817 12:36:49.028100      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:49.793: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 17 12:36:49.808: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 17 12:36:49.818: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0817 12:36:50.028540      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:50.999: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 08/17/23 12:36:51.008
  STEP: fetching the DeploymentStatus @ 08/17/23 12:36:51.015
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 1
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 2
  Aug 17 12:36:51.020: INFO: observed Deployment test-deployment in namespace deployment-5204 with ReadyReplicas 3
  STEP: deleting the Deployment @ 08/17/23 12:36:51.02
  E0817 12:36:51.028621      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:51.028: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.029: INFO: observed event type MODIFIED
  Aug 17 12:36:51.030: INFO: observed event type MODIFIED
  Aug 17 12:36:51.030: INFO: observed event type MODIFIED
  Aug 17 12:36:51.031: INFO: observed event type MODIFIED
  Aug 17 12:36:51.033: INFO: Log out all the ReplicaSets if there is no deployment created
  Aug 17 12:36:51.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5204" for this suite. @ 08/17/23 12:36:51.037
• [4.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 08/17/23 12:36:51.042
  Aug 17 12:36:51.042: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename watch @ 08/17/23 12:36:51.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:36:51.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:36:51.053
  STEP: creating a watch on configmaps @ 08/17/23 12:36:51.054
  STEP: creating a new configmap @ 08/17/23 12:36:51.055
  STEP: modifying the configmap once @ 08/17/23 12:36:51.057
  STEP: closing the watch once it receives two notifications @ 08/17/23 12:36:51.061
  Aug 17 12:36:51.061: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8922  a5ccd1d6-a6ce-4f33-92cc-83a806e40817 22264 0 2023-08-17 12:36:51 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-17 12:36:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 12:36:51.062: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8922  a5ccd1d6-a6ce-4f33-92cc-83a806e40817 22265 0 2023-08-17 12:36:51 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-17 12:36:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 08/17/23 12:36:51.062
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 08/17/23 12:36:51.065
  STEP: deleting the configmap @ 08/17/23 12:36:51.066
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 08/17/23 12:36:51.068
  Aug 17 12:36:51.068: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8922  a5ccd1d6-a6ce-4f33-92cc-83a806e40817 22266 0 2023-08-17 12:36:51 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-17 12:36:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 12:36:51.069: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8922  a5ccd1d6-a6ce-4f33-92cc-83a806e40817 22267 0 2023-08-17 12:36:51 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-17 12:36:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 12:36:51.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8922" for this suite. @ 08/17/23 12:36:51.071
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 08/17/23 12:36:51.075
  Aug 17 12:36:51.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 12:36:51.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:36:51.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:36:51.085
  STEP: Creating a test headless service @ 08/17/23 12:36:51.086
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6760.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6760.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 08/17/23 12:36:51.089
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6760.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6760.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 08/17/23 12:36:51.089
  STEP: creating a pod to probe DNS @ 08/17/23 12:36:51.089
  STEP: submitting the pod to kubernetes @ 08/17/23 12:36:51.089
  E0817 12:36:52.029087      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:53.030137      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/17/23 12:36:53.099
  STEP: looking for the results for each expected name from probers @ 08/17/23 12:36:53.101
  Aug 17 12:36:53.110: INFO: DNS probes using dns-6760/dns-test-12532826-429e-47b2-bd30-7150008e4760 succeeded

  Aug 17 12:36:53.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 12:36:53.112
  STEP: deleting the test headless service @ 08/17/23 12:36:53.117
  STEP: Destroying namespace "dns-6760" for this suite. @ 08/17/23 12:36:53.123
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 08/17/23 12:36:53.127
  Aug 17 12:36:53.127: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 12:36:53.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:36:53.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:36:53.136
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 08/17/23 12:36:53.138
  Aug 17 12:36:53.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:36:54.030360      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:54.421: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:36:55.030981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:56.031207      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:57.031672      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:58.031861      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:36:59.032153      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:36:59.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7550" for this suite. @ 08/17/23 12:36:59.43
• [6.305 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 08/17/23 12:36:59.433
  Aug 17 12:36:59.433: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename daemonsets @ 08/17/23 12:36:59.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:36:59.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:36:59.443
  STEP: Creating simple DaemonSet "daemon-set" @ 08/17/23 12:36:59.452
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/17/23 12:36:59.456
  Aug 17 12:36:59.458: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:36:59.458: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:36:59.458: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:36:59.460: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:36:59.460: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:37:00.033166      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:00.463: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:00.463: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:00.463: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:00.465: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:37:00.465: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:37:01.033813      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:01.463: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:01.463: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:01.463: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:01.465: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 12:37:01.465: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 08/17/23 12:37:01.466
  STEP: DeleteCollection of the DaemonSets @ 08/17/23 12:37:01.468
  STEP: Verify that ReplicaSets have been deleted @ 08/17/23 12:37:01.471
  Aug 17 12:37:01.476: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22963"},"items":null}

  Aug 17 12:37:01.477: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22963"},"items":[{"metadata":{"name":"daemon-set-vm5mr","generateName":"daemon-set-","namespace":"daemonsets-5642","uid":"5c98ac01-5b51-4e2e-8b2b-273963c9b418","resourceVersion":"22960","creationTimestamp":"2023-08-17T12:36:59Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d0e0db63-0e94-49f8-91fa-8508c1c16766","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-17T12:36:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d0e0db63-0e94-49f8-91fa-8508c1c16766\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-17T12:37:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.185\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rg7f7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rg7f7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"talos-default-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["talos-default-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:36:59Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:37:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:37:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:36:59Z"}],"hostIP":"172.20.0.6","podIP":"10.244.2.185","podIPs":[{"ip":"10.244.2.185"}],"startTime":"2023-08-17T12:36:59Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-17T12:37:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d59e7c58c0f405946520fd86b62d7ac9bbed69c9d12bc635da26cec09d164e36","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zv4m2","generateName":"daemon-set-","namespace":"daemonsets-5642","uid":"c9e49a06-4298-4894-a08a-6eb9e1b8caf6","resourceVersion":"22958","creationTimestamp":"2023-08-17T12:36:59Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d0e0db63-0e94-49f8-91fa-8508c1c16766","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-17T12:36:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d0e0db63-0e94-49f8-91fa-8508c1c16766\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-17T12:37:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-v6s9f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-v6s9f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"talos-default-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["talos-default-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:36:59Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:37:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:37:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-17T12:36:59Z"}],"hostIP":"172.20.0.5","podIP":"10.244.1.57","podIPs":[{"ip":"10.244.1.57"}],"startTime":"2023-08-17T12:36:59Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-17T12:37:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://077d953ba88037f0dec1d2ba6638a0ec761e6987d8edc636ff4823c899a0923c","started":true}],"qosClass":"BestEffort"}}]}

  Aug 17 12:37:01.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5642" for this suite. @ 08/17/23 12:37:01.485
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 08/17/23 12:37:01.489
  Aug 17 12:37:01.489: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/17/23 12:37:01.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:01.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:01.499
  Aug 17 12:37:01.501: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:37:02.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1167" for this suite. @ 08/17/23 12:37:02.022
• [0.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 08/17/23 12:37:02.026
  Aug 17 12:37:02.026: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 12:37:02.027
  E0817 12:37:02.034584      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:02.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:02.038
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 08/17/23 12:37:02.04
  Aug 17 12:37:02.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:37:03.035267      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:04.036153      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:05.036142      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:06.036361      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 08/17/23 12:37:06.857
  Aug 17 12:37:06.857: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:37:07.037377      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:08.037839      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:08.094: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:37:09.038730      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:10.039568      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:11.040005      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:12.040808      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:13.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1525" for this suite. @ 08/17/23 12:37:13.032
• [11.009 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 08/17/23 12:37:13.036
  Aug 17 12:37:13.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:37:13.037
  E0817 12:37:13.041879      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:13.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:13.048
  STEP: Creating configMap with name configmap-test-volume-744f5340-c1ef-414f-9b5b-0af5011a063b @ 08/17/23 12:37:13.05
  STEP: Creating a pod to test consume configMaps @ 08/17/23 12:37:13.054
  E0817 12:37:14.042342      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:15.042618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:37:15.066
  Aug 17 12:37:15.068: INFO: Trying to get logs from node talos-default-worker-1 pod pod-configmaps-823f448a-2dbb-4792-a012-6158e239a99d container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:37:15.076
  Aug 17 12:37:15.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3419" for this suite. @ 08/17/23 12:37:15.087
• [2.054 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 08/17/23 12:37:15.09
  Aug 17 12:37:15.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-pred @ 08/17/23 12:37:15.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:15.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:15.1
  Aug 17 12:37:15.102: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 17 12:37:15.106: INFO: Waiting for terminating namespaces to be deleted...
  Aug 17 12:37:15.108: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Aug 17 12:37:15.111: INFO: kube-flannel-xzfkd from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:37:15.111: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:37:15.111: INFO: kube-proxy-hnc5q from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:37:15.111: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:37:15.111: INFO: sonobuoy from sonobuoy started at 2023-08-17 11:35:15 +0000 UTC (1 container statuses recorded)
  Aug 17 12:37:15.111: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 17 12:37:15.111: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Aug 17 12:37:15.114: INFO: kube-flannel-rfh4z from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:37:15.114: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:37:15.114: INFO: kube-proxy-g8g7c from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:37:15.114: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:37:15.114: INFO: sonobuoy-e2e-job-5ab025959c564c77 from sonobuoy started at 2023-08-17 11:35:17 +0000 UTC (2 container statuses recorded)
  Aug 17 12:37:15.114: INFO: 	Container e2e ready: true, restart count 0
  Aug 17 12:37:15.114: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 08/17/23 12:37:15.114
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.177c2be7eea9c772], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 08/17/23 12:37:15.127
  E0817 12:37:16.042695      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:16.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4503" for this suite. @ 08/17/23 12:37:16.13
• [1.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 08/17/23 12:37:16.134
  Aug 17 12:37:16.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename gc @ 08/17/23 12:37:16.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:16.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:16.143
  STEP: create the rc @ 08/17/23 12:37:16.15
  W0817 12:37:16.152740      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0817 12:37:17.043765      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:18.044653      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:19.045338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:20.046541      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:21.046587      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:22.046725      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/17/23 12:37:22.154
  STEP: wait for the rc to be deleted @ 08/17/23 12:37:22.157
  E0817 12:37:23.047410      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:23.171: INFO: 80 pods remaining
  Aug 17 12:37:23.171: INFO: 80 pods has nil DeletionTimestamp
  Aug 17 12:37:23.171: INFO: 
  E0817 12:37:24.049318      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:24.167: INFO: 71 pods remaining
  Aug 17 12:37:24.167: INFO: 71 pods has nil DeletionTimestamp
  Aug 17 12:37:24.167: INFO: 
  E0817 12:37:25.049573      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:25.165: INFO: 60 pods remaining
  Aug 17 12:37:25.165: INFO: 60 pods has nil DeletionTimestamp
  Aug 17 12:37:25.165: INFO: 
  E0817 12:37:26.050422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:26.163: INFO: 40 pods remaining
  Aug 17 12:37:26.163: INFO: 40 pods has nil DeletionTimestamp
  Aug 17 12:37:26.163: INFO: 
  E0817 12:37:27.051117      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:27.164: INFO: 31 pods remaining
  Aug 17 12:37:27.164: INFO: 31 pods has nil DeletionTimestamp
  Aug 17 12:37:27.164: INFO: 
  E0817 12:37:28.051748      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:28.164: INFO: 20 pods remaining
  Aug 17 12:37:28.164: INFO: 20 pods has nil DeletionTimestamp
  Aug 17 12:37:28.164: INFO: 
  E0817 12:37:29.051847      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/17/23 12:37:29.162
  Aug 17 12:37:29.196: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 17 12:37:29.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2006" for this suite. @ 08/17/23 12:37:29.199
• [13.070 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 08/17/23 12:37:29.203
  Aug 17 12:37:29.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename daemonsets @ 08/17/23 12:37:29.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:29.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:29.212
  STEP: Creating simple DaemonSet "daemon-set" @ 08/17/23 12:37:29.224
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/17/23 12:37:29.226
  Aug 17 12:37:29.228: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:29.228: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:29.228: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:29.230: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:37:29.230: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:37:30.052415      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:30.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:30.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:30.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:30.243: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 17 12:37:30.243: INFO: Node talos-default-worker-2 is running 0 daemon pod, expected 1
  E0817 12:37:31.052705      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:31.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:31.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:31.234: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:31.236: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 17 12:37:31.236: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 08/17/23 12:37:31.237
  Aug 17 12:37:31.239: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 08/17/23 12:37:31.239
  Aug 17 12:37:31.244: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 08/17/23 12:37:31.244
  Aug 17 12:37:31.245: INFO: Observed &DaemonSet event: ADDED
  Aug 17 12:37:31.245: INFO: Observed &DaemonSet event: MODIFIED
  Aug 17 12:37:31.245: INFO: Observed &DaemonSet event: MODIFIED
  Aug 17 12:37:31.245: INFO: Observed &DaemonSet event: MODIFIED
  Aug 17 12:37:31.245: INFO: Found daemon set daemon-set in namespace daemonsets-7371 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 17 12:37:31.245: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 08/17/23 12:37:31.245
  STEP: watching for the daemon set status to be patched @ 08/17/23 12:37:31.249
  Aug 17 12:37:31.250: INFO: Observed &DaemonSet event: ADDED
  Aug 17 12:37:31.250: INFO: Observed &DaemonSet event: MODIFIED
  Aug 17 12:37:31.250: INFO: Observed &DaemonSet event: MODIFIED
  Aug 17 12:37:31.250: INFO: Observed &DaemonSet event: MODIFIED
  Aug 17 12:37:31.250: INFO: Observed daemon set daemon-set in namespace daemonsets-7371 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 17 12:37:31.250: INFO: Observed &DaemonSet event: MODIFIED
  Aug 17 12:37:31.250: INFO: Found daemon set daemon-set in namespace daemonsets-7371 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Aug 17 12:37:31.250: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 08/17/23 12:37:31.253
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7371, will wait for the garbage collector to delete the pods @ 08/17/23 12:37:31.253
  Aug 17 12:37:31.308: INFO: Deleting DaemonSet.extensions daemon-set took: 3.346254ms
  Aug 17 12:37:31.409: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.243236ms
  E0817 12:37:32.052734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:32.512: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 17 12:37:32.512: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 17 12:37:32.515: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24438"},"items":null}

  Aug 17 12:37:32.517: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24438"},"items":null}

  Aug 17 12:37:32.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7371" for this suite. @ 08/17/23 12:37:32.528
• [3.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 08/17/23 12:37:32.535
  Aug 17 12:37:32.535: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename podtemplate @ 08/17/23 12:37:32.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:32.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:32.548
  Aug 17 12:37:32.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3698" for this suite. @ 08/17/23 12:37:32.572
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 08/17/23 12:37:32.577
  Aug 17 12:37:32.577: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 12:37:32.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:32.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:32.587
  STEP: Creating a test externalName service @ 08/17/23 12:37:32.589
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7401.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7401.svc.cluster.local; sleep 1; done
   @ 08/17/23 12:37:32.592
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7401.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7401.svc.cluster.local; sleep 1; done
   @ 08/17/23 12:37:32.592
  STEP: creating a pod to probe DNS @ 08/17/23 12:37:32.592
  STEP: submitting the pod to kubernetes @ 08/17/23 12:37:32.592
  E0817 12:37:33.053377      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:34.054472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/17/23 12:37:34.602
  STEP: looking for the results for each expected name from probers @ 08/17/23 12:37:34.604
  Aug 17 12:37:34.608: INFO: DNS probes using dns-test-65d85908-8f4f-4dc2-9931-a03407bd5847 succeeded

  STEP: changing the externalName to bar.example.com @ 08/17/23 12:37:34.608
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7401.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7401.svc.cluster.local; sleep 1; done
   @ 08/17/23 12:37:34.611
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7401.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7401.svc.cluster.local; sleep 1; done
   @ 08/17/23 12:37:34.611
  STEP: creating a second pod to probe DNS @ 08/17/23 12:37:34.611
  STEP: submitting the pod to kubernetes @ 08/17/23 12:37:34.611
  E0817 12:37:35.055408      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:36.055715      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:37.056036      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:38.056751      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:39.057075      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:40.057626      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/17/23 12:37:40.625
  STEP: looking for the results for each expected name from probers @ 08/17/23 12:37:40.627
  Aug 17 12:37:40.632: INFO: DNS probes using dns-test-099ff56b-4cf7-4524-8d20-b57e81b6bfe9 succeeded

  STEP: changing the service to type=ClusterIP @ 08/17/23 12:37:40.632
  W0817 12:37:40.641922      24 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7401.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7401.svc.cluster.local; sleep 1; done
   @ 08/17/23 12:37:40.642
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7401.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7401.svc.cluster.local; sleep 1; done
   @ 08/17/23 12:37:40.642
  STEP: creating a third pod to probe DNS @ 08/17/23 12:37:40.642
  STEP: submitting the pod to kubernetes @ 08/17/23 12:37:40.644
  E0817 12:37:41.058069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:42.058239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/17/23 12:37:42.653
  STEP: looking for the results for each expected name from probers @ 08/17/23 12:37:42.655
  Aug 17 12:37:42.660: INFO: DNS probes using dns-test-3c2a01ed-ed6a-4bc7-b635-9e2f5f80fe22 succeeded

  Aug 17 12:37:42.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 12:37:42.663
  STEP: deleting the pod @ 08/17/23 12:37:42.669
  STEP: deleting the pod @ 08/17/23 12:37:42.675
  STEP: deleting the test externalName service @ 08/17/23 12:37:42.681
  STEP: Destroying namespace "dns-7401" for this suite. @ 08/17/23 12:37:42.692
• [10.119 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 08/17/23 12:37:42.696
  Aug 17 12:37:42.696: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename controllerrevisions @ 08/17/23 12:37:42.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:42.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:42.706
  STEP: Creating DaemonSet "e2e-7p5sj-daemon-set" @ 08/17/23 12:37:42.715
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/17/23 12:37:42.717
  Aug 17 12:37:42.719: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:42.719: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:42.719: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:42.721: INFO: Number of nodes with available pods controlled by daemonset e2e-7p5sj-daemon-set: 0
  Aug 17 12:37:42.721: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:37:43.058794      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:43.724: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:43.724: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:43.724: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:43.725: INFO: Number of nodes with available pods controlled by daemonset e2e-7p5sj-daemon-set: 1
  Aug 17 12:37:43.725: INFO: Node talos-default-worker-1 is running 0 daemon pod, expected 1
  E0817 12:37:44.059396      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:44.724: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:44.724: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:44.724: INFO: DaemonSet pods can't tolerate node talos-default-controlplane-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 17 12:37:44.726: INFO: Number of nodes with available pods controlled by daemonset e2e-7p5sj-daemon-set: 2
  Aug 17 12:37:44.726: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-7p5sj-daemon-set
  STEP: Confirm DaemonSet "e2e-7p5sj-daemon-set" successfully created with "daemonset-name=e2e-7p5sj-daemon-set" label @ 08/17/23 12:37:44.728
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-7p5sj-daemon-set" @ 08/17/23 12:37:44.731
  Aug 17 12:37:44.733: INFO: Located ControllerRevision: "e2e-7p5sj-daemon-set-999d64cb8"
  STEP: Patching ControllerRevision "e2e-7p5sj-daemon-set-999d64cb8" @ 08/17/23 12:37:44.735
  Aug 17 12:37:44.738: INFO: e2e-7p5sj-daemon-set-999d64cb8 has been patched
  STEP: Create a new ControllerRevision @ 08/17/23 12:37:44.738
  Aug 17 12:37:44.741: INFO: Created ControllerRevision: e2e-7p5sj-daemon-set-698dfcf798
  STEP: Confirm that there are two ControllerRevisions @ 08/17/23 12:37:44.741
  Aug 17 12:37:44.741: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 17 12:37:44.743: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-7p5sj-daemon-set-999d64cb8" @ 08/17/23 12:37:44.743
  STEP: Confirm that there is only one ControllerRevision @ 08/17/23 12:37:44.746
  Aug 17 12:37:44.746: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 17 12:37:44.748: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-7p5sj-daemon-set-698dfcf798" @ 08/17/23 12:37:44.749
  Aug 17 12:37:44.754: INFO: e2e-7p5sj-daemon-set-698dfcf798 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 08/17/23 12:37:44.754
  W0817 12:37:44.759243      24 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 08/17/23 12:37:44.759
  Aug 17 12:37:44.759: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0817 12:37:45.059511      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:45.761: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 17 12:37:45.763: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-7p5sj-daemon-set-698dfcf798=updated" @ 08/17/23 12:37:45.764
  STEP: Confirm that there is only one ControllerRevision @ 08/17/23 12:37:45.768
  Aug 17 12:37:45.768: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 17 12:37:45.770: INFO: Found 1 ControllerRevisions
  Aug 17 12:37:45.772: INFO: ControllerRevision "e2e-7p5sj-daemon-set-bb8696599" has revision 3
  STEP: Deleting DaemonSet "e2e-7p5sj-daemon-set" @ 08/17/23 12:37:45.774
  STEP: deleting DaemonSet.extensions e2e-7p5sj-daemon-set in namespace controllerrevisions-5352, will wait for the garbage collector to delete the pods @ 08/17/23 12:37:45.774
  Aug 17 12:37:45.830: INFO: Deleting DaemonSet.extensions e2e-7p5sj-daemon-set took: 3.543988ms
  Aug 17 12:37:45.931: INFO: Terminating DaemonSet.extensions e2e-7p5sj-daemon-set pods took: 100.42109ms
  E0817 12:37:46.059798      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:47.060460      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:37:47.335: INFO: Number of nodes with available pods controlled by daemonset e2e-7p5sj-daemon-set: 0
  Aug 17 12:37:47.335: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-7p5sj-daemon-set
  Aug 17 12:37:47.337: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25125"},"items":null}

  Aug 17 12:37:47.339: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25125"},"items":null}

  Aug 17 12:37:47.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5352" for this suite. @ 08/17/23 12:37:47.35
• [4.657 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 08/17/23 12:37:47.354
  Aug 17 12:37:47.354: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename containers @ 08/17/23 12:37:47.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:47.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:47.365
  STEP: Creating a pod to test override all @ 08/17/23 12:37:47.368
  E0817 12:37:48.060620      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:49.060870      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:37:49.378
  Aug 17 12:37:49.381: INFO: Trying to get logs from node talos-default-worker-1 pod client-containers-b93f78a1-2668-4e29-b008-4ac95f319735 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:37:49.385
  Aug 17 12:37:49.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5161" for this suite. @ 08/17/23 12:37:49.398
• [2.048 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 08/17/23 12:37:49.402
  Aug 17 12:37:49.402: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 12:37:49.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:37:49.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:37:49.413
  E0817 12:37:50.060943      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:51.061211      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:52.062054      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:53.062488      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:54.063501      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:55.064261      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:56.065104      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:57.065260      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:58.065684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:37:59.066461      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:00.066737      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:01.066815      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:02.067216      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:03.067510      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:04.067657      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:05.068331      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:06.068669      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:07.068822      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:08.069490      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:09.069722      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:10.070622      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:11.070876      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:11.461: INFO: Container started at 2023-08-17 12:37:50 +0000 UTC, pod became ready at 2023-08-17 12:38:09 +0000 UTC
  Aug 17 12:38:11.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9953" for this suite. @ 08/17/23 12:38:11.464
• [22.065 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 08/17/23 12:38:11.468
  Aug 17 12:38:11.468: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:38:11.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:11.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:11.478
  STEP: creating a replication controller @ 08/17/23 12:38:11.479
  Aug 17 12:38:11.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 create -f -'
  Aug 17 12:38:11.600: INFO: stderr: ""
  Aug 17 12:38:11.600: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/17/23 12:38:11.6
  Aug 17 12:38:11.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 17 12:38:11.647: INFO: stderr: ""
  Aug 17 12:38:11.647: INFO: stdout: "update-demo-nautilus-9qp7n update-demo-nautilus-hjrs4 "
  Aug 17 12:38:11.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-9qp7n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 12:38:11.683: INFO: stderr: ""
  Aug 17 12:38:11.683: INFO: stdout: ""
  Aug 17 12:38:11.683: INFO: update-demo-nautilus-9qp7n is created but not running
  E0817 12:38:12.071431      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:13.071884      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:14.072116      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:15.072614      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:16.072813      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:16.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 17 12:38:16.727: INFO: stderr: ""
  Aug 17 12:38:16.727: INFO: stdout: "update-demo-nautilus-9qp7n update-demo-nautilus-hjrs4 "
  Aug 17 12:38:16.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-9qp7n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 12:38:16.764: INFO: stderr: ""
  Aug 17 12:38:16.765: INFO: stdout: "true"
  Aug 17 12:38:16.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-9qp7n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 12:38:16.809: INFO: stderr: ""
  Aug 17 12:38:16.809: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 12:38:16.809: INFO: validating pod update-demo-nautilus-9qp7n
  Aug 17 12:38:16.812: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 12:38:16.812: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 12:38:16.812: INFO: update-demo-nautilus-9qp7n is verified up and running
  Aug 17 12:38:16.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 12:38:16.848: INFO: stderr: ""
  Aug 17 12:38:16.848: INFO: stdout: "true"
  Aug 17 12:38:16.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 12:38:16.885: INFO: stderr: ""
  Aug 17 12:38:16.885: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 12:38:16.885: INFO: validating pod update-demo-nautilus-hjrs4
  Aug 17 12:38:16.889: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 12:38:16.889: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 12:38:16.889: INFO: update-demo-nautilus-hjrs4 is verified up and running
  STEP: scaling down the replication controller @ 08/17/23 12:38:16.889
  Aug 17 12:38:16.890: INFO: scanned /root for discovery docs: <nil>
  Aug 17 12:38:16.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0817 12:38:17.073104      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:17.937: INFO: stderr: ""
  Aug 17 12:38:17.937: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/17/23 12:38:17.937
  Aug 17 12:38:17.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 17 12:38:18.013: INFO: stderr: ""
  Aug 17 12:38:18.013: INFO: stdout: "update-demo-nautilus-hjrs4 "
  Aug 17 12:38:18.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0817 12:38:18.073896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:18.081: INFO: stderr: ""
  Aug 17 12:38:18.081: INFO: stdout: "true"
  Aug 17 12:38:18.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 12:38:18.132: INFO: stderr: ""
  Aug 17 12:38:18.132: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 12:38:18.132: INFO: validating pod update-demo-nautilus-hjrs4
  Aug 17 12:38:18.135: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 12:38:18.135: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 12:38:18.135: INFO: update-demo-nautilus-hjrs4 is verified up and running
  STEP: scaling up the replication controller @ 08/17/23 12:38:18.135
  Aug 17 12:38:18.137: INFO: scanned /root for discovery docs: <nil>
  Aug 17 12:38:18.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0817 12:38:19.074012      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:19.197: INFO: stderr: ""
  Aug 17 12:38:19.197: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/17/23 12:38:19.197
  Aug 17 12:38:19.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 17 12:38:19.276: INFO: stderr: ""
  Aug 17 12:38:19.276: INFO: stdout: "update-demo-nautilus-hjrs4 update-demo-nautilus-wkk2c "
  Aug 17 12:38:19.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 12:38:19.340: INFO: stderr: ""
  Aug 17 12:38:19.340: INFO: stdout: "true"
  Aug 17 12:38:19.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 12:38:19.389: INFO: stderr: ""
  Aug 17 12:38:19.389: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 12:38:19.389: INFO: validating pod update-demo-nautilus-hjrs4
  Aug 17 12:38:19.391: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 12:38:19.392: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 12:38:19.392: INFO: update-demo-nautilus-hjrs4 is verified up and running
  Aug 17 12:38:19.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-wkk2c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 12:38:19.427: INFO: stderr: ""
  Aug 17 12:38:19.427: INFO: stdout: ""
  Aug 17 12:38:19.428: INFO: update-demo-nautilus-wkk2c is created but not running
  E0817 12:38:20.074797      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:21.074986      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:22.075178      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:23.075483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:24.076413      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:24.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 17 12:38:24.500: INFO: stderr: ""
  Aug 17 12:38:24.500: INFO: stdout: "update-demo-nautilus-hjrs4 update-demo-nautilus-wkk2c "
  Aug 17 12:38:24.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 12:38:24.566: INFO: stderr: ""
  Aug 17 12:38:24.566: INFO: stdout: "true"
  Aug 17 12:38:24.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-hjrs4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 12:38:24.625: INFO: stderr: ""
  Aug 17 12:38:24.625: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 12:38:24.625: INFO: validating pod update-demo-nautilus-hjrs4
  Aug 17 12:38:24.628: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 12:38:24.628: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 12:38:24.628: INFO: update-demo-nautilus-hjrs4 is verified up and running
  Aug 17 12:38:24.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-wkk2c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 17 12:38:24.667: INFO: stderr: ""
  Aug 17 12:38:24.667: INFO: stdout: "true"
  Aug 17 12:38:24.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods update-demo-nautilus-wkk2c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 17 12:38:24.708: INFO: stderr: ""
  Aug 17 12:38:24.708: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 17 12:38:24.708: INFO: validating pod update-demo-nautilus-wkk2c
  Aug 17 12:38:24.711: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 17 12:38:24.711: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 17 12:38:24.711: INFO: update-demo-nautilus-wkk2c is verified up and running
  STEP: using delete to clean up resources @ 08/17/23 12:38:24.711
  Aug 17 12:38:24.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 delete --grace-period=0 --force -f -'
  Aug 17 12:38:24.752: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 17 12:38:24.752: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 17 12:38:24.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get rc,svc -l name=update-demo --no-headers'
  Aug 17 12:38:24.798: INFO: stderr: "No resources found in kubectl-9568 namespace.\n"
  Aug 17 12:38:24.798: INFO: stdout: ""
  Aug 17 12:38:24.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9568 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 17 12:38:24.842: INFO: stderr: ""
  Aug 17 12:38:24.842: INFO: stdout: ""
  Aug 17 12:38:24.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9568" for this suite. @ 08/17/23 12:38:24.845
• [13.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 08/17/23 12:38:24.849
  Aug 17 12:38:24.849: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 12:38:24.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:24.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:24.858
  E0817 12:38:25.076807      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:26.076937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:26.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:38:26.874: INFO: Deleting pod "var-expansion-2fdfc777-4698-45de-ac3a-1c5ffce50434" in namespace "var-expansion-7238"
  Aug 17 12:38:26.879: INFO: Wait up to 5m0s for pod "var-expansion-2fdfc777-4698-45de-ac3a-1c5ffce50434" to be fully deleted
  E0817 12:38:27.077819      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:28.077818      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-7238" for this suite. @ 08/17/23 12:38:28.89
• [4.044 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 08/17/23 12:38:28.893
  Aug 17 12:38:28.893: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svc-latency @ 08/17/23 12:38:28.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:28.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:28.901
  Aug 17 12:38:28.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3946 @ 08/17/23 12:38:28.903
  I0817 12:38:28.906191      24 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3946, replica count: 1
  E0817 12:38:29.078497      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:38:29.958036      24 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0817 12:38:30.079299      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:38:30.959066      24 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 12:38:31.068: INFO: Created: latency-svc-9k9zv
  Aug 17 12:38:31.073: INFO: Got endpoints: latency-svc-9k9zv [13.848791ms]
  E0817 12:38:31.079612      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:31.083: INFO: Created: latency-svc-8c8rb
  Aug 17 12:38:31.087: INFO: Got endpoints: latency-svc-8c8rb [13.794078ms]
  Aug 17 12:38:31.089: INFO: Created: latency-svc-924tv
  Aug 17 12:38:31.093: INFO: Got endpoints: latency-svc-924tv [20.252024ms]
  Aug 17 12:38:31.099: INFO: Created: latency-svc-x4g8w
  Aug 17 12:38:31.104: INFO: Got endpoints: latency-svc-x4g8w [30.391678ms]
  Aug 17 12:38:31.106: INFO: Created: latency-svc-nwpch
  Aug 17 12:38:31.110: INFO: Got endpoints: latency-svc-nwpch [37.1132ms]
  Aug 17 12:38:31.113: INFO: Created: latency-svc-ph9mn
  Aug 17 12:38:31.117: INFO: Got endpoints: latency-svc-ph9mn [44.128878ms]
  Aug 17 12:38:31.120: INFO: Created: latency-svc-tsjpn
  Aug 17 12:38:31.124: INFO: Got endpoints: latency-svc-tsjpn [50.477869ms]
  Aug 17 12:38:31.125: INFO: Created: latency-svc-762cr
  Aug 17 12:38:31.128: INFO: Got endpoints: latency-svc-762cr [54.484418ms]
  Aug 17 12:38:31.132: INFO: Created: latency-svc-z8fpt
  Aug 17 12:38:31.135: INFO: Got endpoints: latency-svc-z8fpt [61.257809ms]
  Aug 17 12:38:31.138: INFO: Created: latency-svc-cmgdm
  Aug 17 12:38:31.140: INFO: Got endpoints: latency-svc-cmgdm [66.538918ms]
  Aug 17 12:38:31.144: INFO: Created: latency-svc-2djjv
  Aug 17 12:38:31.146: INFO: Got endpoints: latency-svc-2djjv [72.644982ms]
  Aug 17 12:38:31.149: INFO: Created: latency-svc-954qs
  Aug 17 12:38:31.153: INFO: Got endpoints: latency-svc-954qs [79.264231ms]
  Aug 17 12:38:31.154: INFO: Created: latency-svc-pk7lj
  Aug 17 12:38:31.156: INFO: Got endpoints: latency-svc-pk7lj [83.061525ms]
  Aug 17 12:38:31.160: INFO: Created: latency-svc-55qrf
  Aug 17 12:38:31.162: INFO: Got endpoints: latency-svc-55qrf [88.476577ms]
  Aug 17 12:38:31.166: INFO: Created: latency-svc-h4ww5
  Aug 17 12:38:31.168: INFO: Got endpoints: latency-svc-h4ww5 [95.222517ms]
  Aug 17 12:38:31.172: INFO: Created: latency-svc-5lx4z
  Aug 17 12:38:31.174: INFO: Got endpoints: latency-svc-5lx4z [100.296246ms]
  Aug 17 12:38:31.178: INFO: Created: latency-svc-psfrk
  Aug 17 12:38:31.179: INFO: Got endpoints: latency-svc-psfrk [92.500819ms]
  Aug 17 12:38:31.183: INFO: Created: latency-svc-86bs4
  Aug 17 12:38:31.186: INFO: Got endpoints: latency-svc-86bs4 [92.594406ms]
  Aug 17 12:38:31.188: INFO: Created: latency-svc-g84jc
  Aug 17 12:38:31.192: INFO: Got endpoints: latency-svc-g84jc [88.133602ms]
  Aug 17 12:38:31.196: INFO: Created: latency-svc-lxmnq
  Aug 17 12:38:31.198: INFO: Got endpoints: latency-svc-lxmnq [88.150012ms]
  Aug 17 12:38:31.202: INFO: Created: latency-svc-jm85f
  Aug 17 12:38:31.205: INFO: Got endpoints: latency-svc-jm85f [87.530856ms]
  Aug 17 12:38:31.209: INFO: Created: latency-svc-67xq4
  Aug 17 12:38:31.211: INFO: Got endpoints: latency-svc-67xq4 [86.921007ms]
  Aug 17 12:38:31.214: INFO: Created: latency-svc-hx444
  Aug 17 12:38:31.216: INFO: Got endpoints: latency-svc-hx444 [88.724986ms]
  Aug 17 12:38:31.221: INFO: Created: latency-svc-4cnmq
  Aug 17 12:38:31.226: INFO: Got endpoints: latency-svc-4cnmq [90.972991ms]
  Aug 17 12:38:31.228: INFO: Created: latency-svc-rjc2n
  Aug 17 12:38:31.231: INFO: Got endpoints: latency-svc-rjc2n [90.979594ms]
  Aug 17 12:38:31.236: INFO: Created: latency-svc-c9wmv
  Aug 17 12:38:31.237: INFO: Got endpoints: latency-svc-c9wmv [91.481349ms]
  Aug 17 12:38:31.244: INFO: Created: latency-svc-z8sdw
  Aug 17 12:38:31.247: INFO: Got endpoints: latency-svc-z8sdw [94.078873ms]
  Aug 17 12:38:31.252: INFO: Created: latency-svc-6f6ph
  Aug 17 12:38:31.254: INFO: Got endpoints: latency-svc-6f6ph [98.131157ms]
  Aug 17 12:38:31.258: INFO: Created: latency-svc-24k6b
  Aug 17 12:38:31.262: INFO: Got endpoints: latency-svc-24k6b [100.265638ms]
  Aug 17 12:38:31.263: INFO: Created: latency-svc-twjtj
  Aug 17 12:38:31.266: INFO: Got endpoints: latency-svc-twjtj [97.422633ms]
  Aug 17 12:38:31.273: INFO: Created: latency-svc-tvr2h
  Aug 17 12:38:31.275: INFO: Got endpoints: latency-svc-tvr2h [101.275771ms]
  Aug 17 12:38:31.279: INFO: Created: latency-svc-mgmpm
  Aug 17 12:38:31.284: INFO: Got endpoints: latency-svc-mgmpm [104.30095ms]
  Aug 17 12:38:31.294: INFO: Created: latency-svc-29v8q
  Aug 17 12:38:31.297: INFO: Got endpoints: latency-svc-29v8q [110.852684ms]
  Aug 17 12:38:31.309: INFO: Created: latency-svc-m8864
  Aug 17 12:38:31.314: INFO: Got endpoints: latency-svc-m8864 [122.569509ms]
  Aug 17 12:38:31.319: INFO: Created: latency-svc-4ppnj
  Aug 17 12:38:31.323: INFO: Got endpoints: latency-svc-4ppnj [124.026153ms]
  Aug 17 12:38:31.325: INFO: Created: latency-svc-7jmvm
  Aug 17 12:38:31.333: INFO: Created: latency-svc-lsh96
  Aug 17 12:38:31.337: INFO: Created: latency-svc-xkg4b
  Aug 17 12:38:31.341: INFO: Created: latency-svc-tm29v
  Aug 17 12:38:31.345: INFO: Created: latency-svc-znc9r
  Aug 17 12:38:31.349: INFO: Created: latency-svc-dkz5l
  Aug 17 12:38:31.352: INFO: Created: latency-svc-h5n2w
  Aug 17 12:38:31.357: INFO: Created: latency-svc-jzkjs
  Aug 17 12:38:31.360: INFO: Created: latency-svc-z45pp
  Aug 17 12:38:31.364: INFO: Created: latency-svc-hpwhd
  Aug 17 12:38:31.368: INFO: Created: latency-svc-55szk
  Aug 17 12:38:31.371: INFO: Got endpoints: latency-svc-7jmvm [165.86725ms]
  Aug 17 12:38:31.372: INFO: Created: latency-svc-z7gk6
  Aug 17 12:38:31.377: INFO: Created: latency-svc-mft7j
  Aug 17 12:38:31.380: INFO: Created: latency-svc-q7jjr
  Aug 17 12:38:31.385: INFO: Created: latency-svc-gl4bn
  Aug 17 12:38:31.389: INFO: Created: latency-svc-9nfbk
  Aug 17 12:38:31.421: INFO: Got endpoints: latency-svc-lsh96 [210.590788ms]
  Aug 17 12:38:31.428: INFO: Created: latency-svc-79slw
  Aug 17 12:38:31.471: INFO: Got endpoints: latency-svc-xkg4b [254.706752ms]
  Aug 17 12:38:31.477: INFO: Created: latency-svc-bxxhz
  Aug 17 12:38:31.522: INFO: Got endpoints: latency-svc-tm29v [296.301395ms]
  Aug 17 12:38:31.528: INFO: Created: latency-svc-l6vr2
  Aug 17 12:38:31.571: INFO: Got endpoints: latency-svc-znc9r [340.214908ms]
  Aug 17 12:38:31.578: INFO: Created: latency-svc-gvjrm
  Aug 17 12:38:31.622: INFO: Got endpoints: latency-svc-dkz5l [384.859236ms]
  Aug 17 12:38:31.632: INFO: Created: latency-svc-2v7zz
  Aug 17 12:38:31.672: INFO: Got endpoints: latency-svc-h5n2w [425.16411ms]
  Aug 17 12:38:31.678: INFO: Created: latency-svc-72nrf
  Aug 17 12:38:31.721: INFO: Got endpoints: latency-svc-jzkjs [466.981864ms]
  Aug 17 12:38:31.729: INFO: Created: latency-svc-pf466
  Aug 17 12:38:31.772: INFO: Got endpoints: latency-svc-z45pp [509.988598ms]
  Aug 17 12:38:31.779: INFO: Created: latency-svc-zd77v
  Aug 17 12:38:31.822: INFO: Got endpoints: latency-svc-hpwhd [556.215637ms]
  Aug 17 12:38:31.829: INFO: Created: latency-svc-9m86j
  Aug 17 12:38:31.871: INFO: Got endpoints: latency-svc-55szk [596.420233ms]
  Aug 17 12:38:31.879: INFO: Created: latency-svc-7j9n6
  Aug 17 12:38:31.922: INFO: Got endpoints: latency-svc-z7gk6 [638.578668ms]
  Aug 17 12:38:31.930: INFO: Created: latency-svc-kcppx
  Aug 17 12:38:31.971: INFO: Got endpoints: latency-svc-mft7j [674.207211ms]
  Aug 17 12:38:31.979: INFO: Created: latency-svc-2dtgv
  Aug 17 12:38:32.022: INFO: Got endpoints: latency-svc-q7jjr [707.450401ms]
  Aug 17 12:38:32.030: INFO: Created: latency-svc-4n5g7
  Aug 17 12:38:32.071: INFO: Got endpoints: latency-svc-gl4bn [748.930268ms]
  E0817 12:38:32.079969      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:32.082: INFO: Created: latency-svc-4zcdw
  Aug 17 12:38:32.123: INFO: Got endpoints: latency-svc-9nfbk [752.254631ms]
  Aug 17 12:38:32.133: INFO: Created: latency-svc-qgqft
  Aug 17 12:38:32.172: INFO: Got endpoints: latency-svc-79slw [750.301972ms]
  Aug 17 12:38:32.181: INFO: Created: latency-svc-qn8gr
  Aug 17 12:38:32.222: INFO: Got endpoints: latency-svc-bxxhz [750.625813ms]
  Aug 17 12:38:32.232: INFO: Created: latency-svc-zq8px
  Aug 17 12:38:32.271: INFO: Got endpoints: latency-svc-l6vr2 [749.564663ms]
  Aug 17 12:38:32.281: INFO: Created: latency-svc-8dqr5
  Aug 17 12:38:32.322: INFO: Got endpoints: latency-svc-gvjrm [750.467033ms]
  Aug 17 12:38:32.332: INFO: Created: latency-svc-d9q9k
  Aug 17 12:38:32.372: INFO: Got endpoints: latency-svc-2v7zz [749.302118ms]
  Aug 17 12:38:32.381: INFO: Created: latency-svc-gt7mv
  Aug 17 12:38:32.422: INFO: Got endpoints: latency-svc-72nrf [750.214307ms]
  Aug 17 12:38:32.435: INFO: Created: latency-svc-s6xqf
  Aug 17 12:38:32.472: INFO: Got endpoints: latency-svc-pf466 [750.244595ms]
  Aug 17 12:38:32.482: INFO: Created: latency-svc-wwqr4
  Aug 17 12:38:32.522: INFO: Got endpoints: latency-svc-zd77v [749.920563ms]
  Aug 17 12:38:32.531: INFO: Created: latency-svc-dqzzf
  Aug 17 12:38:32.573: INFO: Got endpoints: latency-svc-9m86j [751.169777ms]
  Aug 17 12:38:32.582: INFO: Created: latency-svc-82st4
  Aug 17 12:38:32.623: INFO: Got endpoints: latency-svc-7j9n6 [751.203391ms]
  Aug 17 12:38:32.633: INFO: Created: latency-svc-5x6qm
  Aug 17 12:38:32.672: INFO: Got endpoints: latency-svc-kcppx [749.357021ms]
  Aug 17 12:38:32.681: INFO: Created: latency-svc-pgr99
  Aug 17 12:38:32.722: INFO: Got endpoints: latency-svc-2dtgv [751.219191ms]
  Aug 17 12:38:32.731: INFO: Created: latency-svc-p4bsh
  Aug 17 12:38:32.772: INFO: Got endpoints: latency-svc-4n5g7 [749.821246ms]
  Aug 17 12:38:32.781: INFO: Created: latency-svc-jq7ct
  Aug 17 12:38:32.822: INFO: Got endpoints: latency-svc-4zcdw [750.75674ms]
  Aug 17 12:38:32.831: INFO: Created: latency-svc-gm6tb
  Aug 17 12:38:32.873: INFO: Got endpoints: latency-svc-qgqft [749.888775ms]
  Aug 17 12:38:32.882: INFO: Created: latency-svc-t8fbd
  Aug 17 12:38:32.922: INFO: Got endpoints: latency-svc-qn8gr [750.664987ms]
  Aug 17 12:38:32.931: INFO: Created: latency-svc-sz6cq
  Aug 17 12:38:32.973: INFO: Got endpoints: latency-svc-zq8px [750.8316ms]
  Aug 17 12:38:32.982: INFO: Created: latency-svc-cdmxg
  Aug 17 12:38:33.022: INFO: Got endpoints: latency-svc-8dqr5 [750.526325ms]
  Aug 17 12:38:33.032: INFO: Created: latency-svc-zt2dl
  Aug 17 12:38:33.073: INFO: Got endpoints: latency-svc-d9q9k [751.549792ms]
  E0817 12:38:33.080567      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:33.085: INFO: Created: latency-svc-gxqgh
  Aug 17 12:38:33.122: INFO: Got endpoints: latency-svc-gt7mv [749.995565ms]
  Aug 17 12:38:33.135: INFO: Created: latency-svc-2w9gh
  Aug 17 12:38:33.172: INFO: Got endpoints: latency-svc-s6xqf [749.673859ms]
  Aug 17 12:38:33.185: INFO: Created: latency-svc-p9jgw
  Aug 17 12:38:33.222: INFO: Got endpoints: latency-svc-wwqr4 [750.355634ms]
  Aug 17 12:38:33.230: INFO: Created: latency-svc-fzdzc
  Aug 17 12:38:33.272: INFO: Got endpoints: latency-svc-dqzzf [749.707262ms]
  Aug 17 12:38:33.280: INFO: Created: latency-svc-qrwsf
  Aug 17 12:38:33.322: INFO: Got endpoints: latency-svc-82st4 [748.488917ms]
  Aug 17 12:38:33.330: INFO: Created: latency-svc-tq4s6
  Aug 17 12:38:33.372: INFO: Got endpoints: latency-svc-5x6qm [749.693045ms]
  Aug 17 12:38:33.380: INFO: Created: latency-svc-9p2g6
  Aug 17 12:38:33.423: INFO: Got endpoints: latency-svc-pgr99 [751.036736ms]
  Aug 17 12:38:33.432: INFO: Created: latency-svc-gsvjk
  Aug 17 12:38:33.472: INFO: Got endpoints: latency-svc-p4bsh [749.124594ms]
  Aug 17 12:38:33.480: INFO: Created: latency-svc-kpnm8
  Aug 17 12:38:33.522: INFO: Got endpoints: latency-svc-jq7ct [750.834115ms]
  Aug 17 12:38:33.531: INFO: Created: latency-svc-gf9r6
  Aug 17 12:38:33.572: INFO: Got endpoints: latency-svc-gm6tb [749.874316ms]
  Aug 17 12:38:33.580: INFO: Created: latency-svc-q76dl
  Aug 17 12:38:33.621: INFO: Got endpoints: latency-svc-t8fbd [748.289972ms]
  Aug 17 12:38:33.629: INFO: Created: latency-svc-dg45k
  Aug 17 12:38:33.674: INFO: Got endpoints: latency-svc-sz6cq [751.820773ms]
  Aug 17 12:38:33.684: INFO: Created: latency-svc-x8qjv
  Aug 17 12:38:33.722: INFO: Got endpoints: latency-svc-cdmxg [749.471327ms]
  Aug 17 12:38:33.730: INFO: Created: latency-svc-wtrmz
  Aug 17 12:38:33.772: INFO: Got endpoints: latency-svc-zt2dl [750.395588ms]
  Aug 17 12:38:33.781: INFO: Created: latency-svc-bz5mx
  Aug 17 12:38:33.822: INFO: Got endpoints: latency-svc-gxqgh [748.530004ms]
  Aug 17 12:38:33.833: INFO: Created: latency-svc-8k6tv
  Aug 17 12:38:33.873: INFO: Got endpoints: latency-svc-2w9gh [751.029623ms]
  Aug 17 12:38:33.882: INFO: Created: latency-svc-962wv
  Aug 17 12:38:33.922: INFO: Got endpoints: latency-svc-p9jgw [750.566771ms]
  Aug 17 12:38:33.932: INFO: Created: latency-svc-gv5c4
  Aug 17 12:38:33.971: INFO: Got endpoints: latency-svc-fzdzc [749.171333ms]
  Aug 17 12:38:33.979: INFO: Created: latency-svc-fm658
  Aug 17 12:38:34.021: INFO: Got endpoints: latency-svc-qrwsf [749.415744ms]
  Aug 17 12:38:34.029: INFO: Created: latency-svc-2xhgz
  Aug 17 12:38:34.072: INFO: Got endpoints: latency-svc-tq4s6 [750.363718ms]
  Aug 17 12:38:34.080: INFO: Created: latency-svc-x9djh
  E0817 12:38:34.081200      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:34.121: INFO: Got endpoints: latency-svc-9p2g6 [748.902416ms]
  Aug 17 12:38:34.128: INFO: Created: latency-svc-w9z27
  Aug 17 12:38:34.171: INFO: Got endpoints: latency-svc-gsvjk [748.270144ms]
  Aug 17 12:38:34.177: INFO: Created: latency-svc-h2jpz
  Aug 17 12:38:34.222: INFO: Got endpoints: latency-svc-kpnm8 [750.179962ms]
  Aug 17 12:38:34.228: INFO: Created: latency-svc-x2tsd
  Aug 17 12:38:34.271: INFO: Got endpoints: latency-svc-gf9r6 [748.710785ms]
  Aug 17 12:38:34.279: INFO: Created: latency-svc-k729p
  Aug 17 12:38:34.322: INFO: Got endpoints: latency-svc-q76dl [750.152199ms]
  Aug 17 12:38:34.330: INFO: Created: latency-svc-m8v8b
  Aug 17 12:38:34.372: INFO: Got endpoints: latency-svc-dg45k [751.099596ms]
  Aug 17 12:38:34.381: INFO: Created: latency-svc-j4xj4
  Aug 17 12:38:34.421: INFO: Got endpoints: latency-svc-x8qjv [747.256255ms]
  Aug 17 12:38:34.430: INFO: Created: latency-svc-4gzqr
  Aug 17 12:38:34.472: INFO: Got endpoints: latency-svc-wtrmz [749.385867ms]
  Aug 17 12:38:34.479: INFO: Created: latency-svc-48f9h
  Aug 17 12:38:34.522: INFO: Got endpoints: latency-svc-bz5mx [749.442223ms]
  Aug 17 12:38:34.530: INFO: Created: latency-svc-zkt5t
  Aug 17 12:38:34.573: INFO: Got endpoints: latency-svc-8k6tv [751.061684ms]
  Aug 17 12:38:34.582: INFO: Created: latency-svc-5lsbz
  Aug 17 12:38:34.622: INFO: Got endpoints: latency-svc-962wv [749.202141ms]
  Aug 17 12:38:34.631: INFO: Created: latency-svc-jkfnp
  Aug 17 12:38:34.672: INFO: Got endpoints: latency-svc-gv5c4 [749.759019ms]
  Aug 17 12:38:34.682: INFO: Created: latency-svc-p5d64
  Aug 17 12:38:34.722: INFO: Got endpoints: latency-svc-fm658 [751.022651ms]
  Aug 17 12:38:34.731: INFO: Created: latency-svc-wb2h2
  Aug 17 12:38:34.772: INFO: Got endpoints: latency-svc-2xhgz [750.528979ms]
  Aug 17 12:38:34.780: INFO: Created: latency-svc-lgws8
  Aug 17 12:38:34.822: INFO: Got endpoints: latency-svc-x9djh [749.810937ms]
  Aug 17 12:38:34.830: INFO: Created: latency-svc-d442z
  Aug 17 12:38:34.872: INFO: Got endpoints: latency-svc-w9z27 [750.954752ms]
  Aug 17 12:38:34.880: INFO: Created: latency-svc-b26r8
  Aug 17 12:38:34.922: INFO: Got endpoints: latency-svc-h2jpz [750.991592ms]
  Aug 17 12:38:34.931: INFO: Created: latency-svc-xz54n
  Aug 17 12:38:34.971: INFO: Got endpoints: latency-svc-x2tsd [749.688416ms]
  Aug 17 12:38:34.980: INFO: Created: latency-svc-9r9lg
  Aug 17 12:38:35.022: INFO: Got endpoints: latency-svc-k729p [751.04411ms]
  Aug 17 12:38:35.032: INFO: Created: latency-svc-klv58
  Aug 17 12:38:35.073: INFO: Got endpoints: latency-svc-m8v8b [750.473176ms]
  E0817 12:38:35.081432      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:35.084: INFO: Created: latency-svc-6g5c8
  Aug 17 12:38:35.123: INFO: Got endpoints: latency-svc-j4xj4 [750.35925ms]
  Aug 17 12:38:35.131: INFO: Created: latency-svc-xfhqf
  Aug 17 12:38:35.172: INFO: Got endpoints: latency-svc-4gzqr [750.136671ms]
  Aug 17 12:38:35.181: INFO: Created: latency-svc-c54ll
  Aug 17 12:38:35.223: INFO: Got endpoints: latency-svc-48f9h [751.157363ms]
  Aug 17 12:38:35.231: INFO: Created: latency-svc-sghb7
  Aug 17 12:38:35.271: INFO: Got endpoints: latency-svc-zkt5t [749.026939ms]
  Aug 17 12:38:35.279: INFO: Created: latency-svc-6vpb8
  Aug 17 12:38:35.322: INFO: Got endpoints: latency-svc-5lsbz [749.031218ms]
  Aug 17 12:38:35.331: INFO: Created: latency-svc-qtwgf
  Aug 17 12:38:35.372: INFO: Got endpoints: latency-svc-jkfnp [750.363048ms]
  Aug 17 12:38:35.381: INFO: Created: latency-svc-vndks
  Aug 17 12:38:35.421: INFO: Got endpoints: latency-svc-p5d64 [749.257804ms]
  Aug 17 12:38:35.430: INFO: Created: latency-svc-plrhs
  Aug 17 12:38:35.472: INFO: Got endpoints: latency-svc-wb2h2 [749.669341ms]
  Aug 17 12:38:35.481: INFO: Created: latency-svc-bkc77
  Aug 17 12:38:35.522: INFO: Got endpoints: latency-svc-lgws8 [750.259281ms]
  Aug 17 12:38:35.535: INFO: Created: latency-svc-hfzj2
  Aug 17 12:38:35.572: INFO: Got endpoints: latency-svc-d442z [749.815648ms]
  Aug 17 12:38:35.579: INFO: Created: latency-svc-nrw4c
  Aug 17 12:38:35.621: INFO: Got endpoints: latency-svc-b26r8 [749.124935ms]
  Aug 17 12:38:35.629: INFO: Created: latency-svc-f28v4
  Aug 17 12:38:35.672: INFO: Got endpoints: latency-svc-xz54n [749.396948ms]
  Aug 17 12:38:35.680: INFO: Created: latency-svc-gzqhl
  Aug 17 12:38:35.722: INFO: Got endpoints: latency-svc-9r9lg [750.509393ms]
  Aug 17 12:38:35.730: INFO: Created: latency-svc-xsrgp
  Aug 17 12:38:35.772: INFO: Got endpoints: latency-svc-klv58 [750.097698ms]
  Aug 17 12:38:35.780: INFO: Created: latency-svc-fjqt2
  Aug 17 12:38:35.821: INFO: Got endpoints: latency-svc-6g5c8 [748.397054ms]
  Aug 17 12:38:35.830: INFO: Created: latency-svc-s7hps
  Aug 17 12:38:35.872: INFO: Got endpoints: latency-svc-xfhqf [748.746091ms]
  Aug 17 12:38:35.880: INFO: Created: latency-svc-pr7fr
  Aug 17 12:38:35.921: INFO: Got endpoints: latency-svc-c54ll [749.093055ms]
  Aug 17 12:38:35.929: INFO: Created: latency-svc-l5df9
  Aug 17 12:38:35.971: INFO: Got endpoints: latency-svc-sghb7 [748.509195ms]
  Aug 17 12:38:35.981: INFO: Created: latency-svc-d9x4s
  Aug 17 12:38:36.022: INFO: Got endpoints: latency-svc-6vpb8 [750.984809ms]
  Aug 17 12:38:36.030: INFO: Created: latency-svc-ht849
  Aug 17 12:38:36.072: INFO: Got endpoints: latency-svc-qtwgf [749.546179ms]
  Aug 17 12:38:36.081: INFO: Created: latency-svc-4ldfx
  E0817 12:38:36.081517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:36.122: INFO: Got endpoints: latency-svc-vndks [749.819703ms]
  Aug 17 12:38:36.130: INFO: Created: latency-svc-sr52h
  Aug 17 12:38:36.172: INFO: Got endpoints: latency-svc-plrhs [750.158612ms]
  Aug 17 12:38:36.179: INFO: Created: latency-svc-6nsqj
  Aug 17 12:38:36.222: INFO: Got endpoints: latency-svc-bkc77 [750.112574ms]
  Aug 17 12:38:36.231: INFO: Created: latency-svc-xltl7
  Aug 17 12:38:36.272: INFO: Got endpoints: latency-svc-hfzj2 [750.325365ms]
  Aug 17 12:38:36.280: INFO: Created: latency-svc-8l7zz
  Aug 17 12:38:36.323: INFO: Got endpoints: latency-svc-nrw4c [751.146863ms]
  Aug 17 12:38:36.331: INFO: Created: latency-svc-cqwmg
  Aug 17 12:38:36.372: INFO: Got endpoints: latency-svc-f28v4 [750.478233ms]
  Aug 17 12:38:36.378: INFO: Created: latency-svc-hn9c8
  Aug 17 12:38:36.421: INFO: Got endpoints: latency-svc-gzqhl [749.689339ms]
  Aug 17 12:38:36.428: INFO: Created: latency-svc-kzpxm
  Aug 17 12:38:36.471: INFO: Got endpoints: latency-svc-xsrgp [749.13819ms]
  Aug 17 12:38:36.479: INFO: Created: latency-svc-27w7r
  Aug 17 12:38:36.521: INFO: Got endpoints: latency-svc-fjqt2 [748.688382ms]
  Aug 17 12:38:36.528: INFO: Created: latency-svc-2lhhm
  Aug 17 12:38:36.571: INFO: Got endpoints: latency-svc-s7hps [749.520902ms]
  Aug 17 12:38:36.577: INFO: Created: latency-svc-6wdtk
  Aug 17 12:38:36.622: INFO: Got endpoints: latency-svc-pr7fr [750.327812ms]
  Aug 17 12:38:36.629: INFO: Created: latency-svc-5mbfv
  Aug 17 12:38:36.671: INFO: Got endpoints: latency-svc-l5df9 [750.360614ms]
  Aug 17 12:38:36.678: INFO: Created: latency-svc-7s848
  Aug 17 12:38:36.722: INFO: Got endpoints: latency-svc-d9x4s [750.436214ms]
  Aug 17 12:38:36.729: INFO: Created: latency-svc-zfxts
  Aug 17 12:38:36.772: INFO: Got endpoints: latency-svc-ht849 [749.7379ms]
  Aug 17 12:38:36.779: INFO: Created: latency-svc-mw6nq
  Aug 17 12:38:36.822: INFO: Got endpoints: latency-svc-4ldfx [750.739025ms]
  Aug 17 12:38:36.832: INFO: Created: latency-svc-fjnfm
  Aug 17 12:38:36.873: INFO: Got endpoints: latency-svc-sr52h [750.158573ms]
  Aug 17 12:38:36.881: INFO: Created: latency-svc-jfhjt
  Aug 17 12:38:36.923: INFO: Got endpoints: latency-svc-6nsqj [750.982846ms]
  Aug 17 12:38:36.932: INFO: Created: latency-svc-f6mhl
  Aug 17 12:38:36.973: INFO: Got endpoints: latency-svc-xltl7 [750.707286ms]
  Aug 17 12:38:36.983: INFO: Created: latency-svc-9dzhw
  Aug 17 12:38:37.021: INFO: Got endpoints: latency-svc-8l7zz [748.561923ms]
  Aug 17 12:38:37.028: INFO: Created: latency-svc-ptwjc
  Aug 17 12:38:37.072: INFO: Got endpoints: latency-svc-cqwmg [749.437733ms]
  Aug 17 12:38:37.080: INFO: Created: latency-svc-r7vbs
  E0817 12:38:37.081608      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:37.123: INFO: Got endpoints: latency-svc-hn9c8 [750.726933ms]
  Aug 17 12:38:37.130: INFO: Created: latency-svc-qqwkc
  Aug 17 12:38:37.172: INFO: Got endpoints: latency-svc-kzpxm [750.845597ms]
  Aug 17 12:38:37.180: INFO: Created: latency-svc-zrwn9
  Aug 17 12:38:37.223: INFO: Got endpoints: latency-svc-27w7r [751.518454ms]
  Aug 17 12:38:37.231: INFO: Created: latency-svc-nm4jv
  Aug 17 12:38:37.272: INFO: Got endpoints: latency-svc-2lhhm [750.50252ms]
  Aug 17 12:38:37.279: INFO: Created: latency-svc-jr5f5
  Aug 17 12:38:37.322: INFO: Got endpoints: latency-svc-6wdtk [751.18691ms]
  Aug 17 12:38:37.330: INFO: Created: latency-svc-p9dq7
  Aug 17 12:38:37.372: INFO: Got endpoints: latency-svc-5mbfv [750.128706ms]
  Aug 17 12:38:37.380: INFO: Created: latency-svc-nqlm6
  Aug 17 12:38:37.422: INFO: Got endpoints: latency-svc-7s848 [750.356254ms]
  Aug 17 12:38:37.431: INFO: Created: latency-svc-vth5g
  Aug 17 12:38:37.472: INFO: Got endpoints: latency-svc-zfxts [749.997138ms]
  Aug 17 12:38:37.481: INFO: Created: latency-svc-8sf5d
  Aug 17 12:38:37.522: INFO: Got endpoints: latency-svc-mw6nq [749.784787ms]
  Aug 17 12:38:37.530: INFO: Created: latency-svc-229vb
  Aug 17 12:38:37.572: INFO: Got endpoints: latency-svc-fjnfm [749.708233ms]
  Aug 17 12:38:37.581: INFO: Created: latency-svc-fsdkg
  Aug 17 12:38:37.622: INFO: Got endpoints: latency-svc-jfhjt [749.408971ms]
  Aug 17 12:38:37.631: INFO: Created: latency-svc-22n9z
  Aug 17 12:38:37.672: INFO: Got endpoints: latency-svc-f6mhl [749.417526ms]
  Aug 17 12:38:37.680: INFO: Created: latency-svc-v2zvt
  Aug 17 12:38:37.723: INFO: Got endpoints: latency-svc-9dzhw [749.575794ms]
  Aug 17 12:38:37.731: INFO: Created: latency-svc-bs75s
  Aug 17 12:38:37.772: INFO: Got endpoints: latency-svc-ptwjc [750.404947ms]
  Aug 17 12:38:37.781: INFO: Created: latency-svc-hzlj9
  Aug 17 12:38:37.822: INFO: Got endpoints: latency-svc-r7vbs [749.637711ms]
  Aug 17 12:38:37.832: INFO: Created: latency-svc-skwgv
  Aug 17 12:38:37.872: INFO: Got endpoints: latency-svc-qqwkc [749.46205ms]
  Aug 17 12:38:37.882: INFO: Created: latency-svc-hvw4z
  Aug 17 12:38:37.922: INFO: Got endpoints: latency-svc-zrwn9 [750.346006ms]
  Aug 17 12:38:37.933: INFO: Created: latency-svc-jpmcr
  Aug 17 12:38:37.972: INFO: Got endpoints: latency-svc-nm4jv [749.500162ms]
  Aug 17 12:38:37.986: INFO: Created: latency-svc-vgjsx
  Aug 17 12:38:38.022: INFO: Got endpoints: latency-svc-jr5f5 [750.611796ms]
  Aug 17 12:38:38.032: INFO: Created: latency-svc-xh45m
  Aug 17 12:38:38.072: INFO: Got endpoints: latency-svc-p9dq7 [750.347567ms]
  E0817 12:38:38.081973      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:38.082: INFO: Created: latency-svc-g42tl
  Aug 17 12:38:38.123: INFO: Got endpoints: latency-svc-nqlm6 [750.668653ms]
  Aug 17 12:38:38.139: INFO: Created: latency-svc-7mh7k
  Aug 17 12:38:38.171: INFO: Got endpoints: latency-svc-vth5g [749.787954ms]
  Aug 17 12:38:38.178: INFO: Created: latency-svc-jd59k
  Aug 17 12:38:38.222: INFO: Got endpoints: latency-svc-8sf5d [750.35388ms]
  Aug 17 12:38:38.230: INFO: Created: latency-svc-c4gxh
  Aug 17 12:38:38.272: INFO: Got endpoints: latency-svc-229vb [750.466883ms]
  Aug 17 12:38:38.281: INFO: Created: latency-svc-wkb9p
  Aug 17 12:38:38.322: INFO: Got endpoints: latency-svc-fsdkg [749.992319ms]
  Aug 17 12:38:38.331: INFO: Created: latency-svc-l48wl
  Aug 17 12:38:38.373: INFO: Got endpoints: latency-svc-22n9z [750.75229ms]
  Aug 17 12:38:38.384: INFO: Created: latency-svc-2l4w9
  Aug 17 12:38:38.423: INFO: Got endpoints: latency-svc-v2zvt [750.674725ms]
  Aug 17 12:38:38.432: INFO: Created: latency-svc-4pnf9
  Aug 17 12:38:38.472: INFO: Got endpoints: latency-svc-bs75s [749.134193ms]
  Aug 17 12:38:38.481: INFO: Created: latency-svc-6sqjw
  Aug 17 12:38:38.523: INFO: Got endpoints: latency-svc-hzlj9 [751.009025ms]
  Aug 17 12:38:38.532: INFO: Created: latency-svc-77dfx
  Aug 17 12:38:38.572: INFO: Got endpoints: latency-svc-skwgv [749.733862ms]
  Aug 17 12:38:38.581: INFO: Created: latency-svc-blzhd
  Aug 17 12:38:38.622: INFO: Got endpoints: latency-svc-hvw4z [749.920614ms]
  Aug 17 12:38:38.631: INFO: Created: latency-svc-btchx
  Aug 17 12:38:38.673: INFO: Got endpoints: latency-svc-jpmcr [750.877507ms]
  Aug 17 12:38:38.683: INFO: Created: latency-svc-sknj5
  Aug 17 12:38:38.722: INFO: Got endpoints: latency-svc-vgjsx [749.600581ms]
  Aug 17 12:38:38.729: INFO: Created: latency-svc-9vrnn
  Aug 17 12:38:38.771: INFO: Got endpoints: latency-svc-xh45m [748.891395ms]
  Aug 17 12:38:38.778: INFO: Created: latency-svc-f5fj8
  Aug 17 12:38:38.821: INFO: Got endpoints: latency-svc-g42tl [748.741303ms]
  Aug 17 12:38:38.827: INFO: Created: latency-svc-b6x6f
  Aug 17 12:38:38.872: INFO: Got endpoints: latency-svc-7mh7k [748.847723ms]
  Aug 17 12:38:38.880: INFO: Created: latency-svc-p62pj
  Aug 17 12:38:38.927: INFO: Got endpoints: latency-svc-jd59k [755.904428ms]
  Aug 17 12:38:38.972: INFO: Got endpoints: latency-svc-c4gxh [749.557632ms]
  Aug 17 12:38:39.022: INFO: Got endpoints: latency-svc-wkb9p [749.826267ms]
  Aug 17 12:38:39.072: INFO: Got endpoints: latency-svc-l48wl [749.925414ms]
  E0817 12:38:39.082687      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:39.122: INFO: Got endpoints: latency-svc-2l4w9 [749.746477ms]
  Aug 17 12:38:39.172: INFO: Got endpoints: latency-svc-4pnf9 [748.921693ms]
  Aug 17 12:38:39.221: INFO: Got endpoints: latency-svc-6sqjw [749.631911ms]
  Aug 17 12:38:39.272: INFO: Got endpoints: latency-svc-77dfx [749.441231ms]
  Aug 17 12:38:39.323: INFO: Got endpoints: latency-svc-blzhd [750.834536ms]
  Aug 17 12:38:39.373: INFO: Got endpoints: latency-svc-btchx [751.044792ms]
  Aug 17 12:38:39.422: INFO: Got endpoints: latency-svc-sknj5 [749.040336ms]
  Aug 17 12:38:39.472: INFO: Got endpoints: latency-svc-9vrnn [749.993741ms]
  Aug 17 12:38:39.522: INFO: Got endpoints: latency-svc-f5fj8 [750.505477ms]
  Aug 17 12:38:39.572: INFO: Got endpoints: latency-svc-b6x6f [750.810421ms]
  Aug 17 12:38:39.622: INFO: Got endpoints: latency-svc-p62pj [750.22588ms]
  Aug 17 12:38:39.622: INFO: Latencies: [13.794078ms 20.252024ms 30.391678ms 37.1132ms 44.128878ms 50.477869ms 54.484418ms 61.257809ms 66.538918ms 72.644982ms 79.264231ms 83.061525ms 86.921007ms 87.530856ms 88.133602ms 88.150012ms 88.476577ms 88.724986ms 90.972991ms 90.979594ms 91.481349ms 92.500819ms 92.594406ms 94.078873ms 95.222517ms 97.422633ms 98.131157ms 100.265638ms 100.296246ms 101.275771ms 104.30095ms 110.852684ms 122.569509ms 124.026153ms 165.86725ms 210.590788ms 254.706752ms 296.301395ms 340.214908ms 384.859236ms 425.16411ms 466.981864ms 509.988598ms 556.215637ms 596.420233ms 638.578668ms 674.207211ms 707.450401ms 747.256255ms 748.270144ms 748.289972ms 748.397054ms 748.488917ms 748.509195ms 748.530004ms 748.561923ms 748.688382ms 748.710785ms 748.741303ms 748.746091ms 748.847723ms 748.891395ms 748.902416ms 748.921693ms 748.930268ms 749.026939ms 749.031218ms 749.040336ms 749.093055ms 749.124594ms 749.124935ms 749.134193ms 749.13819ms 749.171333ms 749.202141ms 749.257804ms 749.302118ms 749.357021ms 749.385867ms 749.396948ms 749.408971ms 749.415744ms 749.417526ms 749.437733ms 749.441231ms 749.442223ms 749.46205ms 749.471327ms 749.500162ms 749.520902ms 749.546179ms 749.557632ms 749.564663ms 749.575794ms 749.600581ms 749.631911ms 749.637711ms 749.669341ms 749.673859ms 749.688416ms 749.689339ms 749.693045ms 749.707262ms 749.708233ms 749.733862ms 749.7379ms 749.746477ms 749.759019ms 749.784787ms 749.787954ms 749.810937ms 749.815648ms 749.819703ms 749.821246ms 749.826267ms 749.874316ms 749.888775ms 749.920563ms 749.920614ms 749.925414ms 749.992319ms 749.993741ms 749.995565ms 749.997138ms 750.097698ms 750.112574ms 750.128706ms 750.136671ms 750.152199ms 750.158573ms 750.158612ms 750.179962ms 750.214307ms 750.22588ms 750.244595ms 750.259281ms 750.301972ms 750.325365ms 750.327812ms 750.346006ms 750.347567ms 750.35388ms 750.355634ms 750.356254ms 750.35925ms 750.360614ms 750.363048ms 750.363718ms 750.395588ms 750.404947ms 750.436214ms 750.466883ms 750.467033ms 750.473176ms 750.478233ms 750.50252ms 750.505477ms 750.509393ms 750.526325ms 750.528979ms 750.566771ms 750.611796ms 750.625813ms 750.664987ms 750.668653ms 750.674725ms 750.707286ms 750.726933ms 750.739025ms 750.75229ms 750.75674ms 750.810421ms 750.8316ms 750.834115ms 750.834536ms 750.845597ms 750.877507ms 750.954752ms 750.982846ms 750.984809ms 750.991592ms 751.009025ms 751.022651ms 751.029623ms 751.036736ms 751.04411ms 751.044792ms 751.061684ms 751.099596ms 751.146863ms 751.157363ms 751.169777ms 751.18691ms 751.203391ms 751.219191ms 751.518454ms 751.549792ms 751.820773ms 752.254631ms 755.904428ms]
  Aug 17 12:38:39.622: INFO: 50 %ile: 749.689339ms
  Aug 17 12:38:39.622: INFO: 90 %ile: 750.991592ms
  Aug 17 12:38:39.622: INFO: 99 %ile: 752.254631ms
  Aug 17 12:38:39.622: INFO: Total sample count: 200
  Aug 17 12:38:39.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3946" for this suite. @ 08/17/23 12:38:39.626
• [10.736 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 08/17/23 12:38:39.63
  Aug 17 12:38:39.630: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename namespaces @ 08/17/23 12:38:39.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:39.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:39.64
  STEP: Updating Namespace "namespaces-3539" @ 08/17/23 12:38:39.641
  Aug 17 12:38:39.646: INFO: Namespace "namespaces-3539" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"815ae65c-ddc3-42f2-8b3f-4a02ca022df4", "kubernetes.io/metadata.name":"namespaces-3539", "namespaces-3539":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Aug 17 12:38:39.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3539" for this suite. @ 08/17/23 12:38:39.648
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 08/17/23 12:38:39.653
  Aug 17 12:38:39.653: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:38:39.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:39.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:39.663
  STEP: Creating a pod to test downward api env vars @ 08/17/23 12:38:39.665
  E0817 12:38:40.083236      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:41.083469      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:38:41.675
  Aug 17 12:38:41.677: INFO: Trying to get logs from node talos-default-worker-2 pod downward-api-39d25d4c-bbd7-407c-aa5c-a5a297b7899c container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 12:38:41.682
  Aug 17 12:38:41.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5800" for this suite. @ 08/17/23 12:38:41.694
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 08/17/23 12:38:41.698
  Aug 17 12:38:41.698: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:38:41.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:41.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:41.708
  STEP: Creating a ResourceQuota @ 08/17/23 12:38:41.709
  STEP: Getting a ResourceQuota @ 08/17/23 12:38:41.712
  STEP: Listing all ResourceQuotas with LabelSelector @ 08/17/23 12:38:41.714
  STEP: Patching the ResourceQuota @ 08/17/23 12:38:41.717
  STEP: Deleting a Collection of ResourceQuotas @ 08/17/23 12:38:41.72
  STEP: Verifying the deleted ResourceQuota @ 08/17/23 12:38:41.725
  Aug 17 12:38:41.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2279" for this suite. @ 08/17/23 12:38:41.73
• [0.035 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 08/17/23 12:38:41.733
  Aug 17 12:38:41.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:38:41.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:41.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:41.742
  STEP: Setting up server cert @ 08/17/23 12:38:41.753
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:38:42.001
  STEP: Deploying the webhook pod @ 08/17/23 12:38:42.005
  STEP: Wait for the deployment to be ready @ 08/17/23 12:38:42.01
  Aug 17 12:38:42.013: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:38:42.084114      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:43.085168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:38:44.02
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:38:44.027
  E0817 12:38:44.085822      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:45.028: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 08/17/23 12:38:45.032
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/17/23 12:38:45.032
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 08/17/23 12:38:45.042
  E0817 12:38:45.086357      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 08/17/23 12:38:46.048
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/17/23 12:38:46.048
  E0817 12:38:46.087318      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 08/17/23 12:38:47.069
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/17/23 12:38:47.069
  E0817 12:38:47.087964      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:48.088756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:49.088922      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:50.089971      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:51.090124      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:52.090993      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 08/17/23 12:38:52.095
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/17/23 12:38:52.095
  E0817 12:38:53.091575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:54.091740      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:55.091800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:56.091944      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:57.092099      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:38:57.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5597" for this suite. @ 08/17/23 12:38:57.16
  STEP: Destroying namespace "webhook-markers-4054" for this suite. @ 08/17/23 12:38:57.164
• [15.435 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 08/17/23 12:38:57.168
  Aug 17 12:38:57.168: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:38:57.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:38:57.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:38:57.177
  STEP: Creating configMap with name configmap-test-upd-36054d40-541c-414e-b83d-ab9aa173ae6e @ 08/17/23 12:38:57.18
  STEP: Creating the pod @ 08/17/23 12:38:57.182
  E0817 12:38:58.092359      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:38:59.092543      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-36054d40-541c-414e-b83d-ab9aa173ae6e @ 08/17/23 12:38:59.195
  STEP: waiting to observe update in volume @ 08/17/23 12:38:59.197
  E0817 12:39:00.093168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:01.093315      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:02.093466      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:03.093981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:04.094363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:05.094462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:06.095002      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:07.095156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:08.096014      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:09.096168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:10.096252      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:11.096419      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:12.096429      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:13.096742      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:14.097445      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:15.097756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:16.098704      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:17.099718      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:18.099904      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:19.100044      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:20.100136      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:21.100263      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:22.100478      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:23.100574      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:24.100677      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:25.100763      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:26.101185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:27.101334      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:28.101400      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:29.101493      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:30.101654      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:31.101735      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:32.102404      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:33.102940      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:34.103037      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:35.103099      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:36.104136      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:37.104293      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:38.104746      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:39.105773      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:40.105946      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:41.106139      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:42.107168      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:43.107687      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:44.107739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:45.108308      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:46.109350      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:47.109471      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:48.109716      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:49.109911      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:50.110988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:51.111038      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:52.111162      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:53.112134      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:54.112374      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:55.112524      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:56.112871      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:57.113044      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:58.114025      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:39:59.114994      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:00.115103      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:01.115255      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:02.115551      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:03.116062      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:04.117022      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:05.117173      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:06.118281      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:07.118434      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:08.119421      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:09.119583      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:10.119765      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:11.119939      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:12.120401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:13.120990      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:40:13.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7248" for this suite. @ 08/17/23 12:40:13.421
• [76.255 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 08/17/23 12:40:13.424
  Aug 17 12:40:13.424: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename subpath @ 08/17/23 12:40:13.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:40:13.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:40:13.432
  STEP: Setting up data @ 08/17/23 12:40:13.434
  STEP: Creating pod pod-subpath-test-configmap-blkj @ 08/17/23 12:40:13.438
  STEP: Creating a pod to test atomic-volume-subpath @ 08/17/23 12:40:13.438
  E0817 12:40:14.121212      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:15.121626      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:16.122213      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:17.122446      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:18.122813      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:19.122922      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:20.123435      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:21.123618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:22.123777      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:23.124402      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:24.125355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:25.125409      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:26.125808      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:27.126051      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:28.126737      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:29.127311      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:30.127603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:31.127655      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:32.128733      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:33.129249      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:34.129560      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:35.129650      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:36.130005      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:37.130208      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:40:37.484
  Aug 17 12:40:37.486: INFO: Trying to get logs from node talos-default-worker-2 pod pod-subpath-test-configmap-blkj container test-container-subpath-configmap-blkj: <nil>
  STEP: delete the pod @ 08/17/23 12:40:37.49
  STEP: Deleting pod pod-subpath-test-configmap-blkj @ 08/17/23 12:40:37.498
  Aug 17 12:40:37.498: INFO: Deleting pod "pod-subpath-test-configmap-blkj" in namespace "subpath-4741"
  Aug 17 12:40:37.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4741" for this suite. @ 08/17/23 12:40:37.503
• [24.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 08/17/23 12:40:37.506
  Aug 17 12:40:37.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename cronjob @ 08/17/23 12:40:37.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:40:37.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:40:37.515
  STEP: Creating a cronjob @ 08/17/23 12:40:37.516
  STEP: Ensuring more than one job is running at a time @ 08/17/23 12:40:37.519
  E0817 12:40:38.130401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:39.130643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:40.130839      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:41.130997      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:42.131213      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:43.131645      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:44.131841      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:45.132068      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:46.132248      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:47.132434      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:48.133404      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:49.134527      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:50.135440      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:51.135637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:52.136235      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:53.136596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:54.136918      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:55.137075      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:56.137236      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:57.137403      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:58.138312      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:40:59.138967      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:00.139603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:01.140293      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:02.140363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:03.140657      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:04.141231      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:05.141374      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:06.142362      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:07.142481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:08.143145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:09.143322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:10.143608      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:11.143812      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:12.144548      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:13.145004      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:14.145110      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:15.145291      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:16.145809      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:17.145923      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:18.146843      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:19.147040      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:20.147312      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:21.147460      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:22.148012      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:23.148603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:24.149418      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:25.149585      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:26.150056      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:27.150290      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:28.150414      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:29.150659      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:30.150768      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:31.150933      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:32.151654      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:33.152010      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:34.153009      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:35.153949      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:36.154745      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:37.154904      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:38.155174      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:39.155401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:40.156162      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:41.157145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:42.157794      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:43.158374      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:44.159371      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:45.159541      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:46.159764      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:47.159973      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:48.160552      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:49.160774      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:50.161241      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:51.162327      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:52.163199      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:53.163560      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:54.164116      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:55.164301      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:56.165339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:57.166351      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:58.167145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:41:59.167918      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:00.168462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:01.168603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 08/17/23 12:42:01.522
  STEP: Removing cronjob @ 08/17/23 12:42:01.525
  Aug 17 12:42:01.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3522" for this suite. @ 08/17/23 12:42:01.534
• [84.033 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 08/17/23 12:42:01.539
  Aug 17 12:42:01.539: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename field-validation @ 08/17/23 12:42:01.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:01.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:01.555
  Aug 17 12:42:01.557: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  W0817 12:42:01.557995      24 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00151a2f0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0817 12:42:02.169048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:03.169625      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0817 12:42:04.081297      24 warnings.go:70] unknown field "alpha"
  W0817 12:42:04.081315      24 warnings.go:70] unknown field "beta"
  W0817 12:42:04.081321      24 warnings.go:70] unknown field "delta"
  W0817 12:42:04.081329      24 warnings.go:70] unknown field "epsilon"
  W0817 12:42:04.081334      24 warnings.go:70] unknown field "gamma"
  E0817 12:42:04.169681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:42:04.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3716" for this suite. @ 08/17/23 12:42:04.611
• [3.076 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 08/17/23 12:42:04.616
  Aug 17 12:42:04.616: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 12:42:04.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:04.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:04.626
  STEP: creating a secret @ 08/17/23 12:42:04.628
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 08/17/23 12:42:04.631
  STEP: patching the secret @ 08/17/23 12:42:04.634
  STEP: deleting the secret using a LabelSelector @ 08/17/23 12:42:04.64
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 08/17/23 12:42:04.645
  Aug 17 12:42:04.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2727" for this suite. @ 08/17/23 12:42:04.65
• [0.038 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 08/17/23 12:42:04.654
  Aug 17 12:42:04.654: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svcaccounts @ 08/17/23 12:42:04.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:04.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:04.664
  Aug 17 12:42:04.673: INFO: created pod
  E0817 12:42:05.169995      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:06.170061      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:07.170961      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:08.171746      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:42:08.679
  E0817 12:42:09.172728      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:10.172802      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:11.172930      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:12.173123      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:13.173461      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:14.173813      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:15.174002      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:16.174170      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:17.174239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:18.174695      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:19.174911      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:20.175091      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:21.175292      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:22.175479      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:23.175592      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:24.176494      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:25.176641      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:26.176771      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:27.176895      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:28.177074      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:29.177346      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:30.177454      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:31.177627      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:32.177779      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:33.178405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:34.179277      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:35.179408      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:36.179541      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:37.179686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:38.179895      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:42:38.680: INFO: polling logs
  Aug 17 12:42:38.684: INFO: Pod logs: 
  I0817 12:42:05.327035       1 log.go:194] OK: Got token
  I0817 12:42:05.327084       1 log.go:194] validating with in-cluster discovery
  I0817 12:42:05.327352       1 log.go:194] OK: got issuer https://172.20.0.1:6443
  I0817 12:42:05.327372       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://172.20.0.1:6443", Subject:"system:serviceaccount:svcaccounts-7676:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000144698), NotBefore:(*jwt.NumericDate)(0xc0001447f8), IssuedAt:(*jwt.NumericDate)(0xc0001446a8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7676", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1ded2f12-6650-447c-91b2-137293696b14"}}}
  I0817 12:42:05.330124       1 log.go:194] OK: Constructed OIDC provider for issuer https://172.20.0.1:6443
  I0817 12:42:05.332236       1 log.go:194] OK: Validated signature on JWT
  I0817 12:42:05.332277       1 log.go:194] OK: Got valid claims from token!
  I0817 12:42:05.332290       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://172.20.0.1:6443", Subject:"system:serviceaccount:svcaccounts-7676:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00046d2b8), NotBefore:(*jwt.NumericDate)(0xc00046d2e0), IssuedAt:(*jwt.NumericDate)(0xc00046d2c0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7676", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1ded2f12-6650-447c-91b2-137293696b14"}}}

  Aug 17 12:42:38.684: INFO: completed pod
  Aug 17 12:42:38.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7676" for this suite. @ 08/17/23 12:42:38.69
• [34.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 08/17/23 12:42:38.694
  Aug 17 12:42:38.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename namespaces @ 08/17/23 12:42:38.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:38.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:38.703
  STEP: Read namespace status @ 08/17/23 12:42:38.705
  Aug 17 12:42:38.707: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 08/17/23 12:42:38.707
  Aug 17 12:42:38.709: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 08/17/23 12:42:38.709
  Aug 17 12:42:38.714: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Aug 17 12:42:38.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9984" for this suite. @ 08/17/23 12:42:38.716
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 08/17/23 12:42:38.72
  Aug 17 12:42:38.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-runtime @ 08/17/23 12:42:38.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:38.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:38.727
  STEP: create the container @ 08/17/23 12:42:38.729
  W0817 12:42:38.732919      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/17/23 12:42:38.733
  E0817 12:42:39.180372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:40.180889      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:41.181619      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/17/23 12:42:41.742
  STEP: the container should be terminated @ 08/17/23 12:42:41.744
  STEP: the termination message should be set @ 08/17/23 12:42:41.744
  Aug 17 12:42:41.744: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 08/17/23 12:42:41.744
  Aug 17 12:42:41.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7193" for this suite. @ 08/17/23 12:42:41.755
• [3.039 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 08/17/23 12:42:41.758
  Aug 17 12:42:41.758: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:42:41.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:41.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:41.767
  STEP: creating pod @ 08/17/23 12:42:41.769
  E0817 12:42:42.182290      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:43.182777      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:42:43.780: INFO: Pod pod-hostip-0bb3739d-9cbc-4880-96bf-3e5003f0c224 has hostIP: 172.20.0.5
  Aug 17 12:42:43.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6576" for this suite. @ 08/17/23 12:42:43.782
• [2.027 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 08/17/23 12:42:43.786
  Aug 17 12:42:43.786: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename limitrange @ 08/17/23 12:42:43.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:43.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:43.793
  STEP: Creating LimitRange "e2e-limitrange-q42sm" in namespace "limitrange-1798" @ 08/17/23 12:42:43.795
  STEP: Creating another limitRange in another namespace @ 08/17/23 12:42:43.797
  Aug 17 12:42:43.804: INFO: Namespace "e2e-limitrange-q42sm-5242" created
  Aug 17 12:42:43.804: INFO: Creating LimitRange "e2e-limitrange-q42sm" in namespace "e2e-limitrange-q42sm-5242"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-q42sm" @ 08/17/23 12:42:43.806
  Aug 17 12:42:43.808: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-q42sm" in "limitrange-1798" namespace @ 08/17/23 12:42:43.808
  Aug 17 12:42:43.810: INFO: LimitRange "e2e-limitrange-q42sm" has been patched
  STEP: Delete LimitRange "e2e-limitrange-q42sm" by Collection with labelSelector: "e2e-limitrange-q42sm=patched" @ 08/17/23 12:42:43.81
  STEP: Confirm that the limitRange "e2e-limitrange-q42sm" has been deleted @ 08/17/23 12:42:43.813
  Aug 17 12:42:43.813: INFO: Requesting list of LimitRange to confirm quantity
  Aug 17 12:42:43.815: INFO: Found 0 LimitRange with label "e2e-limitrange-q42sm=patched"
  Aug 17 12:42:43.815: INFO: LimitRange "e2e-limitrange-q42sm" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-q42sm" @ 08/17/23 12:42:43.815
  Aug 17 12:42:43.816: INFO: Found 1 limitRange
  Aug 17 12:42:43.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1798" for this suite. @ 08/17/23 12:42:43.818
  STEP: Destroying namespace "e2e-limitrange-q42sm-5242" for this suite. @ 08/17/23 12:42:43.821
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 08/17/23 12:42:43.824
  Aug 17 12:42:43.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename disruption @ 08/17/23 12:42:43.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:43.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:43.83
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:42:43.833
  E0817 12:42:44.183587      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:45.183725      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 08/17/23 12:42:45.847
  Aug 17 12:42:45.849: INFO: running pods: 0 < 3
  E0817 12:42:46.183954      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:47.184185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:42:47.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8652" for this suite. @ 08/17/23 12:42:47.858
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 08/17/23 12:42:47.863
  Aug 17 12:42:47.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:42:47.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:47.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:47.874
  STEP: Creating a pod to test downward api env vars @ 08/17/23 12:42:47.876
  E0817 12:42:48.184436      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:49.184629      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:50.185393      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:51.185607      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:42:51.89
  Aug 17 12:42:51.893: INFO: Trying to get logs from node talos-default-worker-2 pod downward-api-49cfbae2-0a3b-4045-9f05-7b2298712eba container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 12:42:51.898
  Aug 17 12:42:51.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8318" for this suite. @ 08/17/23 12:42:51.91
• [4.050 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 08/17/23 12:42:51.913
  Aug 17 12:42:51.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pod-network-test @ 08/17/23 12:42:51.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:42:51.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:42:51.923
  STEP: Performing setup for networking test in namespace pod-network-test-5346 @ 08/17/23 12:42:51.924
  STEP: creating a selector @ 08/17/23 12:42:51.924
  STEP: Creating the service pods in kubernetes @ 08/17/23 12:42:51.924
  Aug 17 12:42:51.924: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0817 12:42:52.185663      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:53.186151      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:54.186867      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:55.187748      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:56.188297      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:57.188394      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:58.188637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:42:59.188744      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:00.189417      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:01.189560      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:02.189992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:03.190440      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:04.190785      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:05.191032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:06.191403      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:07.192143      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:08.192277      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:09.192500      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:10.193456      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:11.193691      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:12.194562      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:13.194901      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:14.195652      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:15.195729      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:16.196278      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:17.196470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/17/23 12:43:17.979
  E0817 12:43:18.196933      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:19.197096      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:19.989: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 17 12:43:19.989: INFO: Breadth first check of 10.244.1.126 on host 172.20.0.5...
  Aug 17 12:43:19.991: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.127:9080/dial?request=hostname&protocol=udp&host=10.244.1.126&port=8081&tries=1'] Namespace:pod-network-test-5346 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:43:19.991: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:43:19.991: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:43:19.992: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5346/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.127%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.126%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 17 12:43:20.087: INFO: Waiting for responses: map[]
  Aug 17 12:43:20.087: INFO: reached 10.244.1.126 after 0/1 tries
  Aug 17 12:43:20.088: INFO: Breadth first check of 10.244.2.246 on host 172.20.0.6...
  Aug 17 12:43:20.090: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.127:9080/dial?request=hostname&protocol=udp&host=10.244.2.246&port=8081&tries=1'] Namespace:pod-network-test-5346 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 12:43:20.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 12:43:20.091: INFO: ExecWithOptions: Clientset creation
  Aug 17 12:43:20.091: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5346/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.127%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.246%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 17 12:43:20.170: INFO: Waiting for responses: map[]
  Aug 17 12:43:20.170: INFO: reached 10.244.2.246 after 0/1 tries
  Aug 17 12:43:20.170: INFO: Going to retry 0 out of 2 pods....
  Aug 17 12:43:20.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5346" for this suite. @ 08/17/23 12:43:20.174
• [28.265 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 08/17/23 12:43:20.179
  Aug 17 12:43:20.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/17/23 12:43:20.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:20.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:20.189
  E0817 12:43:20.197567      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:21.197927      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:22.198066      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:22.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 08/17/23 12:43:22.21
  STEP: Cleaning up the configmap @ 08/17/23 12:43:22.213
  STEP: Cleaning up the pod @ 08/17/23 12:43:22.216
  STEP: Destroying namespace "emptydir-wrapper-9529" for this suite. @ 08/17/23 12:43:22.221
• [2.045 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 08/17/23 12:43:22.224
  Aug 17 12:43:22.224: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 12:43:22.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:22.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:22.232
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/17/23 12:43:22.234
  E0817 12:43:23.198876      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:24.199024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:43:24.242
  Aug 17 12:43:24.244: INFO: Trying to get logs from node talos-default-worker-2 pod pod-8660a830-4668-450d-847f-423e978ff852 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:43:24.248
  Aug 17 12:43:24.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2491" for this suite. @ 08/17/23 12:43:24.259
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 08/17/23 12:43:24.264
  Aug 17 12:43:24.264: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:43:24.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:24.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:24.275
  STEP: Creating configMap that has name configmap-test-emptyKey-33cd6ab3-99e2-4873-8bf9-a1fe24e4a349 @ 08/17/23 12:43:24.277
  Aug 17 12:43:24.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6115" for this suite. @ 08/17/23 12:43:24.281
• [0.019 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 08/17/23 12:43:24.284
  Aug 17 12:43:24.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename disruption @ 08/17/23 12:43:24.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:24.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:24.293
  STEP: Creating a kubernetes client @ 08/17/23 12:43:24.295
  Aug 17 12:43:24.295: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename disruption-2 @ 08/17/23 12:43:24.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:24.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:24.303
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:43:24.307
  E0817 12:43:25.200140      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:26.200401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:43:26.315
  E0817 12:43:27.200477      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:28.200697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/17/23 12:43:28.325
  E0817 12:43:29.201151      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:30.201291      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 08/17/23 12:43:30.329
  STEP: listing a collection of PDBs in namespace disruption-3797 @ 08/17/23 12:43:30.332
  STEP: deleting a collection of PDBs @ 08/17/23 12:43:30.334
  STEP: Waiting for the PDB collection to be deleted @ 08/17/23 12:43:30.342
  Aug 17 12:43:30.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:43:30.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4493" for this suite. @ 08/17/23 12:43:30.35
  STEP: Destroying namespace "disruption-3797" for this suite. @ 08/17/23 12:43:30.355
• [6.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 08/17/23 12:43:30.359
  Aug 17 12:43:30.359: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:43:30.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:30.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:30.369
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/17/23 12:43:30.37
  Aug 17 12:43:30.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-5611 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Aug 17 12:43:30.416: INFO: stderr: ""
  Aug 17 12:43:30.417: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 08/17/23 12:43:30.417
  Aug 17 12:43:30.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-5611 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Aug 17 12:43:30.460: INFO: stderr: ""
  Aug 17 12:43:30.460: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/17/23 12:43:30.46
  Aug 17 12:43:30.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-5611 delete pods e2e-test-httpd-pod'
  E0817 12:43:31.202192      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:31.774: INFO: stderr: ""
  Aug 17 12:43:31.774: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 17 12:43:31.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5611" for this suite. @ 08/17/23 12:43:31.778
• [1.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 08/17/23 12:43:31.782
  Aug 17 12:43:31.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename var-expansion @ 08/17/23 12:43:31.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:31.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:31.791
  STEP: Creating a pod to test substitution in container's command @ 08/17/23 12:43:31.792
  E0817 12:43:32.202545      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:33.202927      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:34.203932      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:35.204102      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:43:35.805
  Aug 17 12:43:35.807: INFO: Trying to get logs from node talos-default-worker-1 pod var-expansion-0f4f0040-8e5a-4b8a-8c5f-22dd50274ee1 container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 12:43:35.819
  Aug 17 12:43:35.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4012" for this suite. @ 08/17/23 12:43:35.832
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 08/17/23 12:43:35.836
  Aug 17 12:43:35.836: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:43:35.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:35.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:35.847
  STEP: creating service in namespace services-2622 @ 08/17/23 12:43:35.848
  STEP: creating service affinity-nodeport in namespace services-2622 @ 08/17/23 12:43:35.848
  STEP: creating replication controller affinity-nodeport in namespace services-2622 @ 08/17/23 12:43:35.861
  I0817 12:43:35.865402      24 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2622, replica count: 3
  E0817 12:43:36.204300      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:37.204319      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:38.204748      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:43:38.916005      24 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 12:43:38.922: INFO: Creating new exec pod
  E0817 12:43:39.205117      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:40.206053      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:41.206641      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:41.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-2622 exec execpod-affinitycl6hn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Aug 17 12:43:42.142: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Aug 17 12:43:42.142: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:43:42.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-2622 exec execpod-affinitycl6hn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.149.170 80'
  E0817 12:43:42.207202      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:42.281: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.149.170 80\nConnection to 10.111.149.170 80 port [tcp/http] succeeded!\n"
  Aug 17 12:43:42.281: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:43:42.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-2622 exec execpod-affinitycl6hn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 30831'
  Aug 17 12:43:42.421: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 30831\nConnection to 172.20.0.5 30831 port [tcp/*] succeeded!\n"
  Aug 17 12:43:42.421: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:43:42.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-2622 exec execpod-affinitycl6hn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 30831'
  Aug 17 12:43:42.602: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 30831\nConnection to 172.20.0.6 30831 port [tcp/*] succeeded!\n"
  Aug 17 12:43:42.602: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:43:42.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-2622 exec execpod-affinitycl6hn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.5:30831/ ; done'
  Aug 17 12:43:42.817: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:30831/\n"
  Aug 17 12:43:42.817: INFO: stdout: "\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw\naffinity-nodeport-qbdnw"
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Received response from host: affinity-nodeport-qbdnw
  Aug 17 12:43:42.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:43:42.821: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2622, will wait for the garbage collector to delete the pods @ 08/17/23 12:43:42.829
  Aug 17 12:43:42.886: INFO: Deleting ReplicationController affinity-nodeport took: 4.31557ms
  Aug 17 12:43:42.986: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.293785ms
  E0817 12:43:43.207416      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:44.207833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:45.208571      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-2622" for this suite. @ 08/17/23 12:43:46.106
• [10.274 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 08/17/23 12:43:46.11
  Aug 17 12:43:46.110: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/17/23 12:43:46.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:46.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:46.122
  Aug 17 12:43:46.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:43:46.208952      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:47.209025      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:48.209608      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:49.210212      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:50.210689      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:51.211411      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:52.212374      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:52.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-109" for this suite. @ 08/17/23 12:43:52.256
• [6.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 08/17/23 12:43:52.261
  Aug 17 12:43:52.261: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:43:52.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:52.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:52.272
  STEP: Create set of pods @ 08/17/23 12:43:52.274
  Aug 17 12:43:52.279: INFO: created test-pod-1
  Aug 17 12:43:52.282: INFO: created test-pod-2
  Aug 17 12:43:52.287: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 08/17/23 12:43:52.287
  E0817 12:43:53.212531      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:54.212735      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 08/17/23 12:43:54.314
  Aug 17 12:43:54.317: INFO: Pod quantity 3 is different from expected quantity 0
  E0817 12:43:55.212803      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:55.320: INFO: Pod quantity 2 is different from expected quantity 0
  E0817 12:43:56.213545      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:56.321: INFO: Pod quantity 2 is different from expected quantity 0
  E0817 12:43:57.214579      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:43:57.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4858" for this suite. @ 08/17/23 12:43:57.322
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 08/17/23 12:43:57.325
  Aug 17 12:43:57.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:43:57.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:43:57.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:43:57.333
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:43:57.335
  E0817 12:43:58.215686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:43:59.216030      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:00.216426      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:01.216550      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:44:01.347
  Aug 17 12:44:01.350: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-e1e26ffd-98c7-41f2-a262-5e05560df2e3 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:44:01.355
  Aug 17 12:44:01.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9661" for this suite. @ 08/17/23 12:44:01.368
• [4.046 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 08/17/23 12:44:01.372
  Aug 17 12:44:01.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename namespaces @ 08/17/23 12:44:01.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:44:01.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:44:01.383
  STEP: Creating a test namespace @ 08/17/23 12:44:01.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:44:01.393
  STEP: Creating a pod in the namespace @ 08/17/23 12:44:01.394
  STEP: Waiting for the pod to have running status @ 08/17/23 12:44:01.399
  E0817 12:44:02.216673      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:03.217030      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 08/17/23 12:44:03.405
  STEP: Waiting for the namespace to be removed. @ 08/17/23 12:44:03.409
  E0817 12:44:04.218031      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:05.219086      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:06.219313      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:07.219801      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:08.220752      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:09.220999      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:10.221925      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:11.222768      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:12.223156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:13.223239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:14.223401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 08/17/23 12:44:14.412
  STEP: Verifying there are no pods in the namespace @ 08/17/23 12:44:14.42
  Aug 17 12:44:14.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6195" for this suite. @ 08/17/23 12:44:14.426
  STEP: Destroying namespace "nsdeletetest-2448" for this suite. @ 08/17/23 12:44:14.43
  Aug 17 12:44:14.432: INFO: Namespace nsdeletetest-2448 was already deleted
  STEP: Destroying namespace "nsdeletetest-5086" for this suite. @ 08/17/23 12:44:14.432
• [13.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 08/17/23 12:44:14.436
  Aug 17 12:44:14.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replicaset @ 08/17/23 12:44:14.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:44:14.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:44:14.447
  STEP: Create a ReplicaSet @ 08/17/23 12:44:14.449
  STEP: Verify that the required pods have come up @ 08/17/23 12:44:14.452
  Aug 17 12:44:14.454: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0817 12:44:15.223686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:16.224101      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:17.224310      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:18.224763      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:19.224850      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:44:19.458: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 08/17/23 12:44:19.458
  Aug 17 12:44:19.461: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 08/17/23 12:44:19.461
  STEP: DeleteCollection of the ReplicaSets @ 08/17/23 12:44:19.464
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 08/17/23 12:44:19.47
  Aug 17 12:44:19.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7045" for this suite. @ 08/17/23 12:44:19.478
• [5.048 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 08/17/23 12:44:19.485
  Aug 17 12:44:19.485: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename tables @ 08/17/23 12:44:19.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:44:19.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:44:19.499
  Aug 17 12:44:19.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7003" for this suite. @ 08/17/23 12:44:19.503
• [0.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 08/17/23 12:44:19.507
  Aug 17 12:44:19.507: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename proxy @ 08/17/23 12:44:19.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:44:19.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:44:19.52
  Aug 17 12:44:19.522: INFO: Creating pod...
  E0817 12:44:20.225709      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:21.225949      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:44:21.532: INFO: Creating service...
  Aug 17 12:44:21.542: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/pods/agnhost/proxy/some/path/with/DELETE
  Aug 17 12:44:21.547: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 17 12:44:21.547: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/pods/agnhost/proxy/some/path/with/GET
  Aug 17 12:44:21.551: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 17 12:44:21.551: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/pods/agnhost/proxy/some/path/with/HEAD
  Aug 17 12:44:21.554: INFO: http.Client request:HEAD | StatusCode:200
  Aug 17 12:44:21.554: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/pods/agnhost/proxy/some/path/with/OPTIONS
  Aug 17 12:44:21.557: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 17 12:44:21.557: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/pods/agnhost/proxy/some/path/with/PATCH
  Aug 17 12:44:21.560: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 17 12:44:21.560: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/pods/agnhost/proxy/some/path/with/POST
  Aug 17 12:44:21.563: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 17 12:44:21.563: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/pods/agnhost/proxy/some/path/with/PUT
  Aug 17 12:44:21.566: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 17 12:44:21.566: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/services/test-service/proxy/some/path/with/DELETE
  Aug 17 12:44:21.570: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 17 12:44:21.570: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/services/test-service/proxy/some/path/with/GET
  Aug 17 12:44:21.574: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 17 12:44:21.574: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/services/test-service/proxy/some/path/with/HEAD
  Aug 17 12:44:21.578: INFO: http.Client request:HEAD | StatusCode:200
  Aug 17 12:44:21.578: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/services/test-service/proxy/some/path/with/OPTIONS
  Aug 17 12:44:21.581: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 17 12:44:21.581: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/services/test-service/proxy/some/path/with/PATCH
  Aug 17 12:44:21.585: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 17 12:44:21.585: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/services/test-service/proxy/some/path/with/POST
  Aug 17 12:44:21.588: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 17 12:44:21.588: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6290/services/test-service/proxy/some/path/with/PUT
  Aug 17 12:44:21.591: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 17 12:44:21.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6290" for this suite. @ 08/17/23 12:44:21.594
• [2.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 08/17/23 12:44:21.598
  Aug 17 12:44:21.598: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replicaset @ 08/17/23 12:44:21.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:44:21.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:44:21.605
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 08/17/23 12:44:21.606
  E0817 12:44:22.226022      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:23.226645      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 08/17/23 12:44:23.617
  STEP: Then the orphan pod is adopted @ 08/17/23 12:44:23.621
  E0817 12:44:24.226703      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 08/17/23 12:44:24.626
  Aug 17 12:44:24.628: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/17/23 12:44:24.632
  E0817 12:44:25.226778      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:44:25.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4677" for this suite. @ 08/17/23 12:44:25.64
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 08/17/23 12:44:25.645
  Aug 17 12:44:25.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 12:44:25.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:44:25.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:44:25.658
  E0817 12:44:26.227424      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:27.228277      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:28.228708      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:29.229044      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:30.229887      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:31.231003      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:32.231066      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:33.231253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:34.231961      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:35.232280      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:36.233180      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:37.233944      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:38.234229      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:39.235106      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:40.235638      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:41.235900      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:42.236547      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:43.237511      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:44.238097      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:45.239078      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:46.240019      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:47.241039      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:48.241317      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:49.242284      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:50.243227      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:51.244115      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:52.245114      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:53.245233      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:54.245883      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:55.245898      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:56.246068      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:57.247185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:58.248008      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:44:59.248836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:00.248878      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:01.249535      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:02.249755      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:03.250530      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:04.251517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:05.252271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:06.252464      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:07.253364      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:08.253602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:09.253896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:10.254732      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:11.254822      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:12.255871      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:13.256196      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:14.256940      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:15.257548      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:16.257963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:17.258082      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:18.258475      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:19.259337      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:20.259764      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:21.260032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:22.260974      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:23.262000      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:24.262854      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:25.263374      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:45:25.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2902" for this suite. @ 08/17/23 12:45:25.672
• [60.030 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 08/17/23 12:45:25.676
  Aug 17 12:45:25.676: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename field-validation @ 08/17/23 12:45:25.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:25.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:25.685
  STEP: apply creating a deployment @ 08/17/23 12:45:25.687
  Aug 17 12:45:25.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5434" for this suite. @ 08/17/23 12:45:25.698
• [0.025 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 08/17/23 12:45:25.702
  Aug 17 12:45:25.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:45:25.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:25.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:25.712
  STEP: Creating configMap with name projected-configmap-test-volume-7dfc1a63-0dc4-4c04-b85c-555aa3151a8b @ 08/17/23 12:45:25.714
  STEP: Creating a pod to test consume configMaps @ 08/17/23 12:45:25.716
  E0817 12:45:26.264261      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:27.264452      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:28.264477      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:29.264721      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:45:29.73
  Aug 17 12:45:29.731: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-38346da9-f8f8-4066-b553-7032cb89fbda container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 12:45:29.735
  Aug 17 12:45:29.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5487" for this suite. @ 08/17/23 12:45:29.746
• [4.047 seconds]
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 08/17/23 12:45:29.749
  Aug 17 12:45:29.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:45:29.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:29.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:29.758
  STEP: creating service multi-endpoint-test in namespace services-4142 @ 08/17/23 12:45:29.76
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4142 to expose endpoints map[] @ 08/17/23 12:45:29.766
  Aug 17 12:45:29.770: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0817 12:45:30.265785      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:45:30.775: INFO: successfully validated that service multi-endpoint-test in namespace services-4142 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4142 @ 08/17/23 12:45:30.775
  E0817 12:45:31.266723      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:32.266908      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4142 to expose endpoints map[pod1:[100]] @ 08/17/23 12:45:32.787
  Aug 17 12:45:32.793: INFO: successfully validated that service multi-endpoint-test in namespace services-4142 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4142 @ 08/17/23 12:45:32.793
  E0817 12:45:33.267308      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:34.267438      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4142 to expose endpoints map[pod1:[100] pod2:[101]] @ 08/17/23 12:45:34.802
  Aug 17 12:45:34.809: INFO: successfully validated that service multi-endpoint-test in namespace services-4142 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 08/17/23 12:45:34.81
  Aug 17 12:45:34.810: INFO: Creating new exec pod
  E0817 12:45:35.267723      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:36.267937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:37.268422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:45:37.819: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-4142 exec execpod4pklm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Aug 17 12:45:38.010: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Aug 17 12:45:38.010: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:45:38.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-4142 exec execpod4pklm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.200.87 80'
  Aug 17 12:45:38.186: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.200.87 80\nConnection to 10.108.200.87 80 port [tcp/http] succeeded!\n"
  Aug 17 12:45:38.186: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:45:38.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-4142 exec execpod4pklm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E0817 12:45:38.268495      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:45:38.387: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Aug 17 12:45:38.387: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:45:38.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-4142 exec execpod4pklm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.200.87 81'
  Aug 17 12:45:38.553: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.200.87 81\nConnection to 10.108.200.87 81 port [tcp/*] succeeded!\n"
  Aug 17 12:45:38.553: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4142 @ 08/17/23 12:45:38.553
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4142 to expose endpoints map[pod2:[101]] @ 08/17/23 12:45:38.559
  Aug 17 12:45:38.567: INFO: successfully validated that service multi-endpoint-test in namespace services-4142 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4142 @ 08/17/23 12:45:38.567
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4142 to expose endpoints map[] @ 08/17/23 12:45:38.575
  Aug 17 12:45:38.580: INFO: successfully validated that service multi-endpoint-test in namespace services-4142 exposes endpoints map[]
  Aug 17 12:45:38.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4142" for this suite. @ 08/17/23 12:45:38.595
• [8.849 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 08/17/23 12:45:38.599
  Aug 17 12:45:38.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:45:38.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:38.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:38.606
  STEP: Creating secret with name projected-secret-test-1a5b2860-f1d7-416b-a7b0-2ed4de7b1c70 @ 08/17/23 12:45:38.607
  STEP: Creating a pod to test consume secrets @ 08/17/23 12:45:38.609
  E0817 12:45:39.268470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:40.268614      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:41.268896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:42.269093      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:45:42.621
  Aug 17 12:45:42.623: INFO: Trying to get logs from node talos-default-worker-2 pod pod-projected-secrets-26c45598-78d6-4a92-9373-ecd5449dcba0 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 12:45:42.628
  Aug 17 12:45:42.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3045" for this suite. @ 08/17/23 12:45:42.639
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 08/17/23 12:45:42.643
  Aug 17 12:45:42.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename dns @ 08/17/23 12:45:42.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:42.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:42.652
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5075.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5075.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 08/17/23 12:45:42.654
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5075.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5075.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 08/17/23 12:45:42.654
  STEP: creating a pod to probe /etc/hosts @ 08/17/23 12:45:42.654
  STEP: submitting the pod to kubernetes @ 08/17/23 12:45:42.654
  E0817 12:45:43.269728      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:44.269948      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/17/23 12:45:44.665
  STEP: looking for the results for each expected name from probers @ 08/17/23 12:45:44.667
  Aug 17 12:45:44.676: INFO: DNS probes using dns-5075/dns-test-7bc6ab0b-e2d2-486c-a591-4c293386aed1 succeeded

  Aug 17 12:45:44.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 12:45:44.678
  STEP: Destroying namespace "dns-5075" for this suite. @ 08/17/23 12:45:44.685
• [2.045 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 08/17/23 12:45:44.688
  Aug 17 12:45:44.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename events @ 08/17/23 12:45:44.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:44.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:44.698
  STEP: creating a test event @ 08/17/23 12:45:44.7
  STEP: listing all events in all namespaces @ 08/17/23 12:45:44.703
  STEP: patching the test event @ 08/17/23 12:45:44.705
  STEP: fetching the test event @ 08/17/23 12:45:44.709
  STEP: updating the test event @ 08/17/23 12:45:44.71
  STEP: getting the test event @ 08/17/23 12:45:44.716
  STEP: deleting the test event @ 08/17/23 12:45:44.717
  STEP: listing all events in all namespaces @ 08/17/23 12:45:44.721
  Aug 17 12:45:44.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-479" for this suite. @ 08/17/23 12:45:44.726
• [0.040 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 08/17/23 12:45:44.73
  Aug 17 12:45:44.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:45:44.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:44.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:44.739
  STEP: creating service in namespace services-941 @ 08/17/23 12:45:44.741
  STEP: creating service affinity-nodeport-transition in namespace services-941 @ 08/17/23 12:45:44.741
  STEP: creating replication controller affinity-nodeport-transition in namespace services-941 @ 08/17/23 12:45:44.749
  I0817 12:45:44.752838      24 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-941, replica count: 3
  E0817 12:45:45.270991      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:46.271477      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:47.271616      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:45:47.803327      24 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 12:45:47.808: INFO: Creating new exec pod
  E0817 12:45:48.272376      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:49.272627      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:50.272713      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:45:50.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-941 exec execpod-affinityjjd2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Aug 17 12:45:50.958: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Aug 17 12:45:50.958: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:45:50.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-941 exec execpod-affinityjjd2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.103.97 80'
  Aug 17 12:45:51.111: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.103.97 80\nConnection to 10.105.103.97 80 port [tcp/http] succeeded!\n"
  Aug 17 12:45:51.111: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:45:51.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-941 exec execpod-affinityjjd2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 31040'
  Aug 17 12:45:51.245: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 31040\nConnection to 172.20.0.5 31040 port [tcp/*] succeeded!\n"
  Aug 17 12:45:51.245: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:45:51.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-941 exec execpod-affinityjjd2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 31040'
  E0817 12:45:51.273148      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:45:51.379: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 31040\nConnection to 172.20.0.6 31040 port [tcp/*] succeeded!\n"
  Aug 17 12:45:51.379: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 17 12:45:51.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-941 exec execpod-affinityjjd2c -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.5:31040/ ; done'
  Aug 17 12:45:51.582: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n"
  Aug 17 12:45:51.582: INFO: stdout: "\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-vtbc7\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-vtbc7\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-vtbc7\naffinity-nodeport-transition-vtbc7\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-vtbc7\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-hcvpd\naffinity-nodeport-transition-hcvpd\naffinity-nodeport-transition-xdfrg"
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-vtbc7
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-vtbc7
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-vtbc7
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-vtbc7
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-vtbc7
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-hcvpd
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-hcvpd
  Aug 17 12:45:51.582: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-941 exec execpod-affinityjjd2c -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.5:31040/ ; done'
  Aug 17 12:45:51.812: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.5:31040/\n"
  Aug 17 12:45:51.812: INFO: stdout: "\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg\naffinity-nodeport-transition-xdfrg"
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Received response from host: affinity-nodeport-transition-xdfrg
  Aug 17 12:45:51.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:45:51.816: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-941, will wait for the garbage collector to delete the pods @ 08/17/23 12:45:51.823
  Aug 17 12:45:51.880: INFO: Deleting ReplicationController affinity-nodeport-transition took: 3.981572ms
  Aug 17 12:45:51.981: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.631ms
  E0817 12:45:52.274069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:53.274423      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:54.275145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-941" for this suite. @ 08/17/23 12:45:55.1
• [10.375 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 08/17/23 12:45:55.105
  Aug 17 12:45:55.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:45:55.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:55.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:55.116
  Aug 17 12:45:55.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-5781 version'
  Aug 17 12:45:55.157: INFO: stderr: ""
  Aug 17 12:45:55.157: INFO: stdout: "Client Version: v1.28.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.0\n"
  Aug 17 12:45:55.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5781" for this suite. @ 08/17/23 12:45:55.161
• [0.061 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 08/17/23 12:45:55.166
  Aug 17 12:45:55.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/17/23 12:45:55.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:45:55.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:45:55.177
  STEP: create the container to handle the HTTPGet hook request. @ 08/17/23 12:45:55.181
  E0817 12:45:55.275534      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:56.275752      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/17/23 12:45:57.195
  E0817 12:45:57.276271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:45:58.276601      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 08/17/23 12:45:59.206
  STEP: delete the pod with lifecycle hook @ 08/17/23 12:45:59.21
  E0817 12:45:59.276901      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:00.277358      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:01.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5860" for this suite. @ 08/17/23 12:46:01.221
• [6.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 08/17/23 12:46:01.225
  Aug 17 12:46:01.225: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:46:01.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:01.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:01.234
  STEP: fetching services @ 08/17/23 12:46:01.235
  Aug 17 12:46:01.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8178" for this suite. @ 08/17/23 12:46:01.239
• [0.018 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 08/17/23 12:46:01.243
  Aug 17 12:46:01.243: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename conformance-tests @ 08/17/23 12:46:01.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:01.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:01.252
  STEP: Getting node addresses @ 08/17/23 12:46:01.254
  Aug 17 12:46:01.254: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Aug 17 12:46:01.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-453" for this suite. @ 08/17/23 12:46:01.259
• [0.020 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 08/17/23 12:46:01.263
  Aug 17 12:46:01.263: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-pred @ 08/17/23 12:46:01.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:01.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:01.272
  Aug 17 12:46:01.273: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  E0817 12:46:01.277373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:01.277: INFO: Waiting for terminating namespaces to be deleted...
  Aug 17 12:46:01.279: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-1 before test
  Aug 17 12:46:01.282: INFO: pod-handle-http-request from container-lifecycle-hook-5860 started at 2023-08-17 12:45:55 +0000 UTC (2 container statuses recorded)
  Aug 17 12:46:01.282: INFO: 	Container container-handle-http-request ready: true, restart count 0
  Aug 17 12:46:01.282: INFO: 	Container container-handle-https-request ready: true, restart count 0
  Aug 17 12:46:01.282: INFO: kube-flannel-xzfkd from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:46:01.282: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:46:01.282: INFO: kube-proxy-hnc5q from kube-system started at 2023-08-17 11:32:40 +0000 UTC (1 container statuses recorded)
  Aug 17 12:46:01.282: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:46:01.282: INFO: sonobuoy from sonobuoy started at 2023-08-17 11:35:15 +0000 UTC (1 container statuses recorded)
  Aug 17 12:46:01.282: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 17 12:46:01.282: INFO: 
  Logging pods the apiserver thinks is on node talos-default-worker-2 before test
  Aug 17 12:46:01.287: INFO: kube-flannel-rfh4z from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:46:01.287: INFO: 	Container kube-flannel ready: true, restart count 0
  Aug 17 12:46:01.287: INFO: kube-proxy-g8g7c from kube-system started at 2023-08-17 11:32:32 +0000 UTC (1 container statuses recorded)
  Aug 17 12:46:01.287: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 17 12:46:01.287: INFO: sonobuoy-e2e-job-5ab025959c564c77 from sonobuoy started at 2023-08-17 11:35:17 +0000 UTC (2 container statuses recorded)
  Aug 17 12:46:01.287: INFO: 	Container e2e ready: true, restart count 0
  Aug 17 12:46:01.287: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  STEP: verifying the node has the label node talos-default-worker-1 @ 08/17/23 12:46:01.303
  STEP: verifying the node has the label node talos-default-worker-2 @ 08/17/23 12:46:01.31
  Aug 17 12:46:01.319: INFO: Pod pod-handle-http-request requesting resource cpu=0m on Node talos-default-worker-1
  Aug 17 12:46:01.319: INFO: Pod kube-flannel-rfh4z requesting resource cpu=100m on Node talos-default-worker-2
  Aug 17 12:46:01.319: INFO: Pod kube-flannel-xzfkd requesting resource cpu=100m on Node talos-default-worker-1
  Aug 17 12:46:01.319: INFO: Pod kube-proxy-g8g7c requesting resource cpu=0m on Node talos-default-worker-2
  Aug 17 12:46:01.319: INFO: Pod kube-proxy-hnc5q requesting resource cpu=0m on Node talos-default-worker-1
  Aug 17 12:46:01.319: INFO: Pod sonobuoy requesting resource cpu=0m on Node talos-default-worker-1
  Aug 17 12:46:01.319: INFO: Pod sonobuoy-e2e-job-5ab025959c564c77 requesting resource cpu=0m on Node talos-default-worker-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 08/17/23 12:46:01.319
  Aug 17 12:46:01.319: INFO: Creating a pod which consumes cpu=2695m on Node talos-default-worker-1
  Aug 17 12:46:01.323: INFO: Creating a pod which consumes cpu=2695m on Node talos-default-worker-2
  E0817 12:46:02.277553      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:03.278038      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 08/17/23 12:46:03.332
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07270100-c99f-4f17-bbb3-e692d4d86236.177c2c62728d69a4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6604/filler-pod-07270100-c99f-4f17-bbb3-e692d4d86236 to talos-default-worker-1] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07270100-c99f-4f17-bbb3-e692d4d86236.177c2c628ee1e46d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07270100-c99f-4f17-bbb3-e692d4d86236.177c2c628f2d6a2d], Reason = [Created], Message = [Created container filler-pod-07270100-c99f-4f17-bbb3-e692d4d86236] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-07270100-c99f-4f17-bbb3-e692d4d86236.177c2c6295aabc6e], Reason = [Started], Message = [Started container filler-pod-07270100-c99f-4f17-bbb3-e692d4d86236] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-824d4473-7197-4eda-b51d-3c9af69df975.177c2c6272b4c7da], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6604/filler-pod-824d4473-7197-4eda-b51d-3c9af69df975 to talos-default-worker-2] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-824d4473-7197-4eda-b51d-3c9af69df975.177c2c628d47bddd], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-824d4473-7197-4eda-b51d-3c9af69df975.177c2c628d9b510f], Reason = [Created], Message = [Created container filler-pod-824d4473-7197-4eda-b51d-3c9af69df975] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-824d4473-7197-4eda-b51d-3c9af69df975.177c2c629437ba24], Reason = [Started], Message = [Started container filler-pod-824d4473-7197-4eda-b51d-3c9af69df975] @ 08/17/23 12:46:03.335
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.177c2c62ea92e396], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 2 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling..] @ 08/17/23 12:46:03.341
  E0817 12:46:04.278407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node talos-default-worker-1 @ 08/17/23 12:46:04.342
  STEP: verifying the node doesn't have the label node @ 08/17/23 12:46:04.349
  STEP: removing the label node off the node talos-default-worker-2 @ 08/17/23 12:46:04.351
  STEP: verifying the node doesn't have the label node @ 08/17/23 12:46:04.358
  Aug 17 12:46:04.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6604" for this suite. @ 08/17/23 12:46:04.364
• [3.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 08/17/23 12:46:04.37
  Aug 17 12:46:04.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:46:04.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:04.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:04.38
  Aug 17 12:46:04.382: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: creating the pod @ 08/17/23 12:46:04.383
  STEP: submitting the pod to kubernetes @ 08/17/23 12:46:04.383
  E0817 12:46:05.278639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:06.278812      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:06.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5199" for this suite. @ 08/17/23 12:46:06.573
• [2.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 08/17/23 12:46:06.579
  Aug 17 12:46:06.579: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replicaset @ 08/17/23 12:46:06.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:06.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:06.589
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 08/17/23 12:46:06.591
  Aug 17 12:46:06.596: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0817 12:46:07.279678      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:08.280122      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:09.280235      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:10.281114      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:11.281232      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:11.599: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/17/23 12:46:11.599
  STEP: getting scale subresource @ 08/17/23 12:46:11.599
  STEP: updating a scale subresource @ 08/17/23 12:46:11.601
  STEP: verifying the replicaset Spec.Replicas was modified @ 08/17/23 12:46:11.604
  STEP: Patch a scale subresource @ 08/17/23 12:46:11.606
  Aug 17 12:46:11.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9111" for this suite. @ 08/17/23 12:46:11.617
• [5.042 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 08/17/23 12:46:11.622
  Aug 17 12:46:11.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replicaset @ 08/17/23 12:46:11.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:11.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:11.63
  STEP: Create a Replicaset @ 08/17/23 12:46:11.633
  STEP: Verify that the required pods have come up. @ 08/17/23 12:46:11.635
  Aug 17 12:46:11.637: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0817 12:46:12.281443      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:13.282002      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:14.282216      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:15.282477      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:16.282559      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:16.641: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/17/23 12:46:16.641
  STEP: Getting /status @ 08/17/23 12:46:16.641
  Aug 17 12:46:16.644: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 08/17/23 12:46:16.644
  Aug 17 12:46:16.650: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 08/17/23 12:46:16.65
  Aug 17 12:46:16.651: INFO: Observed &ReplicaSet event: ADDED
  Aug 17 12:46:16.651: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 17 12:46:16.652: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 17 12:46:16.652: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 17 12:46:16.652: INFO: Found replicaset test-rs in namespace replicaset-5990 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 17 12:46:16.652: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 08/17/23 12:46:16.652
  Aug 17 12:46:16.652: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 17 12:46:16.657: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 08/17/23 12:46:16.657
  Aug 17 12:46:16.659: INFO: Observed &ReplicaSet event: ADDED
  Aug 17 12:46:16.659: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 17 12:46:16.659: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 17 12:46:16.659: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 17 12:46:16.660: INFO: Observed replicaset test-rs in namespace replicaset-5990 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 17 12:46:16.660: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 17 12:46:16.660: INFO: Found replicaset test-rs in namespace replicaset-5990 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Aug 17 12:46:16.660: INFO: Replicaset test-rs has a patched status
  Aug 17 12:46:16.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5990" for this suite. @ 08/17/23 12:46:16.664
• [5.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 08/17/23 12:46:16.67
  Aug 17 12:46:16.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename watch @ 08/17/23 12:46:16.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:16.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:16.681
  STEP: creating a new configmap @ 08/17/23 12:46:16.683
  STEP: modifying the configmap once @ 08/17/23 12:46:16.686
  STEP: modifying the configmap a second time @ 08/17/23 12:46:16.691
  STEP: deleting the configmap @ 08/17/23 12:46:16.696
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 08/17/23 12:46:16.699
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 08/17/23 12:46:16.699
  Aug 17 12:46:16.699: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8826  f2b333a6-1f8b-45ed-9784-16ef11546ea6 29838 0 2023-08-17 12:46:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-17 12:46:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 12:46:16.700: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8826  f2b333a6-1f8b-45ed-9784-16ef11546ea6 29839 0 2023-08-17 12:46:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-17 12:46:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 17 12:46:16.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8826" for this suite. @ 08/17/23 12:46:16.703
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 08/17/23 12:46:16.708
  Aug 17 12:46:16.708: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename containers @ 08/17/23 12:46:16.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:16.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:16.717
  STEP: Creating a pod to test override command @ 08/17/23 12:46:16.719
  E0817 12:46:17.283348      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:18.283645      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:19.284006      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:20.284205      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:46:20.731
  Aug 17 12:46:20.734: INFO: Trying to get logs from node talos-default-worker-1 pod client-containers-c7515b4f-c7b6-430a-a693-42c41473a84f container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 12:46:20.739
  Aug 17 12:46:20.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8462" for this suite. @ 08/17/23 12:46:20.751
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 08/17/23 12:46:20.767
  Aug 17 12:46:20.767: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename security-context-test @ 08/17/23 12:46:20.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:20.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:20.778
  E0817 12:46:21.284286      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:22.284554      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:23.285142      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:24.285454      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:24.799: INFO: Got logs for pod "busybox-privileged-false-bdf589e8-09a2-40b7-8115-f2cdc3c08407": "ip: RTNETLINK answers: Operation not permitted\n"
  Aug 17 12:46:24.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6108" for this suite. @ 08/17/23 12:46:24.802
• [4.040 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 08/17/23 12:46:24.807
  Aug 17 12:46:24.807: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:46:24.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:24.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:24.817
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7048 @ 08/17/23 12:46:24.819
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/17/23 12:46:24.828
  STEP: creating service externalsvc in namespace services-7048 @ 08/17/23 12:46:24.828
  STEP: creating replication controller externalsvc in namespace services-7048 @ 08/17/23 12:46:24.836
  I0817 12:46:24.840373      24 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7048, replica count: 2
  E0817 12:46:25.285697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:26.286981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:27.287172      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:46:27.892139      24 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 08/17/23 12:46:27.894
  Aug 17 12:46:27.905: INFO: Creating new exec pod
  E0817 12:46:28.288156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:29.288245      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:29.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-7048 exec execpodprj78 -- /bin/sh -x -c nslookup nodeport-service.services-7048.svc.cluster.local'
  Aug 17 12:46:30.049: INFO: stderr: "+ nslookup nodeport-service.services-7048.svc.cluster.local\n"
  Aug 17 12:46:30.049: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-7048.svc.cluster.local\tcanonical name = externalsvc.services-7048.svc.cluster.local.\nName:\texternalsvc.services-7048.svc.cluster.local\nAddress: 10.103.227.138\n\n"
  Aug 17 12:46:30.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-7048, will wait for the garbage collector to delete the pods @ 08/17/23 12:46:30.052
  Aug 17 12:46:30.108: INFO: Deleting ReplicationController externalsvc took: 3.436364ms
  Aug 17 12:46:30.209: INFO: Terminating ReplicationController externalsvc pods took: 100.794409ms
  E0817 12:46:30.288765      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:31.288820      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:32.288866      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:33.289892      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:33.323: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-7048" for this suite. @ 08/17/23 12:46:33.33
• [8.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 08/17/23 12:46:33.336
  Aug 17 12:46:33.336: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:46:33.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:33.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:33.347
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:46:33.349
  E0817 12:46:34.290306      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:35.290469      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:46:35.36
  Aug 17 12:46:35.361: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-867051e3-7ec2-454e-967c-d06c845f2006 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:46:35.365
  Aug 17 12:46:35.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-118" for this suite. @ 08/17/23 12:46:35.376
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 08/17/23 12:46:35.383
  Aug 17 12:46:35.383: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 12:46:35.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:35.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:35.394
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/17/23 12:46:35.396
  Aug 17 12:46:35.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9997 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Aug 17 12:46:35.442: INFO: stderr: ""
  Aug 17 12:46:35.442: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 08/17/23 12:46:35.442
  E0817 12:46:36.290906      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:37.291151      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:38.291437      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:39.291531      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:40.292382      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/17/23 12:46:40.493
  Aug 17 12:46:40.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9997 get pod e2e-test-httpd-pod -o json'
  Aug 17 12:46:40.536: INFO: stderr: ""
  Aug 17 12:46:40.536: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-08-17T12:46:35Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9997\",\n        \"resourceVersion\": \"30055\",\n        \"uid\": \"26668e2a-0e25-40c5-8ad5-d7e2ce31e65f\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-nnszt\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"talos-default-worker-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-nnszt\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-17T12:46:35Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-17T12:46:36Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-17T12:46:36Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-17T12:46:35Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://eafc31f21d61132e38f1bfb5ba7e97a03f364d4f52a92b49dd86819555d8960d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-08-17T12:46:36Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.20.0.5\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.157\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.157\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-08-17T12:46:35Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 08/17/23 12:46:40.537
  Aug 17 12:46:40.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9997 replace -f -'
  Aug 17 12:46:40.658: INFO: stderr: ""
  Aug 17 12:46:40.658: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 08/17/23 12:46:40.658
  Aug 17 12:46:40.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-9997 delete pods e2e-test-httpd-pod'
  E0817 12:46:41.293169      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:42.138: INFO: stderr: ""
  Aug 17 12:46:42.138: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 17 12:46:42.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9997" for this suite. @ 08/17/23 12:46:42.142
• [6.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 08/17/23 12:46:42.146
  Aug 17 12:46:42.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename endpointslice @ 08/17/23 12:46:42.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:42.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:42.156
  Aug 17 12:46:42.163: INFO: Endpoints addresses: [172.20.0.2 172.20.0.3 172.20.0.4] , ports: [6443]
  Aug 17 12:46:42.163: INFO: EndpointSlices addresses: [172.20.0.2 172.20.0.3 172.20.0.4] , ports: [6443]
  Aug 17 12:46:42.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5395" for this suite. @ 08/17/23 12:46:42.166
• [0.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 08/17/23 12:46:42.17
  Aug 17 12:46:42.170: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replicaset @ 08/17/23 12:46:42.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:42.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:42.179
  Aug 17 12:46:42.181: INFO: Creating ReplicaSet my-hostname-basic-d7220cd8-bd72-4afe-b0ca-89e5131ff1a5
  Aug 17 12:46:42.186: INFO: Pod name my-hostname-basic-d7220cd8-bd72-4afe-b0ca-89e5131ff1a5: Found 0 pods out of 1
  E0817 12:46:42.293666      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:43.293965      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:44.294022      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:45.294234      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:46.294464      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:46:47.189: INFO: Pod name my-hostname-basic-d7220cd8-bd72-4afe-b0ca-89e5131ff1a5: Found 1 pods out of 1
  Aug 17 12:46:47.189: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-d7220cd8-bd72-4afe-b0ca-89e5131ff1a5" is running
  Aug 17 12:46:47.192: INFO: Pod "my-hostname-basic-d7220cd8-bd72-4afe-b0ca-89e5131ff1a5-5lr5d" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 12:46:42 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 12:46:43 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 12:46:43 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-17 12:46:42 +0000 UTC Reason: Message:}])
  Aug 17 12:46:47.192: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/17/23 12:46:47.192
  Aug 17 12:46:47.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6059" for this suite. @ 08/17/23 12:46:47.202
• [5.035 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 08/17/23 12:46:47.206
  Aug 17 12:46:47.206: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 12:46:47.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:47.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:47.216
  STEP: Creating secret with name secret-test-653c8d50-8de5-4f7c-889b-7e7ac18a7a9c @ 08/17/23 12:46:47.226
  STEP: Creating a pod to test consume secrets @ 08/17/23 12:46:47.228
  E0817 12:46:47.295101      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:48.295577      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:49.296363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:50.296590      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:46:51.241
  Aug 17 12:46:51.243: INFO: Trying to get logs from node talos-default-worker-2 pod pod-secrets-97b129c2-aa94-4706-8d53-4513338ab79c container secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 12:46:51.246
  Aug 17 12:46:51.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7588" for this suite. @ 08/17/23 12:46:51.254
  STEP: Destroying namespace "secret-namespace-6707" for this suite. @ 08/17/23 12:46:51.257
• [4.054 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 08/17/23 12:46:51.26
  Aug 17 12:46:51.260: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:46:51.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:46:51.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:46:51.269
  STEP: Counting existing ResourceQuota @ 08/17/23 12:46:51.27
  E0817 12:46:51.297499      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:52.298238      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:53.299216      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:54.300202      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:55.300188      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/17/23 12:46:56.273
  STEP: Ensuring resource quota status is calculated @ 08/17/23 12:46:56.276
  E0817 12:46:56.301223      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:57.301581      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 08/17/23 12:46:58.279
  STEP: Ensuring resource quota status captures replicaset creation @ 08/17/23 12:46:58.287
  E0817 12:46:58.301653      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:46:59.302724      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 08/17/23 12:47:00.29
  STEP: Ensuring resource quota status released usage @ 08/17/23 12:47:00.294
  E0817 12:47:00.302977      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:01.303218      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:47:02.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4469" for this suite. @ 08/17/23 12:47:02.302
  E0817 12:47:02.304063      24 retrywatcher.go:129] "Watch failed" err="context canceled"
• [11.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 08/17/23 12:47:02.309
  Aug 17 12:47:02.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 12:47:02.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:47:02.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:47:02.321
  STEP: Creating service test in namespace statefulset-1468 @ 08/17/23 12:47:02.324
  STEP: Creating statefulset ss in namespace statefulset-1468 @ 08/17/23 12:47:02.331
  Aug 17 12:47:02.338: INFO: Found 0 stateful pods, waiting for 1
  E0817 12:47:03.304472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:04.304715      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:05.304892      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:06.305024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:07.305345      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:08.305782      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:09.306783      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:10.306899      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:11.307001      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:12.307183      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:47:12.342: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 08/17/23 12:47:12.346
  STEP: Getting /status @ 08/17/23 12:47:12.354
  Aug 17 12:47:12.356: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 08/17/23 12:47:12.356
  Aug 17 12:47:12.362: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 08/17/23 12:47:12.362
  Aug 17 12:47:12.363: INFO: Observed &StatefulSet event: ADDED
  Aug 17 12:47:12.363: INFO: Found Statefulset ss in namespace statefulset-1468 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 17 12:47:12.363: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 08/17/23 12:47:12.363
  Aug 17 12:47:12.363: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 17 12:47:12.367: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 08/17/23 12:47:12.367
  Aug 17 12:47:12.368: INFO: Observed &StatefulSet event: ADDED
  Aug 17 12:47:12.368: INFO: Deleting all statefulset in ns statefulset-1468
  Aug 17 12:47:12.370: INFO: Scaling statefulset ss to 0
  E0817 12:47:13.307481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:14.307451      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:15.308375      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:16.308786      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:17.308888      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:18.309916      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:19.310074      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:20.310159      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:21.310264      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:22.310544      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:47:22.382: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 12:47:22.384: INFO: Deleting statefulset ss
  Aug 17 12:47:22.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1468" for this suite. @ 08/17/23 12:47:22.395
• [20.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 08/17/23 12:47:22.4
  Aug 17 12:47:22.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:47:22.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:47:22.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:47:22.41
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:47:22.412
  E0817 12:47:23.310960      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:24.311429      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:47:24.422
  Aug 17 12:47:24.424: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-c04ecebc-908e-4a46-9293-4ae1646011bd container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:47:24.428
  Aug 17 12:47:24.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5829" for this suite. @ 08/17/23 12:47:24.438
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 08/17/23 12:47:24.442
  Aug 17 12:47:24.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename podtemplate @ 08/17/23 12:47:24.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:47:24.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:47:24.451
  STEP: Create a pod template @ 08/17/23 12:47:24.452
  STEP: Replace a pod template @ 08/17/23 12:47:24.455
  Aug 17 12:47:24.459: INFO: Found updated podtemplate annotation: "true"

  Aug 17 12:47:24.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6870" for this suite. @ 08/17/23 12:47:24.461
• [0.021 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 08/17/23 12:47:24.464
  Aug 17 12:47:24.464: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-preemption @ 08/17/23 12:47:24.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:47:24.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:47:24.472
  Aug 17 12:47:24.479: INFO: Waiting up to 1m0s for all nodes to be ready
  E0817 12:47:25.312410      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:26.312708      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:27.312732      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:28.313021      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:29.313269      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:30.313417      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:31.314176      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:32.314308      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:33.314412      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:34.314633      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:35.314815      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:36.315643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:37.316349      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:38.316617      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:39.317140      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:40.317275      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:41.317833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:42.318511      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:43.318956      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:44.319024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:45.319407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:46.319554      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:47.320257      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:48.320535      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:49.321476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:50.321631      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:51.321984      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:52.322281      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:53.322595      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:54.322759      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:55.322813      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:56.322909      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:57.323817      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:58.323812      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:47:59.324227      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:00.324449      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:01.324551      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:02.324771      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:03.324900      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:04.325060      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:05.325852      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:06.326014      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:07.326177      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:08.326504      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:09.327471      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:10.327544      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:11.328059      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:12.328203      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:13.329228      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:14.329313      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:15.329521      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:16.329662      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:17.330635      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:18.331123      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:19.332108      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:20.332551      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:21.332696      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:22.333156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:23.333222      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:24.333363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:48:24.492: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/17/23 12:48:24.493
  Aug 17 12:48:24.493: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/17/23 12:48:24.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:48:24.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:48:24.505
  STEP: Finding an available node @ 08/17/23 12:48:24.507
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/17/23 12:48:24.507
  E0817 12:48:25.334097      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:26.334238      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/17/23 12:48:26.521
  Aug 17 12:48:26.527: INFO: found a healthy node: talos-default-worker-1
  E0817 12:48:27.334609      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:28.334847      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:29.335522      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:30.335757      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:31.336831      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:32.337503      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:48:32.577: INFO: pods created so far: [1 1 1]
  Aug 17 12:48:32.577: INFO: length of pods created so far: 3
  E0817 12:48:33.338391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:34.339111      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:48:34.584: INFO: pods created so far: [2 2 1]
  E0817 12:48:35.339800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:36.339988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:37.340367      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:38.340581      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:39.340741      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:40.340833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:41.341621      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:48:41.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 12:48:41.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-447" for this suite. @ 08/17/23 12:48:41.637
  STEP: Destroying namespace "sched-preemption-6599" for this suite. @ 08/17/23 12:48:41.642
• [77.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 08/17/23 12:48:41.647
  Aug 17 12:48:41.647: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 12:48:41.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:48:41.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:48:41.659
  Aug 17 12:48:41.666: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0817 12:48:42.341729      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:43.342298      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:44.342429      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:45.342508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:46.342614      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:48:46.670: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/17/23 12:48:46.67
  Aug 17 12:48:46.670: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 08/17/23 12:48:46.677
  Aug 17 12:48:46.686: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7320",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb886c35-f791-4a18-8bb9-f511c6a8d2d8",
      ResourceVersion: (string) (len=5) "30707",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873326,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 17 12:48:46.691: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Aug 17 12:48:46.691: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Aug 17 12:48:46.691: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7320",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "387b8cf8-3b39-43fe-9d0a-ac709941d180",
      ResourceVersion: (string) (len=5) "30709",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "bb886c35-f791-4a18-8bb9-f511c6a8d2d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 62 38 38 36 63 33  |"uid\":\"bb886c3|
              00000040  35 2d 66 37 39 31 2d 34  61 31 38 2d 38 62 62 39  |5-f791-4a18-8bb9|
              00000050  2d 66 35 31 31 63 36 61  38 64 32 64 38 5c 22 7d  |-f511c6a8d2d8\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 12:48:46.696: INFO: Pod "test-cleanup-controller-2pvfq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-2pvfq",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7320",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a16c2d9d-9e2d-44ee-a2f6-67a5b27bca14",
      ResourceVersion: (string) (len=5) "30693",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "387b8cf8-3b39-43fe-9d0a-ac709941d180",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 38 37 62 38 63 66 38  |uid\":\"387b8cf8|
              00000080  2d 33 62 33 39 2d 34 33  66 65 2d 39 64 30 61 2d  |-3b39-43fe-9d0a-|
              00000090  61 63 37 30 39 39 34 31  64 31 38 30 5c 22 7d 22  |ac709941d180\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 39 5c 22 7d 22 3a 7b  |10.244.2.9\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9wsff",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9wsff",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.244.2.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.2.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873322,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://87e555c4214e3113eed416c9d8389e188ddf4dcf8a8cc0bbccdbd0aca1cafa87",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:48:46.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7320" for this suite. @ 08/17/23 12:48:46.705
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 08/17/23 12:48:46.714
  Aug 17 12:48:46.714: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:48:46.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:48:46.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:48:46.725
  STEP: Setting up server cert @ 08/17/23 12:48:46.734
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:48:46.949
  STEP: Deploying the webhook pod @ 08/17/23 12:48:46.952
  STEP: Wait for the deployment to be ready @ 08/17/23 12:48:46.957
  Aug 17 12:48:46.960: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:48:47.343558      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:48.343937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:48:48.968
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:48:48.976
  E0817 12:48:49.344516      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:48:49.976: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 17 12:48:49.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:48:50.345041      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 08/17/23 12:48:50.488
  STEP: Creating a custom resource that should be denied by the webhook @ 08/17/23 12:48:50.505
  E0817 12:48:51.345077      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:52.345391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 08/17/23 12:48:52.517
  STEP: Updating the custom resource with disallowed data should be denied @ 08/17/23 12:48:52.523
  STEP: Deleting the custom resource should be denied @ 08/17/23 12:48:52.529
  STEP: Remove the offending key and value from the custom resource data @ 08/17/23 12:48:52.534
  STEP: Deleting the updated custom resource should be successful @ 08/17/23 12:48:52.542
  Aug 17 12:48:52.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2257" for this suite. @ 08/17/23 12:48:53.09
  STEP: Destroying namespace "webhook-markers-7237" for this suite. @ 08/17/23 12:48:53.094
• [6.384 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 08/17/23 12:48:53.098
  Aug 17 12:48:53.098: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:48:53.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:48:53.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:48:53.107
  STEP: creating a collection of services @ 08/17/23 12:48:53.108
  Aug 17 12:48:53.108: INFO: Creating e2e-svc-a-mbpb4
  Aug 17 12:48:53.123: INFO: Creating e2e-svc-b-7dcgr
  Aug 17 12:48:53.131: INFO: Creating e2e-svc-c-6w2lr
  STEP: deleting service collection @ 08/17/23 12:48:53.142
  Aug 17 12:48:53.156: INFO: Collection of services has been deleted
  Aug 17 12:48:53.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7354" for this suite. @ 08/17/23 12:48:53.158
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 08/17/23 12:48:53.162
  Aug 17 12:48:53.162: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename proxy @ 08/17/23 12:48:53.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:48:53.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:48:53.169
  STEP: starting an echo server on multiple ports @ 08/17/23 12:48:53.176
  STEP: creating replication controller proxy-service-s5jww in namespace proxy-4905 @ 08/17/23 12:48:53.176
  I0817 12:48:53.178947      24 runners.go:197] Created replication controller with name: proxy-service-s5jww, namespace: proxy-4905, replica count: 1
  E0817 12:48:53.345595      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:48:54.229755      24 runners.go:197] proxy-service-s5jww Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0817 12:48:54.346200      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:48:55.230164      24 runners.go:197] proxy-service-s5jww Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 12:48:55.233: INFO: setup took 2.061914011s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 08/17/23 12:48:55.233
  Aug 17 12:48:55.239: INFO: (0) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 6.032506ms)
  Aug 17 12:48:55.242: INFO: (0) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 9.2775ms)
  Aug 17 12:48:55.242: INFO: (0) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 9.269273ms)
  Aug 17 12:48:55.242: INFO: (0) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 9.535596ms)
  Aug 17 12:48:55.242: INFO: (0) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 9.546807ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 10.112182ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 10.299385ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 10.472231ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 10.5254ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 10.533074ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 10.594981ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 10.646959ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 10.192372ms)
  Aug 17 12:48:55.243: INFO: (0) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 10.581796ms)
  Aug 17 12:48:55.246: INFO: (0) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 12.846314ms)
  Aug 17 12:48:55.246: INFO: (0) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 12.852716ms)
  Aug 17 12:48:55.248: INFO: (1) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.762395ms)
  Aug 17 12:48:55.250: INFO: (1) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 4.177041ms)
  Aug 17 12:48:55.251: INFO: (1) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 4.970575ms)
  Aug 17 12:48:55.252: INFO: (1) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 5.947966ms)
  Aug 17 12:48:55.252: INFO: (1) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 6.077551ms)
  Aug 17 12:48:55.252: INFO: (1) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 6.189121ms)
  Aug 17 12:48:55.252: INFO: (1) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 6.178671ms)
  Aug 17 12:48:55.252: INFO: (1) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 6.23621ms)
  Aug 17 12:48:55.253: INFO: (1) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 7.050494ms)
  Aug 17 12:48:55.253: INFO: (1) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 7.29225ms)
  Aug 17 12:48:55.253: INFO: (1) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 7.692974ms)
  Aug 17 12:48:55.253: INFO: (1) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 7.670812ms)
  Aug 17 12:48:55.257: INFO: (1) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 11.394779ms)
  Aug 17 12:48:55.257: INFO: (1) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 11.377015ms)
  Aug 17 12:48:55.257: INFO: (1) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 11.271256ms)
  Aug 17 12:48:55.257: INFO: (1) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 11.294769ms)
  Aug 17 12:48:55.260: INFO: (2) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.915121ms)
  Aug 17 12:48:55.262: INFO: (2) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 4.566763ms)
  Aug 17 12:48:55.262: INFO: (2) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 5.031539ms)
  Aug 17 12:48:55.262: INFO: (2) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 5.042611ms)
  Aug 17 12:48:55.264: INFO: (2) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 6.502671ms)
  Aug 17 12:48:55.264: INFO: (2) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 6.986874ms)
  Aug 17 12:48:55.265: INFO: (2) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 7.229851ms)
  Aug 17 12:48:55.265: INFO: (2) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 7.295726ms)
  Aug 17 12:48:55.265: INFO: (2) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 7.305374ms)
  Aug 17 12:48:55.265: INFO: (2) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 7.794575ms)
  Aug 17 12:48:55.265: INFO: (2) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 8.050447ms)
  Aug 17 12:48:55.266: INFO: (2) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 8.328281ms)
  Aug 17 12:48:55.266: INFO: (2) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 8.57757ms)
  Aug 17 12:48:55.267: INFO: (2) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 10.000432ms)
  Aug 17 12:48:55.267: INFO: (2) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 10.019257ms)
  Aug 17 12:48:55.268: INFO: (2) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 10.232758ms)
  Aug 17 12:48:55.272: INFO: (3) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 4.345837ms)
  Aug 17 12:48:55.272: INFO: (3) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 4.34169ms)
  Aug 17 12:48:55.272: INFO: (3) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 4.393708ms)
  Aug 17 12:48:55.273: INFO: (3) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 4.965325ms)
  Aug 17 12:48:55.274: INFO: (3) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 6.409545ms)
  Aug 17 12:48:55.274: INFO: (3) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 6.556712ms)
  Aug 17 12:48:55.274: INFO: (3) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 6.430466ms)
  Aug 17 12:48:55.274: INFO: (3) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 6.513161ms)
  Aug 17 12:48:55.274: INFO: (3) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 6.720301ms)
  Aug 17 12:48:55.275: INFO: (3) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 7.007672ms)
  Aug 17 12:48:55.275: INFO: (3) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 7.139622ms)
  Aug 17 12:48:55.275: INFO: (3) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 7.454986ms)
  Aug 17 12:48:55.277: INFO: (3) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 8.98084ms)
  Aug 17 12:48:55.277: INFO: (3) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 9.177459ms)
  Aug 17 12:48:55.277: INFO: (3) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 9.269013ms)
  Aug 17 12:48:55.277: INFO: (3) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 9.287238ms)
  Aug 17 12:48:55.281: INFO: (4) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.668031ms)
  Aug 17 12:48:55.282: INFO: (4) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 5.183216ms)
  Aug 17 12:48:55.283: INFO: (4) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 5.29118ms)
  Aug 17 12:48:55.283: INFO: (4) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 5.420794ms)
  Aug 17 12:48:55.283: INFO: (4) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 5.861794ms)
  Aug 17 12:48:55.284: INFO: (4) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 6.36374ms)
  Aug 17 12:48:55.284: INFO: (4) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 6.403374ms)
  Aug 17 12:48:55.284: INFO: (4) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 6.443189ms)
  Aug 17 12:48:55.284: INFO: (4) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 6.641623ms)
  Aug 17 12:48:55.284: INFO: (4) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 6.665067ms)
  Aug 17 12:48:55.284: INFO: (4) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 6.404857ms)
  Aug 17 12:48:55.285: INFO: (4) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 7.136685ms)
  Aug 17 12:48:55.285: INFO: (4) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 7.290155ms)
  Aug 17 12:48:55.285: INFO: (4) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 7.802891ms)
  Aug 17 12:48:55.285: INFO: (4) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 7.774788ms)
  Aug 17 12:48:55.285: INFO: (4) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 7.872512ms)
  Aug 17 12:48:55.288: INFO: (5) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.043454ms)
  Aug 17 12:48:55.289: INFO: (5) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.676035ms)
  Aug 17 12:48:55.289: INFO: (5) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.87977ms)
  Aug 17 12:48:55.289: INFO: (5) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 4.036756ms)
  Aug 17 12:48:55.291: INFO: (5) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 5.822741ms)
  Aug 17 12:48:55.291: INFO: (5) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 6.133606ms)
  Aug 17 12:48:55.291: INFO: (5) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 6.08738ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 7.275577ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 7.178414ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 7.35695ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 7.208951ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 7.851573ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 7.974123ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 8.060525ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 8.108767ms)
  Aug 17 12:48:55.293: INFO: (5) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 8.119818ms)
  Aug 17 12:48:55.296: INFO: (6) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 2.564863ms)
  Aug 17 12:48:55.297: INFO: (6) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 3.078641ms)
  Aug 17 12:48:55.297: INFO: (6) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 2.980745ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 3.775904ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.717343ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.758571ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 4.068595ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 4.262571ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 4.3358ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.662484ms)
  Aug 17 12:48:55.298: INFO: (6) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 3.979306ms)
  Aug 17 12:48:55.299: INFO: (6) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.653017ms)
  Aug 17 12:48:55.300: INFO: (6) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 5.805718ms)
  Aug 17 12:48:55.300: INFO: (6) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 5.707573ms)
  Aug 17 12:48:55.300: INFO: (6) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 5.488722ms)
  Aug 17 12:48:55.300: INFO: (6) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 5.510773ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.312511ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.358979ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.786743ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 3.879278ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 3.931097ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 4.171409ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.987673ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 4.413936ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 4.052094ms)
  Aug 17 12:48:55.304: INFO: (7) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 4.02881ms)
  Aug 17 12:48:55.305: INFO: (7) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.669998ms)
  Aug 17 12:48:55.305: INFO: (7) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.881107ms)
  Aug 17 12:48:55.305: INFO: (7) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.944947ms)
  Aug 17 12:48:55.305: INFO: (7) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.981164ms)
  Aug 17 12:48:55.306: INFO: (7) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 5.42431ms)
  Aug 17 12:48:55.306: INFO: (7) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 5.438416ms)
  Aug 17 12:48:55.308: INFO: (8) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.193382ms)
  Aug 17 12:48:55.309: INFO: (8) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 2.596702ms)
  Aug 17 12:48:55.309: INFO: (8) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 2.699046ms)
  Aug 17 12:48:55.309: INFO: (8) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.741215ms)
  Aug 17 12:48:55.309: INFO: (8) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.276524ms)
  Aug 17 12:48:55.309: INFO: (8) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.19537ms)
  Aug 17 12:48:55.310: INFO: (8) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 3.860833ms)
  Aug 17 12:48:55.310: INFO: (8) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.18835ms)
  Aug 17 12:48:55.310: INFO: (8) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 4.110354ms)
  Aug 17 12:48:55.310: INFO: (8) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 4.150901ms)
  Aug 17 12:48:55.311: INFO: (8) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.808629ms)
  Aug 17 12:48:55.311: INFO: (8) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.873211ms)
  Aug 17 12:48:55.311: INFO: (8) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 4.909691ms)
  Aug 17 12:48:55.311: INFO: (8) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 5.063269ms)
  Aug 17 12:48:55.311: INFO: (8) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 5.275109ms)
  Aug 17 12:48:55.311: INFO: (8) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 5.279617ms)
  Aug 17 12:48:55.314: INFO: (9) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.443193ms)
  Aug 17 12:48:55.315: INFO: (9) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 3.002297ms)
  Aug 17 12:48:55.315: INFO: (9) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.925572ms)
  Aug 17 12:48:55.315: INFO: (9) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.050277ms)
  Aug 17 12:48:55.315: INFO: (9) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.076066ms)
  Aug 17 12:48:55.315: INFO: (9) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 3.436024ms)
  Aug 17 12:48:55.315: INFO: (9) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 3.535722ms)
  Aug 17 12:48:55.316: INFO: (9) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.739146ms)
  Aug 17 12:48:55.316: INFO: (9) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.729497ms)
  Aug 17 12:48:55.316: INFO: (9) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.758311ms)
  Aug 17 12:48:55.316: INFO: (9) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 4.047686ms)
  Aug 17 12:48:55.316: INFO: (9) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.145882ms)
  Aug 17 12:48:55.317: INFO: (9) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.971085ms)
  Aug 17 12:48:55.317: INFO: (9) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.946108ms)
  Aug 17 12:48:55.317: INFO: (9) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.946379ms)
  Aug 17 12:48:55.317: INFO: (9) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 5.372402ms)
  Aug 17 12:48:55.320: INFO: (10) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.217768ms)
  Aug 17 12:48:55.320: INFO: (10) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 2.509408ms)
  Aug 17 12:48:55.320: INFO: (10) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.709825ms)
  Aug 17 12:48:55.321: INFO: (10) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.085934ms)
  Aug 17 12:48:55.321: INFO: (10) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.087577ms)
  Aug 17 12:48:55.321: INFO: (10) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 3.403632ms)
  Aug 17 12:48:55.321: INFO: (10) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.559005ms)
  Aug 17 12:48:55.321: INFO: (10) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 3.649767ms)
  Aug 17 12:48:55.321: INFO: (10) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.550289ms)
  Aug 17 12:48:55.321: INFO: (10) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 3.836678ms)
  Aug 17 12:48:55.322: INFO: (10) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.3577ms)
  Aug 17 12:48:55.322: INFO: (10) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.17698ms)
  Aug 17 12:48:55.322: INFO: (10) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 4.340838ms)
  Aug 17 12:48:55.322: INFO: (10) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 4.380152ms)
  Aug 17 12:48:55.322: INFO: (10) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.397966ms)
  Aug 17 12:48:55.323: INFO: (10) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.962238ms)
  Aug 17 12:48:55.324: INFO: (11) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 1.672001ms)
  Aug 17 12:48:55.325: INFO: (11) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.328898ms)
  Aug 17 12:48:55.325: INFO: (11) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.516762ms)
  Aug 17 12:48:55.325: INFO: (11) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 2.671173ms)
  Aug 17 12:48:55.326: INFO: (11) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.413822ms)
  Aug 17 12:48:55.326: INFO: (11) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.435002ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.617144ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 4.01322ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.061242ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 4.105275ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.228808ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.383689ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.197708ms)
  Aug 17 12:48:55.327: INFO: (11) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 4.149808ms)
  Aug 17 12:48:55.328: INFO: (11) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.855588ms)
  Aug 17 12:48:55.328: INFO: (11) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 5.365629ms)
  Aug 17 12:48:55.330: INFO: (12) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 1.772219ms)
  Aug 17 12:48:55.331: INFO: (12) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.494169ms)
  Aug 17 12:48:55.331: INFO: (12) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.732348ms)
  Aug 17 12:48:55.331: INFO: (12) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.739942ms)
  Aug 17 12:48:55.331: INFO: (12) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 2.756603ms)
  Aug 17 12:48:55.331: INFO: (12) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.874736ms)
  Aug 17 12:48:55.332: INFO: (12) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 2.932876ms)
  Aug 17 12:48:55.332: INFO: (12) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.585576ms)
  Aug 17 12:48:55.332: INFO: (12) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.784861ms)
  Aug 17 12:48:55.333: INFO: (12) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.316212ms)
  Aug 17 12:48:55.333: INFO: (12) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.406031ms)
  Aug 17 12:48:55.333: INFO: (12) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 4.83541ms)
  Aug 17 12:48:55.333: INFO: (12) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.779785ms)
  Aug 17 12:48:55.333: INFO: (12) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.923415ms)
  Aug 17 12:48:55.333: INFO: (12) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.989079ms)
  Aug 17 12:48:55.333: INFO: (12) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 5.030578ms)
  Aug 17 12:48:55.336: INFO: (13) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.734131ms)
  Aug 17 12:48:55.336: INFO: (13) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.646466ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 3.396298ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.307632ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 3.305087ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.425003ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 3.500935ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.313503ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 3.449919ms)
  Aug 17 12:48:55.337: INFO: (13) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 3.476108ms)
  Aug 17 12:48:55.338: INFO: (13) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.928842ms)
  Aug 17 12:48:55.338: INFO: (13) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.19869ms)
  Aug 17 12:48:55.338: INFO: (13) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.546115ms)
  Aug 17 12:48:55.338: INFO: (13) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.289021ms)
  Aug 17 12:48:55.338: INFO: (13) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.560392ms)
  Aug 17 12:48:55.338: INFO: (13) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.632668ms)
  Aug 17 12:48:55.341: INFO: (14) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.474381ms)
  Aug 17 12:48:55.341: INFO: (14) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.519527ms)
  Aug 17 12:48:55.341: INFO: (14) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 2.542942ms)
  Aug 17 12:48:55.341: INFO: (14) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.701ms)
  Aug 17 12:48:55.341: INFO: (14) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 2.867253ms)
  Aug 17 12:48:55.341: INFO: (14) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.022904ms)
  Aug 17 12:48:55.341: INFO: (14) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.064033ms)
  Aug 17 12:48:55.342: INFO: (14) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 3.763421ms)
  Aug 17 12:48:55.342: INFO: (14) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.609531ms)
  Aug 17 12:48:55.342: INFO: (14) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.617836ms)
  Aug 17 12:48:55.342: INFO: (14) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 3.6411ms)
  Aug 17 12:48:55.343: INFO: (14) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.479259ms)
  Aug 17 12:48:55.343: INFO: (14) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.560121ms)
  Aug 17 12:48:55.343: INFO: (14) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.502814ms)
  Aug 17 12:48:55.343: INFO: (14) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.592382ms)
  Aug 17 12:48:55.343: INFO: (14) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.858984ms)
  E0817 12:48:55.346179      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 2.37257ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.387718ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.236734ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.363612ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.341251ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 2.462059ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 2.788443ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 2.750612ms)
  Aug 17 12:48:55.346: INFO: (15) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.808431ms)
  Aug 17 12:48:55.347: INFO: (15) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.278256ms)
  Aug 17 12:48:55.347: INFO: (15) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 3.779159ms)
  Aug 17 12:48:55.347: INFO: (15) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 3.599132ms)
  Aug 17 12:48:55.347: INFO: (15) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 3.906149ms)
  Aug 17 12:48:55.347: INFO: (15) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 3.777056ms)
  Aug 17 12:48:55.347: INFO: (15) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 3.774432ms)
  Aug 17 12:48:55.347: INFO: (15) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 3.696204ms)
  Aug 17 12:48:55.349: INFO: (16) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 1.856739ms)
  Aug 17 12:48:55.350: INFO: (16) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 2.304973ms)
  Aug 17 12:48:55.350: INFO: (16) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.424267ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 3.065004ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 3.026904ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.048173ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.054455ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.076797ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 3.425614ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 3.493662ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.489724ms)
  Aug 17 12:48:55.351: INFO: (16) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.539037ms)
  Aug 17 12:48:55.352: INFO: (16) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.236683ms)
  Aug 17 12:48:55.352: INFO: (16) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.350216ms)
  Aug 17 12:48:55.352: INFO: (16) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.293138ms)
  Aug 17 12:48:55.352: INFO: (16) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.457057ms)
  Aug 17 12:48:55.354: INFO: (17) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 1.898947ms)
  Aug 17 12:48:55.354: INFO: (17) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 2.17606ms)
  Aug 17 12:48:55.354: INFO: (17) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.210395ms)
  Aug 17 12:48:55.354: INFO: (17) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 2.280997ms)
  Aug 17 12:48:55.354: INFO: (17) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.415151ms)
  Aug 17 12:48:55.355: INFO: (17) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.006444ms)
  Aug 17 12:48:55.355: INFO: (17) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 3.064253ms)
  Aug 17 12:48:55.355: INFO: (17) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.082147ms)
  Aug 17 12:48:55.355: INFO: (17) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.11532ms)
  Aug 17 12:48:55.355: INFO: (17) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 3.414873ms)
  Aug 17 12:48:55.356: INFO: (17) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.416607ms)
  Aug 17 12:48:55.356: INFO: (17) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.018521ms)
  Aug 17 12:48:55.356: INFO: (17) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.064548ms)
  Aug 17 12:48:55.356: INFO: (17) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.032377ms)
  Aug 17 12:48:55.357: INFO: (17) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.452578ms)
  Aug 17 12:48:55.357: INFO: (17) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.419677ms)
  Aug 17 12:48:55.359: INFO: (18) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.595009ms)
  Aug 17 12:48:55.359: INFO: (18) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 2.577496ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 3.027654ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 2.676012ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.139105ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 3.179841ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 3.384066ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 3.229195ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 3.399435ms)
  Aug 17 12:48:55.360: INFO: (18) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 3.228683ms)
  Aug 17 12:48:55.361: INFO: (18) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 3.754434ms)
  Aug 17 12:48:55.361: INFO: (18) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.317144ms)
  Aug 17 12:48:55.362: INFO: (18) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.442911ms)
  Aug 17 12:48:55.362: INFO: (18) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.491382ms)
  Aug 17 12:48:55.362: INFO: (18) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.535926ms)
  Aug 17 12:48:55.362: INFO: (18) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.560251ms)
  Aug 17 12:48:55.364: INFO: (19) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 1.851648ms)
  Aug 17 12:48:55.364: INFO: (19) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">... (200; 2.246783ms)
  Aug 17 12:48:55.365: INFO: (19) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:162/proxy/: bar (200; 2.479341ms)
  Aug 17 12:48:55.365: INFO: (19) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.599097ms)
  Aug 17 12:48:55.365: INFO: (19) /api/v1/namespaces/proxy-4905/pods/http:proxy-service-s5jww-6cg7r:160/proxy/: foo (200; 2.786039ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:443/proxy/tlsrewritem... (200; 3.516515ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:462/proxy/: tls qux (200; 3.588671ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/pods/https:proxy-service-s5jww-6cg7r:460/proxy/: tls baz (200; 3.717483ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r/proxy/rewriteme">test</a> (200; 3.680874ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/: <a href="/api/v1/namespaces/proxy-4905/pods/proxy-service-s5jww-6cg7r:1080/proxy/rewriteme">test<... (200; 4.030564ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname2/proxy/: bar (200; 4.370655ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname1/proxy/: tls baz (200; 4.323666ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname2/proxy/: bar (200; 4.346318ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/services/proxy-service-s5jww:portname1/proxy/: foo (200; 4.186517ms)
  Aug 17 12:48:55.366: INFO: (19) /api/v1/namespaces/proxy-4905/services/https:proxy-service-s5jww:tlsportname2/proxy/: tls qux (200; 4.226923ms)
  Aug 17 12:48:55.367: INFO: (19) /api/v1/namespaces/proxy-4905/services/http:proxy-service-s5jww:portname1/proxy/: foo (200; 4.465333ms)
  Aug 17 12:48:55.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-s5jww in namespace proxy-4905, will wait for the garbage collector to delete the pods @ 08/17/23 12:48:55.369
  Aug 17 12:48:55.424: INFO: Deleting ReplicationController proxy-service-s5jww took: 2.848908ms
  Aug 17 12:48:55.524: INFO: Terminating ReplicationController proxy-service-s5jww pods took: 100.626324ms
  E0817 12:48:56.346767      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:57.347216      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:48:58.347388      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-4905" for this suite. @ 08/17/23 12:48:58.425
• [5.268 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 08/17/23 12:48:58.431
  Aug 17 12:48:58.431: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename containers @ 08/17/23 12:48:58.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:48:58.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:48:58.443
  E0817 12:48:59.348471      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:00.348970      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:00.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9401" for this suite. @ 08/17/23 12:49:00.471
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 08/17/23 12:49:00.476
  Aug 17 12:49:00.476: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename watch @ 08/17/23 12:49:00.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:49:00.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:49:00.487
  STEP: getting a starting resourceVersion @ 08/17/23 12:49:00.489
  STEP: starting a background goroutine to produce watch events @ 08/17/23 12:49:00.492
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 08/17/23 12:49:00.492
  E0817 12:49:01.349119      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:02.349510      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:03.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-905" for this suite. @ 08/17/23 12:49:03.33
  E0817 12:49:03.350546      24 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 08/17/23 12:49:03.384
  Aug 17 12:49:03.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename statefulset @ 08/17/23 12:49:03.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:49:03.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:49:03.396
  STEP: Creating service test in namespace statefulset-9573 @ 08/17/23 12:49:03.398
  STEP: Creating stateful set ss in namespace statefulset-9573 @ 08/17/23 12:49:03.402
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9573 @ 08/17/23 12:49:03.407
  Aug 17 12:49:03.410: INFO: Found 0 stateful pods, waiting for 1
  E0817 12:49:04.350819      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:05.351292      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:06.351464      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:07.351538      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:08.351784      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:09.352869      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:10.352937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:11.353943      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:12.354390      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:13.355233      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:13.413: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 08/17/23 12:49:13.413
  Aug 17 12:49:13.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-9573 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 17 12:49:13.565: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:49:13.565: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:49:13.565: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:49:13.568: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0817 12:49:14.355512      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:15.355662      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:16.355835      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:17.355990      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:18.356039      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:19.357005      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:20.357301      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:21.357466      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:22.357547      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:23.358066      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:23.572: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:49:23.572: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 17 12:49:23.583: INFO: POD   NODE                    PHASE    GRACE  CONDITIONS
  Aug 17 12:49:23.583: INFO: ss-0  talos-default-worker-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:13 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:13 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:03 +0000 UTC  }]
  Aug 17 12:49:23.583: INFO: 
  Aug 17 12:49:23.583: INFO: StatefulSet ss has not reached scale 3, at 1
  E0817 12:49:24.359043      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:24.585: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997182613s
  E0817 12:49:25.359751      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:25.589: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.994460795s
  E0817 12:49:26.360046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:26.593: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.990276586s
  E0817 12:49:27.360937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:27.596: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.98728214s
  E0817 12:49:28.361666      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:28.599: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.983528666s
  E0817 12:49:29.362422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:29.603: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.979690565s
  E0817 12:49:30.363056      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:30.607: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.976028093s
  E0817 12:49:31.363135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:31.610: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.973050984s
  E0817 12:49:32.364047      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:32.614: INFO: Verifying statefulset ss doesn't scale past 3 for another 969.173844ms
  E0817 12:49:33.364514      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9573 @ 08/17/23 12:49:33.614
  Aug 17 12:49:33.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-9573 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:49:33.772: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 17 12:49:33.772: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:49:33.772: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 17 12:49:33.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-9573 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:49:33.907: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 17 12:49:33.907: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:49:33.907: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 17 12:49:33.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-9573 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 17 12:49:34.058: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 17 12:49:34.058: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 17 12:49:34.058: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 17 12:49:34.062: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0817 12:49:34.365465      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:35.365575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:36.365834      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:37.366659      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:38.366828      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:39.366874      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:40.366967      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:41.367642      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:42.367776      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:43.368134      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:44.066: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:49:44.066: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 17 12:49:44.066: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 08/17/23 12:49:44.066
  Aug 17 12:49:44.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-9573 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 17 12:49:44.206: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:49:44.206: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:49:44.206: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:49:44.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-9573 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 17 12:49:44.367: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:49:44.367: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:49:44.367: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:49:44.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=statefulset-9573 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0817 12:49:44.368184      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:44.530: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 17 12:49:44.530: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 17 12:49:44.530: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 17 12:49:44.530: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 17 12:49:44.533: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0817 12:49:45.368301      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:46.368361      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:47.368541      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:48.368852      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:49.369016      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:50.369222      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:51.369463      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:52.369622      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:53.370122      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:49:54.370306      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:54.540: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:49:54.540: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:49:54.540: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 17 12:49:54.550: INFO: POD   NODE                    PHASE    GRACE  CONDITIONS
  Aug 17 12:49:54.550: INFO: ss-0  talos-default-worker-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:03 +0000 UTC  }]
  Aug 17 12:49:54.550: INFO: ss-1  talos-default-worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:23 +0000 UTC  }]
  Aug 17 12:49:54.550: INFO: ss-2  talos-default-worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:23 +0000 UTC  }]
  Aug 17 12:49:54.550: INFO: 
  Aug 17 12:49:54.550: INFO: StatefulSet ss has not reached scale 0, at 3
  E0817 12:49:55.370360      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:55.553: INFO: POD   NODE                    PHASE      GRACE  CONDITIONS
  Aug 17 12:49:55.553: INFO: ss-0  talos-default-worker-2  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:03 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:44 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-17 12:49:03 +0000 UTC  }]
  Aug 17 12:49:55.553: INFO: 
  Aug 17 12:49:55.553: INFO: StatefulSet ss has not reached scale 0, at 1
  E0817 12:49:56.370635      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:56.557: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992308472s
  E0817 12:49:57.370768      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:57.560: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.989317996s
  E0817 12:49:58.370982      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:58.564: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.98592568s
  E0817 12:49:59.371057      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:49:59.566: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.982961258s
  E0817 12:50:00.371150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:00.569: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.97980391s
  E0817 12:50:01.371619      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:01.572: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.977431855s
  E0817 12:50:02.371675      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:02.576: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.974218888s
  E0817 12:50:03.372452      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:03.579: INFO: Verifying statefulset ss doesn't scale past 0 for another 970.519183ms
  E0817 12:50:04.372541      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9573 @ 08/17/23 12:50:04.579
  Aug 17 12:50:04.582: INFO: Scaling statefulset ss to 0
  Aug 17 12:50:04.589: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 12:50:04.591: INFO: Deleting all statefulset in ns statefulset-9573
  Aug 17 12:50:04.593: INFO: Scaling statefulset ss to 0
  Aug 17 12:50:04.599: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 17 12:50:04.600: INFO: Deleting statefulset ss
  Aug 17 12:50:04.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9573" for this suite. @ 08/17/23 12:50:04.61
• [61.230 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 08/17/23 12:50:04.613
  Aug 17 12:50:04.613: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:50:04.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:04.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:04.625
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:50:04.627
  E0817 12:50:05.373175      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:06.373354      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:50:06.638
  Aug 17 12:50:06.640: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-92dcf617-9977-4e93-82fa-18efc6ed0f75 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:50:06.643
  Aug 17 12:50:06.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3934" for this suite. @ 08/17/23 12:50:06.654
• [2.044 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 08/17/23 12:50:06.658
  Aug 17 12:50:06.658: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 12:50:06.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:06.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:06.666
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/17/23 12:50:06.668
  E0817 12:50:07.374219      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:08.375302      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:50:08.677
  Aug 17 12:50:08.679: INFO: Trying to get logs from node talos-default-worker-1 pod pod-480e904d-a638-4c31-80e4-12822d676e42 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:50:08.682
  Aug 17 12:50:08.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7654" for this suite. @ 08/17/23 12:50:08.691
• [2.037 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 08/17/23 12:50:08.695
  Aug 17 12:50:08.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename discovery @ 08/17/23 12:50:08.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:08.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:08.704
  STEP: Setting up server cert @ 08/17/23 12:50:08.706
  Aug 17 12:50:08.854: INFO: Checking APIGroup: apiregistration.k8s.io
  Aug 17 12:50:08.855: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Aug 17 12:50:08.855: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Aug 17 12:50:08.855: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Aug 17 12:50:08.855: INFO: Checking APIGroup: apps
  Aug 17 12:50:08.855: INFO: PreferredVersion.GroupVersion: apps/v1
  Aug 17 12:50:08.855: INFO: Versions found [{apps/v1 v1}]
  Aug 17 12:50:08.855: INFO: apps/v1 matches apps/v1
  Aug 17 12:50:08.855: INFO: Checking APIGroup: events.k8s.io
  Aug 17 12:50:08.856: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Aug 17 12:50:08.856: INFO: Versions found [{events.k8s.io/v1 v1}]
  Aug 17 12:50:08.856: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Aug 17 12:50:08.856: INFO: Checking APIGroup: authentication.k8s.io
  Aug 17 12:50:08.857: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Aug 17 12:50:08.857: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Aug 17 12:50:08.857: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Aug 17 12:50:08.857: INFO: Checking APIGroup: authorization.k8s.io
  Aug 17 12:50:08.857: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Aug 17 12:50:08.857: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Aug 17 12:50:08.857: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Aug 17 12:50:08.857: INFO: Checking APIGroup: autoscaling
  Aug 17 12:50:08.858: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Aug 17 12:50:08.858: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Aug 17 12:50:08.858: INFO: autoscaling/v2 matches autoscaling/v2
  Aug 17 12:50:08.858: INFO: Checking APIGroup: batch
  Aug 17 12:50:08.859: INFO: PreferredVersion.GroupVersion: batch/v1
  Aug 17 12:50:08.859: INFO: Versions found [{batch/v1 v1}]
  Aug 17 12:50:08.859: INFO: batch/v1 matches batch/v1
  Aug 17 12:50:08.859: INFO: Checking APIGroup: certificates.k8s.io
  Aug 17 12:50:08.859: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Aug 17 12:50:08.859: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Aug 17 12:50:08.859: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Aug 17 12:50:08.859: INFO: Checking APIGroup: networking.k8s.io
  Aug 17 12:50:08.860: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Aug 17 12:50:08.860: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Aug 17 12:50:08.860: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Aug 17 12:50:08.860: INFO: Checking APIGroup: policy
  Aug 17 12:50:08.860: INFO: PreferredVersion.GroupVersion: policy/v1
  Aug 17 12:50:08.860: INFO: Versions found [{policy/v1 v1}]
  Aug 17 12:50:08.860: INFO: policy/v1 matches policy/v1
  Aug 17 12:50:08.860: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Aug 17 12:50:08.861: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Aug 17 12:50:08.861: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Aug 17 12:50:08.861: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Aug 17 12:50:08.861: INFO: Checking APIGroup: storage.k8s.io
  Aug 17 12:50:08.862: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Aug 17 12:50:08.862: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Aug 17 12:50:08.862: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Aug 17 12:50:08.862: INFO: Checking APIGroup: admissionregistration.k8s.io
  Aug 17 12:50:08.862: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Aug 17 12:50:08.862: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Aug 17 12:50:08.862: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Aug 17 12:50:08.862: INFO: Checking APIGroup: apiextensions.k8s.io
  Aug 17 12:50:08.863: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Aug 17 12:50:08.863: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Aug 17 12:50:08.863: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Aug 17 12:50:08.863: INFO: Checking APIGroup: scheduling.k8s.io
  Aug 17 12:50:08.863: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Aug 17 12:50:08.863: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Aug 17 12:50:08.863: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Aug 17 12:50:08.864: INFO: Checking APIGroup: coordination.k8s.io
  Aug 17 12:50:08.864: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Aug 17 12:50:08.864: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Aug 17 12:50:08.864: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Aug 17 12:50:08.864: INFO: Checking APIGroup: node.k8s.io
  Aug 17 12:50:08.865: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Aug 17 12:50:08.865: INFO: Versions found [{node.k8s.io/v1 v1}]
  Aug 17 12:50:08.865: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Aug 17 12:50:08.865: INFO: Checking APIGroup: discovery.k8s.io
  Aug 17 12:50:08.866: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Aug 17 12:50:08.866: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Aug 17 12:50:08.866: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Aug 17 12:50:08.866: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Aug 17 12:50:08.866: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Aug 17 12:50:08.866: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Aug 17 12:50:08.867: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Aug 17 12:50:08.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-963" for this suite. @ 08/17/23 12:50:08.869
• [0.177 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 08/17/23 12:50:08.872
  Aug 17 12:50:08.872: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 12:50:08.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:08.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:08.88
  STEP: Creating a pod to test downward api env vars @ 08/17/23 12:50:08.882
  E0817 12:50:09.375603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:10.375867      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:11.376034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:12.376219      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:50:12.894
  Aug 17 12:50:12.897: INFO: Trying to get logs from node talos-default-worker-1 pod downward-api-4387e764-09da-4983-906d-8948d85b77fe container dapi-container: <nil>
  STEP: delete the pod @ 08/17/23 12:50:12.902
  Aug 17 12:50:12.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6163" for this suite. @ 08/17/23 12:50:12.914
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 08/17/23 12:50:12.919
  Aug 17 12:50:12.919: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:50:12.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:12.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:12.93
  STEP: Creating the pod @ 08/17/23 12:50:12.933
  E0817 12:50:13.377272      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:14.378081      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:15.378754      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:15.457: INFO: Successfully updated pod "labelsupdated13a1631-0601-4d2d-a182-5b6835b533e6"
  E0817 12:50:16.379432      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:17.379560      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:18.380069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:19.380219      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:19.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7704" for this suite. @ 08/17/23 12:50:19.473
• [6.557 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 08/17/23 12:50:19.477
  Aug 17 12:50:19.477: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename deployment @ 08/17/23 12:50:19.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:19.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:19.485
  Aug 17 12:50:19.487: INFO: Creating deployment "webserver-deployment"
  Aug 17 12:50:19.490: INFO: Waiting for observed generation 1
  E0817 12:50:20.381276      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:21.381690      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:21.498: INFO: Waiting for all required pods to come up
  Aug 17 12:50:21.501: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 08/17/23 12:50:21.501
  Aug 17 12:50:21.501: INFO: Waiting for deployment "webserver-deployment" to complete
  Aug 17 12:50:21.504: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Aug 17 12:50:21.509: INFO: Updating deployment webserver-deployment
  Aug 17 12:50:21.509: INFO: Waiting for observed generation 2
  E0817 12:50:22.381800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:23.382166      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:23.513: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Aug 17 12:50:23.515: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Aug 17 12:50:23.517: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 17 12:50:23.523: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Aug 17 12:50:23.523: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Aug 17 12:50:23.528: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 17 12:50:23.532: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Aug 17 12:50:23.532: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Aug 17 12:50:23.538: INFO: Updating deployment webserver-deployment
  Aug 17 12:50:23.538: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Aug 17 12:50:23.542: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Aug 17 12:50:23.544: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Aug 17 12:50:23.554: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ccc1e2d-fa28-4ff3-abf4-e392a429db4c",
      ResourceVersion: (string) (len=5) "31746",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 17 12:50:23.575: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
      ResourceVersion: (string) (len=5) "31749",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "7ccc1e2d-fa28-4ff3-abf4-e392a429db4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 63 63 63 31 65  32 64 2d 66 61 32 38 2d  |\"7ccc1e2d-fa28-|
              00000120  34 66 66 33 2d 61 62 66  34 2d 65 33 39 32 61 34  |4ff3-abf4-e392a4|
              00000130  32 39 64 62 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |29db4c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 12:50:23.576: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Aug 17 12:50:23.576: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
      ResourceVersion: (string) (len=5) "31747",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "7ccc1e2d-fa28-4ff3-abf4-e392a429db4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 63 63 63 31 65  32 64 2d 66 61 32 38 2d  |\"7ccc1e2d-fa28-|
              00000120  34 66 66 33 2d 61 62 66  34 2d 65 33 39 32 61 34  |4ff3-abf4-e392a4|
              00000130  32 39 64 62 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |29db4c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 17 12:50:23.585: INFO: Pod "webserver-deployment-557759b7c7-2nglx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2nglx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df7c21c4-424a-4ce0-a4a1-6c85edf0751a",
      ResourceVersion: (string) (len=5) "31786",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nrnvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nrnvs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.587: INFO: Pod "webserver-deployment-557759b7c7-5xm24" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5xm24",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "857051e5-81bc-4704-ab45-31d44ae44d87",
      ResourceVersion: (string) (len=5) "31680",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 33 5c 22 7d 22 3a  |10.244.2.13\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bm7hw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bm7hw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5becefebd629b1c4c2000950d2a81502059469706520113b660d35809bb1be17",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.590: INFO: Pod "webserver-deployment-557759b7c7-6g74j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6g74j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3b3c4d1-10fd-4b11-bebb-f1aa1b14a7f7",
      ResourceVersion: (string) (len=5) "31659",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 31 37 36 5c 22 7d 22  |10.244.1.176\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fjqc8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fjqc8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.1.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0409621f3867db1b00f643c30d640fbe9b3e9b7073873122d0d5434ca9e9d0f5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.592: INFO: Pod "webserver-deployment-557759b7c7-76b9t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-76b9t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1aad0eee-08d1-412b-9d0b-c20b3a264a31",
      ResourceVersion: (string) (len=5) "31763",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wlfvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wlfvs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.593: INFO: Pod "webserver-deployment-557759b7c7-89v6h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-89v6h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77afdb2c-5b2c-489c-b323-ff996925252d",
      ResourceVersion: (string) (len=5) "31781",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4h5dt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4h5dt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.594: INFO: Pod "webserver-deployment-557759b7c7-9csx5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9csx5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23c9c8eb-7d42-48a2-9727-19f7404179de",
      ResourceVersion: (string) (len=5) "31797",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-72td7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-72td7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.596: INFO: Pod "webserver-deployment-557759b7c7-cffwl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cffwl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d148ce0-c35f-43c7-a5b1-c99509b45504",
      ResourceVersion: (string) (len=5) "31792",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gflcr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gflcr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.598: INFO: Pod "webserver-deployment-557759b7c7-crwk4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-crwk4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed546198-97cb-422b-9883-af802092a3cf",
      ResourceVersion: (string) (len=5) "31661",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 31 37 35 5c 22 7d 22  |10.244.1.175\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2mcqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2mcqz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.1.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c4583bc0c3ee14b1c5b9d583c6f6ff2c179c3871e3fc6224a2b6eeeae5bdbaa0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.600: INFO: Pod "webserver-deployment-557759b7c7-f5m9h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f5m9h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbce7ad4-d792-4d97-8845-e10d63930428",
      ResourceVersion: (string) (len=5) "31685",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 34 5c 22 7d 22 3a  |10.244.2.14\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2fbz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2fbz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aa72df44edb7fe126aedd9f62d02b5e2ca6414c7bad448cc102ac5bb5eaa503d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.602: INFO: Pod "webserver-deployment-557759b7c7-gj9db" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gj9db",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "087eb73e-490a-4a5f-b592-4ce3144533b9",
      ResourceVersion: (string) (len=5) "31794",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jrdp9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jrdp9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.604: INFO: Pod "webserver-deployment-557759b7c7-j4jc6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j4jc6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab551743-4bfd-4c5f-b759-fa992af79c16",
      ResourceVersion: (string) (len=5) "31787",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w7wm5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w7wm5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.605: INFO: Pod "webserver-deployment-557759b7c7-jq624" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jq624",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce4d8dcd-2500-498b-996a-00f748bc3ff7",
      ResourceVersion: (string) (len=5) "31776",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qtw8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qtw8v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.607: INFO: Pod "webserver-deployment-557759b7c7-kjb5j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kjb5j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c02acd8-da97-49ae-922f-6392f79c5c6b",
      ResourceVersion: (string) (len=5) "31790",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mgk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mgk6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.611: INFO: Pod "webserver-deployment-557759b7c7-lmr4l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lmr4l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d113bc2f-4898-4b7b-9aab-265e577b246e",
      ResourceVersion: (string) (len=5) "31795",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6vknk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6vknk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.622: INFO: Pod "webserver-deployment-557759b7c7-pl6cd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pl6cd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "999bb0f3-cb05-46c8-9bab-30ce2c1713f1",
      ResourceVersion: (string) (len=5) "31674",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 32 5c 22 7d 22 3a  |10.244.2.12\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vzw5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vzw5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e3438fb4b39b6bb591e79a9ade2d16f4ed8ee10edd160e5aa210932714a671f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.626: INFO: Pod "webserver-deployment-557759b7c7-sx7dx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sx7dx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49aed397-52b9-4061-ade9-ce0fae8d990c",
      ResourceVersion: (string) (len=5) "31683",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 31 5c 22 7d 22 3a  |10.244.2.11\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5ns2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5ns2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e52bb0a13bdb9a1049f6741b3a0449dd39e236f9818fff55edbb8c758cb1f870",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.633: INFO: Pod "webserver-deployment-557759b7c7-sz2mh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sz2mh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a0cd1c8-261e-42a3-8ba5-aa934f78b46e",
      ResourceVersion: (string) (len=5) "31676",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 35 5c 22 7d 22 3a  |10.244.2.15\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4g8z8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4g8z8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d822f540266514821f9b09114b5b5d3f9d669f52ca67ef3a40942359e24dad7c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.639: INFO: Pod "webserver-deployment-557759b7c7-tjjth" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tjjth",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb521b4d-3173-4a34-94e5-6b22f7589df4",
      ResourceVersion: (string) (len=5) "31765",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sz29g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sz29g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.644: INFO: Pod "webserver-deployment-557759b7c7-xcjc8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xcjc8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "947f7531-b66b-430d-af8a-9d55fe3eeda2",
      ResourceVersion: (string) (len=5) "31667",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 31 37 38 5c 22 7d 22  |10.244.1.178\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8xc6j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8xc6j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.1.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827873420,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://83aaca6e05b4f212c1986721d5b438396baa573556e220332139f1f6bda6ae06",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.646: INFO: Pod "webserver-deployment-557759b7c7-xcl2k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xcl2k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac2d3f42-3e74-44ed-8f3c-403bb530ce9b",
      ResourceVersion: (string) (len=5) "31791",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0084cd66-e67d-4429-ac87-bfad6202fbfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  38 34 63 64 36 36 2d 65  |d\":\"0084cd66-e|
              00000090  36 37 64 2d 34 34 32 39  2d 61 63 38 37 2d 62 66  |67d-4429-ac87-bf|
              000000a0  61 64 36 32 30 32 66 62  66 65 5c 22 7d 22 3a 7b  |ad6202fbfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-glj5j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-glj5j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.661: INFO: Pod "webserver-deployment-9b4f5bf69-5dl55" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5dl55",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c3859af-1190-44c2-a657-0ab3df50374e",
      ResourceVersion: (string) (len=5) "31785",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-drsf2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-drsf2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.669: INFO: Pod "webserver-deployment-9b4f5bf69-7jxjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7jxjb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0005c2e4-9d6c-4fcd-9c5b-e414636f02db",
      ResourceVersion: (string) (len=5) "31800",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jw6z7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jw6z7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.671: INFO: Pod "webserver-deployment-9b4f5bf69-c5qxg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-c5qxg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b1aef0b-2284-4dc2-818a-7f7b0d6f38df",
      ResourceVersion: (string) (len=5) "31713",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lxndm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lxndm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.673: INFO: Pod "webserver-deployment-9b4f5bf69-crb9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-crb9l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "644d6275-f0ad-4edf-95bb-4dfa6355ec79",
      ResourceVersion: (string) (len=5) "31780",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wgld2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wgld2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.674: INFO: Pod "webserver-deployment-9b4f5bf69-drntc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-drntc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e69c0482-5396-4d69-a872-6170af5503d8",
      ResourceVersion: (string) (len=5) "31788",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-52z22",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-52z22",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.675: INFO: Pod "webserver-deployment-9b4f5bf69-g8wxf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g8wxf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ca80bbb-52b1-4cc3-86f4-f1f35fb100e6",
      ResourceVersion: (string) (len=5) "31735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zzxrg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zzxrg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.677: INFO: Pod "webserver-deployment-9b4f5bf69-n2mpb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n2mpb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "055ad434-d69f-42d4-8268-49598e1bf169",
      ResourceVersion: (string) (len=5) "31738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-65hz7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-65hz7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.679: INFO: Pod "webserver-deployment-9b4f5bf69-n7fcc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n7fcc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9128ae70-cb4e-43ad-b74f-722e9fb865e0",
      ResourceVersion: (string) (len=5) "31784",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-89fjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-89fjc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.682: INFO: Pod "webserver-deployment-9b4f5bf69-plg6j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-plg6j",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a01ee935-8f98-43c1-8f20-146a02714870",
      ResourceVersion: (string) (len=5) "31793",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdjtd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdjtd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.683: INFO: Pod "webserver-deployment-9b4f5bf69-tb29f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tb29f",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d61ddfc6-f94d-4496-ae05-999e5992b590",
      ResourceVersion: (string) (len=5) "31783",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfwlw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfwlw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.686: INFO: Pod "webserver-deployment-9b4f5bf69-wgh7x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wgh7x",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2786c93e-4327-492c-a83b-b4cbf8dd1742",
      ResourceVersion: (string) (len=5) "31721",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-76l4l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-76l4l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.6",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.688: INFO: Pod "webserver-deployment-9b4f5bf69-xpw6k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xpw6k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d76f0ed-660e-4735-8837-53dd62d93697",
      ResourceVersion: (string) (len=5) "31710",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "7220a588-608e-4562-a6c4-f4152c72ad18",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  32 30 61 35 38 38 2d 36  |d\":\"7220a588-6|
              00000090  30 38 65 2d 34 35 36 32  2d 61 36 63 34 2d 66 34  |08e-4562-a6c4-f4|
              000000a0  31 35 32 63 37 32 61 64  31 38 5c 22 7d 22 3a 7b  |152c72ad18\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66src",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66src",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=22) "talos-default-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827873421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.20.0.5",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827873421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 17 12:50:23.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5039" for this suite. @ 08/17/23 12:50:23.696
• [4.223 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 08/17/23 12:50:23.702
  Aug 17 12:50:23.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pods @ 08/17/23 12:50:23.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:23.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:23.713
  STEP: creating the pod @ 08/17/23 12:50:23.715
  STEP: submitting the pod to kubernetes @ 08/17/23 12:50:23.715
  W0817 12:50:23.721228      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0817 12:50:24.383144      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:25.384223      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/17/23 12:50:25.728
  STEP: updating the pod @ 08/17/23 12:50:25.73
  Aug 17 12:50:26.236: INFO: Successfully updated pod "pod-update-activedeadlineseconds-1866dd0b-6adb-4ad3-bd82-f6239f42d258"
  E0817 12:50:26.384992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:27.385199      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:28.386118      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:29.386124      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:50:30.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2100" for this suite. @ 08/17/23 12:50:30.248
• [6.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 08/17/23 12:50:30.254
  Aug 17 12:50:30.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:50:30.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:30.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:30.267
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:50:30.269
  E0817 12:50:30.386573      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:31.386810      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:32.387443      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:33.387635      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:50:34.285
  Aug 17 12:50:34.287: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-054ce626-cc92-4dc1-8732-5fe7dc8678e9 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:50:34.291
  Aug 17 12:50:34.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3747" for this suite. @ 08/17/23 12:50:34.299
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 08/17/23 12:50:34.304
  Aug 17 12:50:34.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:50:34.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:50:34.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:50:34.318
  STEP: Creating configMap with name cm-test-opt-del-505a8f19-7238-4018-90b6-793d93151302 @ 08/17/23 12:50:34.322
  STEP: Creating configMap with name cm-test-opt-upd-6f20b021-6329-4ae1-bc47-0cac5ae864bc @ 08/17/23 12:50:34.324
  STEP: Creating the pod @ 08/17/23 12:50:34.326
  E0817 12:50:34.388476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:35.388740      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-505a8f19-7238-4018-90b6-793d93151302 @ 08/17/23 12:50:36.352
  STEP: Updating configmap cm-test-opt-upd-6f20b021-6329-4ae1-bc47-0cac5ae864bc @ 08/17/23 12:50:36.356
  STEP: Creating configMap with name cm-test-opt-create-14d98321-afe9-4168-be88-e2480521d3de @ 08/17/23 12:50:36.359
  STEP: waiting to observe update in volume @ 08/17/23 12:50:36.362
  E0817 12:50:36.389492      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:37.389639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:38.390634      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:39.390851      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:40.391061      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:41.391212      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:42.392247      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:43.392531      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:44.393046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:45.393166      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:46.393419      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:47.393603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:48.394037      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:49.394348      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:50.394503      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:51.394935      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:52.395069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:53.396082      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:54.396159      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:55.396858      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:56.397025      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:57.397783      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:58.398045      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:50:59.398217      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:00.398464      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:01.399388      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:02.399473      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:03.400223      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:04.400499      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:05.400694      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:06.400829      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:07.401535      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:08.402327      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:09.403161      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:10.403347      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:11.403430      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:12.403500      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:13.404268      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:14.404439      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:15.404480      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:16.404633      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:17.404697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:18.405542      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:19.406617      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:20.406852      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:21.407753      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:22.408000      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:23.408229      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:24.408425      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:25.408582      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:26.408697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:27.409498      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:28.409837      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:29.410688      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:30.410899      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:31.411021      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:32.411096      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:33.411538      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:34.411693      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:35.412540      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:36.412793      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:37.413034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:38.414120      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:39.414137      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:40.414288      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:41.414409      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:42.414443      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:43.415324      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:44.415508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:51:44.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4761" for this suite. @ 08/17/23 12:51:44.568
• [70.268 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 08/17/23 12:51:44.571
  Aug 17 12:51:44.571: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 12:51:44.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:51:44.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:51:44.58
  STEP: creating service nodeport-test with type=NodePort in namespace services-6330 @ 08/17/23 12:51:44.582
  STEP: creating replication controller nodeport-test in namespace services-6330 @ 08/17/23 12:51:44.591
  I0817 12:51:44.594987      24 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-6330, replica count: 2
  E0817 12:51:45.415610      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:46.415849      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:47.416412      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 12:51:47.645792      24 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 12:51:47.645: INFO: Creating new exec pod
  E0817 12:51:48.417339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:49.417490      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:50.417833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:51:50.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6330 exec execpods8nkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 17 12:51:50.849: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 17 12:51:50.849: INFO: stdout: "nodeport-test-s696c"
  Aug 17 12:51:50.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6330 exec execpods8nkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.184.116 80'
  Aug 17 12:51:50.988: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.184.116 80\nConnection to 10.96.184.116 80 port [tcp/http] succeeded!\n"
  Aug 17 12:51:50.988: INFO: stdout: "nodeport-test-2tstb"
  Aug 17 12:51:50.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6330 exec execpods8nkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 31251'
  Aug 17 12:51:51.124: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 31251\nConnection to 172.20.0.5 31251 port [tcp/*] succeeded!\n"
  Aug 17 12:51:51.124: INFO: stdout: ""
  E0817 12:51:51.418043      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:51:52.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6330 exec execpods8nkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 31251'
  Aug 17 12:51:52.309: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 31251\nConnection to 172.20.0.5 31251 port [tcp/*] succeeded!\n"
  Aug 17 12:51:52.309: INFO: stdout: "nodeport-test-s696c"
  Aug 17 12:51:52.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6330 exec execpods8nkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 31251'
  E0817 12:51:52.418110      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:51:52.461: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 31251\nConnection to 172.20.0.6 31251 port [tcp/*] succeeded!\n"
  Aug 17 12:51:52.461: INFO: stdout: ""
  E0817 12:51:53.418350      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:51:53.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-6330 exec execpods8nkw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 31251'
  Aug 17 12:51:53.642: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 31251\nConnection to 172.20.0.6 31251 port [tcp/*] succeeded!\n"
  Aug 17 12:51:53.642: INFO: stdout: "nodeport-test-s696c"
  Aug 17 12:51:53.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6330" for this suite. @ 08/17/23 12:51:53.647
• [9.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 08/17/23 12:51:53.652
  Aug 17 12:51:53.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename runtimeclass @ 08/17/23 12:51:53.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:51:53.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:51:53.663
  STEP: Deleting RuntimeClass runtimeclass-3372-delete-me @ 08/17/23 12:51:53.669
  STEP: Waiting for the RuntimeClass to disappear @ 08/17/23 12:51:53.673
  Aug 17 12:51:53.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3372" for this suite. @ 08/17/23 12:51:53.683
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 08/17/23 12:51:53.687
  Aug 17 12:51:53.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 12:51:53.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:51:53.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:51:53.697
  Aug 17 12:51:53.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3190" for this suite. @ 08/17/23 12:51:53.724
• [0.040 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 08/17/23 12:51:53.727
  Aug 17 12:51:53.727: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:51:53.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:51:53.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:51:53.735
  STEP: Setting up server cert @ 08/17/23 12:51:53.743
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:51:53.864
  STEP: Deploying the webhook pod @ 08/17/23 12:51:53.868
  STEP: Wait for the deployment to be ready @ 08/17/23 12:51:53.873
  Aug 17 12:51:53.877: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:51:54.418481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:51:55.418716      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:51:55.884
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:51:55.893
  E0817 12:51:56.418865      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:51:56.893: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 08/17/23 12:51:56.898
  STEP: create a pod that should be updated by the webhook @ 08/17/23 12:51:56.909
  Aug 17 12:51:56.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5332" for this suite. @ 08/17/23 12:51:56.953
  STEP: Destroying namespace "webhook-markers-476" for this suite. @ 08/17/23 12:51:56.956
• [3.233 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 08/17/23 12:51:56.961
  Aug 17 12:51:56.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename replication-controller @ 08/17/23 12:51:56.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:51:56.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:51:56.972
  Aug 17 12:51:56.976: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0817 12:51:57.419721      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 08/17/23 12:51:57.984
  STEP: Checking rc "condition-test" has the desired failure condition set @ 08/17/23 12:51:57.987
  E0817 12:51:58.420712      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 08/17/23 12:51:58.991
  Aug 17 12:51:58.996: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 08/17/23 12:51:58.996
  E0817 12:51:59.421338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:51:59.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3403" for this suite. @ 08/17/23 12:52:00.001
• [3.043 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 08/17/23 12:52:00.004
  Aug 17 12:52:00.004: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:52:00.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:52:00.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:52:00.012
  STEP: Setting up server cert @ 08/17/23 12:52:00.02
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:52:00.078
  STEP: Deploying the webhook pod @ 08/17/23 12:52:00.08
  STEP: Wait for the deployment to be ready @ 08/17/23 12:52:00.086
  Aug 17 12:52:00.089: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:52:00.421933      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:01.422078      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:52:02.095
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:52:02.1
  E0817 12:52:02.422453      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:52:03.100: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 08/17/23 12:52:03.105
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/17/23 12:52:03.119
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 08/17/23 12:52:03.129
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/17/23 12:52:03.135
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 08/17/23 12:52:03.141
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/17/23 12:52:03.146
  Aug 17 12:52:03.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7074" for this suite. @ 08/17/23 12:52:03.181
  STEP: Destroying namespace "webhook-markers-4751" for this suite. @ 08/17/23 12:52:03.185
• [3.184 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 08/17/23 12:52:03.189
  Aug 17 12:52:03.189: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubelet-test @ 08/17/23 12:52:03.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:52:03.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:52:03.198
  E0817 12:52:03.422825      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:04.423049      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:52:05.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9517" for this suite. @ 08/17/23 12:52:05.217
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 08/17/23 12:52:05.222
  Aug 17 12:52:05.222: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:52:05.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:52:05.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:52:05.231
  STEP: Setting up server cert @ 08/17/23 12:52:05.24
  E0817 12:52:05.423956      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:52:05.473
  STEP: Deploying the webhook pod @ 08/17/23 12:52:05.476
  STEP: Wait for the deployment to be ready @ 08/17/23 12:52:05.482
  Aug 17 12:52:05.486: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:52:06.424490      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:07.424648      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:52:07.494
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:52:07.502
  E0817 12:52:08.424760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:52:08.504: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 08/17/23 12:52:08.509
  STEP: create a namespace for the webhook @ 08/17/23 12:52:08.521
  STEP: create a configmap should be unconditionally rejected by the webhook @ 08/17/23 12:52:08.53
  Aug 17 12:52:08.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4745" for this suite. @ 08/17/23 12:52:08.575
  STEP: Destroying namespace "webhook-markers-9844" for this suite. @ 08/17/23 12:52:08.579
  STEP: Destroying namespace "fail-closed-namespace-6673" for this suite. @ 08/17/23 12:52:08.583
• [3.365 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 08/17/23 12:52:08.587
  Aug 17 12:52:08.587: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 12:52:08.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:52:08.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:52:08.598
  STEP: Creating a pod to test emptydir volume type on node default medium @ 08/17/23 12:52:08.6
  E0817 12:52:09.424981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:10.425668      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:11.426432      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:12.426643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:52:12.613
  Aug 17 12:52:12.615: INFO: Trying to get logs from node talos-default-worker-1 pod pod-679decf4-2dbb-4c22-9f3d-20e761e889c5 container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:52:12.62
  Aug 17 12:52:12.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-557" for this suite. @ 08/17/23 12:52:12.631
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 08/17/23 12:52:12.636
  Aug 17 12:52:12.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename taint-single-pod @ 08/17/23 12:52:12.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:52:12.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:52:12.647
  Aug 17 12:52:12.649: INFO: Waiting up to 1m0s for all nodes to be ready
  E0817 12:52:13.427228      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:14.427468      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:15.428326      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:16.429345      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:17.429908      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:18.430164      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:19.430441      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:20.430547      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:21.431438      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:22.431750      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:23.431875      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:24.432078      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:25.432858      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:26.433040      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:27.433307      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:28.433734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:29.434042      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:30.434132      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:31.434289      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:32.434311      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:33.434353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:34.434596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:35.434934      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:36.435081      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:37.435171      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:38.435279      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:39.435343      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:40.435532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:41.436254      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:42.436457      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:43.437353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:44.437443      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:45.438096      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:46.438379      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:47.438978      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:48.439273      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:49.439528      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:50.439602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:51.440061      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:52.440213      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:53.440296      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:54.440493      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:55.440567      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:56.440784      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:57.441291      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:58.441683      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:52:59.442624      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:00.442849      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:01.443094      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:02.443314      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:03.443462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:04.443600      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:05.443739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:06.444562      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:07.444945      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:08.445333      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:09.446368      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:10.446633      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:11.446988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:12.446999      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:53:12.663: INFO: Waiting for terminating namespaces to be deleted...
  Aug 17 12:53:12.665: INFO: Starting informer...
  STEP: Starting pod... @ 08/17/23 12:53:12.665
  Aug 17 12:53:12.873: INFO: Pod is running on talos-default-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/17/23 12:53:12.873
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/17/23 12:53:12.878
  STEP: Waiting short time to make sure Pod is queued for deletion @ 08/17/23 12:53:12.881
  Aug 17 12:53:12.881: INFO: Pod wasn't evicted. Proceeding
  Aug 17 12:53:12.881: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/17/23 12:53:12.886
  STEP: Waiting some time to make sure that toleration time passed. @ 08/17/23 12:53:12.888
  E0817 12:53:13.447701      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:14.447845      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:15.448051      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:16.448323      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:17.448547      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:18.448901      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:19.449103      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:20.449271      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:21.449447      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:22.449564      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:23.449937      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:24.450139      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:25.450326      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:26.450483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:27.450601      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:28.450915      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:29.451005      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:30.451093      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:31.451293      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:32.451403      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:33.451992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:34.452394      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:35.452467      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:36.452564      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:37.452693      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:38.453051      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:39.453997      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:40.454172      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:41.454424      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:42.454556      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:43.454692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:44.454798      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:45.454998      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:46.455135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:47.455283      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:48.455623      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:49.455731      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:50.455910      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:51.456049      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:52.456233      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:53.456355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:54.456591      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:55.456734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:56.456894      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:57.457024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:58.457424      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:53:59.457637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:00.458370      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:01.458528      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:02.458723      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:03.459150      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:04.459277      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:05.459407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:06.459493      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:07.459625      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:08.459861      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:09.459996      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:10.460127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:11.460254      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:12.460378      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:13.460473      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:14.461524      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:15.462236      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:16.462392      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:17.462558      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:18.462836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:19.462992      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:20.463083      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:21.463240      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:22.463395      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:23.463532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:24.463698      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:25.463829      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:26.464024      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:27.464183      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:54:27.889: INFO: Pod wasn't evicted. Test successful
  Aug 17 12:54:27.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9908" for this suite. @ 08/17/23 12:54:27.894
• [135.262 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 08/17/23 12:54:27.898
  Aug 17 12:54:27.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename job @ 08/17/23 12:54:27.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:54:27.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:54:27.909
  STEP: Creating a job @ 08/17/23 12:54:27.911
  STEP: Ensure pods equal to parallelism count is attached to the job @ 08/17/23 12:54:27.914
  E0817 12:54:28.464934      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:29.465059      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/17/23 12:54:29.917
  STEP: updating /status @ 08/17/23 12:54:29.922
  STEP: get /status @ 08/17/23 12:54:29.946
  Aug 17 12:54:29.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3361" for this suite. @ 08/17/23 12:54:29.952
• [2.058 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 08/17/23 12:54:29.956
  Aug 17 12:54:29.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/17/23 12:54:29.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:54:29.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:54:29.968
  Aug 17 12:54:29.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:54:30.465685      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:31.465794      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:32.465982      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:54:33.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7387" for this suite. @ 08/17/23 12:54:33.024
• [3.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 08/17/23 12:54:33.027
  Aug 17 12:54:33.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 12:54:33.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:54:33.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:54:33.034
  STEP: Counting existing ResourceQuota @ 08/17/23 12:54:33.036
  E0817 12:54:33.466632      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:34.466906      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:35.467481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:36.468242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:37.469199      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/17/23 12:54:38.04
  STEP: Ensuring resource quota status is calculated @ 08/17/23 12:54:38.044
  E0817 12:54:38.469986      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:39.470142      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 08/17/23 12:54:40.047
  STEP: Creating a NodePort Service @ 08/17/23 12:54:40.061
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 08/17/23 12:54:40.081
  STEP: Ensuring resource quota status captures service creation @ 08/17/23 12:54:40.103
  E0817 12:54:40.470757      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:41.470936      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 08/17/23 12:54:42.106
  STEP: Ensuring resource quota status released usage @ 08/17/23 12:54:42.14
  E0817 12:54:42.471658      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:43.471988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:54:44.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-88" for this suite. @ 08/17/23 12:54:44.146
• [11.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 08/17/23 12:54:44.15
  Aug 17 12:54:44.150: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename security-context @ 08/17/23 12:54:44.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:54:44.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:54:44.162
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/17/23 12:54:44.164
  E0817 12:54:44.472661      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:45.472815      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:54:46.175
  Aug 17 12:54:46.178: INFO: Trying to get logs from node talos-default-worker-1 pod security-context-76ceb895-4ebe-4eb8-8b75-a75a484d6eae container test-container: <nil>
  STEP: delete the pod @ 08/17/23 12:54:46.188
  Aug 17 12:54:46.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7935" for this suite. @ 08/17/23 12:54:46.201
• [2.055 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 08/17/23 12:54:46.205
  Aug 17 12:54:46.205: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename field-validation @ 08/17/23 12:54:46.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:54:46.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:54:46.216
  Aug 17 12:54:46.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 12:54:46.473691      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:47.474363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:48.474727      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0817 12:54:48.746593      24 warnings.go:70] unknown field "alpha"
  W0817 12:54:48.746607      24 warnings.go:70] unknown field "beta"
  W0817 12:54:48.746614      24 warnings.go:70] unknown field "delta"
  W0817 12:54:48.746619      24 warnings.go:70] unknown field "epsilon"
  W0817 12:54:48.746624      24 warnings.go:70] unknown field "gamma"
  Aug 17 12:54:49.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2217" for this suite. @ 08/17/23 12:54:49.272
• [3.070 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 08/17/23 12:54:49.275
  Aug 17 12:54:49.275: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 12:54:49.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:54:49.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:54:49.282
  STEP: Creating pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228 @ 08/17/23 12:54:49.283
  E0817 12:54:49.474830      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:50.475162      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 12:54:51.291
  Aug 17 12:54:51.294: INFO: Initial restart count of pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd is 0
  Aug 17 12:54:51.296: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:54:51.476023      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:52.476185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:54:53.299: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:54:53.477085      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:54.477372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:54:55.302: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:54:55.477762      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:56.478020      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:54:57.305: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:54:57.478524      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:54:58.478917      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:54:59.307: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:54:59.479126      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:00.479229      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:01.310: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:01.479299      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:02.479476      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:03.313: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:03.480510      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:04.480703      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:05.315: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:05.480843      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:06.481039      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:07.318: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:07.481760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:08.481836      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:09.322: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:09.482391      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:10.482552      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:11.325: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:11.483562      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:12.483698      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:13.328: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:13.483761      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:14.483913      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:15.331: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:15.484720      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:16.484869      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:17.335: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:17.485451      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:18.485756      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:19.338: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:19.485800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:20.486675      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:21.342: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:21.487117      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:22.487246      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:23.346: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:23.487665      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:24.487781      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:25.349: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:25.488055      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:26.488213      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:27.353: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:27.488548      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:28.488822      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:29.355: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:29.489239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:30.490180      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:31.358: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:31.490565      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:32.490784      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:33.362: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:33.491399      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:34.491532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:35.365: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:35.491593      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:36.491736      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:37.368: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:37.492061      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:38.492354      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:39.372: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:39.492951      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:40.493107      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:41.376: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:41.493466      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:42.493603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:43.379: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:43.494333      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:44.494471      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:45.382: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:45.494759      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:46.494921      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:47.386: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:47.495332      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:48.495587      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:49.389: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:49.496146      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:50.497011      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:51.393: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:51.497353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:52.497514      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:53.396: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:53.497856      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:54.498020      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:55.400: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:55.498447      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:56.498575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:57.403: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:57.499175      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:55:58.499362      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:55:59.406: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:55:59.499817      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:00.499963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:01.409: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:01.500242      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:02.500400      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:03.412: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:03.501456      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:04.501674      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:05.415: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:05.502714      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:06.502899      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:07.418: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:07.503353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:08.503666      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:09.421: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:09.504585      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:10.504849      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:11.423: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:11.505140      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:12.505334      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:13.427: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:13.505315      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:14.505432      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:15.430: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:15.505869      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:16.506011      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:17.433: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:17.506669      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:18.507006      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:19.436: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:19.507508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:20.507639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:21.438: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:21.508022      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:22.508164      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:23.441: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:23.508618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:24.508729      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:25.443: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:25.509097      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:26.509247      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:27.447: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:27.510143      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:28.510402      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:29.450: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:29.511164      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:30.511305      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:31.452: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:31.511699      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:32.511853      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:33.455: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:33.512577      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:34.512697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:35.458: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:35.513602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:36.514085      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:37.461: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:37.514547      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:38.514816      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:39.464: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:39.515455      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:40.515786      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:41.466: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:41.516037      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:42.516649      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:43.471: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:43.517320      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:44.518169      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:45.474: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:45.518674      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:46.518835      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:47.477: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:47.519463      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:48.519567      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:49.480: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:49.519635      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:50.519794      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:51.483: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:51.520552      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:52.521406      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:53.486: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:53.522273      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:54.522353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:55.488: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:55.522705      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:56.523712      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:57.491: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:57.524452      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:56:58.524761      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:56:59.494: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:56:59.525238      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:00.525433      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:01.497: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:01.526157      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:02.526349      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:03.500: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:03.526840      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:04.527485      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:05.504: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:05.527760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:06.527900      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:07.507: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:07.528791      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:08.529047      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:09.511: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:09.529172      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:10.529319      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:11.513: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:11.530241      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:12.530359      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:13.516: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:13.531120      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:14.531612      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:15.518: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:15.532372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:16.532481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:17.521: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:17.533364      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:18.533830      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:19.524: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:19.534098      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:20.534285      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:21.527: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:21.534843      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:22.535030      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:23.530: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:23.535946      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:24.537015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:25.533: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:25.537330      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:26.537478      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:27.536: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:27.538193      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:28.538529      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:29.538896      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:29.539: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:30.539076      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:31.539405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:31.541: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:32.539645      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:33.540048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:33.544: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:34.540557      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:35.540661      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:35.547: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:36.540978      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:37.541164      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:37.549: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:38.542203      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:39.542421      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:39.553: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:40.542535      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:41.542775      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:41.556: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:42.543170      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:43.544017      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:43.558: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:44.544710      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:45.544785      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:45.561: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:46.545209      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:47.545408      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:47.564: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:48.546175      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:49.546340      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:49.567: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:50.546624      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:51.546839      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:51.569: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:52.546995      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:53.547555      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:53.573: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:54.548389      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:55.549069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:55.576: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:56.550127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:57.550247      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:57.579: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:57:58.550760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:57:59.550942      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:57:59.582: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:00.551207      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:01.551532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:01.585: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:02.552559      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:03.553040      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:03.589: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:04.553154      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:05.553398      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:05.592: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:06.553495      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:07.553715      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:07.595: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:08.554151      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:09.554355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:09.598: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:10.555069      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:11.555223      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:11.602: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:12.555339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:13.555660      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:13.605: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:14.555734      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:15.555959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:15.609: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:16.556068      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:17.556264      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:17.612: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:18.556594      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:19.556845      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:19.616: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:20.556976      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:21.557179      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:21.619: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:22.557413      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:23.558043      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:23.622: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:24.558568      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:25.558821      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:25.626: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:26.559115      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:27.559267      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:27.629: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:28.559752      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:29.559983      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:29.633: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:30.560422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:31.560643      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:31.636: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:32.560932      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:33.561021      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:33.639: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:34.561268      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:35.561266      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:35.641: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:36.562286      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:37.562959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:37.644: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:38.563650      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:39.563776      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:39.647: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:40.564665      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:41.564813      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:41.650: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:42.565272      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:43.565613      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:43.653: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:44.566179      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:45.566342      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:45.656: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:46.567031      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:47.567158      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:47.658: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:48.567864      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:49.567993      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:49.661: INFO: Get pod liveness-5e38ef2a-dc09-476f-823f-6b66757ea2bd in namespace container-probe-4228
  E0817 12:58:50.568692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:51.568854      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:58:51.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 12:58:51.664
  STEP: Destroying namespace "container-probe-4228" for this suite. @ 08/17/23 12:58:51.671
• [242.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 08/17/23 12:58:51.676
  Aug 17 12:58:51.676: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 12:58:51.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:58:51.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:58:51.685
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 12:58:51.686
  E0817 12:58:52.569294      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:53.569623      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:54.570127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:55.570914      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:58:55.699
  Aug 17 12:58:55.701: INFO: Trying to get logs from node talos-default-worker-1 pod downwardapi-volume-115b7dd2-0a9d-4433-b47a-68448d7839e6 container client-container: <nil>
  STEP: delete the pod @ 08/17/23 12:58:55.712
  Aug 17 12:58:55.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8178" for this suite. @ 08/17/23 12:58:55.723
• [4.050 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 08/17/23 12:58:55.726
  Aug 17 12:58:55.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 12:58:55.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:58:55.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:58:55.735
  STEP: Creating secret with name secret-test-533fb438-07b9-4fda-b754-94ced3a008a5 @ 08/17/23 12:58:55.736
  STEP: Creating a pod to test consume secrets @ 08/17/23 12:58:55.738
  E0817 12:58:56.571012      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:57.571159      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:58.571827      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:58:59.571969      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 12:58:59.751
  Aug 17 12:58:59.753: INFO: Trying to get logs from node talos-default-worker-1 pod pod-secrets-732d6c1f-7e55-4d44-af2e-55d903531751 container secret-env-test: <nil>
  STEP: delete the pod @ 08/17/23 12:58:59.757
  Aug 17 12:58:59.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-728" for this suite. @ 08/17/23 12:58:59.767
• [4.044 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 08/17/23 12:58:59.77
  Aug 17 12:58:59.770: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 12:58:59.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:58:59.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:58:59.779
  STEP: Setting up server cert @ 08/17/23 12:58:59.788
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 12:58:59.903
  STEP: Deploying the webhook pod @ 08/17/23 12:58:59.907
  STEP: Wait for the deployment to be ready @ 08/17/23 12:58:59.912
  Aug 17 12:58:59.915: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 12:59:00.573030      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:01.573073      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 12:59:01.923
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 12:59:01.933
  E0817 12:59:02.573203      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:02.934: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/17/23 12:59:02.96
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/17/23 12:59:02.982
  STEP: Deleting the collection of validation webhooks @ 08/17/23 12:59:03
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/17/23 12:59:03.02
  Aug 17 12:59:03.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1261" for this suite. @ 08/17/23 12:59:03.043
  STEP: Destroying namespace "webhook-markers-3955" for this suite. @ 08/17/23 12:59:03.045
• [3.278 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 08/17/23 12:59:03.049
  Aug 17 12:59:03.049: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubelet-test @ 08/17/23 12:59:03.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:59:03.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:59:03.056
  Aug 17 12:59:03.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-284" for this suite. @ 08/17/23 12:59:03.067
• [0.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 08/17/23 12:59:03.071
  Aug 17 12:59:03.071: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 12:59:03.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 12:59:03.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 12:59:03.077
  STEP: Creating pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604 @ 08/17/23 12:59:03.078
  E0817 12:59:03.573276      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:04.573481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 12:59:05.086
  Aug 17 12:59:05.088: INFO: Initial restart count of pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 is 0
  Aug 17 12:59:05.089: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:05.574548      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:06.574664      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:07.093: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:07.574920      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:08.575135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:09.096: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:09.575446      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:10.575472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:11.099: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:11.576345      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:12.576483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:13.102: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:13.577397      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:14.577511      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:15.105: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:15.577583      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:16.577932      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:17.107: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:17.578553      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:18.578809      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:19.111: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:19.579571      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:20.579785      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:21.114: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:21.580018      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:22.580195      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:23.118: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:23.580591      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:24.580786      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:25.121: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:25.581721      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:26.581848      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:27.124: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:27.582717      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:28.583163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:29.127: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:29.584025      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:30.584929      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:31.130: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:31.585072      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:32.585211      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:33.134: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:33.585705      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:34.585916      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:35.136: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:35.586471      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:36.586645      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:37.139: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:37.587220      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:38.587608      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:39.142: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:39.588137      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:40.589108      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:41.146: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:41.590023      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:42.590157      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:43.149: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:43.590968      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:44.591248      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:45.152: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:45.592214      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:46.592387      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:47.155: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:47.593080      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:48.593458      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:49.158: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:49.594046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:50.594240      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:51.160: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:51.594344      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:52.594557      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:53.164: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:53.595595      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:54.596046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:55.166: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:55.596311      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:56.596493      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:57.169: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:57.597610      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 12:59:58.597980      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 12:59:59.171: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 12:59:59.598167      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:00.598989      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:01.175: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:01.599911      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:02.600328      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:03.178: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:03.601358      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:04.601417      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:05.187: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:05.601485      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:06.601646      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:07.189: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:07.602454      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:08.602776      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:09.193: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:09.602903      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:10.603959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:11.197: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:11.604726      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:12.604888      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:13.200: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:13.605436      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:14.605646      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:15.204: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:15.606048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:16.606330      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:17.207: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:17.606559      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:18.606757      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:19.210: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:19.607586      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:20.607782      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:21.213: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:21.608780      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:22.608998      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:23.216: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:23.609873      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:24.610042      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:25.219: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:25.610145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:26.610275      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:27.223: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:27.610799      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:28.611314      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:29.227: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:29.612084      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:30.612222      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:31.230: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:31.613194      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:32.613339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:33.234: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:33.613700      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:34.614032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:35.236: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:35.614185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:36.614466      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:37.240: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:37.615514      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:38.615829      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:39.242: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:39.616816      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:40.616963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:41.245: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:41.617595      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:42.617779      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:43.248: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:43.618591      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:44.618786      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:45.250: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:45.619256      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:46.619440      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:47.253: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:47.619552      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:48.619903      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:49.256: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:49.620416      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:50.620584      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:51.258: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:51.621041      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:52.621135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:53.261: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:53.621309      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:54.621423      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:55.264: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:55.621497      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:56.621633      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:57.268: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:57.622099      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:00:58.622191      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:00:59.271: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:00:59.622339      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:00.622475      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:01.274: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:01.623156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:02.623304      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:03.278: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:03.623789      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:04.623920      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:05.281: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:05.624891      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:06.625021      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:07.284: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:07.625776      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:08.626063      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:09.287: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:09.626167      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:10.626402      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:11.289: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:11.627205      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:12.627472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:13.292: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:13.628272      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:14.629283      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:15.295: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:15.629947      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:16.630153      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:17.298: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:17.630665      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:18.631002      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:19.300: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:19.631253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:20.631373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:21.304: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:21.631898      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:22.632372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:23.308: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:23.632915      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:24.633070      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:25.312: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:25.633539      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:26.633638      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:27.315: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:27.634608      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:28.634688      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:29.317: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:29.634977      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:30.635126      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:31.321: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:31.636048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:32.636162      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:33.324: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:33.637056      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:34.637207      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:35.327: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:35.638051      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:36.638208      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:37.330: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:37.639177      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:38.639421      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:39.333: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:39.640041      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:40.640481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:41.336: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:41.641004      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:42.641154      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:43.340: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:43.641761      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:44.641920      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:45.343: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:45.642847      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:46.642951      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:47.346: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:47.643542      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:48.643831      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:49.349: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:49.644685      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:50.644833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:51.352: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:51.644930      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:52.645071      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:53.355: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:53.645165      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:54.645253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:55.358: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:55.645817      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:56.646046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:57.361: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:57.646711      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:01:58.646872      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:01:59.364: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:01:59.647772      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:00.648805      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:01.367: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:01.648920      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:02.649025      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:03.370: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:03.649660      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:04.649776      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:05.372: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:05.649834      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:06.649963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:07.374: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:07.650130      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:08.650404      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:09.377: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:09.651032      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:10.651183      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:11.380: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:11.651871      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:12.652062      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:13.384: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:13.652413      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:14.652551      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:15.386: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:15.653322      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:16.653537      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:17.390: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:17.654486      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:18.654572      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:19.392: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:19.655046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:20.655156      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:21.395: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:21.655570      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:22.656470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:23.397: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:23.657337      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:24.657483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:25.400: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:25.657651      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:26.658475      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:27.403: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:27.659152      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:28.659401      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:29.406: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:29.659534      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:30.659664      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:31.409: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:31.660464      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:32.660604      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:33.411: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:33.661206      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:34.661409      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:35.414: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:35.661575      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:36.661723      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:37.416: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:37.662172      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:38.662342      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:39.420: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:39.662741      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:40.662902      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:41.423: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:41.663533      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:42.663637      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:43.426: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:43.664348      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:44.664436      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:45.428: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:45.665036      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:46.665858      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:47.430: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:47.666290      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:48.666551      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:49.433: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:49.666874      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:50.667003      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:51.436: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:51.667857      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:52.667942      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:53.439: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:53.668252      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:54.669081      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:55.443: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:55.669154      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:56.669285      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:57.446: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:57.670181      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:02:58.670431      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:02:59.449: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:02:59.670483      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:00.670648      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:03:01.453: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:03:01.670963      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:02.671148      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:03:03.457: INFO: Get pod test-grpc-80b6e40a-df86-4f1c-9363-af1aac41c370 in namespace container-probe-8604
  E0817 13:03:03.672095      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:04.672338      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:03:05.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 13:03:05.463
  STEP: Destroying namespace "container-probe-8604" for this suite. @ 08/17/23 13:03:05.471
• [242.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 08/17/23 13:03:05.478
  Aug 17 13:03:05.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename configmap @ 08/17/23 13:03:05.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:03:05.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:03:05.493
  STEP: Creating configMap with name cm-test-opt-del-d0016312-e162-4769-80fa-7f7081ea71a3 @ 08/17/23 13:03:05.499
  STEP: Creating configMap with name cm-test-opt-upd-1a108d5e-ac64-4313-b4ef-f5d2acf2617a @ 08/17/23 13:03:05.503
  STEP: Creating the pod @ 08/17/23 13:03:05.506
  E0817 13:03:05.673217      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:06.673407      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d0016312-e162-4769-80fa-7f7081ea71a3 @ 08/17/23 13:03:07.54
  STEP: Updating configmap cm-test-opt-upd-1a108d5e-ac64-4313-b4ef-f5d2acf2617a @ 08/17/23 13:03:07.545
  STEP: Creating configMap with name cm-test-opt-create-f2edf8c8-6355-413e-8149-ea0927a9e30e @ 08/17/23 13:03:07.548
  STEP: waiting to observe update in volume @ 08/17/23 13:03:07.551
  E0817 13:03:07.673662      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:08.674055      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:09.675051      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:10.675136      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:11.675564      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:12.675754      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:13.676477      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:14.676639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:15.677505      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:16.677672      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:17.678521      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:18.679123      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:19.680179      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:20.680383      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:21.681282      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:22.681393      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:23.682163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:24.682853      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:25.683894      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:26.684572      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:27.684794      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:28.685053      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:29.685097      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:30.685243      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:31.685465      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:32.686012      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:33.686787      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:34.686936      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:35.687869      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:36.688225      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:37.688627      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:38.689134      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:39.690227      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:40.690508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:41.691253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:42.691405      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:43.692203      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:44.692422      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:45.692883      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:46.693116      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:47.693714      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:48.694108      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:49.694393      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:50.694549      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:51.695384      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:52.695534      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:53.695586      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:54.695739      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:55.695889      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:56.696576      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:57.697372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:58.697627      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:03:59.697642      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:00.697790      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:01.697784      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:02.698364      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:03.698701      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:04.699253      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:05.699337      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:06.699926      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:07.700088      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:08.701159      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:09.701576      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:10.701971      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:11.702053      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:12.702399      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:13.702799      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:14.703544      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:15.703697      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:16.703795      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:17.704266      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:18.704350      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:19.704520      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:20.704629      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:21.704804      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:22.704998      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:23.705429      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:24.706239      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:25.706424      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:04:25.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6859" for this suite. @ 08/17/23 13:04:25.782
• [80.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 08/17/23 13:04:25.792
  Aug 17 13:04:25.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/17/23 13:04:25.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:25.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:25.8
  STEP: create the container to handle the HTTPGet hook request. @ 08/17/23 13:04:25.804
  E0817 13:04:26.707121      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:27.707306      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/17/23 13:04:27.816
  E0817 13:04:28.707380      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:29.707492      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 08/17/23 13:04:29.826
  E0817 13:04:30.708295      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:31.708442      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 08/17/23 13:04:31.834
  Aug 17 13:04:31.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1982" for this suite. @ 08/17/23 13:04:31.841
• [6.052 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 08/17/23 13:04:31.844
  Aug 17 13:04:31.844: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 13:04:31.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:31.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:31.852
  STEP: Setting up server cert @ 08/17/23 13:04:31.861
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 13:04:32.03
  STEP: Deploying the webhook pod @ 08/17/23 13:04:32.033
  STEP: Wait for the deployment to be ready @ 08/17/23 13:04:32.038
  Aug 17 13:04:32.041: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 13:04:32.708961      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:33.709449      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 13:04:34.049
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 13:04:34.059
  E0817 13:04:34.709661      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:04:35.059: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 08/17/23 13:04:35.065
  STEP: create a configmap that should be updated by the webhook @ 08/17/23 13:04:35.076
  Aug 17 13:04:35.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6253" for this suite. @ 08/17/23 13:04:35.124
  STEP: Destroying namespace "webhook-markers-1378" for this suite. @ 08/17/23 13:04:35.13
• [3.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 08/17/23 13:04:35.135
  Aug 17 13:04:35.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 13:04:35.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:35.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:35.142
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/17/23 13:04:35.144
  Aug 17 13:04:35.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-130 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Aug 17 13:04:35.198: INFO: stderr: ""
  Aug 17 13:04:35.198: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/17/23 13:04:35.198
  Aug 17 13:04:35.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-130 delete pods e2e-test-httpd-pod'
  E0817 13:04:35.709895      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:04:36.706: INFO: stderr: ""
  Aug 17 13:04:36.706: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 17 13:04:36.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0817 13:04:36.710349      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-130" for this suite. @ 08/17/23 13:04:36.711
• [1.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 08/17/23 13:04:36.717
  Aug 17 13:04:36.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 13:04:36.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:36.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:36.732
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/17/23 13:04:36.735
  E0817 13:04:37.710688      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:38.711160      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:39.711973      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:40.712036      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 13:04:40.751
  Aug 17 13:04:40.753: INFO: Trying to get logs from node talos-default-worker-1 pod pod-585b8068-cda0-47b8-9eb6-6b750e27b51a container test-container: <nil>
  STEP: delete the pod @ 08/17/23 13:04:40.757
  Aug 17 13:04:40.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4604" for this suite. @ 08/17/23 13:04:40.765
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 08/17/23 13:04:40.769
  Aug 17 13:04:40.769: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 13:04:40.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:40.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:40.778
  STEP: Creating projection with secret that has name projected-secret-test-58762754-77a9-4237-a8be-d768c743eadf @ 08/17/23 13:04:40.779
  STEP: Creating a pod to test consume secrets @ 08/17/23 13:04:40.781
  E0817 13:04:41.712354      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:42.713035      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:43.713871      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:44.714022      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 13:04:44.793
  Aug 17 13:04:44.796: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-secrets-b1bdc897-ee37-49dd-b23a-4656675470c2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 13:04:44.801
  Aug 17 13:04:44.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4767" for this suite. @ 08/17/23 13:04:44.813
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 08/17/23 13:04:44.819
  Aug 17 13:04:44.819: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename services @ 08/17/23 13:04:44.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:44.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:44.83
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7919 @ 08/17/23 13:04:44.832
  STEP: changing the ExternalName service to type=NodePort @ 08/17/23 13:04:44.835
  STEP: creating replication controller externalname-service in namespace services-7919 @ 08/17/23 13:04:44.85
  I0817 13:04:44.854731      24 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7919, replica count: 2
  E0817 13:04:45.714692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:46.715010      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:47.715167      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0817 13:04:47.906662      24 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 17 13:04:47.906: INFO: Creating new exec pod
  E0817 13:04:48.715291      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:49.715538      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:50.716308      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:04:50.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-7919 exec execpodxt28d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 17 13:04:51.067: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 17 13:04:51.067: INFO: stdout: "externalname-service-ctx5s"
  Aug 17 13:04:51.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-7919 exec execpodxt28d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.11.214 80'
  Aug 17 13:04:51.233: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.11.214 80\nConnection to 10.104.11.214 80 port [tcp/http] succeeded!\n"
  Aug 17 13:04:51.233: INFO: stdout: "externalname-service-ctx5s"
  Aug 17 13:04:51.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-7919 exec execpodxt28d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.5 31746'
  Aug 17 13:04:51.378: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.5 31746\nConnection to 172.20.0.5 31746 port [tcp/*] succeeded!\n"
  Aug 17 13:04:51.378: INFO: stdout: "externalname-service-87hl5"
  Aug 17 13:04:51.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=services-7919 exec execpodxt28d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.0.6 31746'
  Aug 17 13:04:51.530: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.0.6 31746\nConnection to 172.20.0.6 31746 port [tcp/*] succeeded!\n"
  Aug 17 13:04:51.530: INFO: stdout: "externalname-service-ctx5s"
  Aug 17 13:04:51.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 17 13:04:51.534: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-7919" for this suite. @ 08/17/23 13:04:51.552
• [6.736 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 08/17/23 13:04:51.555
  Aug 17 13:04:51.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename disruption @ 08/17/23 13:04:51.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:51.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:51.565
  STEP: Creating a pdb that targets all three pods in a test replica set @ 08/17/23 13:04:51.566
  STEP: Waiting for the pdb to be processed @ 08/17/23 13:04:51.569
  E0817 13:04:51.716655      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:52.716800      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 08/17/23 13:04:53.579
  STEP: Waiting for all pods to be running @ 08/17/23 13:04:53.579
  Aug 17 13:04:53.581: INFO: pods: 0 < 3
  E0817 13:04:53.716958      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:54.717042      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 08/17/23 13:04:55.584
  STEP: Updating the pdb to allow a pod to be evicted @ 08/17/23 13:04:55.589
  STEP: Waiting for the pdb to be processed @ 08/17/23 13:04:55.593
  E0817 13:04:55.717452      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:56.717664      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/17/23 13:04:57.597
  STEP: Waiting for all pods to be running @ 08/17/23 13:04:57.597
  STEP: Waiting for the pdb to observed all healthy pods @ 08/17/23 13:04:57.599
  STEP: Patching the pdb to disallow a pod to be evicted @ 08/17/23 13:04:57.615
  STEP: Waiting for the pdb to be processed @ 08/17/23 13:04:57.621
  E0817 13:04:57.718078      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:04:58.718357      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 08/17/23 13:04:59.627
  STEP: locating a running pod @ 08/17/23 13:04:59.63
  STEP: Deleting the pdb to allow a pod to be evicted @ 08/17/23 13:04:59.637
  STEP: Waiting for the pdb to be deleted @ 08/17/23 13:04:59.641
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/17/23 13:04:59.643
  STEP: Waiting for all pods to be running @ 08/17/23 13:04:59.643
  Aug 17 13:04:59.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4893" for this suite. @ 08/17/23 13:04:59.659
• [8.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 08/17/23 13:04:59.666
  Aug 17 13:04:59.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 13:04:59.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:04:59.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:04:59.678
  STEP: Creating secret with name s-test-opt-del-f7631634-b9c9-4445-bc90-3ee80adc4558 @ 08/17/23 13:04:59.682
  STEP: Creating secret with name s-test-opt-upd-bb463001-ecfe-49d0-bc39-3cf0f6493e66 @ 08/17/23 13:04:59.686
  STEP: Creating the pod @ 08/17/23 13:04:59.689
  E0817 13:04:59.719295      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:00.719594      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f7631634-b9c9-4445-bc90-3ee80adc4558 @ 08/17/23 13:05:01.715
  STEP: Updating secret s-test-opt-upd-bb463001-ecfe-49d0-bc39-3cf0f6493e66 @ 08/17/23 13:05:01.719
  E0817 13:05:01.720085      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name s-test-opt-create-cc69e808-71ea-421a-bb6c-573e999a4f77 @ 08/17/23 13:05:01.722
  STEP: waiting to observe update in volume @ 08/17/23 13:05:01.724
  E0817 13:05:02.720390      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:03.720685      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:04.721593      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:05.721821      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:06.722398      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:07.722642      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:08.722862      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:09.723053      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:10.723684      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:11.723840      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:12.724155      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:13.724714      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:14.725397      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:15.726122      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:16.726201      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:17.727159      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:18.727275      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:19.727473      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:20.727683      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:21.727898      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:22.728116      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:23.728578      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:24.728676      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:25.728854      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:26.729456      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:27.730135      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:28.730864      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:29.731017      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:30.731585      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:31.731790      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:32.732274      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:33.732749      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:34.733698      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:35.733825      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:36.734404      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:37.734577      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:38.735530      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:39.735676      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:40.735895      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:41.736142      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:42.736472      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:43.737007      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:44.737562      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:45.737788      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:46.738131      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:47.738353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:48.738399      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:49.738628      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:50.739304      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:51.739556      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:52.740240      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:53.740753      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:54.741399      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:55.741491      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:56.742102      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:57.742337      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:58.742498      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:05:59.742651      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:00.743667      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:01.743833      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:02.744905      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:03.745373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:04.745508      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:05.745642      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:06.746282      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:07.746470      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:08.746594      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:09.746783      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:10.747525      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:11.747712      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:12.747981      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:13.748288      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:14.748388      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:15.749481      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:16.749972      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:17.750191      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:18.751169      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:19.751373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:20.752484      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:21.752568      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:22.752632      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:23.752988      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:24.753803      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:25.753961      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:26.754692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:27.754897      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:28.755435      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:29.755688      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:30.755919      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:31.756057      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:32.756912      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:33.757119      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:06:34.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1628" for this suite. @ 08/17/23 13:06:34.014
• [94.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 08/17/23 13:06:34.02
  Aug 17 13:06:34.021: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 13:06:34.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:34.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:34.033
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 13:06:34.035
  E0817 13:06:34.757283      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:35.757945      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:36.758373      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:37.758597      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 13:06:38.049
  Aug 17 13:06:38.051: INFO: Trying to get logs from node talos-default-worker-2 pod downwardapi-volume-5bc73868-6650-4fb8-9de7-510a9a71605e container client-container: <nil>
  STEP: delete the pod @ 08/17/23 13:06:38.055
  Aug 17 13:06:38.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3678" for this suite. @ 08/17/23 13:06:38.065
• [4.048 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 08/17/23 13:06:38.069
  Aug 17 13:06:38.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename downward-api @ 08/17/23 13:06:38.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:38.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:38.078
  STEP: Creating a pod to test downward API volume plugin @ 08/17/23 13:06:38.079
  E0817 13:06:38.759023      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:39.759951      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 13:06:40.09
  Aug 17 13:06:40.092: INFO: Trying to get logs from node talos-default-worker-2 pod downwardapi-volume-aff4c444-78fa-49fe-9133-977ba12a512a container client-container: <nil>
  STEP: delete the pod @ 08/17/23 13:06:40.096
  Aug 17 13:06:40.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9452" for this suite. @ 08/17/23 13:06:40.108
• [2.042 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 08/17/23 13:06:40.111
  Aug 17 13:06:40.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 13:06:40.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:40.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:40.12
  STEP: create deployment with httpd image @ 08/17/23 13:06:40.122
  Aug 17 13:06:40.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-4626 create -f -'
  Aug 17 13:06:40.224: INFO: stderr: ""
  Aug 17 13:06:40.224: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 08/17/23 13:06:40.224
  Aug 17 13:06:40.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-4626 diff -f -'
  Aug 17 13:06:40.307: INFO: rc: 1
  Aug 17 13:06:40.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-4626 delete -f -'
  Aug 17 13:06:40.347: INFO: stderr: ""
  Aug 17 13:06:40.347: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Aug 17 13:06:40.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4626" for this suite. @ 08/17/23 13:06:40.351
• [0.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 08/17/23 13:06:40.356
  Aug 17 13:06:40.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename emptydir @ 08/17/23 13:06:40.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:40.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:40.365
  STEP: Creating Pod @ 08/17/23 13:06:40.367
  E0817 13:06:40.760788      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:41.761683      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 08/17/23 13:06:42.377
  Aug 17 13:06:42.377: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-983 PodName:pod-sharedvolume-6f9a3210-de5c-46d8-9689-cd6a38af643e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 13:06:42.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 13:06:42.378: INFO: ExecWithOptions: Clientset creation
  Aug 17 13:06:42.378: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-983/pods/pod-sharedvolume-6f9a3210-de5c-46d8-9689-cd6a38af643e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Aug 17 13:06:42.473: INFO: Exec stderr: ""
  Aug 17 13:06:42.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-983" for this suite. @ 08/17/23 13:06:42.476
• [2.123 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 08/17/23 13:06:42.48
  Aug 17 13:06:42.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename lease-test @ 08/17/23 13:06:42.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:42.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:42.488
  Aug 17 13:06:42.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4484" for this suite. @ 08/17/23 13:06:42.517
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 08/17/23 13:06:42.521
  Aug 17 13:06:42.521: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename podtemplate @ 08/17/23 13:06:42.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:42.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:42.529
  STEP: Create set of pod templates @ 08/17/23 13:06:42.53
  Aug 17 13:06:42.533: INFO: created test-podtemplate-1
  Aug 17 13:06:42.535: INFO: created test-podtemplate-2
  Aug 17 13:06:42.537: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 08/17/23 13:06:42.537
  STEP: delete collection of pod templates @ 08/17/23 13:06:42.538
  Aug 17 13:06:42.539: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 08/17/23 13:06:42.546
  Aug 17 13:06:42.546: INFO: requesting list of pod templates to confirm quantity
  Aug 17 13:06:42.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-805" for this suite. @ 08/17/23 13:06:42.549
• [0.031 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 08/17/23 13:06:42.552
  Aug 17 13:06:42.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename runtimeclass @ 08/17/23 13:06:42.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:42.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:42.559
  STEP: getting /apis @ 08/17/23 13:06:42.56
  STEP: getting /apis/node.k8s.io @ 08/17/23 13:06:42.562
  STEP: getting /apis/node.k8s.io/v1 @ 08/17/23 13:06:42.563
  STEP: creating @ 08/17/23 13:06:42.563
  STEP: watching @ 08/17/23 13:06:42.57
  Aug 17 13:06:42.570: INFO: starting watch
  STEP: getting @ 08/17/23 13:06:42.573
  STEP: listing @ 08/17/23 13:06:42.574
  STEP: patching @ 08/17/23 13:06:42.576
  STEP: updating @ 08/17/23 13:06:42.579
  Aug 17 13:06:42.581: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 08/17/23 13:06:42.581
  STEP: deleting a collection @ 08/17/23 13:06:42.587
  Aug 17 13:06:42.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5502" for this suite. @ 08/17/23 13:06:42.595
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 08/17/23 13:06:42.599
  Aug 17 13:06:42.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename resourcequota @ 08/17/23 13:06:42.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:06:42.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:06:42.606
  E0817 13:06:42.761933      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:43.762602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:44.763369      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:45.763542      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:46.764258      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:47.764482      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:48.764925      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:49.765347      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:50.765849      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:51.766417      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:52.766834      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:53.767490      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:54.767603      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:55.768517      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:56.768639      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:57.769300      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:06:58.769686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/17/23 13:06:59.61
  E0817 13:06:59.770129      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:00.770493      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:01.770596      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:02.771461      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:03.771507      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/17/23 13:07:04.614
  STEP: Ensuring resource quota status is calculated @ 08/17/23 13:07:04.617
  E0817 13:07:04.772078      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:05.772283      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 08/17/23 13:07:06.621
  STEP: Ensuring resource quota status captures configMap creation @ 08/17/23 13:07:06.629
  E0817 13:07:06.773127      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:07.773544      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 08/17/23 13:07:08.633
  STEP: Ensuring resource quota status released usage @ 08/17/23 13:07:08.637
  E0817 13:07:08.774163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:09.774934      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:10.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1326" for this suite. @ 08/17/23 13:07:10.643
• [28.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 08/17/23 13:07:10.649
  Aug 17 13:07:10.649: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename kubectl @ 08/17/23 13:07:10.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:10.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:10.659
  STEP: Starting the proxy @ 08/17/23 13:07:10.661
  Aug 17 13:07:10.661: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1791994966 --namespace=kubectl-709 proxy --unix-socket=/tmp/kubectl-proxy-unix3441811492/test'
  STEP: retrieving proxy /api/ output @ 08/17/23 13:07:10.717
  Aug 17 13:07:10.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-709" for this suite. @ 08/17/23 13:07:10.721
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 08/17/23 13:07:10.726
  Aug 17 13:07:10.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename svcaccounts @ 08/17/23 13:07:10.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:10.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:10.737
  Aug 17 13:07:10.748: INFO: created pod pod-service-account-defaultsa
  Aug 17 13:07:10.748: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Aug 17 13:07:10.751: INFO: created pod pod-service-account-mountsa
  Aug 17 13:07:10.751: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Aug 17 13:07:10.755: INFO: created pod pod-service-account-nomountsa
  Aug 17 13:07:10.755: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Aug 17 13:07:10.758: INFO: created pod pod-service-account-defaultsa-mountspec
  Aug 17 13:07:10.758: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Aug 17 13:07:10.762: INFO: created pod pod-service-account-mountsa-mountspec
  Aug 17 13:07:10.762: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Aug 17 13:07:10.765: INFO: created pod pod-service-account-nomountsa-mountspec
  Aug 17 13:07:10.765: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Aug 17 13:07:10.769: INFO: created pod pod-service-account-defaultsa-nomountspec
  Aug 17 13:07:10.769: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Aug 17 13:07:10.772: INFO: created pod pod-service-account-mountsa-nomountspec
  Aug 17 13:07:10.772: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  E0817 13:07:10.774931      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:10.777: INFO: created pod pod-service-account-nomountsa-nomountspec
  Aug 17 13:07:10.777: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Aug 17 13:07:10.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7675" for this suite. @ 08/17/23 13:07:10.782
• [0.060 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 08/17/23 13:07:10.787
  Aug 17 13:07:10.787: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 13:07:10.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:10.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:10.798
  STEP: Creating projection with secret that has name projected-secret-test-map-7e6d614c-ec6e-402c-866b-997c5424b999 @ 08/17/23 13:07:10.8
  STEP: Creating a pod to test consume secrets @ 08/17/23 13:07:10.804
  E0817 13:07:11.775372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:12.776140      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:13.776803      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:14.776802      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 13:07:14.817
  Aug 17 13:07:14.818: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-secrets-251cf759-1fe3-41b8-a598-d8c16829c3d9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/17/23 13:07:14.822
  Aug 17 13:07:14.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6437" for this suite. @ 08/17/23 13:07:14.831
• [4.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 08/17/23 13:07:14.835
  Aug 17 13:07:14.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename webhook @ 08/17/23 13:07:14.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:14.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:14.843
  STEP: Setting up server cert @ 08/17/23 13:07:14.853
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/17/23 13:07:15.074
  STEP: Deploying the webhook pod @ 08/17/23 13:07:15.079
  STEP: Wait for the deployment to be ready @ 08/17/23 13:07:15.084
  Aug 17 13:07:15.088: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0817 13:07:15.777859      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:16.777974      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/17/23 13:07:17.093
  STEP: Verifying the service has paired with the endpoint @ 08/17/23 13:07:17.1
  E0817 13:07:17.778692      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:18.101: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 08/17/23 13:07:18.105
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 08/17/23 13:07:18.106
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 08/17/23 13:07:18.106
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 08/17/23 13:07:18.106
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 08/17/23 13:07:18.107
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/17/23 13:07:18.107
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/17/23 13:07:18.108
  Aug 17 13:07:18.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-539" for this suite. @ 08/17/23 13:07:18.136
  STEP: Destroying namespace "webhook-markers-5589" for this suite. @ 08/17/23 13:07:18.14
• [3.309 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 08/17/23 13:07:18.144
  Aug 17 13:07:18.144: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/17/23 13:07:18.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:18.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:18.153
  STEP: set up a multi version CRD @ 08/17/23 13:07:18.155
  Aug 17 13:07:18.155: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  E0817 13:07:18.779279      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:19.779728      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:20.780580      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 08/17/23 13:07:21.192
  STEP: check the unserved version gets removed @ 08/17/23 13:07:21.199
  E0817 13:07:21.780672      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 08/17/23 13:07:21.961
  E0817 13:07:22.781331      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:23.781355      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:24.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2547" for this suite. @ 08/17/23 13:07:24.367
• [6.227 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 08/17/23 13:07:24.37
  Aug 17 13:07:24.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename runtimeclass @ 08/17/23 13:07:24.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:24.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:24.379
  Aug 17 13:07:24.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8547" for this suite. @ 08/17/23 13:07:24.386
• [0.019 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 08/17/23 13:07:24.389
  Aug 17 13:07:24.389: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename init-container @ 08/17/23 13:07:24.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:24.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:24.398
  STEP: creating the pod @ 08/17/23 13:07:24.4
  Aug 17 13:07:24.400: INFO: PodSpec: initContainers in spec.initContainers
  E0817 13:07:24.782013      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:25.782556      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:26.782916      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:27.783353      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:28.783752      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:29.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9781" for this suite. @ 08/17/23 13:07:29.103
• [4.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 08/17/23 13:07:29.107
  Aug 17 13:07:29.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename pod-network-test @ 08/17/23 13:07:29.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:29.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:29.115
  STEP: Performing setup for networking test in namespace pod-network-test-717 @ 08/17/23 13:07:29.117
  STEP: creating a selector @ 08/17/23 13:07:29.117
  STEP: Creating the service pods in kubernetes @ 08/17/23 13:07:29.117
  Aug 17 13:07:29.117: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0817 13:07:29.784312      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:30.784878      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:31.785686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:32.786230      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:33.787129      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:34.787337      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:35.787685      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:36.787802      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:37.788419      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:38.788615      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:39.788743      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:40.789532      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/17/23 13:07:41.154
  E0817 13:07:41.789736      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:42.790148      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:43.172: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 17 13:07:43.172: INFO: Going to poll 10.244.1.216 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Aug 17 13:07:43.174: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.216:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-717 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 13:07:43.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 13:07:43.174: INFO: ExecWithOptions: Clientset creation
  Aug 17 13:07:43.175: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-717/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.216%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 17 13:07:43.301: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 17 13:07:43.301: INFO: Going to poll 10.244.2.31 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Aug 17 13:07:43.304: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.31:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-717 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 17 13:07:43.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  Aug 17 13:07:43.304: INFO: ExecWithOptions: Clientset creation
  Aug 17 13:07:43.304: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-717/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.31%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 17 13:07:43.412: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 17 13:07:43.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-717" for this suite. @ 08/17/23 13:07:43.415
• [14.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 08/17/23 13:07:43.428
  Aug 17 13:07:43.428: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename secrets @ 08/17/23 13:07:43.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:43.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:43.438
  STEP: Creating projection with secret that has name secret-emptykey-test-4157ebee-ab33-4c28-b9d5-15b1ac5a15e5 @ 08/17/23 13:07:43.439
  Aug 17 13:07:43.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1498" for this suite. @ 08/17/23 13:07:43.444
• [0.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 08/17/23 13:07:43.448
  Aug 17 13:07:43.448: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename container-probe @ 08/17/23 13:07:43.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:07:43.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:07:43.457
  STEP: Creating pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328 @ 08/17/23 13:07:43.458
  E0817 13:07:43.791036      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:44.791985      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/17/23 13:07:45.469
  Aug 17 13:07:45.472: INFO: Initial restart count of pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 is 0
  Aug 17 13:07:45.474: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:45.792760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:46.792853      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:47.476: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:47.793185      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:48.793235      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:49.479: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:49.793713      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:50.794295      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:51.482: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:51.794329      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:52.794850      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:53.486: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:53.795460      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:54.795818      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:55.488: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:55.796379      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:56.796593      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:57.491: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:57.797265      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:07:58.797411      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:07:59.495: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:07:59.798058      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:00.798305      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:01.498: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:01.798363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:02.799033      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:03.501: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:03.799460      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:04.799602      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:05.504: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  Aug 17 13:08:05.504: INFO: Restart count of pod container-probe-7328/liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 is now 1 (20.032037833s elapsed)
  E0817 13:08:05.799686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:06.799805      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:07.507: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:07.800820      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:08.801048      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:09.510: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:09.801257      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:10.801632      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:11.514: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:11.801704      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:12.802006      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:13.517: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:13.802557      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:14.802794      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:15.519: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:15.802982      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:16.803196      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:17.523: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:17.803419      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:18.803584      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:19.526: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:19.803853      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:20.804674      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:21.530: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:21.804662      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:22.805163      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:23.533: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:23.805279      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:24.805465      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:25.535: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  Aug 17 13:08:25.535: INFO: Restart count of pod container-probe-7328/liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 is now 2 (40.06375252s elapsed)
  E0817 13:08:25.805543      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:26.805757      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:27.538: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:27.806363      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:28.806906      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:29.542: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:29.807959      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:30.808209      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:31.545: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:31.808205      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:32.808729      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:33.548: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:33.809324      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:34.810330      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:35.551: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:35.810995      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:36.811914      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:37.554: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:37.812270      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:38.812444      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:39.557: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:39.813217      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:40.813265      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:41.560: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:41.813681      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:42.814090      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:43.563: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:43.814487      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:44.814738      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:45.566: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  Aug 17 13:08:45.566: INFO: Restart count of pod container-probe-7328/liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 is now 3 (1m0.09411185s elapsed)
  E0817 13:08:45.815578      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:46.815686      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:47.568: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:47.816264      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:48.816445      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:49.571: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:49.817146      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:50.817321      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:51.574: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:51.818172      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:52.818832      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:53.578: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:53.819190      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:54.819351      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:55.582: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:55.819412      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:56.819590      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:57.586: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:57.820372      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:08:58.820518      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:08:59.589: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:08:59.820649      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:00.820834      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:01.592: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:01.821145      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:02.821592      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:03.595: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:03.822417      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:04.822664      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:05.598: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  Aug 17 13:09:05.598: INFO: Restart count of pod container-probe-7328/liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 is now 4 (1m20.12591311s elapsed)
  E0817 13:09:05.823398      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:06.823554      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:07.600: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:07.823975      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:08.824122      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:09.604: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:09.824151      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:10.824307      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:11.608: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:11.825289      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:12.825881      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:13.610: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:13.826220      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:14.826375      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:15.612: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:15.827215      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:16.827696      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:17.616: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:17.828462      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:18.828618      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:19.619: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:19.828741      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:20.829485      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:21.623: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:21.830544      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:22.831015      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:23.626: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:23.832034      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:24.832117      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:25.629: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:25.832312      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:26.832446      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:27.632: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:27.833229      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:28.833583      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:29.635: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:29.833970      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:30.834124      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:31.638: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:31.834663      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:32.835129      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:33.640: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:33.835991      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:34.836246      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:35.642: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:35.837071      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:36.837428      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:37.645: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:37.837664      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:38.837760      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:39.648: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:39.838507      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:40.839040      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:41.650: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:41.839774      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:42.840344      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:43.653: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:43.840464      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:44.840657      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:45.655: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:45.841046      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:46.841224      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:47.658: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:47.842026      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:48.842414      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:49.661: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:49.842567      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:50.842577      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:51.663: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:51.843079      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:52.843148      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:53.666: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:53.844158      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:54.844298      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:55.669: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:55.844983      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:56.845116      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:57.672: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:57.845705      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:09:58.846590      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:09:59.675: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:09:59.846897      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:10:00.847040      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:10:01.678: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:10:01.847108      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:10:02.848186      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:10:03.681: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:10:03.849153      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:10:04.850243      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:10:05.685: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  E0817 13:10:05.850666      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:10:06.850797      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 17 13:10:07.688: INFO: Get pod liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 in namespace container-probe-7328
  Aug 17 13:10:07.688: INFO: Restart count of pod container-probe-7328/liveness-884a8d1b-ea25-4eb3-8ebf-9d483b057099 is now 5 (2m22.216737453s elapsed)
  Aug 17 13:10:07.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/17/23 13:10:07.692
  STEP: Destroying namespace "container-probe-7328" for this suite. @ 08/17/23 13:10:07.699
• [144.255 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 08/17/23 13:10:07.703
  Aug 17 13:10:07.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1791994966
  STEP: Building a namespace api object, basename projected @ 08/17/23 13:10:07.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/17/23 13:10:07.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/17/23 13:10:07.72
  STEP: Creating configMap with name projected-configmap-test-volume-map-2fd0cb64-5ef8-4d23-9319-c331911d36cb @ 08/17/23 13:10:07.722
  STEP: Creating a pod to test consume configMaps @ 08/17/23 13:10:07.726
  E0817 13:10:07.851377      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:10:08.852416      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:10:09.853013      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0817 13:10:10.853238      24 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/17/23 13:10:11.74
  Aug 17 13:10:11.742: INFO: Trying to get logs from node talos-default-worker-1 pod pod-projected-configmaps-bb29ad77-f59d-4600-a800-1ce8f026f3a3 container agnhost-container: <nil>
  STEP: delete the pod @ 08/17/23 13:10:11.75
  Aug 17 13:10:11.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3348" for this suite. @ 08/17/23 13:10:11.761
• [4.061 seconds]
------------------------------
SSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Aug 17 13:10:11.765: INFO: Running AfterSuite actions on node 1
  Aug 17 13:10:11.765: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.046 seconds]
------------------------------

Ran 380 of 7387 Specs in 5668.869 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h34m29.158524095s
Test Suite Passed
