  I0824 14:44:32.610755      14 e2e.go:117] Starting e2e run "b2df8b56-5fa5-4a3c-9a52-63b88dba1d84" on Ginkgo node 1
  Aug 24 14:44:32.699: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1692888272 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Aug 24 14:44:33.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:44:33.080: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Aug 24 14:44:33.153: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Aug 24 14:44:33.164: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  Aug 24 14:44:33.164: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium-node-init' (0 seconds elapsed)
  Aug 24 14:44:33.165: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Aug 24 14:44:33.165: INFO: e2e test version: v1.28.1
  Aug 24 14:44:33.168: INFO: kube-apiserver version: v1.28.1
  Aug 24 14:44:33.168: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:44:33.176: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 08/24/23 14:44:33.681
  Aug 24 14:44:33.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:44:33.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:33.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:33.733
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/24/23 14:44:33.739
  STEP: Saw pod success @ 08/24/23 14:44:45.839
  Aug 24 14:44:45.849: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-ebbcbd49-ae19-4522-9249-b492e63ab590 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:44:45.89
  Aug 24 14:44:45.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3822" for this suite. @ 08/24/23 14:44:45.932
• [12.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 08/24/23 14:44:45.959
  Aug 24 14:44:45.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename hostport @ 08/24/23 14:44:45.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:45.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:46.001
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 08/24/23 14:44:46.014
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.75 on the node which pod1 resides and expect scheduled @ 08/24/23 14:44:58.106
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.75 but use UDP protocol on the node which pod2 resides @ 08/24/23 14:45:00.145
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 08/24/23 14:45:14.297
  Aug 24 14:45:14.297: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.75 http://127.0.0.1:54323/hostname] Namespace:hostport-8780 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:45:14.297: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:45:14.299: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:45:14.300: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-8780/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.75+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.75, port: 54323 @ 08/24/23 14:45:14.514
  Aug 24 14:45:14.515: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.75:54323/hostname] Namespace:hostport-8780 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:45:14.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:45:14.519: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:45:14.520: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-8780/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.75%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.75, port: 54323 UDP @ 08/24/23 14:45:14.66
  Aug 24 14:45:14.661: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.75 54323] Namespace:hostport-8780 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:45:14.661: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:45:14.664: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:45:14.664: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-8780/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.75+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Aug 24 14:45:19.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8780" for this suite. @ 08/24/23 14:45:19.809
• [33.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 08/24/23 14:45:19.827
  Aug 24 14:45:19.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 14:45:19.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:19.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:19.876
  STEP: Creating a cronjob @ 08/24/23 14:45:19.881
  STEP: creating @ 08/24/23 14:45:19.881
  STEP: getting @ 08/24/23 14:45:19.891
  STEP: listing @ 08/24/23 14:45:19.896
  STEP: watching @ 08/24/23 14:45:19.902
  Aug 24 14:45:19.902: INFO: starting watch
  STEP: cluster-wide listing @ 08/24/23 14:45:19.904
  STEP: cluster-wide watching @ 08/24/23 14:45:19.911
  Aug 24 14:45:19.911: INFO: starting watch
  STEP: patching @ 08/24/23 14:45:19.914
  STEP: updating @ 08/24/23 14:45:19.929
  Aug 24 14:45:19.946: INFO: waiting for watch events with expected annotations
  Aug 24 14:45:19.947: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/24/23 14:45:19.948
  STEP: updating /status @ 08/24/23 14:45:19.963
  STEP: get /status @ 08/24/23 14:45:19.978
  STEP: deleting @ 08/24/23 14:45:19.985
  STEP: deleting a collection @ 08/24/23 14:45:20.018
  Aug 24 14:45:20.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2383" for this suite. @ 08/24/23 14:45:20.053
• [0.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 08/24/23 14:45:20.067
  Aug 24 14:45:20.067: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:45:20.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:20.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:20.106
  STEP: Creating configMap with name configmap-test-volume-b83631db-96f9-42c7-8486-13342ab99948 @ 08/24/23 14:45:20.11
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:45:20.118
  STEP: Saw pod success @ 08/24/23 14:45:24.158
  Aug 24 14:45:24.164: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-7f72170d-9fbb-4619-8687-580e327a7dd8 container configmap-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:45:24.178
  Aug 24 14:45:24.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6737" for this suite. @ 08/24/23 14:45:24.21
• [4.152 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 08/24/23 14:45:24.22
  Aug 24 14:45:24.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:45:24.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:24.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:24.255
  STEP: Creating configMap with name projected-configmap-test-volume-8b0c20f4-80a1-48af-9a6a-0a69bdace0df @ 08/24/23 14:45:24.259
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:45:24.265
  STEP: Saw pod success @ 08/24/23 14:45:28.298
  Aug 24 14:45:28.303: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-configmaps-0b350044-f357-49b8-b16f-f9e56fd90c30 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:45:28.315
  Aug 24 14:45:28.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-802" for this suite. @ 08/24/23 14:45:28.366
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 08/24/23 14:45:28.4
  Aug 24 14:45:28.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:45:28.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:28.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:28.439
  STEP: Creating a pod to test downward api env vars @ 08/24/23 14:45:28.446
  STEP: Saw pod success @ 08/24/23 14:45:34.504
  Aug 24 14:45:34.512: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downward-api-344ede98-928d-486c-97ef-c3fbbc46a689 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 14:45:34.527
  Aug 24 14:45:34.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1091" for this suite. @ 08/24/23 14:45:34.563
• [6.177 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 08/24/23 14:45:34.577
  Aug 24 14:45:34.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 14:45:34.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:34.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:34.615
  STEP: set up a multi version CRD @ 08/24/23 14:45:34.619
  Aug 24 14:45:34.621: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: mark a version not serverd @ 08/24/23 14:45:39.54
  STEP: check the unserved version gets removed @ 08/24/23 14:45:39.572
  STEP: check the other version is not changed @ 08/24/23 14:45:41.189
  Aug 24 14:45:44.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1086" for this suite. @ 08/24/23 14:45:44.772
• [10.211 seconds]
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 08/24/23 14:45:44.79
  Aug 24 14:45:44.790: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:45:44.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:44.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:44.823
  STEP: Create a pod @ 08/24/23 14:45:44.827
  STEP: patching /status @ 08/24/23 14:45:46.858
  Aug 24 14:45:46.871: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Aug 24 14:45:46.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4712" for this suite. @ 08/24/23 14:45:46.879
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 08/24/23 14:45:46.894
  Aug 24 14:45:46.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename events @ 08/24/23 14:45:46.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:46.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:46.926
  STEP: Create set of events @ 08/24/23 14:45:46.935
  Aug 24 14:45:46.948: INFO: created test-event-1
  Aug 24 14:45:46.956: INFO: created test-event-2
  Aug 24 14:45:46.964: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 08/24/23 14:45:46.964
  STEP: delete collection of events @ 08/24/23 14:45:46.968
  Aug 24 14:45:46.968: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/24/23 14:45:47.001
  Aug 24 14:45:47.001: INFO: requesting list of events to confirm quantity
  Aug 24 14:45:47.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8226" for this suite. @ 08/24/23 14:45:47.015
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 08/24/23 14:45:47.031
  Aug 24 14:45:47.031: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:45:47.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:47.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:47.061
  STEP: Creating secret with name secret-test-02371bb8-ae5b-4b22-aff1-9010d0b08367 @ 08/24/23 14:45:47.064
  STEP: Creating a pod to test consume secrets @ 08/24/23 14:45:47.072
  STEP: Saw pod success @ 08/24/23 14:45:51.11
  Aug 24 14:45:51.116: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-889eaecf-fb5c-48c7-b447-3a44be395bb5 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:45:51.146
  Aug 24 14:45:51.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3284" for this suite. @ 08/24/23 14:45:51.182
• [4.160 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 08/24/23 14:45:51.194
  Aug 24 14:45:51.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:45:51.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:51.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:51.229
  STEP: Setting up server cert @ 08/24/23 14:45:51.268
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:45:53.024
  STEP: Deploying the webhook pod @ 08/24/23 14:45:53.049
  STEP: Wait for the deployment to be ready @ 08/24/23 14:45:53.123
  Aug 24 14:45:53.154: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/24/23 14:45:55.175
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:45:55.202
  Aug 24 14:45:56.208: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/24/23 14:45:56.339
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 14:45:56.441
  STEP: Deleting the collection of validation webhooks @ 08/24/23 14:45:56.508
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 14:45:56.602
  Aug 24 14:45:56.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-487" for this suite. @ 08/24/23 14:45:56.741
  STEP: Destroying namespace "webhook-markers-5020" for this suite. @ 08/24/23 14:45:56.758
• [5.599 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 08/24/23 14:45:56.794
  Aug 24 14:45:56.794: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename init-container @ 08/24/23 14:45:56.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:56.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:56.851
  STEP: creating the pod @ 08/24/23 14:45:56.856
  Aug 24 14:45:56.857: INFO: PodSpec: initContainers in spec.initContainers
  Aug 24 14:46:00.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9819" for this suite. @ 08/24/23 14:46:00.999
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 08/24/23 14:46:01.017
  Aug 24 14:46:01.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:46:01.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:01.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:46:01.055
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:46:01.068
  STEP: Saw pod success @ 08/24/23 14:46:05.139
  Aug 24 14:46:05.145: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-ab2243c6-63d0-4bf2-91c9-f87dd8bddfb1 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:46:05.158
  Aug 24 14:46:05.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4447" for this suite. @ 08/24/23 14:46:05.192
• [4.188 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 08/24/23 14:46:05.207
  Aug 24 14:46:05.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 14:46:05.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:05.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:46:05.234
  STEP: Creating a test namespace @ 08/24/23 14:46:05.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:05.257
  STEP: Creating a pod in the namespace @ 08/24/23 14:46:05.261
  STEP: Waiting for the pod to have running status @ 08/24/23 14:46:05.274
  STEP: Deleting the namespace @ 08/24/23 14:46:09.294
  STEP: Waiting for the namespace to be removed. @ 08/24/23 14:46:09.305
  STEP: Recreating the namespace @ 08/24/23 14:46:20.316
  STEP: Verifying there are no pods in the namespace @ 08/24/23 14:46:20.341
  Aug 24 14:46:20.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1739" for this suite. @ 08/24/23 14:46:20.356
  STEP: Destroying namespace "nsdeletetest-7025" for this suite. @ 08/24/23 14:46:20.391
  Aug 24 14:46:20.396: INFO: Namespace nsdeletetest-7025 was already deleted
  STEP: Destroying namespace "nsdeletetest-5460" for this suite. @ 08/24/23 14:46:20.396
• [15.198 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 08/24/23 14:46:20.405
  Aug 24 14:46:20.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename podtemplate @ 08/24/23 14:46:20.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:20.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:46:20.435
  Aug 24 14:46:20.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-589" for this suite. @ 08/24/23 14:46:20.5
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 08/24/23 14:46:20.522
  Aug 24 14:46:20.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:46:20.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:20.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:46:20.564
  STEP: creating the pod @ 08/24/23 14:46:20.571
  STEP: setting up watch @ 08/24/23 14:46:20.571
  STEP: submitting the pod to kubernetes @ 08/24/23 14:46:20.677
  STEP: verifying the pod is in kubernetes @ 08/24/23 14:46:20.691
  STEP: verifying pod creation was observed @ 08/24/23 14:46:20.703
  STEP: deleting the pod gracefully @ 08/24/23 14:46:22.729
  STEP: verifying pod deletion was observed @ 08/24/23 14:46:22.744
  Aug 24 14:46:24.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8973" for this suite. @ 08/24/23 14:46:24.068
• [3.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 08/24/23 14:46:24.089
  Aug 24 14:46:24.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 14:46:24.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:24.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:46:24.121
  STEP: create the container @ 08/24/23 14:46:24.127
  W0824 14:46:24.142878      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/24/23 14:46:24.143
  STEP: get the container status @ 08/24/23 14:46:27.176
  STEP: the container should be terminated @ 08/24/23 14:46:27.185
  STEP: the termination message should be set @ 08/24/23 14:46:27.185
  Aug 24 14:46:27.185: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 08/24/23 14:46:27.185
  Aug 24 14:46:27.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3580" for this suite. @ 08/24/23 14:46:27.238
• [3.159 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 08/24/23 14:46:27.254
  Aug 24 14:46:27.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename prestop @ 08/24/23 14:46:27.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:27.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:46:27.291
  STEP: Creating server pod server in namespace prestop-4919 @ 08/24/23 14:46:27.298
  STEP: Waiting for pods to come up. @ 08/24/23 14:46:27.312
  STEP: Creating tester pod tester in namespace prestop-4919 @ 08/24/23 14:46:29.346
  STEP: Deleting pre-stop pod @ 08/24/23 14:46:31.391
  Aug 24 14:46:36.416: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Aug 24 14:46:36.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 08/24/23 14:46:36.437
  STEP: Destroying namespace "prestop-4919" for this suite. @ 08/24/23 14:46:36.473
• [9.267 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 08/24/23 14:46:36.526
  Aug 24 14:46:36.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 14:46:36.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:46:36.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:46:36.569
  STEP: Creating a test externalName service @ 08/24/23 14:46:36.574
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3300.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3300.svc.cluster.local; sleep 1; done
   @ 08/24/23 14:46:36.584
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3300.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3300.svc.cluster.local; sleep 1; done
   @ 08/24/23 14:46:36.584
  STEP: creating a pod to probe DNS @ 08/24/23 14:46:36.584
  STEP: submitting the pod to kubernetes @ 08/24/23 14:46:36.584
  STEP: retrieving the pod @ 08/24/23 14:46:58.713
  STEP: looking for the results for each expected name from probers @ 08/24/23 14:46:58.72
  Aug 24 14:46:58.745: INFO: DNS probes using dns-test-ccb5b79e-f069-4fce-92ed-2f1c8f2f7838 succeeded

  STEP: changing the externalName to bar.example.com @ 08/24/23 14:46:58.746
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3300.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3300.svc.cluster.local; sleep 1; done
   @ 08/24/23 14:46:58.763
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3300.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3300.svc.cluster.local; sleep 1; done
   @ 08/24/23 14:46:58.763
  STEP: creating a second pod to probe DNS @ 08/24/23 14:46:58.764
  STEP: submitting the pod to kubernetes @ 08/24/23 14:46:58.764
  STEP: retrieving the pod @ 08/24/23 14:47:02.805
  STEP: looking for the results for each expected name from probers @ 08/24/23 14:47:02.811
  Aug 24 14:47:02.825: INFO: File wheezy_udp@dns-test-service-3.dns-3300.svc.cluster.local from pod  dns-3300/dns-test-4bb7ff3f-0c12-4ae5-9223-7da2835463c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 14:47:02.831: INFO: File jessie_udp@dns-test-service-3.dns-3300.svc.cluster.local from pod  dns-3300/dns-test-4bb7ff3f-0c12-4ae5-9223-7da2835463c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 14:47:02.832: INFO: Lookups using dns-3300/dns-test-4bb7ff3f-0c12-4ae5-9223-7da2835463c0 failed for: [wheezy_udp@dns-test-service-3.dns-3300.svc.cluster.local jessie_udp@dns-test-service-3.dns-3300.svc.cluster.local]

  Aug 24 14:47:02.843: INFO: Pod client logs for webserver: 
  Aug 24 14:47:02.853: INFO: Pod client logs for querier: 
  Aug 24 14:47:02.863: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:47:07.873: INFO: File wheezy_udp@dns-test-service-3.dns-3300.svc.cluster.local from pod  dns-3300/dns-test-4bb7ff3f-0c12-4ae5-9223-7da2835463c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 14:47:07.880: INFO: File jessie_udp@dns-test-service-3.dns-3300.svc.cluster.local from pod  dns-3300/dns-test-4bb7ff3f-0c12-4ae5-9223-7da2835463c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 14:47:07.881: INFO: Lookups using dns-3300/dns-test-4bb7ff3f-0c12-4ae5-9223-7da2835463c0 failed for: [wheezy_udp@dns-test-service-3.dns-3300.svc.cluster.local jessie_udp@dns-test-service-3.dns-3300.svc.cluster.local]

  Aug 24 14:47:07.891: INFO: Pod client logs for webserver: 
  Aug 24 14:47:07.902: INFO: Pod client logs for querier: 
  Aug 24 14:47:07.914: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:47:12.882: INFO: DNS probes using dns-test-4bb7ff3f-0c12-4ae5-9223-7da2835463c0 succeeded

  STEP: changing the service to type=ClusterIP @ 08/24/23 14:47:12.882
  W0824 14:47:12.915893      14 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3300.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3300.svc.cluster.local; sleep 1; done
   @ 08/24/23 14:47:12.916
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3300.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3300.svc.cluster.local; sleep 1; done
   @ 08/24/23 14:47:12.916
  STEP: creating a third pod to probe DNS @ 08/24/23 14:47:12.916
  STEP: submitting the pod to kubernetes @ 08/24/23 14:47:12.923
  STEP: retrieving the pod @ 08/24/23 14:47:39.072
  STEP: looking for the results for each expected name from probers @ 08/24/23 14:47:39.077
  Aug 24 14:47:39.097: INFO: DNS probes using dns-test-8935da40-8293-4370-b312-7cb7daf0cac2 succeeded

  Aug 24 14:47:39.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 14:47:39.104
  STEP: deleting the pod @ 08/24/23 14:47:39.123
  STEP: deleting the pod @ 08/24/23 14:47:39.18
  STEP: deleting the test externalName service @ 08/24/23 14:47:39.229
  STEP: Destroying namespace "dns-3300" for this suite. @ 08/24/23 14:47:39.267
• [62.757 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 08/24/23 14:47:39.287
  Aug 24 14:47:39.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 14:47:39.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:47:39.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:47:39.335
  STEP: creating service in namespace services-7336 @ 08/24/23 14:47:39.341
  STEP: creating service affinity-nodeport-transition in namespace services-7336 @ 08/24/23 14:47:39.341
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7336 @ 08/24/23 14:47:39.368
  I0824 14:47:39.386090      14 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-7336, replica count: 3
  I0824 14:47:42.438639      14 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 14:47:42.482: INFO: Creating new exec pod
  Aug 24 14:47:45.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-7336 exec execpod-affinityxrvkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Aug 24 14:47:46.003: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Aug 24 14:47:46.003: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:47:46.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-7336 exec execpod-affinityxrvkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.254 80'
  Aug 24 14:47:46.287: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.31.254 80\nConnection to 10.233.31.254 80 port [tcp/http] succeeded!\n"
  Aug 24 14:47:46.287: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:47:46.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-7336 exec execpod-affinityxrvkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.75 32624'
  Aug 24 14:47:46.556: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.75 32624\nConnection to 192.168.121.75 32624 port [tcp/*] succeeded!\n"
  Aug 24 14:47:46.556: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:47:46.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-7336 exec execpod-affinityxrvkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.240 32624'
  Aug 24 14:47:46.817: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.240 32624\nConnection to 192.168.121.240 32624 port [tcp/*] succeeded!\n"
  Aug 24 14:47:46.818: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:47:46.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-7336 exec execpod-affinityxrvkf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.240:32624/ ; done'
  Aug 24 14:47:47.400: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n"
  Aug 24 14:47:47.400: INFO: stdout: "\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-7t52j\naffinity-nodeport-transition-7t52j\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-7t52j\naffinity-nodeport-transition-7t52j\naffinity-nodeport-transition-7t52j\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-jdmnh\naffinity-nodeport-transition-jdmnh\naffinity-nodeport-transition-jdmnh\naffinity-nodeport-transition-7t52j\naffinity-nodeport-transition-jdmnh\naffinity-nodeport-transition-7t52j"
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-7t52j
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-7t52j
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-7t52j
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-7t52j
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-7t52j
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-jdmnh
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-jdmnh
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-jdmnh
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-7t52j
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-jdmnh
  Aug 24 14:47:47.400: INFO: Received response from host: affinity-nodeport-transition-7t52j
  Aug 24 14:47:47.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-7336 exec execpod-affinityxrvkf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.240:32624/ ; done'
  Aug 24 14:47:47.856: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32624/\n"
  Aug 24 14:47:47.856: INFO: stdout: "\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc\naffinity-nodeport-transition-c7mxc"
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.856: INFO: Received response from host: affinity-nodeport-transition-c7mxc
  Aug 24 14:47:47.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 14:47:47.868: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7336, will wait for the garbage collector to delete the pods @ 08/24/23 14:47:47.888
  Aug 24 14:47:47.969: INFO: Deleting ReplicationController affinity-nodeport-transition took: 11.709185ms
  Aug 24 14:47:48.070: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.23835ms
  STEP: Destroying namespace "services-7336" for this suite. @ 08/24/23 14:47:51.025
• [11.762 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 08/24/23 14:47:51.052
  Aug 24 14:47:51.052: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename events @ 08/24/23 14:47:51.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:47:51.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:47:51.096
  STEP: creating a test event @ 08/24/23 14:47:51.101
  STEP: listing all events in all namespaces @ 08/24/23 14:47:51.11
  STEP: patching the test event @ 08/24/23 14:47:51.142
  STEP: fetching the test event @ 08/24/23 14:47:51.157
  STEP: updating the test event @ 08/24/23 14:47:51.165
  STEP: getting the test event @ 08/24/23 14:47:51.181
  STEP: deleting the test event @ 08/24/23 14:47:51.187
  STEP: listing all events in all namespaces @ 08/24/23 14:47:51.2
  Aug 24 14:47:51.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1751" for this suite. @ 08/24/23 14:47:51.244
• [0.205 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 08/24/23 14:47:51.258
  Aug 24 14:47:51.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/24/23 14:47:51.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:47:51.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:47:51.299
  STEP: creating a target pod @ 08/24/23 14:47:51.303
  STEP: adding an ephemeral container @ 08/24/23 14:47:53.348
  STEP: checking pod container endpoints @ 08/24/23 14:47:55.395
  Aug 24 14:47:55.395: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6452 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:47:55.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:47:55.398: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:47:55.398: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-6452/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 24 14:47:55.522: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 08/24/23 14:47:55.536
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 08/24/23 14:47:55.544
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 08/24/23 14:47:55.564
  Aug 24 14:47:55.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6452" for this suite. @ 08/24/23 14:47:55.581
• [4.341 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 08/24/23 14:47:55.601
  Aug 24 14:47:55.601: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 14:47:55.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:47:55.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:47:55.646
  Aug 24 14:47:55.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8759" for this suite. @ 08/24/23 14:47:55.676
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 08/24/23 14:47:55.695
  Aug 24 14:47:55.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sysctl @ 08/24/23 14:47:55.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:47:55.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:47:55.735
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 08/24/23 14:47:55.739
  STEP: Watching for error events or started pod @ 08/24/23 14:47:55.768
  STEP: Waiting for pod completion @ 08/24/23 14:47:57.784
  STEP: Checking that the pod succeeded @ 08/24/23 14:47:59.805
  STEP: Getting logs from the pod @ 08/24/23 14:47:59.805
  STEP: Checking that the sysctl is actually updated @ 08/24/23 14:47:59.816
  Aug 24 14:47:59.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3811" for this suite. @ 08/24/23 14:47:59.824
• [4.140 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 08/24/23 14:47:59.838
  Aug 24 14:47:59.839: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename csistoragecapacity @ 08/24/23 14:47:59.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:47:59.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:47:59.887
  STEP: getting /apis @ 08/24/23 14:47:59.891
  STEP: getting /apis/storage.k8s.io @ 08/24/23 14:47:59.898
  STEP: getting /apis/storage.k8s.io/v1 @ 08/24/23 14:47:59.899
  STEP: creating @ 08/24/23 14:47:59.902
  STEP: watching @ 08/24/23 14:47:59.938
  Aug 24 14:47:59.938: INFO: starting watch
  STEP: getting @ 08/24/23 14:47:59.959
  STEP: listing in namespace @ 08/24/23 14:47:59.965
  STEP: listing across namespaces @ 08/24/23 14:47:59.975
  STEP: patching @ 08/24/23 14:47:59.981
  STEP: updating @ 08/24/23 14:47:59.995
  Aug 24 14:48:00.004: INFO: waiting for watch events with expected annotations in namespace
  Aug 24 14:48:00.004: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 08/24/23 14:48:00.004
  STEP: deleting a collection @ 08/24/23 14:48:00.022
  Aug 24 14:48:00.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8471" for this suite. @ 08/24/23 14:48:00.054
• [0.227 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 08/24/23 14:48:00.066
  Aug 24 14:48:00.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 14:48:00.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:48:00.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:48:00.093
  STEP: Creating service test in namespace statefulset-9005 @ 08/24/23 14:48:00.096
  STEP: Creating a new StatefulSet @ 08/24/23 14:48:00.105
  Aug 24 14:48:00.131: INFO: Found 0 stateful pods, waiting for 3
  Aug 24 14:48:10.142: INFO: Found 1 stateful pods, waiting for 3
  Aug 24 14:48:20.142: INFO: Found 2 stateful pods, waiting for 3
  Aug 24 14:48:30.146: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:48:30.146: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:48:30.146: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Aug 24 14:48:40.145: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:48:40.145: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:48:40.145: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:48:40.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9005 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:48:40.465: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:48:40.465: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:48:40.465: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/24/23 14:48:50.509
  Aug 24 14:48:50.544: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/24/23 14:48:50.545
  STEP: Updating Pods in reverse ordinal order @ 08/24/23 14:49:00.588
  Aug 24 14:49:00.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9005 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:49:00.935: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:49:00.935: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:49:00.935: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:49:11.019: INFO: Waiting for StatefulSet statefulset-9005/ss2 to complete update
  Aug 24 14:49:11.019: INFO: Waiting for Pod statefulset-9005/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Aug 24 14:49:11.019: INFO: Waiting for Pod statefulset-9005/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Aug 24 14:49:21.035: INFO: Waiting for StatefulSet statefulset-9005/ss2 to complete update
  Aug 24 14:49:21.036: INFO: Waiting for Pod statefulset-9005/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 08/24/23 14:49:31.038
  Aug 24 14:49:31.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9005 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:49:31.360: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:49:31.360: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:49:31.360: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:49:41.461: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 08/24/23 14:49:51.509
  Aug 24 14:49:51.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9005 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:49:51.872: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:49:51.872: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:49:51.872: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:50:01.916: INFO: Deleting all statefulset in ns statefulset-9005
  Aug 24 14:50:01.927: INFO: Scaling statefulset ss2 to 0
  Aug 24 14:50:11.965: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 14:50:11.970: INFO: Deleting statefulset ss2
  Aug 24 14:50:11.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9005" for this suite. @ 08/24/23 14:50:12.008
• [131.960 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 08/24/23 14:50:12.039
  Aug 24 14:50:12.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 14:50:12.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:12.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:12.072
  Aug 24 14:50:12.076: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 08/24/23 14:50:13.105
  STEP: Checking rc "condition-test" has the desired failure condition set @ 08/24/23 14:50:13.114
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 08/24/23 14:50:14.164
  Aug 24 14:50:14.195: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 08/24/23 14:50:14.195
  Aug 24 14:50:14.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4031" for this suite. @ 08/24/23 14:50:14.209
• [2.196 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 08/24/23 14:50:14.236
  Aug 24 14:50:14.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:50:14.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:14.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:14.267
  STEP: creating the pod @ 08/24/23 14:50:14.274
  STEP: submitting the pod to kubernetes @ 08/24/23 14:50:14.274
  STEP: verifying QOS class is set on the pod @ 08/24/23 14:50:14.29
  Aug 24 14:50:14.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-883" for this suite. @ 08/24/23 14:50:14.31
• [0.113 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 08/24/23 14:50:14.348
  Aug 24 14:50:14.349: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:50:14.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:14.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:14.395
  STEP: Creating configMap with name configmap-test-upd-e1a75827-1d71-4b7d-a84f-37c089bdc767 @ 08/24/23 14:50:14.415
  STEP: Creating the pod @ 08/24/23 14:50:14.425
  STEP: Waiting for pod with text data @ 08/24/23 14:50:16.459
  STEP: Waiting for pod with binary data @ 08/24/23 14:50:16.489
  Aug 24 14:50:16.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8398" for this suite. @ 08/24/23 14:50:16.508
• [2.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 08/24/23 14:50:16.526
  Aug 24 14:50:16.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename subjectreview @ 08/24/23 14:50:16.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:16.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:16.562
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-531" @ 08/24/23 14:50:16.568
  Aug 24 14:50:16.580: INFO: saUsername: "system:serviceaccount:subjectreview-531:e2e"
  Aug 24 14:50:16.580: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-531"}
  Aug 24 14:50:16.580: INFO: saUID: "ddaff2dc-6095-45bb-9d4e-152700e291b7"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-531:e2e" @ 08/24/23 14:50:16.58
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-531:e2e" @ 08/24/23 14:50:16.582
  Aug 24 14:50:16.591: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-531:e2e" api 'list' configmaps in "subjectreview-531" namespace @ 08/24/23 14:50:16.592
  Aug 24 14:50:16.595: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-531:e2e" @ 08/24/23 14:50:16.595
  Aug 24 14:50:16.600: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Aug 24 14:50:16.600: INFO: LocalSubjectAccessReview has been verified
  Aug 24 14:50:16.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-531" for this suite. @ 08/24/23 14:50:16.611
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 08/24/23 14:50:16.626
  Aug 24 14:50:16.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 14:50:16.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:16.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:16.662
  STEP: set up a multi version CRD @ 08/24/23 14:50:16.666
  Aug 24 14:50:16.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: rename a version @ 08/24/23 14:50:21.852
  STEP: check the new version name is served @ 08/24/23 14:50:21.886
  STEP: check the old version name is removed @ 08/24/23 14:50:23.276
  STEP: check the other version is not changed @ 08/24/23 14:50:24.147
  Aug 24 14:50:28.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2621" for this suite. @ 08/24/23 14:50:28.048
• [11.438 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 08/24/23 14:50:28.066
  Aug 24 14:50:28.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:50:28.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:28.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:28.109
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:50:28.118
  STEP: Saw pod success @ 08/24/23 14:50:32.172
  Aug 24 14:50:32.180: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-8d25f41e-aec7-46b2-ba77-a22e0bc527b5 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:50:32.22
  Aug 24 14:50:32.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3155" for this suite. @ 08/24/23 14:50:32.249
• [4.193 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 08/24/23 14:50:32.261
  Aug 24 14:50:32.261: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:50:32.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:32.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:32.294
  STEP: validating api versions @ 08/24/23 14:50:32.298
  Aug 24 14:50:32.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8644 api-versions'
  Aug 24 14:50:32.460: INFO: stderr: ""
  Aug 24 14:50:32.460: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Aug 24 14:50:32.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8644" for this suite. @ 08/24/23 14:50:32.469
• [0.219 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 08/24/23 14:50:32.482
  Aug 24 14:50:32.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 14:50:32.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:32.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:32.525
  Aug 24 14:50:32.547: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Aug 24 14:50:37.556: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 14:50:37.557
  Aug 24 14:50:37.557: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 08/24/23 14:50:37.573
  Aug 24 14:50:37.592: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49c9220f-6a84-4470-93a4-797713a83074",
      ResourceVersion: (string) (len=5) "13924",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 14:50:37.604: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Aug 24 14:50:37.605: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Aug 24 14:50:37.606: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a6419f6-f7b5-4c5b-9976-e718eda702af",
      ResourceVersion: (string) (len=5) "13925",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "49c9220f-6a84-4470-93a4-797713a83074",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 34 39 63 39 32 32 30  |"uid\":\"49c9220|
              00000040  66 2d 36 61 38 34 2d 34  34 37 30 2d 39 33 61 34  |f-6a84-4470-93a4|
              00000050  2d 37 39 37 37 31 33 61  38 33 30 37 34 5c 22 7d  |-797713a83074\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:50:37.631: INFO: Pod "test-cleanup-controller-8lqq2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-8lqq2",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-3018",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd0bd589-6840-4b5e-a642-c402ae9f339f",
      ResourceVersion: (string) (len=5) "13909",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "4a6419f6-f7b5-4c5b-9976-e718eda702af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  34 61 36 34 31 39 66 36  |uid\":\"4a6419f6|
              00000080  2d 66 37 62 35 2d 34 63  35 62 2d 39 39 37 36 2d  |-f7b5-4c5b-9976-|
              00000090  65 37 31 38 65 64 61 37  30 32 61 66 5c 22 7d 22  |e718eda702af\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 32 5c 22 7d 22  |10.233.66.12\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rkvv8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rkvv8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485433,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://473df7e6852412e3c6eb79dc64c4b71eee3959d313c97eb69554f6dd2c48955a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:50:37.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3018" for this suite. @ 08/24/23 14:50:37.666
• [5.205 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 08/24/23 14:50:37.688
  Aug 24 14:50:37.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:50:37.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:37.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:37.728
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:50:37.733
  STEP: Saw pod success @ 08/24/23 14:50:41.777
  Aug 24 14:50:41.783: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-4df6aa36-6f0b-4714-8c35-6f4a4abacb55 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:50:41.797
  Aug 24 14:50:41.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6092" for this suite. @ 08/24/23 14:50:41.834
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 08/24/23 14:50:41.85
  Aug 24 14:50:41.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename disruption @ 08/24/23 14:50:41.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:41.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:41.885
  STEP: Creating a pdb that targets all three pods in a test replica set @ 08/24/23 14:50:41.891
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:50:41.902
  STEP: First trying to evict a pod which shouldn't be evictable @ 08/24/23 14:50:43.928
  STEP: Waiting for all pods to be running @ 08/24/23 14:50:43.928
  Aug 24 14:50:43.934: INFO: pods: 0 < 3
  STEP: locating a running pod @ 08/24/23 14:50:45.942
  STEP: Updating the pdb to allow a pod to be evicted @ 08/24/23 14:50:45.957
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:50:45.968
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/24/23 14:50:47.98
  STEP: Waiting for all pods to be running @ 08/24/23 14:50:47.98
  STEP: Waiting for the pdb to observed all healthy pods @ 08/24/23 14:50:47.986
  STEP: Patching the pdb to disallow a pod to be evicted @ 08/24/23 14:50:48.028
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:50:48.103
  STEP: Waiting for all pods to be running @ 08/24/23 14:50:50.133
  STEP: locating a running pod @ 08/24/23 14:50:50.142
  STEP: Deleting the pdb to allow a pod to be evicted @ 08/24/23 14:50:50.157
  STEP: Waiting for the pdb to be deleted @ 08/24/23 14:50:50.167
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/24/23 14:50:50.173
  STEP: Waiting for all pods to be running @ 08/24/23 14:50:50.173
  Aug 24 14:50:50.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7791" for this suite. @ 08/24/23 14:50:50.219
• [8.387 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 08/24/23 14:50:50.238
  Aug 24 14:50:50.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/24/23 14:50:50.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:50.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:50.291
  STEP: Creating two CSIDrivers @ 08/24/23 14:50:50.297
  STEP: Getting "inline-driver-be3d7242-480c-4ce1-90c4-5417c0ee8d0c" & "inline-driver-165842f1-4a98-4d59-81ad-e1748aa49dc0" @ 08/24/23 14:50:50.355
  STEP: Patching the CSIDriver "inline-driver-165842f1-4a98-4d59-81ad-e1748aa49dc0" @ 08/24/23 14:50:50.365
  STEP: Updating the CSIDriver "inline-driver-165842f1-4a98-4d59-81ad-e1748aa49dc0" @ 08/24/23 14:50:50.385
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6686" @ 08/24/23 14:50:50.4
  STEP: Deleting CSIDriver "inline-driver-be3d7242-480c-4ce1-90c4-5417c0ee8d0c" @ 08/24/23 14:50:50.406
  STEP: Confirm deletion of CSIDriver "inline-driver-be3d7242-480c-4ce1-90c4-5417c0ee8d0c" @ 08/24/23 14:50:50.414
  STEP: Deleting CSIDriver "inline-driver-165842f1-4a98-4d59-81ad-e1748aa49dc0" via DeleteCollection @ 08/24/23 14:50:50.421
  STEP: Confirm deletion of CSIDriver "inline-driver-165842f1-4a98-4d59-81ad-e1748aa49dc0" @ 08/24/23 14:50:50.436
  Aug 24 14:50:50.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6686" for this suite. @ 08/24/23 14:50:50.457
• [0.230 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 08/24/23 14:50:50.472
  Aug 24 14:50:50.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:50:50.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:50.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:50.506
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/24/23 14:50:50.511
  STEP: Saw pod success @ 08/24/23 14:50:54.548
  Aug 24 14:50:54.555: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-853c2f58-d3f7-4a8d-b0fe-37959a715719 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:50:54.569
  Aug 24 14:50:54.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-394" for this suite. @ 08/24/23 14:50:54.61
• [4.152 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 08/24/23 14:50:54.624
  Aug 24 14:50:54.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:50:54.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:54.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:54.667
  STEP: Creating secret with name secret-test-map-93fc9fb1-84d8-4ea9-b7bf-0867163b55f5 @ 08/24/23 14:50:54.674
  STEP: Creating a pod to test consume secrets @ 08/24/23 14:50:54.686
  STEP: Saw pod success @ 08/24/23 14:50:58.726
  Aug 24 14:50:58.731: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-0929b0e5-6add-4c43-863a-b736d78bb9f3 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:50:58.742
  Aug 24 14:50:58.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2646" for this suite. @ 08/24/23 14:50:58.772
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 08/24/23 14:50:58.792
  Aug 24 14:50:58.792: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 14:50:58.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:58.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:58.835
  STEP: Creating namespace "e2e-ns-p5x9n" @ 08/24/23 14:50:58.839
  Aug 24 14:50:58.865: INFO: Namespace "e2e-ns-p5x9n-3527" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-p5x9n-3527" @ 08/24/23 14:50:58.865
  Aug 24 14:50:58.879: INFO: Namespace "e2e-ns-p5x9n-3527" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-p5x9n-3527" @ 08/24/23 14:50:58.879
  Aug 24 14:50:58.893: INFO: Namespace "e2e-ns-p5x9n-3527" has []v1.FinalizerName{"kubernetes"}
  Aug 24 14:50:58.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6302" for this suite. @ 08/24/23 14:50:58.899
  STEP: Destroying namespace "e2e-ns-p5x9n-3527" for this suite. @ 08/24/23 14:50:58.908
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 08/24/23 14:50:58.926
  Aug 24 14:50:58.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:50:58.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:58.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:58.959
  STEP: Creating projection with secret that has name secret-emptykey-test-bbd46cef-be96-42da-8590-337ef8ba9c8b @ 08/24/23 14:50:58.964
  Aug 24 14:50:58.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7774" for this suite. @ 08/24/23 14:50:58.974
• [0.068 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 08/24/23 14:50:58.995
  Aug 24 14:50:58.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 14:50:58.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:50:59.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:50:59.026
  Aug 24 14:50:59.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:51:02.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5317" for this suite. @ 08/24/23 14:51:02.539
• [3.561 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 08/24/23 14:51:02.56
  Aug 24 14:51:02.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sysctl @ 08/24/23 14:51:02.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:02.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:02.595
  STEP: Creating a pod with one valid and two invalid sysctls @ 08/24/23 14:51:02.6
  Aug 24 14:51:02.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6921" for this suite. @ 08/24/23 14:51:02.622
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 08/24/23 14:51:02.642
  Aug 24 14:51:02.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:51:02.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:02.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:02.683
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:51:02.688
  STEP: Saw pod success @ 08/24/23 14:51:06.738
  Aug 24 14:51:06.744: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-504ea917-daf8-4d53-938f-4dbb9b1523e3 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:51:06.756
  Aug 24 14:51:06.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-152" for this suite. @ 08/24/23 14:51:06.791
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 08/24/23 14:51:06.807
  Aug 24 14:51:06.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:51:06.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:06.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:06.841
  STEP: Creating the pod @ 08/24/23 14:51:06.847
  Aug 24 14:51:09.454: INFO: Successfully updated pod "labelsupdate6fe112e2-970d-482e-b46a-679b1563c16d"
  Aug 24 14:51:11.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7398" for this suite. @ 08/24/23 14:51:11.499
• [4.708 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 08/24/23 14:51:11.518
  Aug 24 14:51:11.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svc-latency @ 08/24/23 14:51:11.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:11.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:11.558
  Aug 24 14:51:11.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1516 @ 08/24/23 14:51:11.565
  I0824 14:51:11.591976      14 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1516, replica count: 1
  I0824 14:51:12.643875      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0824 14:51:13.644625      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 14:51:13.767: INFO: Created: latency-svc-v2c2h
  Aug 24 14:51:13.776: INFO: Got endpoints: latency-svc-v2c2h [31.007512ms]
  Aug 24 14:51:13.799: INFO: Created: latency-svc-x5npz
  Aug 24 14:51:13.803: INFO: Created: latency-svc-99tbh
  Aug 24 14:51:13.816: INFO: Got endpoints: latency-svc-x5npz [38.443719ms]
  Aug 24 14:51:13.827: INFO: Created: latency-svc-q9pl6
  Aug 24 14:51:13.833: INFO: Created: latency-svc-n68gj
  Aug 24 14:51:13.841: INFO: Created: latency-svc-br6b2
  Aug 24 14:51:13.854: INFO: Got endpoints: latency-svc-99tbh [77.8669ms]
  Aug 24 14:51:13.875: INFO: Created: latency-svc-5x429
  Aug 24 14:51:13.878: INFO: Got endpoints: latency-svc-n68gj [99.501438ms]
  Aug 24 14:51:13.888: INFO: Got endpoints: latency-svc-br6b2 [109.931322ms]
  Aug 24 14:51:13.888: INFO: Got endpoints: latency-svc-q9pl6 [110.507776ms]
  Aug 24 14:51:13.901: INFO: Got endpoints: latency-svc-5x429 [122.275059ms]
  Aug 24 14:51:13.902: INFO: Created: latency-svc-sj4tb
  Aug 24 14:51:13.907: INFO: Created: latency-svc-m2xkx
  Aug 24 14:51:13.918: INFO: Got endpoints: latency-svc-sj4tb [139.886997ms]
  Aug 24 14:51:13.926: INFO: Created: latency-svc-qdd2f
  Aug 24 14:51:13.941: INFO: Created: latency-svc-bhv7f
  Aug 24 14:51:13.945: INFO: Created: latency-svc-dvfbt
  Aug 24 14:51:13.962: INFO: Got endpoints: latency-svc-qdd2f [182.772964ms]
  Aug 24 14:51:13.967: INFO: Got endpoints: latency-svc-m2xkx [187.917884ms]
  Aug 24 14:51:13.978: INFO: Got endpoints: latency-svc-bhv7f [199.256133ms]
  Aug 24 14:51:13.999: INFO: Got endpoints: latency-svc-dvfbt [220.239893ms]
  Aug 24 14:51:14.002: INFO: Created: latency-svc-2vbz5
  Aug 24 14:51:14.011: INFO: Got endpoints: latency-svc-2vbz5 [231.533703ms]
  Aug 24 14:51:14.017: INFO: Created: latency-svc-bq28s
  Aug 24 14:51:14.024: INFO: Created: latency-svc-wchww
  Aug 24 14:51:14.038: INFO: Got endpoints: latency-svc-bq28s [258.512631ms]
  Aug 24 14:51:14.048: INFO: Got endpoints: latency-svc-wchww [268.159187ms]
  Aug 24 14:51:14.048: INFO: Created: latency-svc-s697w
  Aug 24 14:51:14.060: INFO: Got endpoints: latency-svc-s697w [280.425152ms]
  Aug 24 14:51:14.061: INFO: Created: latency-svc-xnwf6
  Aug 24 14:51:14.068: INFO: Got endpoints: latency-svc-xnwf6 [250.948543ms]
  Aug 24 14:51:14.083: INFO: Created: latency-svc-mrnvm
  Aug 24 14:51:14.083: INFO: Got endpoints: latency-svc-mrnvm [228.436332ms]
  Aug 24 14:51:14.093: INFO: Created: latency-svc-gxt5j
  Aug 24 14:51:14.101: INFO: Got endpoints: latency-svc-gxt5j [223.73863ms]
  Aug 24 14:51:14.113: INFO: Created: latency-svc-8j5w7
  Aug 24 14:51:14.132: INFO: Created: latency-svc-xbcf5
  Aug 24 14:51:14.139: INFO: Got endpoints: latency-svc-8j5w7 [246.90627ms]
  Aug 24 14:51:14.141: INFO: Got endpoints: latency-svc-xbcf5 [251.430186ms]
  Aug 24 14:51:14.153: INFO: Created: latency-svc-zn4pk
  Aug 24 14:51:14.159: INFO: Created: latency-svc-57ckr
  Aug 24 14:51:14.174: INFO: Got endpoints: latency-svc-zn4pk [273.486502ms]
  Aug 24 14:51:14.175: INFO: Got endpoints: latency-svc-57ckr [256.285693ms]
  Aug 24 14:51:14.292: INFO: Created: latency-svc-gksdt
  Aug 24 14:51:14.294: INFO: Created: latency-svc-sl76t
  Aug 24 14:51:14.313: INFO: Created: latency-svc-kqb9z
  Aug 24 14:51:14.315: INFO: Created: latency-svc-fnw2q
  Aug 24 14:51:14.316: INFO: Created: latency-svc-m664z
  Aug 24 14:51:14.314: INFO: Created: latency-svc-9xq8s
  Aug 24 14:51:14.313: INFO: Created: latency-svc-9gkhw
  Aug 24 14:51:14.317: INFO: Created: latency-svc-p88rs
  Aug 24 14:51:14.321: INFO: Created: latency-svc-8k8gj
  Aug 24 14:51:14.322: INFO: Created: latency-svc-n56bm
  Aug 24 14:51:14.334: INFO: Got endpoints: latency-svc-sl76t [158.885188ms]
  Aug 24 14:51:14.337: INFO: Created: latency-svc-kqt65
  Aug 24 14:51:14.339: INFO: Got endpoints: latency-svc-gksdt [360.785278ms]
  Aug 24 14:51:14.341: INFO: Created: latency-svc-sxklb
  Aug 24 14:51:14.341: INFO: Created: latency-svc-v2t6n
  Aug 24 14:51:14.342: INFO: Created: latency-svc-hdhf6
  Aug 24 14:51:14.343: INFO: Created: latency-svc-jmgfk
  Aug 24 14:51:14.346: INFO: Got endpoints: latency-svc-9gkhw [204.168481ms]
  Aug 24 14:51:14.346: INFO: Got endpoints: latency-svc-sxklb [307.836138ms]
  Aug 24 14:51:14.363: INFO: Got endpoints: latency-svc-9xq8s [294.113767ms]
  Aug 24 14:51:14.364: INFO: Got endpoints: latency-svc-fnw2q [397.182421ms]
  Aug 24 14:51:14.374: INFO: Created: latency-svc-sm4wj
  Aug 24 14:51:14.374: INFO: Got endpoints: latency-svc-kqb9z [272.852318ms]
  Aug 24 14:51:14.375: INFO: Got endpoints: latency-svc-n56bm [375.506762ms]
  Aug 24 14:51:14.382: INFO: Got endpoints: latency-svc-p88rs [420.219078ms]
  Aug 24 14:51:14.396: INFO: Created: latency-svc-wvc8d
  Aug 24 14:51:14.398: INFO: Got endpoints: latency-svc-v2t6n [256.477754ms]
  Aug 24 14:51:14.416: INFO: Created: latency-svc-dbx2g
  Aug 24 14:51:14.417: INFO: Got endpoints: latency-svc-kqt65 [241.525625ms]
  Aug 24 14:51:14.425: INFO: Created: latency-svc-gh7n7
  Aug 24 14:51:14.450: INFO: Got endpoints: latency-svc-jmgfk [389.445029ms]
  Aug 24 14:51:14.450: INFO: Got endpoints: latency-svc-m664z [366.658075ms]
  Aug 24 14:51:14.468: INFO: Got endpoints: latency-svc-8k8gj [420.151746ms]
  Aug 24 14:51:14.469: INFO: Got endpoints: latency-svc-hdhf6 [458.301526ms]
  Aug 24 14:51:14.474: INFO: Got endpoints: latency-svc-sm4wj [140.190681ms]
  Aug 24 14:51:14.475: INFO: Got endpoints: latency-svc-wvc8d [134.222473ms]
  Aug 24 14:51:14.475: INFO: Got endpoints: latency-svc-dbx2g [128.670635ms]
  Aug 24 14:51:14.490: INFO: Got endpoints: latency-svc-gh7n7 [144.119196ms]
  Aug 24 14:51:14.604: INFO: Created: latency-svc-rblvh
  Aug 24 14:51:14.604: INFO: Created: latency-svc-rrncc
  Aug 24 14:51:14.605: INFO: Created: latency-svc-hz6kn
  Aug 24 14:51:14.605: INFO: Created: latency-svc-khn8h
  Aug 24 14:51:14.605: INFO: Created: latency-svc-csx94
  Aug 24 14:51:14.607: INFO: Created: latency-svc-4xrs9
  Aug 24 14:51:14.607: INFO: Created: latency-svc-9sxql
  Aug 24 14:51:14.608: INFO: Created: latency-svc-5k78c
  Aug 24 14:51:14.608: INFO: Created: latency-svc-q8mct
  Aug 24 14:51:14.608: INFO: Created: latency-svc-rrpkt
  Aug 24 14:51:14.609: INFO: Created: latency-svc-9zhpc
  Aug 24 14:51:14.609: INFO: Created: latency-svc-2bnd7
  Aug 24 14:51:14.610: INFO: Created: latency-svc-z6flm
  Aug 24 14:51:14.613: INFO: Created: latency-svc-2dq2h
  Aug 24 14:51:14.615: INFO: Created: latency-svc-xlbll
  Aug 24 14:51:14.627: INFO: Got endpoints: latency-svc-rblvh [136.816104ms]
  Aug 24 14:51:14.628: INFO: Got endpoints: latency-svc-khn8h [152.49423ms]
  Aug 24 14:51:14.644: INFO: Got endpoints: latency-svc-9zhpc [281.068702ms]
  Aug 24 14:51:14.648: INFO: Got endpoints: latency-svc-2bnd7 [231.260786ms]
  Aug 24 14:51:14.656: INFO: Got endpoints: latency-svc-z6flm [180.413805ms]
  Aug 24 14:51:14.671: INFO: Created: latency-svc-4vs6t
  Aug 24 14:51:14.688: INFO: Got endpoints: latency-svc-hz6kn [305.680189ms]
  Aug 24 14:51:14.700: INFO: Created: latency-svc-jbj29
  Aug 24 14:51:14.717: INFO: Created: latency-svc-2g969
  Aug 24 14:51:14.727: INFO: Got endpoints: latency-svc-csx94 [258.909116ms]
  Aug 24 14:51:14.739: INFO: Created: latency-svc-kwxqz
  Aug 24 14:51:14.753: INFO: Created: latency-svc-wsxtq
  Aug 24 14:51:14.757: INFO: Created: latency-svc-485lm
  Aug 24 14:51:14.770: INFO: Created: latency-svc-tpc4p
  Aug 24 14:51:14.779: INFO: Got endpoints: latency-svc-rrncc [328.542917ms]
  Aug 24 14:51:14.805: INFO: Created: latency-svc-jvd54
  Aug 24 14:51:14.830: INFO: Got endpoints: latency-svc-9sxql [464.753157ms]
  Aug 24 14:51:14.850: INFO: Created: latency-svc-8dw28
  Aug 24 14:51:14.883: INFO: Got endpoints: latency-svc-q8mct [408.865295ms]
  Aug 24 14:51:14.907: INFO: Created: latency-svc-sj442
  Aug 24 14:51:14.926: INFO: Got endpoints: latency-svc-2dq2h [456.578456ms]
  Aug 24 14:51:14.953: INFO: Created: latency-svc-qwksh
  Aug 24 14:51:14.975: INFO: Got endpoints: latency-svc-xlbll [600.653687ms]
  Aug 24 14:51:14.995: INFO: Created: latency-svc-qprhh
  Aug 24 14:51:15.026: INFO: Got endpoints: latency-svc-4xrs9 [576.021814ms]
  Aug 24 14:51:15.046: INFO: Created: latency-svc-54mk7
  Aug 24 14:51:15.074: INFO: Got endpoints: latency-svc-5k78c [675.779671ms]
  Aug 24 14:51:15.094: INFO: Created: latency-svc-kvqpg
  Aug 24 14:51:15.128: INFO: Got endpoints: latency-svc-rrpkt [752.574817ms]
  Aug 24 14:51:15.152: INFO: Created: latency-svc-ns76m
  Aug 24 14:51:15.173: INFO: Got endpoints: latency-svc-4vs6t [543.958849ms]
  Aug 24 14:51:15.194: INFO: Created: latency-svc-vktfn
  Aug 24 14:51:15.226: INFO: Got endpoints: latency-svc-jbj29 [598.60492ms]
  Aug 24 14:51:15.245: INFO: Created: latency-svc-6r5x7
  Aug 24 14:51:15.275: INFO: Got endpoints: latency-svc-2g969 [631.499663ms]
  Aug 24 14:51:15.291: INFO: Created: latency-svc-dskph
  Aug 24 14:51:15.343: INFO: Got endpoints: latency-svc-kwxqz [693.742638ms]
  Aug 24 14:51:15.362: INFO: Created: latency-svc-6k5gh
  Aug 24 14:51:15.376: INFO: Got endpoints: latency-svc-wsxtq [720.495632ms]
  Aug 24 14:51:15.398: INFO: Created: latency-svc-9fp52
  Aug 24 14:51:15.425: INFO: Got endpoints: latency-svc-485lm [736.312868ms]
  Aug 24 14:51:15.442: INFO: Created: latency-svc-cv657
  Aug 24 14:51:15.477: INFO: Got endpoints: latency-svc-tpc4p [749.698351ms]
  Aug 24 14:51:15.495: INFO: Created: latency-svc-fffcs
  Aug 24 14:51:15.528: INFO: Got endpoints: latency-svc-jvd54 [749.246261ms]
  Aug 24 14:51:15.547: INFO: Created: latency-svc-t4hz7
  Aug 24 14:51:15.577: INFO: Got endpoints: latency-svc-8dw28 [746.653034ms]
  Aug 24 14:51:15.594: INFO: Created: latency-svc-f6krd
  Aug 24 14:51:15.625: INFO: Got endpoints: latency-svc-sj442 [741.363643ms]
  Aug 24 14:51:15.646: INFO: Created: latency-svc-lclts
  Aug 24 14:51:15.679: INFO: Got endpoints: latency-svc-qwksh [753.029381ms]
  Aug 24 14:51:15.703: INFO: Created: latency-svc-ng58p
  Aug 24 14:51:15.726: INFO: Got endpoints: latency-svc-qprhh [750.471305ms]
  Aug 24 14:51:15.746: INFO: Created: latency-svc-8tbhx
  Aug 24 14:51:15.777: INFO: Got endpoints: latency-svc-54mk7 [750.544347ms]
  Aug 24 14:51:15.807: INFO: Created: latency-svc-489pq
  Aug 24 14:51:15.829: INFO: Got endpoints: latency-svc-kvqpg [754.740345ms]
  Aug 24 14:51:15.853: INFO: Created: latency-svc-qxrtn
  Aug 24 14:51:15.881: INFO: Got endpoints: latency-svc-ns76m [752.623313ms]
  Aug 24 14:51:15.904: INFO: Created: latency-svc-zbkg7
  Aug 24 14:51:15.930: INFO: Got endpoints: latency-svc-vktfn [756.871458ms]
  Aug 24 14:51:15.947: INFO: Created: latency-svc-rbglj
  Aug 24 14:51:15.977: INFO: Got endpoints: latency-svc-6r5x7 [750.840457ms]
  Aug 24 14:51:15.996: INFO: Created: latency-svc-zb627
  Aug 24 14:51:16.030: INFO: Got endpoints: latency-svc-dskph [754.34941ms]
  Aug 24 14:51:16.052: INFO: Created: latency-svc-9qjvf
  Aug 24 14:51:16.080: INFO: Got endpoints: latency-svc-6k5gh [736.516745ms]
  Aug 24 14:51:16.100: INFO: Created: latency-svc-cmbzb
  Aug 24 14:51:16.126: INFO: Got endpoints: latency-svc-9fp52 [749.25161ms]
  Aug 24 14:51:16.148: INFO: Created: latency-svc-dn56l
  Aug 24 14:51:16.176: INFO: Got endpoints: latency-svc-cv657 [750.804983ms]
  Aug 24 14:51:16.194: INFO: Created: latency-svc-svk67
  Aug 24 14:51:16.226: INFO: Got endpoints: latency-svc-fffcs [748.054782ms]
  Aug 24 14:51:16.245: INFO: Created: latency-svc-dtw5s
  Aug 24 14:51:16.277: INFO: Got endpoints: latency-svc-t4hz7 [748.205839ms]
  Aug 24 14:51:16.295: INFO: Created: latency-svc-x7lvd
  Aug 24 14:51:16.328: INFO: Got endpoints: latency-svc-f6krd [751.137282ms]
  Aug 24 14:51:16.346: INFO: Created: latency-svc-kc655
  Aug 24 14:51:16.374: INFO: Got endpoints: latency-svc-lclts [749.219444ms]
  Aug 24 14:51:16.400: INFO: Created: latency-svc-l7v7l
  Aug 24 14:51:16.424: INFO: Got endpoints: latency-svc-ng58p [743.993576ms]
  Aug 24 14:51:16.448: INFO: Created: latency-svc-ztfmq
  Aug 24 14:51:16.477: INFO: Got endpoints: latency-svc-8tbhx [749.836234ms]
  Aug 24 14:51:16.494: INFO: Created: latency-svc-v95dp
  Aug 24 14:51:16.532: INFO: Got endpoints: latency-svc-489pq [754.72891ms]
  Aug 24 14:51:16.556: INFO: Created: latency-svc-2hw25
  Aug 24 14:51:16.577: INFO: Got endpoints: latency-svc-qxrtn [748.402976ms]
  Aug 24 14:51:16.599: INFO: Created: latency-svc-8sxxt
  Aug 24 14:51:16.625: INFO: Got endpoints: latency-svc-zbkg7 [743.870793ms]
  Aug 24 14:51:16.649: INFO: Created: latency-svc-dmr2f
  Aug 24 14:51:16.681: INFO: Got endpoints: latency-svc-rbglj [751.281613ms]
  Aug 24 14:51:16.704: INFO: Created: latency-svc-ldzgr
  Aug 24 14:51:16.729: INFO: Got endpoints: latency-svc-zb627 [751.377219ms]
  Aug 24 14:51:16.754: INFO: Created: latency-svc-q6wgh
  Aug 24 14:51:16.774: INFO: Got endpoints: latency-svc-9qjvf [744.227544ms]
  Aug 24 14:51:16.804: INFO: Created: latency-svc-nxbct
  Aug 24 14:51:16.827: INFO: Got endpoints: latency-svc-cmbzb [746.999829ms]
  Aug 24 14:51:16.850: INFO: Created: latency-svc-f46gw
  Aug 24 14:51:16.889: INFO: Got endpoints: latency-svc-dn56l [761.353808ms]
  Aug 24 14:51:16.921: INFO: Created: latency-svc-nt74r
  Aug 24 14:51:16.937: INFO: Got endpoints: latency-svc-svk67 [760.301172ms]
  Aug 24 14:51:16.960: INFO: Created: latency-svc-d979d
  Aug 24 14:51:17.006: INFO: Got endpoints: latency-svc-dtw5s [779.40964ms]
  Aug 24 14:51:17.039: INFO: Got endpoints: latency-svc-x7lvd [762.492784ms]
  Aug 24 14:51:17.040: INFO: Created: latency-svc-nfmvn
  Aug 24 14:51:17.079: INFO: Created: latency-svc-r5rdt
  Aug 24 14:51:17.082: INFO: Got endpoints: latency-svc-kc655 [754.274436ms]
  Aug 24 14:51:17.102: INFO: Created: latency-svc-x7pjz
  Aug 24 14:51:17.141: INFO: Got endpoints: latency-svc-l7v7l [767.090975ms]
  Aug 24 14:51:17.190: INFO: Created: latency-svc-ghf5s
  Aug 24 14:51:17.190: INFO: Got endpoints: latency-svc-ztfmq [766.643402ms]
  Aug 24 14:51:17.232: INFO: Got endpoints: latency-svc-v95dp [755.384532ms]
  Aug 24 14:51:17.243: INFO: Created: latency-svc-qbs7d
  Aug 24 14:51:17.261: INFO: Created: latency-svc-9qr6m
  Aug 24 14:51:17.276: INFO: Got endpoints: latency-svc-2hw25 [743.838708ms]
  Aug 24 14:51:17.304: INFO: Created: latency-svc-m2zh9
  Aug 24 14:51:17.327: INFO: Got endpoints: latency-svc-8sxxt [750.046547ms]
  Aug 24 14:51:17.357: INFO: Created: latency-svc-75gp4
  Aug 24 14:51:17.376: INFO: Got endpoints: latency-svc-dmr2f [750.984239ms]
  Aug 24 14:51:17.400: INFO: Created: latency-svc-6fqwt
  Aug 24 14:51:17.451: INFO: Got endpoints: latency-svc-ldzgr [770.270196ms]
  Aug 24 14:51:17.486: INFO: Created: latency-svc-n6gfs
  Aug 24 14:51:17.490: INFO: Got endpoints: latency-svc-q6wgh [760.660412ms]
  Aug 24 14:51:17.517: INFO: Created: latency-svc-569jj
  Aug 24 14:51:17.525: INFO: Got endpoints: latency-svc-nxbct [751.132659ms]
  Aug 24 14:51:17.543: INFO: Created: latency-svc-mlzrm
  Aug 24 14:51:17.574: INFO: Got endpoints: latency-svc-f46gw [746.456033ms]
  Aug 24 14:51:17.594: INFO: Created: latency-svc-p2nvb
  Aug 24 14:51:17.628: INFO: Got endpoints: latency-svc-nt74r [739.184683ms]
  Aug 24 14:51:17.649: INFO: Created: latency-svc-p8svm
  Aug 24 14:51:17.677: INFO: Got endpoints: latency-svc-d979d [740.232424ms]
  Aug 24 14:51:17.694: INFO: Created: latency-svc-4t7z2
  Aug 24 14:51:17.725: INFO: Got endpoints: latency-svc-nfmvn [718.464196ms]
  Aug 24 14:51:17.747: INFO: Created: latency-svc-ld257
  Aug 24 14:51:17.800: INFO: Got endpoints: latency-svc-r5rdt [759.95413ms]
  Aug 24 14:51:17.829: INFO: Created: latency-svc-qn2xp
  Aug 24 14:51:17.842: INFO: Got endpoints: latency-svc-x7pjz [759.373265ms]
  Aug 24 14:51:17.866: INFO: Created: latency-svc-w4gqq
  Aug 24 14:51:17.889: INFO: Got endpoints: latency-svc-ghf5s [747.135744ms]
  Aug 24 14:51:17.916: INFO: Created: latency-svc-x8zbh
  Aug 24 14:51:17.927: INFO: Got endpoints: latency-svc-qbs7d [736.61102ms]
  Aug 24 14:51:17.960: INFO: Created: latency-svc-qxw67
  Aug 24 14:51:17.984: INFO: Got endpoints: latency-svc-9qr6m [751.880007ms]
  Aug 24 14:51:18.005: INFO: Created: latency-svc-47t8r
  Aug 24 14:51:18.036: INFO: Got endpoints: latency-svc-m2zh9 [759.917496ms]
  Aug 24 14:51:18.055: INFO: Created: latency-svc-ch99t
  Aug 24 14:51:18.080: INFO: Got endpoints: latency-svc-75gp4 [752.371634ms]
  Aug 24 14:51:18.097: INFO: Created: latency-svc-5dnwc
  Aug 24 14:51:18.125: INFO: Got endpoints: latency-svc-6fqwt [748.615578ms]
  Aug 24 14:51:18.149: INFO: Created: latency-svc-5g559
  Aug 24 14:51:18.177: INFO: Got endpoints: latency-svc-n6gfs [725.582423ms]
  Aug 24 14:51:18.196: INFO: Created: latency-svc-qn6h8
  Aug 24 14:51:18.225: INFO: Got endpoints: latency-svc-569jj [734.585475ms]
  Aug 24 14:51:18.242: INFO: Created: latency-svc-wp9wr
  Aug 24 14:51:18.274: INFO: Got endpoints: latency-svc-mlzrm [747.349626ms]
  Aug 24 14:51:18.296: INFO: Created: latency-svc-m7q78
  Aug 24 14:51:18.327: INFO: Got endpoints: latency-svc-p2nvb [753.6115ms]
  Aug 24 14:51:18.351: INFO: Created: latency-svc-m4c6g
  Aug 24 14:51:18.381: INFO: Got endpoints: latency-svc-p8svm [752.360867ms]
  Aug 24 14:51:18.401: INFO: Created: latency-svc-574lc
  Aug 24 14:51:18.428: INFO: Got endpoints: latency-svc-4t7z2 [750.405348ms]
  Aug 24 14:51:18.449: INFO: Created: latency-svc-ndj97
  Aug 24 14:51:18.474: INFO: Got endpoints: latency-svc-ld257 [749.27322ms]
  Aug 24 14:51:18.494: INFO: Created: latency-svc-2v2vr
  Aug 24 14:51:18.529: INFO: Got endpoints: latency-svc-qn2xp [728.830356ms]
  Aug 24 14:51:18.551: INFO: Created: latency-svc-jjrkb
  Aug 24 14:51:18.575: INFO: Got endpoints: latency-svc-w4gqq [732.117446ms]
  Aug 24 14:51:18.606: INFO: Created: latency-svc-2fr7l
  Aug 24 14:51:18.624: INFO: Got endpoints: latency-svc-x8zbh [734.4185ms]
  Aug 24 14:51:18.643: INFO: Created: latency-svc-d62c6
  Aug 24 14:51:18.680: INFO: Got endpoints: latency-svc-qxw67 [750.748737ms]
  Aug 24 14:51:18.696: INFO: Created: latency-svc-npwqc
  Aug 24 14:51:18.725: INFO: Got endpoints: latency-svc-47t8r [740.353024ms]
  Aug 24 14:51:18.744: INFO: Created: latency-svc-2b785
  Aug 24 14:51:18.777: INFO: Got endpoints: latency-svc-ch99t [740.393753ms]
  Aug 24 14:51:18.798: INFO: Created: latency-svc-jwlmv
  Aug 24 14:51:18.835: INFO: Got endpoints: latency-svc-5dnwc [755.575749ms]
  Aug 24 14:51:18.855: INFO: Created: latency-svc-kz4x7
  Aug 24 14:51:18.879: INFO: Got endpoints: latency-svc-5g559 [753.523642ms]
  Aug 24 14:51:18.900: INFO: Created: latency-svc-rcmrb
  Aug 24 14:51:18.924: INFO: Got endpoints: latency-svc-qn6h8 [746.627317ms]
  Aug 24 14:51:18.945: INFO: Created: latency-svc-pthwv
  Aug 24 14:51:18.979: INFO: Got endpoints: latency-svc-wp9wr [753.322538ms]
  Aug 24 14:51:19.000: INFO: Created: latency-svc-rxz68
  Aug 24 14:51:19.022: INFO: Got endpoints: latency-svc-m7q78 [747.310087ms]
  Aug 24 14:51:19.038: INFO: Created: latency-svc-hsxhh
  Aug 24 14:51:19.074: INFO: Got endpoints: latency-svc-m4c6g [746.304751ms]
  Aug 24 14:51:19.093: INFO: Created: latency-svc-2rzbd
  Aug 24 14:51:19.125: INFO: Got endpoints: latency-svc-574lc [744.784351ms]
  Aug 24 14:51:19.142: INFO: Created: latency-svc-pt7hw
  Aug 24 14:51:19.174: INFO: Got endpoints: latency-svc-ndj97 [746.754274ms]
  Aug 24 14:51:19.190: INFO: Created: latency-svc-krf26
  Aug 24 14:51:19.226: INFO: Got endpoints: latency-svc-2v2vr [751.390797ms]
  Aug 24 14:51:19.245: INFO: Created: latency-svc-4p6n2
  Aug 24 14:51:19.278: INFO: Got endpoints: latency-svc-jjrkb [748.149433ms]
  Aug 24 14:51:19.295: INFO: Created: latency-svc-2vstt
  Aug 24 14:51:19.334: INFO: Got endpoints: latency-svc-2fr7l [758.952078ms]
  Aug 24 14:51:19.354: INFO: Created: latency-svc-k2ff4
  Aug 24 14:51:19.378: INFO: Got endpoints: latency-svc-d62c6 [753.066365ms]
  Aug 24 14:51:19.401: INFO: Created: latency-svc-j4f2j
  Aug 24 14:51:19.431: INFO: Got endpoints: latency-svc-npwqc [750.469082ms]
  Aug 24 14:51:19.453: INFO: Created: latency-svc-bj6pp
  Aug 24 14:51:19.477: INFO: Got endpoints: latency-svc-2b785 [751.476962ms]
  Aug 24 14:51:19.496: INFO: Created: latency-svc-t28c4
  Aug 24 14:51:19.527: INFO: Got endpoints: latency-svc-jwlmv [748.896687ms]
  Aug 24 14:51:19.546: INFO: Created: latency-svc-r6djq
  Aug 24 14:51:19.581: INFO: Got endpoints: latency-svc-kz4x7 [745.990081ms]
  Aug 24 14:51:19.603: INFO: Created: latency-svc-nnjff
  Aug 24 14:51:19.628: INFO: Got endpoints: latency-svc-rcmrb [748.736273ms]
  Aug 24 14:51:19.648: INFO: Created: latency-svc-l4sv7
  Aug 24 14:51:19.677: INFO: Got endpoints: latency-svc-pthwv [752.532518ms]
  Aug 24 14:51:19.698: INFO: Created: latency-svc-8jjkh
  Aug 24 14:51:19.727: INFO: Got endpoints: latency-svc-rxz68 [747.9222ms]
  Aug 24 14:51:19.757: INFO: Created: latency-svc-7kbpw
  Aug 24 14:51:19.783: INFO: Got endpoints: latency-svc-hsxhh [761.243514ms]
  Aug 24 14:51:19.800: INFO: Created: latency-svc-q7mks
  Aug 24 14:51:19.829: INFO: Got endpoints: latency-svc-2rzbd [754.659617ms]
  Aug 24 14:51:19.848: INFO: Created: latency-svc-fcf7f
  Aug 24 14:51:19.876: INFO: Got endpoints: latency-svc-pt7hw [750.921059ms]
  Aug 24 14:51:19.891: INFO: Created: latency-svc-vmj8t
  Aug 24 14:51:19.923: INFO: Got endpoints: latency-svc-krf26 [748.824946ms]
  Aug 24 14:51:19.943: INFO: Created: latency-svc-99mcf
  Aug 24 14:51:19.976: INFO: Got endpoints: latency-svc-4p6n2 [750.106572ms]
  Aug 24 14:51:19.993: INFO: Created: latency-svc-6bskr
  Aug 24 14:51:20.026: INFO: Got endpoints: latency-svc-2vstt [748.249442ms]
  Aug 24 14:51:20.043: INFO: Created: latency-svc-dz4v8
  Aug 24 14:51:20.074: INFO: Got endpoints: latency-svc-k2ff4 [738.517568ms]
  Aug 24 14:51:20.090: INFO: Created: latency-svc-4tjp4
  Aug 24 14:51:20.124: INFO: Got endpoints: latency-svc-j4f2j [744.792204ms]
  Aug 24 14:51:20.142: INFO: Created: latency-svc-5cmvx
  Aug 24 14:51:20.177: INFO: Got endpoints: latency-svc-bj6pp [745.21623ms]
  Aug 24 14:51:20.196: INFO: Created: latency-svc-ctrd6
  Aug 24 14:51:20.228: INFO: Got endpoints: latency-svc-t28c4 [750.474049ms]
  Aug 24 14:51:20.246: INFO: Created: latency-svc-fr4pl
  Aug 24 14:51:20.274: INFO: Got endpoints: latency-svc-r6djq [747.067835ms]
  Aug 24 14:51:20.288: INFO: Created: latency-svc-782bv
  Aug 24 14:51:20.327: INFO: Got endpoints: latency-svc-nnjff [745.098269ms]
  Aug 24 14:51:20.353: INFO: Created: latency-svc-wnrxm
  Aug 24 14:51:20.383: INFO: Got endpoints: latency-svc-l4sv7 [754.485956ms]
  Aug 24 14:51:20.401: INFO: Created: latency-svc-bzvlr
  Aug 24 14:51:20.426: INFO: Got endpoints: latency-svc-8jjkh [749.365634ms]
  Aug 24 14:51:20.443: INFO: Created: latency-svc-5w7p9
  Aug 24 14:51:20.477: INFO: Got endpoints: latency-svc-7kbpw [750.269719ms]
  Aug 24 14:51:20.515: INFO: Created: latency-svc-th9nr
  Aug 24 14:51:20.525: INFO: Got endpoints: latency-svc-q7mks [740.594523ms]
  Aug 24 14:51:20.546: INFO: Created: latency-svc-drxcx
  Aug 24 14:51:20.578: INFO: Got endpoints: latency-svc-fcf7f [749.434439ms]
  Aug 24 14:51:20.597: INFO: Created: latency-svc-4dgsp
  Aug 24 14:51:20.627: INFO: Got endpoints: latency-svc-vmj8t [750.425124ms]
  Aug 24 14:51:20.646: INFO: Created: latency-svc-62zsj
  Aug 24 14:51:20.683: INFO: Got endpoints: latency-svc-99mcf [759.082492ms]
  Aug 24 14:51:20.700: INFO: Created: latency-svc-6972w
  Aug 24 14:51:20.732: INFO: Got endpoints: latency-svc-6bskr [755.509429ms]
  Aug 24 14:51:20.752: INFO: Created: latency-svc-t27tt
  Aug 24 14:51:20.775: INFO: Got endpoints: latency-svc-dz4v8 [747.617961ms]
  Aug 24 14:51:20.805: INFO: Created: latency-svc-9gnpw
  Aug 24 14:51:20.826: INFO: Got endpoints: latency-svc-4tjp4 [752.27907ms]
  Aug 24 14:51:20.848: INFO: Created: latency-svc-7bfnx
  Aug 24 14:51:20.884: INFO: Got endpoints: latency-svc-5cmvx [760.449787ms]
  Aug 24 14:51:20.906: INFO: Created: latency-svc-95xkp
  Aug 24 14:51:20.930: INFO: Got endpoints: latency-svc-ctrd6 [750.602071ms]
  Aug 24 14:51:20.964: INFO: Created: latency-svc-bv69r
  Aug 24 14:51:20.983: INFO: Got endpoints: latency-svc-fr4pl [755.005017ms]
  Aug 24 14:51:21.003: INFO: Created: latency-svc-77sx2
  Aug 24 14:51:21.042: INFO: Got endpoints: latency-svc-782bv [767.535942ms]
  Aug 24 14:51:21.064: INFO: Created: latency-svc-mhtpl
  Aug 24 14:51:21.081: INFO: Got endpoints: latency-svc-wnrxm [753.702634ms]
  Aug 24 14:51:21.125: INFO: Got endpoints: latency-svc-bzvlr [742.179494ms]
  Aug 24 14:51:21.160: INFO: Created: latency-svc-vtgw7
  Aug 24 14:51:21.170: INFO: Created: latency-svc-d554s
  Aug 24 14:51:21.181: INFO: Got endpoints: latency-svc-5w7p9 [754.06775ms]
  Aug 24 14:51:21.202: INFO: Created: latency-svc-hh4bt
  Aug 24 14:51:21.226: INFO: Got endpoints: latency-svc-th9nr [747.830345ms]
  Aug 24 14:51:21.245: INFO: Created: latency-svc-676fn
  Aug 24 14:51:21.275: INFO: Got endpoints: latency-svc-drxcx [750.493298ms]
  Aug 24 14:51:21.296: INFO: Created: latency-svc-wdljp
  Aug 24 14:51:21.327: INFO: Got endpoints: latency-svc-4dgsp [748.232565ms]
  Aug 24 14:51:21.349: INFO: Created: latency-svc-br86j
  Aug 24 14:51:21.382: INFO: Got endpoints: latency-svc-62zsj [753.846292ms]
  Aug 24 14:51:21.400: INFO: Created: latency-svc-qjlpq
  Aug 24 14:51:21.431: INFO: Got endpoints: latency-svc-6972w [746.884152ms]
  Aug 24 14:51:21.474: INFO: Created: latency-svc-5xz9b
  Aug 24 14:51:21.486: INFO: Got endpoints: latency-svc-t27tt [753.158261ms]
  Aug 24 14:51:21.511: INFO: Created: latency-svc-j42fv
  Aug 24 14:51:21.529: INFO: Got endpoints: latency-svc-9gnpw [754.110252ms]
  Aug 24 14:51:21.557: INFO: Created: latency-svc-5zgv5
  Aug 24 14:51:21.575: INFO: Got endpoints: latency-svc-7bfnx [748.511794ms]
  Aug 24 14:51:21.598: INFO: Created: latency-svc-gqhsx
  Aug 24 14:51:21.628: INFO: Got endpoints: latency-svc-95xkp [743.108905ms]
  Aug 24 14:51:21.677: INFO: Got endpoints: latency-svc-bv69r [746.661467ms]
  Aug 24 14:51:21.725: INFO: Got endpoints: latency-svc-77sx2 [741.295761ms]
  Aug 24 14:51:21.780: INFO: Got endpoints: latency-svc-mhtpl [738.100541ms]
  Aug 24 14:51:21.829: INFO: Got endpoints: latency-svc-vtgw7 [747.737533ms]
  Aug 24 14:51:21.875: INFO: Got endpoints: latency-svc-d554s [749.540808ms]
  Aug 24 14:51:21.927: INFO: Got endpoints: latency-svc-hh4bt [746.269069ms]
  Aug 24 14:51:21.976: INFO: Got endpoints: latency-svc-676fn [750.031347ms]
  Aug 24 14:51:22.027: INFO: Got endpoints: latency-svc-wdljp [750.014521ms]
  Aug 24 14:51:22.075: INFO: Got endpoints: latency-svc-br86j [748.177955ms]
  Aug 24 14:51:22.125: INFO: Got endpoints: latency-svc-qjlpq [743.580401ms]
  Aug 24 14:51:22.179: INFO: Got endpoints: latency-svc-5xz9b [748.097339ms]
  Aug 24 14:51:22.224: INFO: Got endpoints: latency-svc-j42fv [737.497583ms]
  Aug 24 14:51:22.277: INFO: Got endpoints: latency-svc-5zgv5 [747.698966ms]
  Aug 24 14:51:22.327: INFO: Got endpoints: latency-svc-gqhsx [750.232181ms]
  Aug 24 14:51:22.327: INFO: Latencies: [38.443719ms 77.8669ms 99.501438ms 109.931322ms 110.507776ms 122.275059ms 128.670635ms 134.222473ms 136.816104ms 139.886997ms 140.190681ms 144.119196ms 152.49423ms 158.885188ms 180.413805ms 182.772964ms 187.917884ms 199.256133ms 204.168481ms 220.239893ms 223.73863ms 228.436332ms 231.260786ms 231.533703ms 241.525625ms 246.90627ms 250.948543ms 251.430186ms 256.285693ms 256.477754ms 258.512631ms 258.909116ms 268.159187ms 272.852318ms 273.486502ms 280.425152ms 281.068702ms 294.113767ms 305.680189ms 307.836138ms 328.542917ms 360.785278ms 366.658075ms 375.506762ms 389.445029ms 397.182421ms 408.865295ms 420.151746ms 420.219078ms 456.578456ms 458.301526ms 464.753157ms 543.958849ms 576.021814ms 598.60492ms 600.653687ms 631.499663ms 675.779671ms 693.742638ms 718.464196ms 720.495632ms 725.582423ms 728.830356ms 732.117446ms 734.4185ms 734.585475ms 736.312868ms 736.516745ms 736.61102ms 737.497583ms 738.100541ms 738.517568ms 739.184683ms 740.232424ms 740.353024ms 740.393753ms 740.594523ms 741.295761ms 741.363643ms 742.179494ms 743.108905ms 743.580401ms 743.838708ms 743.870793ms 743.993576ms 744.227544ms 744.784351ms 744.792204ms 745.098269ms 745.21623ms 745.990081ms 746.269069ms 746.304751ms 746.456033ms 746.627317ms 746.653034ms 746.661467ms 746.754274ms 746.884152ms 746.999829ms 747.067835ms 747.135744ms 747.310087ms 747.349626ms 747.617961ms 747.698966ms 747.737533ms 747.830345ms 747.9222ms 748.054782ms 748.097339ms 748.149433ms 748.177955ms 748.205839ms 748.232565ms 748.249442ms 748.402976ms 748.511794ms 748.615578ms 748.736273ms 748.824946ms 748.896687ms 749.219444ms 749.246261ms 749.25161ms 749.27322ms 749.365634ms 749.434439ms 749.540808ms 749.698351ms 749.836234ms 750.014521ms 750.031347ms 750.046547ms 750.106572ms 750.232181ms 750.269719ms 750.405348ms 750.425124ms 750.469082ms 750.471305ms 750.474049ms 750.493298ms 750.544347ms 750.602071ms 750.748737ms 750.804983ms 750.840457ms 750.921059ms 750.984239ms 751.132659ms 751.137282ms 751.281613ms 751.377219ms 751.390797ms 751.476962ms 751.880007ms 752.27907ms 752.360867ms 752.371634ms 752.532518ms 752.574817ms 752.623313ms 753.029381ms 753.066365ms 753.158261ms 753.322538ms 753.523642ms 753.6115ms 753.702634ms 753.846292ms 754.06775ms 754.110252ms 754.274436ms 754.34941ms 754.485956ms 754.659617ms 754.72891ms 754.740345ms 755.005017ms 755.384532ms 755.509429ms 755.575749ms 756.871458ms 758.952078ms 759.082492ms 759.373265ms 759.917496ms 759.95413ms 760.301172ms 760.449787ms 760.660412ms 761.243514ms 761.353808ms 762.492784ms 766.643402ms 767.090975ms 767.535942ms 770.270196ms 779.40964ms]
  Aug 24 14:51:22.328: INFO: 50 %ile: 747.067835ms
  Aug 24 14:51:22.328: INFO: 90 %ile: 755.384532ms
  Aug 24 14:51:22.328: INFO: 99 %ile: 770.270196ms
  Aug 24 14:51:22.328: INFO: Total sample count: 200
  Aug 24 14:51:22.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1516" for this suite. @ 08/24/23 14:51:22.338
• [10.833 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 08/24/23 14:51:22.352
  Aug 24 14:51:22.352: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename containers @ 08/24/23 14:51:22.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:22.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:22.394
  STEP: Creating a pod to test override all @ 08/24/23 14:51:22.399
  STEP: Saw pod success @ 08/24/23 14:51:26.455
  Aug 24 14:51:26.462: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod client-containers-47b926cd-2a04-41e2-9df9-e0a10a3e4832 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:51:26.474
  Aug 24 14:51:26.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6981" for this suite. @ 08/24/23 14:51:26.527
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 08/24/23 14:51:26.546
  Aug 24 14:51:26.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 14:51:26.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:26.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:26.588
  Aug 24 14:51:26.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  W0824 14:51:29.399166      14 warnings.go:70] unknown field "alpha"
  W0824 14:51:29.399238      14 warnings.go:70] unknown field "beta"
  W0824 14:51:29.399299      14 warnings.go:70] unknown field "delta"
  W0824 14:51:29.399322      14 warnings.go:70] unknown field "epsilon"
  W0824 14:51:29.399340      14 warnings.go:70] unknown field "gamma"
  Aug 24 14:51:30.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7163" for this suite. @ 08/24/23 14:51:30.111
• [3.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 08/24/23 14:51:30.145
  Aug 24 14:51:30.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:51:30.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:30.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:30.196
  STEP: Creating secret with name secret-test-b6006234-4c44-48c1-adb0-b9f81404472e @ 08/24/23 14:51:30.205
  STEP: Creating a pod to test consume secrets @ 08/24/23 14:51:30.224
  STEP: Saw pod success @ 08/24/23 14:51:34.28
  Aug 24 14:51:34.287: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-356b4c6a-0ea6-442a-87c6-bd6e66c83860 container secret-env-test: <nil>
  STEP: delete the pod @ 08/24/23 14:51:34.302
  Aug 24 14:51:34.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2705" for this suite. @ 08/24/23 14:51:34.334
• [4.202 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 08/24/23 14:51:34.35
  Aug 24 14:51:34.352: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:51:34.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:34.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:34.42
  STEP: Create set of pods @ 08/24/23 14:51:34.425
  Aug 24 14:51:34.440: INFO: created test-pod-1
  Aug 24 14:51:34.456: INFO: created test-pod-2
  Aug 24 14:51:34.477: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 08/24/23 14:51:34.477
  STEP: waiting for all pods to be deleted @ 08/24/23 14:51:38.72
  Aug 24 14:51:38.729: INFO: Pod quantity 3 is different from expected quantity 0
  Aug 24 14:51:39.740: INFO: Pod quantity 2 is different from expected quantity 0
  Aug 24 14:51:40.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3908" for this suite. @ 08/24/23 14:51:40.746
• [6.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 08/24/23 14:51:40.772
  Aug 24 14:51:40.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:51:40.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:40.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:40.817
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/24/23 14:51:40.821
  STEP: Saw pod success @ 08/24/23 14:51:44.86
  Aug 24 14:51:44.869: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-4f32b007-4393-408e-bbd1-2747842cb588 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:51:44.881
  Aug 24 14:51:44.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-867" for this suite. @ 08/24/23 14:51:44.92
• [4.162 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 08/24/23 14:51:44.937
  Aug 24 14:51:44.937: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-webhook @ 08/24/23 14:51:44.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:44.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:44.976
  STEP: Setting up server cert @ 08/24/23 14:51:44.98
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/24/23 14:51:45.701
  STEP: Deploying the custom resource conversion webhook pod @ 08/24/23 14:51:45.715
  STEP: Wait for the deployment to be ready @ 08/24/23 14:51:45.735
  Aug 24 14:51:45.761: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  Aug 24 14:51:47.786: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 51, 45, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 51, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 51, 45, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 51, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/24/23 14:51:49.795
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:51:49.827
  Aug 24 14:51:50.828: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 24 14:51:50.844: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Creating a v1 custom resource @ 08/24/23 14:51:53.673
  STEP: Create a v2 custom resource @ 08/24/23 14:51:53.712
  STEP: List CRs in v1 @ 08/24/23 14:51:53.953
  STEP: List CRs in v2 @ 08/24/23 14:51:53.97
  Aug 24 14:51:53.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2078" for this suite. @ 08/24/23 14:51:54.636
• [9.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 08/24/23 14:51:54.676
  Aug 24 14:51:54.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 14:51:54.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:54.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:54.754
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 08/24/23 14:51:54.759
  Aug 24 14:51:54.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 08/24/23 14:52:02.078
  Aug 24 14:52:02.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:52:03.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:52:11.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2515" for this suite. @ 08/24/23 14:52:11.422
• [16.766 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 08/24/23 14:52:11.444
  Aug 24 14:52:11.444: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:52:11.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:52:11.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:52:11.496
  STEP: Creating configMap with name cm-test-opt-del-7be8d4ae-22f6-437c-8de3-d7f87d7318ca @ 08/24/23 14:52:11.512
  STEP: Creating configMap with name cm-test-opt-upd-c04aa9d9-3324-4261-b1a0-9bbed3875e87 @ 08/24/23 14:52:11.531
  STEP: Creating the pod @ 08/24/23 14:52:11.541
  STEP: Deleting configmap cm-test-opt-del-7be8d4ae-22f6-437c-8de3-d7f87d7318ca @ 08/24/23 14:52:15.648
  STEP: Updating configmap cm-test-opt-upd-c04aa9d9-3324-4261-b1a0-9bbed3875e87 @ 08/24/23 14:52:15.662
  STEP: Creating configMap with name cm-test-opt-create-c971defc-6a1f-4829-8740-3cc7e1ba68e2 @ 08/24/23 14:52:15.674
  STEP: waiting to observe update in volume @ 08/24/23 14:52:15.684
  Aug 24 14:53:22.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-410" for this suite. @ 08/24/23 14:53:22.368
• [70.937 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 08/24/23 14:53:22.382
  Aug 24 14:53:22.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:53:22.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:53:22.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:53:22.429
  STEP: Creating a ResourceQuota with terminating scope @ 08/24/23 14:53:22.434
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 14:53:22.444
  STEP: Creating a ResourceQuota with not terminating scope @ 08/24/23 14:53:24.453
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 14:53:24.461
  STEP: Creating a long running pod @ 08/24/23 14:53:26.469
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 08/24/23 14:53:26.492
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 08/24/23 14:53:28.503
  STEP: Deleting the pod @ 08/24/23 14:53:30.512
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 14:53:30.546
  STEP: Creating a terminating pod @ 08/24/23 14:53:32.554
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 08/24/23 14:53:32.574
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 08/24/23 14:53:34.585
  STEP: Deleting the pod @ 08/24/23 14:53:36.592
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 14:53:36.608
  Aug 24 14:53:38.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2372" for this suite. @ 08/24/23 14:53:38.628
• [16.257 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 08/24/23 14:53:38.639
  Aug 24 14:53:38.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 14:53:38.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:53:38.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:53:38.676
  STEP: Deleting RuntimeClass runtimeclass-4788-delete-me @ 08/24/23 14:53:38.69
  STEP: Waiting for the RuntimeClass to disappear @ 08/24/23 14:53:38.698
  Aug 24 14:53:38.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4788" for this suite. @ 08/24/23 14:53:38.73
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 08/24/23 14:53:38.746
  Aug 24 14:53:38.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 14:53:38.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:53:38.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:53:38.778
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 08/24/23 14:53:38.782
  STEP: When a replicaset with a matching selector is created @ 08/24/23 14:53:40.818
  STEP: Then the orphan pod is adopted @ 08/24/23 14:53:40.829
  STEP: When the matched label of one of its pods change @ 08/24/23 14:53:41.846
  Aug 24 14:53:41.852: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/24/23 14:53:41.884
  Aug 24 14:53:41.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2162" for this suite. @ 08/24/23 14:53:41.912
• [3.187 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 08/24/23 14:53:41.934
  Aug 24 14:53:41.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 14:53:41.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:53:41.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:53:41.97
  STEP: creating service nodeport-test with type=NodePort in namespace services-9932 @ 08/24/23 14:53:41.975
  STEP: creating replication controller nodeport-test in namespace services-9932 @ 08/24/23 14:53:41.998
  I0824 14:53:42.022768      14 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-9932, replica count: 2
  I0824 14:53:45.075551      14 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 14:53:45.075: INFO: Creating new exec pod
  Aug 24 14:53:48.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9932 exec execpodj888v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 24 14:53:48.540: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 24 14:53:48.540: INFO: stdout: "nodeport-test-t7lhz"
  Aug 24 14:53:48.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9932 exec execpodj888v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.166 80'
  Aug 24 14:53:48.823: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.166 80\nConnection to 10.233.52.166 80 port [tcp/http] succeeded!\n"
  Aug 24 14:53:48.823: INFO: stdout: "nodeport-test-t7lhz"
  Aug 24 14:53:48.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9932 exec execpodj888v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.161 32591'
  Aug 24 14:53:49.093: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.161 32591\nConnection to 192.168.121.161 32591 port [tcp/*] succeeded!\n"
  Aug 24 14:53:49.093: INFO: stdout: "nodeport-test-t7lhz"
  Aug 24 14:53:49.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9932 exec execpodj888v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.240 32591'
  Aug 24 14:53:49.366: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.240 32591\nConnection to 192.168.121.240 32591 port [tcp/*] succeeded!\n"
  Aug 24 14:53:49.366: INFO: stdout: ""
  Aug 24 14:53:50.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9932 exec execpodj888v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.240 32591'
  Aug 24 14:53:50.637: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.240 32591\nConnection to 192.168.121.240 32591 port [tcp/*] succeeded!\n"
  Aug 24 14:53:50.637: INFO: stdout: ""
  Aug 24 14:53:51.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9932 exec execpodj888v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.240 32591'
  Aug 24 14:53:51.658: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.240 32591\nConnection to 192.168.121.240 32591 port [tcp/*] succeeded!\n"
  Aug 24 14:53:51.658: INFO: stdout: ""
  Aug 24 14:53:52.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9932 exec execpodj888v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.240 32591'
  Aug 24 14:53:52.656: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.240 32591\nConnection to 192.168.121.240 32591 port [tcp/*] succeeded!\n"
  Aug 24 14:53:52.656: INFO: stdout: "nodeport-test-t7lhz"
  Aug 24 14:53:52.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9932" for this suite. @ 08/24/23 14:53:52.666
• [10.744 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 08/24/23 14:53:52.679
  Aug 24 14:53:52.680: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:53:52.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:53:52.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:53:52.781
  STEP: Creating configMap with name projected-configmap-test-volume-9460b5c0-bc69-4ddc-9d1b-71444bb13d30 @ 08/24/23 14:53:52.792
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:53:52.814
  STEP: Saw pod success @ 08/24/23 14:53:56.897
  Aug 24 14:53:56.903: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-configmaps-9d31ccb8-ed5a-46c0-9fc4-b90ebd6a3e37 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:53:56.917
  Aug 24 14:53:56.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8895" for this suite. @ 08/24/23 14:53:56.953
• [4.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 08/24/23 14:53:56.97
  Aug 24 14:53:56.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:53:56.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:53:56.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:53:57.004
  STEP: Discovering how many secrets are in namespace by default @ 08/24/23 14:53:57.007
  STEP: Counting existing ResourceQuota @ 08/24/23 14:54:02.016
  STEP: Creating a ResourceQuota @ 08/24/23 14:54:07.025
  STEP: Ensuring resource quota status is calculated @ 08/24/23 14:54:07.039
  STEP: Creating a Secret @ 08/24/23 14:54:09.05
  STEP: Ensuring resource quota status captures secret creation @ 08/24/23 14:54:09.072
  STEP: Deleting a secret @ 08/24/23 14:54:11.08
  STEP: Ensuring resource quota status released usage @ 08/24/23 14:54:11.091
  Aug 24 14:54:13.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7042" for this suite. @ 08/24/23 14:54:13.109
• [16.155 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 08/24/23 14:54:13.126
  Aug 24 14:54:13.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:54:13.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:13.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:13.164
  STEP: creating all guestbook components @ 08/24/23 14:54:13.168
  Aug 24 14:54:13.168: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Aug 24 14:54:13.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 create -f -'
  Aug 24 14:54:13.907: INFO: stderr: ""
  Aug 24 14:54:13.907: INFO: stdout: "service/agnhost-replica created\n"
  Aug 24 14:54:13.907: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Aug 24 14:54:13.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 create -f -'
  Aug 24 14:54:14.399: INFO: stderr: ""
  Aug 24 14:54:14.399: INFO: stdout: "service/agnhost-primary created\n"
  Aug 24 14:54:14.399: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Aug 24 14:54:14.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 create -f -'
  Aug 24 14:54:15.423: INFO: stderr: ""
  Aug 24 14:54:15.423: INFO: stdout: "service/frontend created\n"
  Aug 24 14:54:15.423: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Aug 24 14:54:15.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 create -f -'
  Aug 24 14:54:15.843: INFO: stderr: ""
  Aug 24 14:54:15.844: INFO: stdout: "deployment.apps/frontend created\n"
  Aug 24 14:54:15.844: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 24 14:54:15.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 create -f -'
  Aug 24 14:54:16.497: INFO: stderr: ""
  Aug 24 14:54:16.497: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Aug 24 14:54:16.497: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 24 14:54:16.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 create -f -'
  Aug 24 14:54:17.140: INFO: stderr: ""
  Aug 24 14:54:17.140: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 08/24/23 14:54:17.14
  Aug 24 14:54:17.140: INFO: Waiting for all frontend pods to be Running.
  Aug 24 14:54:22.216: INFO: Waiting for frontend to serve content.
  Aug 24 14:54:22.245: INFO: Trying to add a new entry to the guestbook.
  Aug 24 14:54:22.270: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 08/24/23 14:54:22.292
  Aug 24 14:54:22.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 delete --grace-period=0 --force -f -'
  Aug 24 14:54:22.504: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 14:54:22.505: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 14:54:22.505
  Aug 24 14:54:22.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 delete --grace-period=0 --force -f -'
  Aug 24 14:54:22.697: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 14:54:22.698: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 14:54:22.698
  Aug 24 14:54:22.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 delete --grace-period=0 --force -f -'
  Aug 24 14:54:22.852: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 14:54:22.852: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 14:54:22.852
  Aug 24 14:54:22.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 delete --grace-period=0 --force -f -'
  Aug 24 14:54:23.017: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 14:54:23.017: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 14:54:23.017
  Aug 24 14:54:23.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 delete --grace-period=0 --force -f -'
  Aug 24 14:54:23.258: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 14:54:23.258: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 14:54:23.26
  Aug 24 14:54:23.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9518 delete --grace-period=0 --force -f -'
  Aug 24 14:54:23.494: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 14:54:23.494: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Aug 24 14:54:23.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9518" for this suite. @ 08/24/23 14:54:23.519
• [10.436 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 08/24/23 14:54:23.563
  Aug 24 14:54:23.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:54:23.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:23.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:23.651
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 14:54:23.658
  Aug 24 14:54:23.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4462 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Aug 24 14:54:23.902: INFO: stderr: ""
  Aug 24 14:54:23.902: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 08/24/23 14:54:23.902
  Aug 24 14:54:23.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4462 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Aug 24 14:54:24.093: INFO: stderr: ""
  Aug 24 14:54:24.093: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 14:54:24.093
  Aug 24 14:54:24.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4462 delete pods e2e-test-httpd-pod'
  Aug 24 14:54:26.514: INFO: stderr: ""
  Aug 24 14:54:26.514: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 24 14:54:26.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4462" for this suite. @ 08/24/23 14:54:26.522
• [2.968 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 08/24/23 14:54:26.532
  Aug 24 14:54:26.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:54:26.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:26.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:26.563
  STEP: Setting up server cert @ 08/24/23 14:54:26.597
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:54:27.496
  STEP: Deploying the webhook pod @ 08/24/23 14:54:27.504
  STEP: Wait for the deployment to be ready @ 08/24/23 14:54:27.522
  Aug 24 14:54:27.534: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 08/24/23 14:54:29.562
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:54:29.588
  Aug 24 14:54:30.589: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 08/24/23 14:54:30.601
  STEP: create a namespace for the webhook @ 08/24/23 14:54:30.629
  STEP: create a configmap should be unconditionally rejected by the webhook @ 08/24/23 14:54:30.654
  Aug 24 14:54:30.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3107" for this suite. @ 08/24/23 14:54:30.798
  STEP: Destroying namespace "webhook-markers-4817" for this suite. @ 08/24/23 14:54:30.816
  STEP: Destroying namespace "fail-closed-namespace-7125" for this suite. @ 08/24/23 14:54:30.835
• [4.327 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 08/24/23 14:54:30.86
  Aug 24 14:54:30.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 14:54:30.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:30.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:30.896
  Aug 24 14:54:30.901: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 24 14:54:30.915: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 14:54:30.920: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-1 before test
  Aug 24 14:54:30.933: INFO: cilium-249jg from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.933: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 14:54:30.934: INFO: cilium-node-init-c95pq from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.934: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 14:54:30.934: INFO: kube-addon-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.934: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 14:54:30.934: INFO: kube-apiserver-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.935: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 14:54:30.935: INFO: kube-controller-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.935: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 14:54:30.935: INFO: kube-proxy-5qdnk from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.935: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 14:54:30.936: INFO: kube-scheduler-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.936: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 14:54:30.936: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-rzlvs from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 14:54:30.936: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:54:30.936: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 14:54:30.936: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-2 before test
  Aug 24 14:54:30.951: INFO: cilium-dhltd from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.951: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 14:54:30.951: INFO: cilium-node-init-6p2dn from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.951: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 14:54:30.951: INFO: cilium-operator-7d96878f5-db9bp from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.951: INFO: 	Container cilium-operator ready: true, restart count 7
  Aug 24 14:54:30.952: INFO: coredns-5dd5756b68-7j9vk from kube-system started at 2023-08-24 14:24:52 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 14:54:30.952: INFO: coredns-5dd5756b68-chvhm from kube-system started at 2023-08-24 14:25:06 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 14:54:30.952: INFO: kube-addon-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 14:54:30.952: INFO: kube-apiserver-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 14:54:30.952: INFO: kube-controller-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 14:54:30.952: INFO: kube-proxy-92pnj from kube-system started at 2023-08-24 14:24:12 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 14:54:30.952: INFO: kube-scheduler-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 14:54:30.952: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-7j6r9 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 14:54:30.952: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:54:30.952: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 14:54:30.952: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-3 before test
  Aug 24 14:54:30.966: INFO: cilium-kzxs7 from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.966: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 14:54:30.966: INFO: cilium-node-init-k898v from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.966: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 14:54:30.966: INFO: kube-proxy-7z2wb from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.966: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 14:54:30.966: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:43:41 +0000 UTC (1 container statuses recorded)
  Aug 24 14:54:30.966: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 14:54:30.966: INFO: sonobuoy-e2e-job-54beda60178f4a68 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 14:54:30.966: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 14:54:30.966: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:54:30.966: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-g4xff from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 14:54:30.966: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:54:30.966: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node eiyoo9ohd4ei-1 @ 08/24/23 14:54:31.002
  STEP: verifying the node has the label node eiyoo9ohd4ei-2 @ 08/24/23 14:54:31.041
  STEP: verifying the node has the label node eiyoo9ohd4ei-3 @ 08/24/23 14:54:31.07
  Aug 24 14:54:31.113: INFO: Pod cilium-249jg requesting resource cpu=0m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.113: INFO: Pod cilium-dhltd requesting resource cpu=0m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.114: INFO: Pod cilium-kzxs7 requesting resource cpu=0m on Node eiyoo9ohd4ei-3
  Aug 24 14:54:31.114: INFO: Pod cilium-node-init-6p2dn requesting resource cpu=100m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.114: INFO: Pod cilium-node-init-c95pq requesting resource cpu=100m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.114: INFO: Pod cilium-node-init-k898v requesting resource cpu=100m on Node eiyoo9ohd4ei-3
  Aug 24 14:54:31.114: INFO: Pod cilium-operator-7d96878f5-db9bp requesting resource cpu=0m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.115: INFO: Pod coredns-5dd5756b68-7j9vk requesting resource cpu=100m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.115: INFO: Pod coredns-5dd5756b68-chvhm requesting resource cpu=100m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.115: INFO: Pod kube-addon-manager-eiyoo9ohd4ei-1 requesting resource cpu=5m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.115: INFO: Pod kube-addon-manager-eiyoo9ohd4ei-2 requesting resource cpu=5m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.115: INFO: Pod kube-apiserver-eiyoo9ohd4ei-1 requesting resource cpu=250m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.115: INFO: Pod kube-apiserver-eiyoo9ohd4ei-2 requesting resource cpu=250m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.116: INFO: Pod kube-controller-manager-eiyoo9ohd4ei-1 requesting resource cpu=200m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.116: INFO: Pod kube-controller-manager-eiyoo9ohd4ei-2 requesting resource cpu=200m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.116: INFO: Pod kube-proxy-5qdnk requesting resource cpu=0m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.116: INFO: Pod kube-proxy-7z2wb requesting resource cpu=0m on Node eiyoo9ohd4ei-3
  Aug 24 14:54:31.116: INFO: Pod kube-proxy-92pnj requesting resource cpu=0m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.117: INFO: Pod kube-scheduler-eiyoo9ohd4ei-1 requesting resource cpu=100m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.117: INFO: Pod kube-scheduler-eiyoo9ohd4ei-2 requesting resource cpu=100m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.117: INFO: Pod sonobuoy requesting resource cpu=0m on Node eiyoo9ohd4ei-3
  Aug 24 14:54:31.117: INFO: Pod sonobuoy-e2e-job-54beda60178f4a68 requesting resource cpu=0m on Node eiyoo9ohd4ei-3
  Aug 24 14:54:31.117: INFO: Pod sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-7j6r9 requesting resource cpu=0m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.118: INFO: Pod sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-g4xff requesting resource cpu=0m on Node eiyoo9ohd4ei-3
  Aug 24 14:54:31.118: INFO: Pod sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-rzlvs requesting resource cpu=0m on Node eiyoo9ohd4ei-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 08/24/23 14:54:31.118
  Aug 24 14:54:31.118: INFO: Creating a pod which consumes cpu=661m on Node eiyoo9ohd4ei-1
  Aug 24 14:54:31.144: INFO: Creating a pod which consumes cpu=521m on Node eiyoo9ohd4ei-2
  Aug 24 14:54:31.165: INFO: Creating a pod which consumes cpu=1050m on Node eiyoo9ohd4ei-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 08/24/23 14:54:35.35
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-740d124d-4f87-4afa-9b45-ba4ea158d679.177e597586de2aa7], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2869/filler-pod-740d124d-4f87-4afa-9b45-ba4ea158d679 to eiyoo9ohd4ei-2] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-740d124d-4f87-4afa-9b45-ba4ea158d679.177e5975c942fc7d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-740d124d-4f87-4afa-9b45-ba4ea158d679.177e5975ddad9da1], Reason = [Created], Message = [Created container filler-pod-740d124d-4f87-4afa-9b45-ba4ea158d679] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-740d124d-4f87-4afa-9b45-ba4ea158d679.177e5975e326edb6], Reason = [Started], Message = [Started container filler-pod-740d124d-4f87-4afa-9b45-ba4ea158d679] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d465cd0-9e85-4f1e-a7ec-60022598be3b.177e5975822bea4a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2869/filler-pod-8d465cd0-9e85-4f1e-a7ec-60022598be3b to eiyoo9ohd4ei-1] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d465cd0-9e85-4f1e-a7ec-60022598be3b.177e5975d1255b17], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d465cd0-9e85-4f1e-a7ec-60022598be3b.177e5975e256dbd3], Reason = [Created], Message = [Created container filler-pod-8d465cd0-9e85-4f1e-a7ec-60022598be3b] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d465cd0-9e85-4f1e-a7ec-60022598be3b.177e5975ea04b95d], Reason = [Started], Message = [Started container filler-pod-8d465cd0-9e85-4f1e-a7ec-60022598be3b] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da5c9ff1-fbad-49cb-b19a-c04f6e3f64ef.177e59758a57079b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2869/filler-pod-da5c9ff1-fbad-49cb-b19a-c04f6e3f64ef to eiyoo9ohd4ei-3] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da5c9ff1-fbad-49cb-b19a-c04f6e3f64ef.177e5975c5d739cf], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da5c9ff1-fbad-49cb-b19a-c04f6e3f64ef.177e5975d2ee4265], Reason = [Created], Message = [Created container filler-pod-da5c9ff1-fbad-49cb-b19a-c04f6e3f64ef] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da5c9ff1-fbad-49cb-b19a-c04f6e3f64ef.177e5975d8d9a4e8], Reason = [Started], Message = [Started container filler-pod-da5c9ff1-fbad-49cb-b19a-c04f6e3f64ef] @ 08/24/23 14:54:35.361
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.177e59767d2c4bc8], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] @ 08/24/23 14:54:35.387
  STEP: removing the label node off the node eiyoo9ohd4ei-1 @ 08/24/23 14:54:36.393
  STEP: verifying the node doesn't have the label node @ 08/24/23 14:54:36.435
  STEP: removing the label node off the node eiyoo9ohd4ei-2 @ 08/24/23 14:54:36.444
  STEP: verifying the node doesn't have the label node @ 08/24/23 14:54:36.477
  STEP: removing the label node off the node eiyoo9ohd4ei-3 @ 08/24/23 14:54:36.485
  STEP: verifying the node doesn't have the label node @ 08/24/23 14:54:36.518
  Aug 24 14:54:36.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2869" for this suite. @ 08/24/23 14:54:36.553
• [5.715 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 08/24/23 14:54:36.58
  Aug 24 14:54:36.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:54:36.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:36.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:36.63
  STEP: Setting up server cert @ 08/24/23 14:54:36.681
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:54:37.547
  STEP: Deploying the webhook pod @ 08/24/23 14:54:37.557
  STEP: Wait for the deployment to be ready @ 08/24/23 14:54:37.589
  Aug 24 14:54:37.610: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 08/24/23 14:54:39.644
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:54:39.668
  Aug 24 14:54:40.668: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 08/24/23 14:54:40.683
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 08/24/23 14:54:40.717
  STEP: Creating a configMap that should not be mutated @ 08/24/23 14:54:40.729
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 08/24/23 14:54:40.746
  STEP: Creating a configMap that should be mutated @ 08/24/23 14:54:40.759
  Aug 24 14:54:40.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2316" for this suite. @ 08/24/23 14:54:40.913
  STEP: Destroying namespace "webhook-markers-7682" for this suite. @ 08/24/23 14:54:40.923
• [4.359 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 08/24/23 14:54:40.942
  Aug 24 14:54:40.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:54:40.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:40.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:40.993
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/24/23 14:54:41.011
  STEP: Saw pod success @ 08/24/23 14:54:45.096
  Aug 24 14:54:45.114: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-b1bbc6e2-4cce-4250-86ef-8cf78b264800 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:54:45.131
  Aug 24 14:54:45.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7995" for this suite. @ 08/24/23 14:54:45.165
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 08/24/23 14:54:45.186
  Aug 24 14:54:45.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 14:54:45.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:45.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:45.222
  STEP: Performing setup for networking test in namespace pod-network-test-4015 @ 08/24/23 14:54:45.232
  STEP: creating a selector @ 08/24/23 14:54:45.232
  STEP: Creating the service pods in kubernetes @ 08/24/23 14:54:45.233
  Aug 24 14:54:45.233: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/24/23 14:55:07.453
  Aug 24 14:55:09.489: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 24 14:55:09.489: INFO: Breadth first check of 10.233.65.160 on host 192.168.121.240...
  Aug 24 14:55:09.494: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.218:9080/dial?request=hostname&protocol=http&host=10.233.65.160&port=8083&tries=1'] Namespace:pod-network-test-4015 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:09.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:09.497: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:09.497: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4015/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.218%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.160%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 14:55:09.655: INFO: Waiting for responses: map[]
  Aug 24 14:55:09.655: INFO: reached 10.233.65.160 after 0/1 tries
  Aug 24 14:55:09.655: INFO: Breadth first check of 10.233.64.52 on host 192.168.121.75...
  Aug 24 14:55:09.662: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.218:9080/dial?request=hostname&protocol=http&host=10.233.64.52&port=8083&tries=1'] Namespace:pod-network-test-4015 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:09.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:09.663: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:09.664: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4015/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.218%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.52%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 14:55:09.802: INFO: Waiting for responses: map[]
  Aug 24 14:55:09.802: INFO: reached 10.233.64.52 after 0/1 tries
  Aug 24 14:55:09.802: INFO: Breadth first check of 10.233.66.232 on host 192.168.121.161...
  Aug 24 14:55:09.809: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.218:9080/dial?request=hostname&protocol=http&host=10.233.66.232&port=8083&tries=1'] Namespace:pod-network-test-4015 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:09.809: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:09.810: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:09.810: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4015/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.218%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.232%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 14:55:09.935: INFO: Waiting for responses: map[]
  Aug 24 14:55:09.935: INFO: reached 10.233.66.232 after 0/1 tries
  Aug 24 14:55:09.935: INFO: Going to retry 0 out of 3 pods....
  Aug 24 14:55:09.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4015" for this suite. @ 08/24/23 14:55:09.946
• [24.771 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 08/24/23 14:55:09.957
  Aug 24 14:55:09.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 14:55:09.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:09.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:10.006
  Aug 24 14:55:10.015: INFO: Creating ReplicaSet my-hostname-basic-51624c92-02e5-4a73-a442-437215b5b025
  Aug 24 14:55:10.034: INFO: Pod name my-hostname-basic-51624c92-02e5-4a73-a442-437215b5b025: Found 0 pods out of 1
  Aug 24 14:55:15.043: INFO: Pod name my-hostname-basic-51624c92-02e5-4a73-a442-437215b5b025: Found 1 pods out of 1
  Aug 24 14:55:15.043: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-51624c92-02e5-4a73-a442-437215b5b025" is running
  Aug 24 14:55:15.051: INFO: Pod "my-hostname-basic-51624c92-02e5-4a73-a442-437215b5b025-rvswm" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:10 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:11 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:11 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:10 +0000 UTC Reason: Message:}])
  Aug 24 14:55:15.052: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/24/23 14:55:15.052
  Aug 24 14:55:15.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9537" for this suite. @ 08/24/23 14:55:15.089
• [5.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 08/24/23 14:55:15.114
  Aug 24 14:55:15.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:55:15.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:15.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:15.156
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:55:15.163
  STEP: Saw pod success @ 08/24/23 14:55:19.207
  Aug 24 14:55:19.214: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-20221f19-00ac-4f9f-a471-ca4f423e86a4 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:55:19.233
  Aug 24 14:55:19.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1584" for this suite. @ 08/24/23 14:55:19.273
• [4.174 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 08/24/23 14:55:19.289
  Aug 24 14:55:19.289: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 14:55:19.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:19.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:19.323
  STEP: Creating replication controller my-hostname-basic-7663080a-9b31-4e42-93ef-f2af9125c136 @ 08/24/23 14:55:19.328
  Aug 24 14:55:19.343: INFO: Pod name my-hostname-basic-7663080a-9b31-4e42-93ef-f2af9125c136: Found 0 pods out of 1
  Aug 24 14:55:24.349: INFO: Pod name my-hostname-basic-7663080a-9b31-4e42-93ef-f2af9125c136: Found 1 pods out of 1
  Aug 24 14:55:24.349: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-7663080a-9b31-4e42-93ef-f2af9125c136" are running
  Aug 24 14:55:24.373: INFO: Pod "my-hostname-basic-7663080a-9b31-4e42-93ef-f2af9125c136-zrbs2" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:20 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:20 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:55:19 +0000 UTC Reason: Message:}])
  Aug 24 14:55:24.373: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/24/23 14:55:24.374
  Aug 24 14:55:24.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6820" for this suite. @ 08/24/23 14:55:24.403
• [5.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 08/24/23 14:55:24.433
  Aug 24 14:55:24.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:55:24.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:24.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:24.483
  STEP: Creating Pod @ 08/24/23 14:55:24.496
  STEP: Reading file content from the nginx-container @ 08/24/23 14:55:26.531
  Aug 24 14:55:26.532: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3586 PodName:pod-sharedvolume-903a26f5-3035-44e3-a84f-c9d7905bfc9e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:26.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:26.533: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:26.533: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-3586/pods/pod-sharedvolume-903a26f5-3035-44e3-a84f-c9d7905bfc9e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Aug 24 14:55:26.661: INFO: Exec stderr: ""
  Aug 24 14:55:26.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3586" for this suite. @ 08/24/23 14:55:26.671
• [2.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 08/24/23 14:55:26.691
  Aug 24 14:55:26.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:55:26.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:26.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:26.726
  STEP: Creating secret with name secret-test-25126fd0-d0d2-40a1-9bf7-f9019b2e4ef1 @ 08/24/23 14:55:26.729
  STEP: Creating a pod to test consume secrets @ 08/24/23 14:55:26.737
  STEP: Saw pod success @ 08/24/23 14:55:30.778
  Aug 24 14:55:30.782: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-941f9f3e-19a8-4d6d-b34d-883fb6d4cfde container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:55:30.794
  Aug 24 14:55:30.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6721" for this suite. @ 08/24/23 14:55:30.831
• [4.152 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 08/24/23 14:55:30.844
  Aug 24 14:55:30.844: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 08/24/23 14:55:30.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:30.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:30.873
  STEP: Setting up the test @ 08/24/23 14:55:30.877
  STEP: Creating hostNetwork=false pod @ 08/24/23 14:55:30.877
  STEP: Creating hostNetwork=true pod @ 08/24/23 14:55:32.912
  STEP: Running the test @ 08/24/23 14:55:34.948
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 08/24/23 14:55:34.948
  Aug 24 14:55:34.948: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:34.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:34.950: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:34.950: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 24 14:55:35.079: INFO: Exec stderr: ""
  Aug 24 14:55:35.080: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:35.080: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:35.082: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:35.082: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 24 14:55:35.201: INFO: Exec stderr: ""
  Aug 24 14:55:35.201: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:35.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:35.204: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:35.205: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 14:55:35.364: INFO: Exec stderr: ""
  Aug 24 14:55:35.365: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:35.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:35.368: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:35.368: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 14:55:35.478: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 08/24/23 14:55:35.479
  Aug 24 14:55:35.479: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:35.479: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:35.481: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:35.482: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 24 14:55:35.616: INFO: Exec stderr: ""
  Aug 24 14:55:35.616: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:35.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:35.620: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:35.620: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 24 14:55:35.731: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 08/24/23 14:55:35.731
  Aug 24 14:55:35.731: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:35.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:35.734: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:35.734: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 24 14:55:35.890: INFO: Exec stderr: ""
  Aug 24 14:55:35.890: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:35.891: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:35.894: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:35.895: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 24 14:55:36.009: INFO: Exec stderr: ""
  Aug 24 14:55:36.009: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:36.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:36.010: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:36.010: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 14:55:36.121: INFO: Exec stderr: ""
  Aug 24 14:55:36.121: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2110 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:55:36.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:55:36.123: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:55:36.123: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2110/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 14:55:36.274: INFO: Exec stderr: ""
  Aug 24 14:55:36.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2110" for this suite. @ 08/24/23 14:55:36.282
• [5.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 08/24/23 14:55:36.299
  Aug 24 14:55:36.299: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:55:36.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:36.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:36.348
  STEP: Setting up server cert @ 08/24/23 14:55:36.435
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:55:37.145
  STEP: Deploying the webhook pod @ 08/24/23 14:55:37.155
  STEP: Wait for the deployment to be ready @ 08/24/23 14:55:37.172
  Aug 24 14:55:37.184: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/24/23 14:55:39.205
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:55:39.229
  Aug 24 14:55:40.230: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/24/23 14:55:40.241
  STEP: create a pod @ 08/24/23 14:55:40.268
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 08/24/23 14:55:42.301
  Aug 24 14:55:42.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=webhook-3266 attach --namespace=webhook-3266 to-be-attached-pod -i -c=container1'
  Aug 24 14:55:42.489: INFO: rc: 1
  Aug 24 14:55:42.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3266" for this suite. @ 08/24/23 14:55:42.58
  STEP: Destroying namespace "webhook-markers-8635" for this suite. @ 08/24/23 14:55:42.593
• [6.318 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 08/24/23 14:55:42.619
  Aug 24 14:55:42.619: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename disruption @ 08/24/23 14:55:42.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:42.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:42.696
  STEP: Creating a kubernetes client @ 08/24/23 14:55:42.7
  Aug 24 14:55:42.700: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename disruption-2 @ 08/24/23 14:55:42.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:42.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:42.741
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:55:42.762
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:55:44.786
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:55:44.804
  STEP: listing a collection of PDBs across all namespaces @ 08/24/23 14:55:46.824
  STEP: listing a collection of PDBs in namespace disruption-129 @ 08/24/23 14:55:46.829
  STEP: deleting a collection of PDBs @ 08/24/23 14:55:46.834
  STEP: Waiting for the PDB collection to be deleted @ 08/24/23 14:55:46.857
  Aug 24 14:55:46.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 14:55:46.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2663" for this suite. @ 08/24/23 14:55:46.874
  STEP: Destroying namespace "disruption-129" for this suite. @ 08/24/23 14:55:46.886
• [4.276 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 08/24/23 14:55:46.896
  Aug 24 14:55:46.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 14:55:46.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:46.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:46.926
  STEP: create the container @ 08/24/23 14:55:46.932
  W0824 14:55:46.947153      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 08/24/23 14:55:46.947
  STEP: get the container status @ 08/24/23 14:55:51.035
  STEP: the container should be terminated @ 08/24/23 14:55:51.043
  STEP: the termination message should be set @ 08/24/23 14:55:51.043
  Aug 24 14:55:51.043: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/24/23 14:55:51.043
  Aug 24 14:55:51.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1563" for this suite. @ 08/24/23 14:55:51.075
• [4.191 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 08/24/23 14:55:51.09
  Aug 24 14:55:51.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:55:51.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:51.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:51.123
  STEP: Creating configMap with name projected-configmap-test-volume-map-8d791679-9caf-40a4-a13a-3837d4c407c6 @ 08/24/23 14:55:51.129
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:55:51.141
  STEP: Saw pod success @ 08/24/23 14:55:55.197
  Aug 24 14:55:55.203: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-configmaps-12423424-29cb-4b85-8333-423680fa96e2 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:55:55.215
  Aug 24 14:55:55.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8394" for this suite. @ 08/24/23 14:55:55.249
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 08/24/23 14:55:55.27
  Aug 24 14:55:55.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:55:55.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:55.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:55.312
  STEP: Creating a ResourceQuota @ 08/24/23 14:55:55.317
  STEP: Getting a ResourceQuota @ 08/24/23 14:55:55.325
  STEP: Listing all ResourceQuotas with LabelSelector @ 08/24/23 14:55:55.333
  STEP: Patching the ResourceQuota @ 08/24/23 14:55:55.339
  STEP: Deleting a Collection of ResourceQuotas @ 08/24/23 14:55:55.35
  STEP: Verifying the deleted ResourceQuota @ 08/24/23 14:55:55.367
  Aug 24 14:55:55.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8404" for this suite. @ 08/24/23 14:55:55.384
• [0.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 08/24/23 14:55:55.4
  Aug 24 14:55:55.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 14:55:55.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:55.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:55.435
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 14:55:55.445
  STEP: create the pod with lifecycle hook @ 08/24/23 14:55:59.501
  STEP: delete the pod with lifecycle hook @ 08/24/23 14:56:01.532
  STEP: check prestop hook @ 08/24/23 14:56:03.558
  Aug 24 14:56:03.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4374" for this suite. @ 08/24/23 14:56:03.597
• [8.210 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 08/24/23 14:56:03.614
  Aug 24 14:56:03.614: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename security-context @ 08/24/23 14:56:03.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:03.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:03.644
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/24/23 14:56:03.654
  STEP: Saw pod success @ 08/24/23 14:56:07.691
  Aug 24 14:56:07.696: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod security-context-2eef57c3-12d0-496f-adf9-999f650dbaea container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:56:07.709
  Aug 24 14:56:07.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5633" for this suite. @ 08/24/23 14:56:07.748
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 08/24/23 14:56:07.776
  Aug 24 14:56:07.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename init-container @ 08/24/23 14:56:07.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:07.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:07.809
  STEP: creating the pod @ 08/24/23 14:56:07.814
  Aug 24 14:56:07.814: INFO: PodSpec: initContainers in spec.initContainers
  Aug 24 14:56:12.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9069" for this suite. @ 08/24/23 14:56:12.34
• [4.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 08/24/23 14:56:12.36
  Aug 24 14:56:12.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename podtemplate @ 08/24/23 14:56:12.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:12.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:12.461
  STEP: Create set of pod templates @ 08/24/23 14:56:12.468
  Aug 24 14:56:12.482: INFO: created test-podtemplate-1
  Aug 24 14:56:12.494: INFO: created test-podtemplate-2
  Aug 24 14:56:12.516: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 08/24/23 14:56:12.516
  STEP: delete collection of pod templates @ 08/24/23 14:56:12.525
  Aug 24 14:56:12.525: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 08/24/23 14:56:12.575
  Aug 24 14:56:12.575: INFO: requesting list of pod templates to confirm quantity
  Aug 24 14:56:12.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7677" for this suite. @ 08/24/23 14:56:12.595
• [0.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 08/24/23 14:56:12.618
  Aug 24 14:56:12.618: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename subpath @ 08/24/23 14:56:12.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:12.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:12.658
  STEP: Setting up data @ 08/24/23 14:56:12.662
  STEP: Creating pod pod-subpath-test-configmap-c5wn @ 08/24/23 14:56:12.677
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 14:56:12.677
  STEP: Saw pod success @ 08/24/23 14:56:36.879
  Aug 24 14:56:36.888: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-subpath-test-configmap-c5wn container test-container-subpath-configmap-c5wn: <nil>
  STEP: delete the pod @ 08/24/23 14:56:36.905
  STEP: Deleting pod pod-subpath-test-configmap-c5wn @ 08/24/23 14:56:36.945
  Aug 24 14:56:36.945: INFO: Deleting pod "pod-subpath-test-configmap-c5wn" in namespace "subpath-2755"
  Aug 24 14:56:36.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2755" for this suite. @ 08/24/23 14:56:36.965
• [24.370 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 08/24/23 14:56:36.99
  Aug 24 14:56:36.990: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:56:36.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:37.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:37.047
  STEP: Creating projection with secret that has name projected-secret-test-map-713c34c9-4c80-4b6c-b7fe-6c1a6656b809 @ 08/24/23 14:56:37.052
  STEP: Creating a pod to test consume secrets @ 08/24/23 14:56:37.068
  STEP: Saw pod success @ 08/24/23 14:56:41.156
  Aug 24 14:56:41.163: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-secrets-40122883-ba09-476b-bb10-27c565a5b5f6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:56:41.182
  Aug 24 14:56:41.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-190" for this suite. @ 08/24/23 14:56:41.257
• [4.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 08/24/23 14:56:41.276
  Aug 24 14:56:41.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename aggregator @ 08/24/23 14:56:41.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:41.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:41.309
  Aug 24 14:56:41.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Registering the sample API server. @ 08/24/23 14:56:41.315
  Aug 24 14:56:41.833: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Aug 24 14:56:41.881: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Aug 24 14:56:43.984: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:45.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:47.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:49.994: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:51.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:54.001: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:55.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:57.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:56:59.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:01.994: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:03.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:05.998: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:07.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:09.994: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:11.993: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:13.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:15.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:18.000: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:19.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:21.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:23.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 56, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:57:26.156: INFO: Waited 127.909395ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 08/24/23 14:57:26.237
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 08/24/23 14:57:26.244
  STEP: List APIServices @ 08/24/23 14:57:26.261
  Aug 24 14:57:26.278: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 08/24/23 14:57:26.279
  Aug 24 14:57:26.311: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 08/24/23 14:57:26.311
  Aug 24 14:57:26.331: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.August, 24, 14, 57, 26, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 08/24/23 14:57:26.331
  Aug 24 14:57:26.343: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-08-24 14:57:26 +0000 UTC Passed all checks passed}
  Aug 24 14:57:26.343: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 14:57:26.343: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 08/24/23 14:57:26.343
  Aug 24 14:57:26.366: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1958996908" @ 08/24/23 14:57:26.367
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 08/24/23 14:57:26.396
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 08/24/23 14:57:26.409
  STEP: Patch APIService Status @ 08/24/23 14:57:26.417
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 08/24/23 14:57:26.431
  Aug 24 14:57:26.446: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-08-24 14:57:26 +0000 UTC Passed all checks passed}
  Aug 24 14:57:26.446: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 14:57:26.447: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Aug 24 14:57:26.447: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 08/24/23 14:57:26.448
  STEP: Confirm that the generated APIService has been deleted @ 08/24/23 14:57:26.458
  Aug 24 14:57:26.459: INFO: Requesting list of APIServices to confirm quantity
  Aug 24 14:57:26.473: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Aug 24 14:57:26.473: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Aug 24 14:57:26.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4551" for this suite. @ 08/24/23 14:57:26.75
• [45.483 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 08/24/23 14:57:26.76
  Aug 24 14:57:26.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:57:26.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:26.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:26.801
  STEP: Counting existing ResourceQuota @ 08/24/23 14:57:26.805
  STEP: Creating a ResourceQuota @ 08/24/23 14:57:31.811
  STEP: Ensuring resource quota status is calculated @ 08/24/23 14:57:31.827
  STEP: Creating a ReplicationController @ 08/24/23 14:57:33.836
  STEP: Ensuring resource quota status captures replication controller creation @ 08/24/23 14:57:33.853
  STEP: Deleting a ReplicationController @ 08/24/23 14:57:35.863
  STEP: Ensuring resource quota status released usage @ 08/24/23 14:57:35.874
  Aug 24 14:57:37.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3483" for this suite. @ 08/24/23 14:57:37.893
• [11.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 08/24/23 14:57:37.922
  Aug 24 14:57:37.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:57:37.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:37.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:37.974
  Aug 24 14:57:37.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7446 version'
  Aug 24 14:57:38.115: INFO: stderr: ""
  Aug 24 14:57:38.115: INFO: stdout: "Client Version: v1.28.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.1\n"
  Aug 24 14:57:38.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7446" for this suite. @ 08/24/23 14:57:38.126
• [0.223 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 08/24/23 14:57:38.146
  Aug 24 14:57:38.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 14:57:38.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:38.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:38.188
  Aug 24 14:57:38.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 14:57:39.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3516" for this suite. @ 08/24/23 14:57:39.246
• [1.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 08/24/23 14:57:39.265
  Aug 24 14:57:39.266: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:57:39.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:39.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:39.301
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:57:39.306
  STEP: Saw pod success @ 08/24/23 14:57:43.4
  Aug 24 14:57:43.408: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-1bd62e1c-4c67-4787-9e11-b31b4ac7120c container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:57:43.424
  Aug 24 14:57:43.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-826" for this suite. @ 08/24/23 14:57:43.48
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 08/24/23 14:57:43.517
  Aug 24 14:57:43.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 14:57:43.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:43.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:43.568
  STEP: Creating a suspended cronjob @ 08/24/23 14:57:43.573
  STEP: Ensuring no jobs are scheduled @ 08/24/23 14:57:43.591
  STEP: Ensuring no job exists by listing jobs explicitly @ 08/24/23 15:02:43.605
  STEP: Removing cronjob @ 08/24/23 15:02:43.611
  Aug 24 15:02:43.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5305" for this suite. @ 08/24/23 15:02:43.634
• [300.128 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 08/24/23 15:02:43.647
  Aug 24 15:02:43.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:02:43.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:02:43.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:02:43.693
  STEP: Creating pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623 @ 08/24/23 15:02:43.699
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:02:45.736
  Aug 24 15:02:45.745: INFO: Initial restart count of pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 is 0
  Aug 24 15:02:45.753: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:02:47.762: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:02:49.782: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:02:51.790: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:02:53.815: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:02:55.822: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:02:57.831: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:02:59.877: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:01.889: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:03.898: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:05.913: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:07.923: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:09.932: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:11.942: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:13.952: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:15.962: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:17.972: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:19.982: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:21.988: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:23.996: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:26.003: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:28.012: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:30.029: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:32.037: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:34.045: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:36.055: INFO: Get pod busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 in namespace container-probe-7623
  Aug 24 15:03:36.055: INFO: Restart count of pod container-probe-7623/busybox-ce68173c-9260-4def-937a-14b2ffbb8b23 is now 1 (50.309901178s elapsed)
  Aug 24 15:03:36.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:03:36.065
  STEP: Destroying namespace "container-probe-7623" for this suite. @ 08/24/23 15:03:36.088
• [52.456 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 08/24/23 15:03:36.105
  Aug 24 15:03:36.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:03:36.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:36.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:36.159
  STEP: creating a Pod with a static label @ 08/24/23 15:03:36.177
  STEP: watching for Pod to be ready @ 08/24/23 15:03:36.194
  Aug 24 15:03:36.199: INFO: observed Pod pod-test in namespace pods-1340 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Aug 24 15:03:36.204: INFO: observed Pod pod-test in namespace pods-1340 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:36 +0000 UTC  }]
  Aug 24 15:03:36.233: INFO: observed Pod pod-test in namespace pods-1340 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:36 +0000 UTC  }]
  Aug 24 15:03:37.702: INFO: Found Pod pod-test in namespace pods-1340 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:36 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:37 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:37 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:03:36 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 08/24/23 15:03:37.71
  STEP: getting the Pod and ensuring that it's patched @ 08/24/23 15:03:37.727
  STEP: replacing the Pod's status Ready condition to False @ 08/24/23 15:03:37.737
  STEP: check the Pod again to ensure its Ready conditions are False @ 08/24/23 15:03:37.76
  STEP: deleting the Pod via a Collection with a LabelSelector @ 08/24/23 15:03:37.76
  STEP: watching for the Pod to be deleted @ 08/24/23 15:03:37.779
  Aug 24 15:03:37.784: INFO: observed event type MODIFIED
  Aug 24 15:03:38.705: INFO: observed event type MODIFIED
  Aug 24 15:03:39.712: INFO: observed event type MODIFIED
  Aug 24 15:03:39.855: INFO: observed event type MODIFIED
  Aug 24 15:03:40.728: INFO: observed event type MODIFIED
  Aug 24 15:03:40.752: INFO: observed event type MODIFIED
  Aug 24 15:03:40.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1340" for this suite. @ 08/24/23 15:03:40.779
• [4.685 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 08/24/23 15:03:40.792
  Aug 24 15:03:40.792: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:03:40.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:40.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:40.82
  STEP: create the rc @ 08/24/23 15:03:40.83
  W0824 15:03:40.841470      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 08/24/23 15:03:47.044
  STEP: wait for the rc to be deleted @ 08/24/23 15:03:47.583
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 08/24/23 15:03:52.591
  STEP: Gathering metrics @ 08/24/23 15:04:22.621
  Aug 24 15:04:22.801: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 15:04:22.801: INFO: Deleting pod "simpletest.rc-227hc" in namespace "gc-6889"
  Aug 24 15:04:22.834: INFO: Deleting pod "simpletest.rc-2b99v" in namespace "gc-6889"
  Aug 24 15:04:22.922: INFO: Deleting pod "simpletest.rc-2cqpv" in namespace "gc-6889"
  Aug 24 15:04:22.993: INFO: Deleting pod "simpletest.rc-2hg6q" in namespace "gc-6889"
  Aug 24 15:04:23.062: INFO: Deleting pod "simpletest.rc-2nj96" in namespace "gc-6889"
  Aug 24 15:04:23.111: INFO: Deleting pod "simpletest.rc-464v9" in namespace "gc-6889"
  Aug 24 15:04:23.144: INFO: Deleting pod "simpletest.rc-58qhh" in namespace "gc-6889"
  Aug 24 15:04:23.192: INFO: Deleting pod "simpletest.rc-59fdh" in namespace "gc-6889"
  Aug 24 15:04:23.239: INFO: Deleting pod "simpletest.rc-5j872" in namespace "gc-6889"
  Aug 24 15:04:23.307: INFO: Deleting pod "simpletest.rc-5jtmq" in namespace "gc-6889"
  Aug 24 15:04:23.361: INFO: Deleting pod "simpletest.rc-5mv9l" in namespace "gc-6889"
  Aug 24 15:04:23.457: INFO: Deleting pod "simpletest.rc-5v8qz" in namespace "gc-6889"
  Aug 24 15:04:23.516: INFO: Deleting pod "simpletest.rc-5vkqt" in namespace "gc-6889"
  Aug 24 15:04:23.586: INFO: Deleting pod "simpletest.rc-65jhb" in namespace "gc-6889"
  Aug 24 15:04:23.661: INFO: Deleting pod "simpletest.rc-67j5f" in namespace "gc-6889"
  Aug 24 15:04:23.713: INFO: Deleting pod "simpletest.rc-6pw76" in namespace "gc-6889"
  Aug 24 15:04:23.833: INFO: Deleting pod "simpletest.rc-6qzd2" in namespace "gc-6889"
  Aug 24 15:04:23.937: INFO: Deleting pod "simpletest.rc-759dh" in namespace "gc-6889"
  Aug 24 15:04:24.073: INFO: Deleting pod "simpletest.rc-77flz" in namespace "gc-6889"
  Aug 24 15:04:24.130: INFO: Deleting pod "simpletest.rc-79f4d" in namespace "gc-6889"
  Aug 24 15:04:24.191: INFO: Deleting pod "simpletest.rc-7fwpx" in namespace "gc-6889"
  Aug 24 15:04:24.294: INFO: Deleting pod "simpletest.rc-7hk8g" in namespace "gc-6889"
  Aug 24 15:04:24.412: INFO: Deleting pod "simpletest.rc-7n72v" in namespace "gc-6889"
  Aug 24 15:04:24.555: INFO: Deleting pod "simpletest.rc-89cx7" in namespace "gc-6889"
  Aug 24 15:04:24.623: INFO: Deleting pod "simpletest.rc-8cp9l" in namespace "gc-6889"
  Aug 24 15:04:24.739: INFO: Deleting pod "simpletest.rc-8kvbn" in namespace "gc-6889"
  Aug 24 15:04:24.846: INFO: Deleting pod "simpletest.rc-8lsjx" in namespace "gc-6889"
  Aug 24 15:04:24.902: INFO: Deleting pod "simpletest.rc-95mkg" in namespace "gc-6889"
  Aug 24 15:04:24.997: INFO: Deleting pod "simpletest.rc-9g4hb" in namespace "gc-6889"
  Aug 24 15:04:25.068: INFO: Deleting pod "simpletest.rc-9jgjg" in namespace "gc-6889"
  Aug 24 15:04:25.252: INFO: Deleting pod "simpletest.rc-9p26v" in namespace "gc-6889"
  Aug 24 15:04:25.411: INFO: Deleting pod "simpletest.rc-b76zb" in namespace "gc-6889"
  Aug 24 15:04:25.557: INFO: Deleting pod "simpletest.rc-b86jj" in namespace "gc-6889"
  Aug 24 15:04:25.618: INFO: Deleting pod "simpletest.rc-b8t9w" in namespace "gc-6889"
  Aug 24 15:04:25.733: INFO: Deleting pod "simpletest.rc-bbbkk" in namespace "gc-6889"
  Aug 24 15:04:25.868: INFO: Deleting pod "simpletest.rc-bd6mn" in namespace "gc-6889"
  Aug 24 15:04:25.991: INFO: Deleting pod "simpletest.rc-bj246" in namespace "gc-6889"
  Aug 24 15:04:26.032: INFO: Deleting pod "simpletest.rc-bkqft" in namespace "gc-6889"
  Aug 24 15:04:26.150: INFO: Deleting pod "simpletest.rc-bwb6j" in namespace "gc-6889"
  Aug 24 15:04:26.232: INFO: Deleting pod "simpletest.rc-c22c9" in namespace "gc-6889"
  Aug 24 15:04:26.325: INFO: Deleting pod "simpletest.rc-cgnnw" in namespace "gc-6889"
  Aug 24 15:04:26.480: INFO: Deleting pod "simpletest.rc-cvwn8" in namespace "gc-6889"
  Aug 24 15:04:26.554: INFO: Deleting pod "simpletest.rc-dct8p" in namespace "gc-6889"
  Aug 24 15:04:26.731: INFO: Deleting pod "simpletest.rc-df5vl" in namespace "gc-6889"
  Aug 24 15:04:26.783: INFO: Deleting pod "simpletest.rc-dkzvs" in namespace "gc-6889"
  Aug 24 15:04:26.864: INFO: Deleting pod "simpletest.rc-dmhzq" in namespace "gc-6889"
  Aug 24 15:04:26.965: INFO: Deleting pod "simpletest.rc-dq5wk" in namespace "gc-6889"
  Aug 24 15:04:27.005: INFO: Deleting pod "simpletest.rc-ds4ww" in namespace "gc-6889"
  Aug 24 15:04:27.043: INFO: Deleting pod "simpletest.rc-ds6gg" in namespace "gc-6889"
  Aug 24 15:04:27.119: INFO: Deleting pod "simpletest.rc-dw4dh" in namespace "gc-6889"
  Aug 24 15:04:27.169: INFO: Deleting pod "simpletest.rc-fj4lt" in namespace "gc-6889"
  Aug 24 15:04:27.299: INFO: Deleting pod "simpletest.rc-frt45" in namespace "gc-6889"
  Aug 24 15:04:27.398: INFO: Deleting pod "simpletest.rc-ftcbh" in namespace "gc-6889"
  Aug 24 15:04:27.522: INFO: Deleting pod "simpletest.rc-hbxsj" in namespace "gc-6889"
  Aug 24 15:04:27.576: INFO: Deleting pod "simpletest.rc-jlz8r" in namespace "gc-6889"
  Aug 24 15:04:27.629: INFO: Deleting pod "simpletest.rc-jwwks" in namespace "gc-6889"
  Aug 24 15:04:27.775: INFO: Deleting pod "simpletest.rc-jzcjq" in namespace "gc-6889"
  Aug 24 15:04:27.817: INFO: Deleting pod "simpletest.rc-k5rzw" in namespace "gc-6889"
  Aug 24 15:04:27.910: INFO: Deleting pod "simpletest.rc-kchxw" in namespace "gc-6889"
  Aug 24 15:04:27.949: INFO: Deleting pod "simpletest.rc-ksfzl" in namespace "gc-6889"
  Aug 24 15:04:27.995: INFO: Deleting pod "simpletest.rc-l6vdh" in namespace "gc-6889"
  Aug 24 15:04:28.047: INFO: Deleting pod "simpletest.rc-lbh2v" in namespace "gc-6889"
  Aug 24 15:04:28.164: INFO: Deleting pod "simpletest.rc-lkmsn" in namespace "gc-6889"
  Aug 24 15:04:28.257: INFO: Deleting pod "simpletest.rc-lnwvh" in namespace "gc-6889"
  Aug 24 15:04:28.299: INFO: Deleting pod "simpletest.rc-lx6v6" in namespace "gc-6889"
  Aug 24 15:04:28.415: INFO: Deleting pod "simpletest.rc-mchdc" in namespace "gc-6889"
  Aug 24 15:04:28.500: INFO: Deleting pod "simpletest.rc-ml8c9" in namespace "gc-6889"
  Aug 24 15:04:28.544: INFO: Deleting pod "simpletest.rc-mln95" in namespace "gc-6889"
  Aug 24 15:04:28.689: INFO: Deleting pod "simpletest.rc-mtmlr" in namespace "gc-6889"
  Aug 24 15:04:28.840: INFO: Deleting pod "simpletest.rc-nb65d" in namespace "gc-6889"
  Aug 24 15:04:28.987: INFO: Deleting pod "simpletest.rc-p9s4j" in namespace "gc-6889"
  Aug 24 15:04:29.175: INFO: Deleting pod "simpletest.rc-pfzq8" in namespace "gc-6889"
  Aug 24 15:04:29.404: INFO: Deleting pod "simpletest.rc-pm2jp" in namespace "gc-6889"
  Aug 24 15:04:29.607: INFO: Deleting pod "simpletest.rc-qwn2j" in namespace "gc-6889"
  Aug 24 15:04:29.715: INFO: Deleting pod "simpletest.rc-qx4qt" in namespace "gc-6889"
  Aug 24 15:04:29.835: INFO: Deleting pod "simpletest.rc-r8qp2" in namespace "gc-6889"
  Aug 24 15:04:29.922: INFO: Deleting pod "simpletest.rc-rc6nw" in namespace "gc-6889"
  Aug 24 15:04:29.943: INFO: Deleting pod "simpletest.rc-rllls" in namespace "gc-6889"
  Aug 24 15:04:29.996: INFO: Deleting pod "simpletest.rc-rm96g" in namespace "gc-6889"
  Aug 24 15:04:30.059: INFO: Deleting pod "simpletest.rc-rqbjt" in namespace "gc-6889"
  Aug 24 15:04:30.106: INFO: Deleting pod "simpletest.rc-s29nz" in namespace "gc-6889"
  Aug 24 15:04:30.217: INFO: Deleting pod "simpletest.rc-sbbhj" in namespace "gc-6889"
  Aug 24 15:04:30.361: INFO: Deleting pod "simpletest.rc-sdzx5" in namespace "gc-6889"
  Aug 24 15:04:30.411: INFO: Deleting pod "simpletest.rc-sws7c" in namespace "gc-6889"
  Aug 24 15:04:30.497: INFO: Deleting pod "simpletest.rc-t2s9k" in namespace "gc-6889"
  Aug 24 15:04:30.573: INFO: Deleting pod "simpletest.rc-tqpg8" in namespace "gc-6889"
  Aug 24 15:04:30.626: INFO: Deleting pod "simpletest.rc-tv7h5" in namespace "gc-6889"
  Aug 24 15:04:30.666: INFO: Deleting pod "simpletest.rc-vhlwx" in namespace "gc-6889"
  Aug 24 15:04:30.741: INFO: Deleting pod "simpletest.rc-vjmpg" in namespace "gc-6889"
  Aug 24 15:04:30.810: INFO: Deleting pod "simpletest.rc-vrjtn" in namespace "gc-6889"
  Aug 24 15:04:30.950: INFO: Deleting pod "simpletest.rc-wnvdz" in namespace "gc-6889"
  Aug 24 15:04:31.006: INFO: Deleting pod "simpletest.rc-wq8tp" in namespace "gc-6889"
  Aug 24 15:04:31.088: INFO: Deleting pod "simpletest.rc-x4tnd" in namespace "gc-6889"
  Aug 24 15:04:31.166: INFO: Deleting pod "simpletest.rc-xklml" in namespace "gc-6889"
  Aug 24 15:04:31.233: INFO: Deleting pod "simpletest.rc-z7l46" in namespace "gc-6889"
  Aug 24 15:04:31.415: INFO: Deleting pod "simpletest.rc-zbfn8" in namespace "gc-6889"
  Aug 24 15:04:31.480: INFO: Deleting pod "simpletest.rc-zl8fk" in namespace "gc-6889"
  Aug 24 15:04:31.546: INFO: Deleting pod "simpletest.rc-zq257" in namespace "gc-6889"
  Aug 24 15:04:31.612: INFO: Deleting pod "simpletest.rc-zv8db" in namespace "gc-6889"
  Aug 24 15:04:31.661: INFO: Deleting pod "simpletest.rc-zvwhb" in namespace "gc-6889"
  Aug 24 15:04:31.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6889" for this suite. @ 08/24/23 15:04:31.721
• [50.947 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 08/24/23 15:04:31.741
  Aug 24 15:04:31.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:04:31.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:31.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:31.794
  STEP: Creating simple DaemonSet "daemon-set" @ 08/24/23 15:04:31.888
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:04:31.899
  Aug 24 15:04:31.915: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:04:31.915: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:04:32.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:04:32.936: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:04:33.934: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:04:33.934: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:04:35.013: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:04:35.013: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:04:35.932: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:04:35.932: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:04:36.931: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 15:04:36.931: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 08/24/23 15:04:36.94
  Aug 24 15:04:36.948: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 08/24/23 15:04:36.948
  Aug 24 15:04:36.967: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 08/24/23 15:04:36.968
  Aug 24 15:04:36.974: INFO: Observed &DaemonSet event: ADDED
  Aug 24 15:04:36.975: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.975: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.976: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.977: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.977: INFO: Found daemon set daemon-set in namespace daemonsets-9890 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 15:04:36.977: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 08/24/23 15:04:36.978
  STEP: watching for the daemon set status to be patched @ 08/24/23 15:04:36.989
  Aug 24 15:04:36.993: INFO: Observed &DaemonSet event: ADDED
  Aug 24 15:04:36.994: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.994: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.994: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.994: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.995: INFO: Observed daemon set daemon-set in namespace daemonsets-9890 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 15:04:36.996: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:04:36.996: INFO: Found daemon set daemon-set in namespace daemonsets-9890 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Aug 24 15:04:36.996: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 15:04:37.004
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9890, will wait for the garbage collector to delete the pods @ 08/24/23 15:04:37.004
  Aug 24 15:04:37.074: INFO: Deleting DaemonSet.extensions daemon-set took: 10.31479ms
  Aug 24 15:04:37.175: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.608134ms
  Aug 24 15:04:38.885: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:04:38.885: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 15:04:38.891: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21561"},"items":null}

  Aug 24 15:04:38.897: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21562"},"items":null}

  Aug 24 15:04:38.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9890" for this suite. @ 08/24/23 15:04:38.935
• [7.211 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 08/24/23 15:04:38.953
  Aug 24 15:04:38.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:04:38.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:38.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:39.002
  STEP: creating pod @ 08/24/23 15:04:39.007
  Aug 24 15:04:41.067: INFO: Pod pod-hostip-49e88bc1-8bd0-4a50-9151-5b54fd2eb5d4 has hostIP: 192.168.121.161
  Aug 24 15:04:41.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3191" for this suite. @ 08/24/23 15:04:41.109
• [2.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 08/24/23 15:04:41.131
  Aug 24 15:04:41.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:04:41.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:41.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:41.169
  STEP: Creating configMap with name configmap-projected-all-test-volume-8b319c82-4e69-4687-8085-265d8630e877 @ 08/24/23 15:04:41.174
  STEP: Creating secret with name secret-projected-all-test-volume-b328669a-9427-41bc-a5fe-5a788da038e5 @ 08/24/23 15:04:41.182
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 08/24/23 15:04:41.19
  STEP: Saw pod success @ 08/24/23 15:04:45.242
  Aug 24 15:04:45.246: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod projected-volume-da13c3c1-659f-4c86-8d92-b2094e2c3e4c container projected-all-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:04:45.28
  Aug 24 15:04:45.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7829" for this suite. @ 08/24/23 15:04:45.319
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 08/24/23 15:04:45.341
  Aug 24 15:04:45.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:04:45.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:45.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:45.417
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:04:45.423
  STEP: Saw pod success @ 08/24/23 15:04:49.473
  Aug 24 15:04:49.478: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-b2da61d5-fea0-4373-980b-4dad6b96e5c5 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:04:49.491
  Aug 24 15:04:49.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1209" for this suite. @ 08/24/23 15:04:49.527
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 08/24/23 15:04:49.544
  Aug 24 15:04:49.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:04:49.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:49.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:49.575
  Aug 24 15:04:49.581: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: creating the pod @ 08/24/23 15:04:49.584
  STEP: submitting the pod to kubernetes @ 08/24/23 15:04:49.585
  Aug 24 15:04:51.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5667" for this suite. @ 08/24/23 15:04:51.73
• [2.197 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 08/24/23 15:04:51.745
  Aug 24 15:04:51.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 15:04:51.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:51.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:51.777
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 15:04:51.79
  STEP: create the pod with lifecycle hook @ 08/24/23 15:04:55.842
  STEP: check poststart hook @ 08/24/23 15:04:57.874
  STEP: delete the pod with lifecycle hook @ 08/24/23 15:04:57.887
  Aug 24 15:04:59.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1200" for this suite. @ 08/24/23 15:04:59.934
• [8.200 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 08/24/23 15:04:59.947
  Aug 24 15:04:59.947: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:04:59.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:59.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:59.983
  STEP: Creating configMap that has name configmap-test-emptyKey-1181f7be-fb01-4105-8f77-f935950c8cac @ 08/24/23 15:04:59.988
  Aug 24 15:04:59.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4199" for this suite. @ 08/24/23 15:05:00.001
• [0.065 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 08/24/23 15:05:00.013
  Aug 24 15:05:00.013: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:05:00.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:00.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:00.042
  STEP: Creating a simple DaemonSet "daemon-set" @ 08/24/23 15:05:00.082
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:05:00.098
  Aug 24 15:05:00.120: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:05:00.120: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:05:01.148: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:05:01.148: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:05:02.137: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:05:02.137: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:05:03.145: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:05:03.145: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:05:04.137: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 15:05:04.137: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 08/24/23 15:05:04.146
  Aug 24 15:05:04.198: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:05:04.198: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:05:05.232: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:05:05.232: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  Aug 24 15:05:06.216: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 15:05:06.216: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 08/24/23 15:05:06.216
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 15:05:06.232
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-515, will wait for the garbage collector to delete the pods @ 08/24/23 15:05:06.232
  Aug 24 15:05:06.304: INFO: Deleting DaemonSet.extensions daemon-set took: 13.446541ms
  Aug 24 15:05:06.405: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.384811ms
  Aug 24 15:05:08.015: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:05:08.015: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 15:05:08.023: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22366"},"items":null}

  Aug 24 15:05:08.029: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22366"},"items":null}

  Aug 24 15:05:08.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-515" for this suite. @ 08/24/23 15:05:08.064
• [8.062 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 08/24/23 15:05:08.08
  Aug 24 15:05:08.080: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:05:08.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:08.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:08.116
  STEP: creating the pod @ 08/24/23 15:05:08.121
  STEP: submitting the pod to kubernetes @ 08/24/23 15:05:08.122
  STEP: verifying the pod is in kubernetes @ 08/24/23 15:05:10.156
  STEP: updating the pod @ 08/24/23 15:05:10.161
  Aug 24 15:05:10.694: INFO: Successfully updated pod "pod-update-1759e333-e41b-4898-a6ef-2a92bca3d5ff"
  STEP: verifying the updated pod is in kubernetes @ 08/24/23 15:05:10.704
  Aug 24 15:05:10.714: INFO: Pod update OK
  Aug 24 15:05:10.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9165" for this suite. @ 08/24/23 15:05:10.725
• [2.662 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 08/24/23 15:05:10.743
  Aug 24 15:05:10.743: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename proxy @ 08/24/23 15:05:10.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:10.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:10.777
  Aug 24 15:05:10.781: INFO: Creating pod...
  Aug 24 15:05:12.809: INFO: Creating service...
  Aug 24 15:05:12.832: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/pods/agnhost/proxy/some/path/with/DELETE
  Aug 24 15:05:12.853: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:05:12.853: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/pods/agnhost/proxy/some/path/with/GET
  Aug 24 15:05:12.861: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 24 15:05:12.862: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/pods/agnhost/proxy/some/path/with/HEAD
  Aug 24 15:05:12.869: INFO: http.Client request:HEAD | StatusCode:200
  Aug 24 15:05:12.869: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/pods/agnhost/proxy/some/path/with/OPTIONS
  Aug 24 15:05:12.876: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:05:12.877: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/pods/agnhost/proxy/some/path/with/PATCH
  Aug 24 15:05:12.884: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:05:12.884: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/pods/agnhost/proxy/some/path/with/POST
  Aug 24 15:05:12.897: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:05:12.897: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/pods/agnhost/proxy/some/path/with/PUT
  Aug 24 15:05:12.902: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:05:12.902: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/services/test-service/proxy/some/path/with/DELETE
  Aug 24 15:05:12.911: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:05:12.911: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/services/test-service/proxy/some/path/with/GET
  Aug 24 15:05:12.930: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 24 15:05:12.930: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/services/test-service/proxy/some/path/with/HEAD
  Aug 24 15:05:12.939: INFO: http.Client request:HEAD | StatusCode:200
  Aug 24 15:05:12.939: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/services/test-service/proxy/some/path/with/OPTIONS
  Aug 24 15:05:12.947: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:05:12.947: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/services/test-service/proxy/some/path/with/PATCH
  Aug 24 15:05:12.956: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:05:12.956: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/services/test-service/proxy/some/path/with/POST
  Aug 24 15:05:12.968: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:05:12.968: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2940/services/test-service/proxy/some/path/with/PUT
  Aug 24 15:05:12.978: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:05:12.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2940" for this suite. @ 08/24/23 15:05:12.987
• [2.258 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 08/24/23 15:05:13.001
  Aug 24 15:05:13.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 15:05:13.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:13.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:13.038
  STEP: creating a ReplicationController @ 08/24/23 15:05:13.048
  STEP: waiting for RC to be added @ 08/24/23 15:05:13.058
  STEP: waiting for available Replicas @ 08/24/23 15:05:13.059
  STEP: patching ReplicationController @ 08/24/23 15:05:14.151
  STEP: waiting for RC to be modified @ 08/24/23 15:05:14.199
  STEP: patching ReplicationController status @ 08/24/23 15:05:14.2
  STEP: waiting for RC to be modified @ 08/24/23 15:05:14.215
  STEP: waiting for available Replicas @ 08/24/23 15:05:14.217
  STEP: fetching ReplicationController status @ 08/24/23 15:05:14.228
  STEP: patching ReplicationController scale @ 08/24/23 15:05:14.243
  STEP: waiting for RC to be modified @ 08/24/23 15:05:14.258
  STEP: waiting for ReplicationController's scale to be the max amount @ 08/24/23 15:05:14.259
  STEP: fetching ReplicationController; ensuring that it's patched @ 08/24/23 15:05:15.952
  STEP: updating ReplicationController status @ 08/24/23 15:05:15.958
  STEP: waiting for RC to be modified @ 08/24/23 15:05:15.97
  STEP: listing all ReplicationControllers @ 08/24/23 15:05:15.971
  STEP: checking that ReplicationController has expected values @ 08/24/23 15:05:15.976
  STEP: deleting ReplicationControllers by collection @ 08/24/23 15:05:15.976
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 08/24/23 15:05:15.991
  Aug 24 15:05:16.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:05:16.087454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5516" for this suite. @ 08/24/23 15:05:16.094
• [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 08/24/23 15:05:16.119
  Aug 24 15:05:16.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:05:16.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:16.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:16.16
  E0824 15:05:17.087641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:18.088449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:19.089543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:20.089832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:21.090085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:22.090797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:23.091591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:24.091893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:25.092121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:26.092795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:27.093447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:28.093128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:29.093244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:30.095163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:31.093652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:32.094023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:33.094176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:34.094310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:35.094506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:36.095650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:37.095812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:38.096521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:05:38.289: INFO: Container started at 2023-08-24 15:05:17 +0000 UTC, pod became ready at 2023-08-24 15:05:36 +0000 UTC
  Aug 24 15:05:38.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5427" for this suite. @ 08/24/23 15:05:38.298
• [22.192 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 08/24/23 15:05:38.312
  Aug 24 15:05:38.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:05:38.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:38.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:38.346
  STEP: Creating a pod to test env composition @ 08/24/23 15:05:38.351
  E0824 15:05:39.099570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:40.100275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:41.100186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:42.100296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:05:42.393
  Aug 24 15:05:42.399: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod var-expansion-7c070f66-5aca-4d44-9af2-7cb10c0843f1 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:05:42.415
  Aug 24 15:05:42.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3011" for this suite. @ 08/24/23 15:05:42.453
• [4.153 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 08/24/23 15:05:42.466
  Aug 24 15:05:42.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:05:42.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:42.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:42.498
  STEP: Creating configMap with name configmap-test-volume-map-7f56edf4-013e-4e92-bae7-e3f052cd8399 @ 08/24/23 15:05:42.505
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:05:42.517
  E0824 15:05:43.100995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:44.101276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:45.101596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:46.102356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:05:46.557
  Aug 24 15:05:46.562: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-be972db1-6097-4418-a59b-591be3a26516 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:05:46.577
  Aug 24 15:05:46.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7049" for this suite. @ 08/24/23 15:05:46.611
• [4.158 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 08/24/23 15:05:46.626
  Aug 24 15:05:46.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename watch @ 08/24/23 15:05:46.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:46.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:46.662
  STEP: creating a watch on configmaps @ 08/24/23 15:05:46.668
  STEP: creating a new configmap @ 08/24/23 15:05:46.67
  STEP: modifying the configmap once @ 08/24/23 15:05:46.678
  STEP: closing the watch once it receives two notifications @ 08/24/23 15:05:46.689
  Aug 24 15:05:46.689: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6876  44b49c54-83f3-4b77-8eb6-807442769f66 22699 0 2023-08-24 15:05:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:05:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:05:46.690: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6876  44b49c54-83f3-4b77-8eb6-807442769f66 22700 0 2023-08-24 15:05:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:05:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 08/24/23 15:05:46.69
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 08/24/23 15:05:46.701
  STEP: deleting the configmap @ 08/24/23 15:05:46.703
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 08/24/23 15:05:46.714
  Aug 24 15:05:46.714: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6876  44b49c54-83f3-4b77-8eb6-807442769f66 22701 0 2023-08-24 15:05:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:05:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:05:46.714: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6876  44b49c54-83f3-4b77-8eb6-807442769f66 22702 0 2023-08-24 15:05:46 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:05:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:05:46.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6876" for this suite. @ 08/24/23 15:05:46.724
• [0.114 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 08/24/23 15:05:46.741
  Aug 24 15:05:46.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 15:05:46.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:05:46.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:05:46.774
  Aug 24 15:05:46.801: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:05:47.102575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:48.102935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:49.103620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:50.104047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:51.105443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:52.105920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:53.105775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:54.105882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:55.106477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:56.106657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:57.107463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:58.107665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:59.107688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:00.108852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:01.109776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:02.110310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:03.110906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:04.111384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:05.111877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:06.112454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:07.112763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:08.113701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:09.113784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:10.113938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:11.114128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:12.114265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:13.114403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:14.114767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:15.114947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:16.115168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:17.115357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:18.116019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:19.116198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:20.116581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:21.118029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:22.118344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:23.119190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:24.119330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:25.120190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:26.120272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:27.121312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:28.122217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:29.122610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:30.122799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:31.123697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:32.124681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:33.124946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:34.125568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:35.126555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:36.126769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:37.127363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:38.128187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:39.128436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:40.128496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:41.128582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:42.128680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:43.129147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:44.130114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:45.130935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:46.131145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:06:46.849: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/24/23 15:06:46.856
  Aug 24 15:06:46.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/24/23 15:06:46.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:06:46.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:06:46.898
  Aug 24 15:06:46.939: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Aug 24 15:06:46.947: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Aug 24 15:06:46.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:06:47.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-157" for this suite. @ 08/24/23 15:06:47.108
  STEP: Destroying namespace "sched-preemption-62" for this suite. @ 08/24/23 15:06:47.127
  E0824 15:06:47.132015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [60.404 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 08/24/23 15:06:47.146
  Aug 24 15:06:47.147: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:06:47.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:06:47.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:06:47.185
  E0824 15:06:48.132587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:49.132566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:06:49.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5566" for this suite. @ 08/24/23 15:06:49.255
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 08/24/23 15:06:49.276
  Aug 24 15:06:49.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:06:49.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:06:49.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:06:49.306
  E0824 15:06:50.133041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:51.133228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 08/24/23 15:06:51.35
  Aug 24 15:06:51.352: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3984 pod-service-account-747668e4-9b8f-4014-8f79-92dd5054c93c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 08/24/23 15:06:51.658
  Aug 24 15:06:51.659: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3984 pod-service-account-747668e4-9b8f-4014-8f79-92dd5054c93c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 08/24/23 15:06:51.905
  Aug 24 15:06:51.905: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3984 pod-service-account-747668e4-9b8f-4014-8f79-92dd5054c93c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  E0824 15:06:52.133780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:06:52.161: INFO: Got root ca configmap in namespace "svcaccounts-3984"
  Aug 24 15:06:52.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3984" for this suite. @ 08/24/23 15:06:52.175
• [2.909 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 08/24/23 15:06:52.187
  Aug 24 15:06:52.187: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:06:52.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:06:52.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:06:52.229
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/24/23 15:06:52.237
  E0824 15:06:53.136287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:54.136643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:55.136910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:56.137301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:06:56.348
  Aug 24 15:06:56.369: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-4bee3409-660a-4a2e-bd91-d3d78511c769 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:06:56.379
  Aug 24 15:06:56.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1755" for this suite. @ 08/24/23 15:06:56.427
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 08/24/23 15:06:56.445
  Aug 24 15:06:56.445: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:06:56.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:06:56.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:06:56.48
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:06:56.485
  E0824 15:06:57.137903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:58.138446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:59.138860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:00.139156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:07:00.522
  Aug 24 15:07:00.531: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-ceef584a-734d-4c40-a06e-a8fa6c97b5e4 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:07:00.561
  Aug 24 15:07:00.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7368" for this suite. @ 08/24/23 15:07:00.599
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 08/24/23 15:07:00.621
  Aug 24 15:07:00.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename disruption @ 08/24/23 15:07:00.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:00.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:00.657
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:07:00.671
  E0824 15:07:01.140420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:02.141259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 08/24/23 15:07:02.691
  STEP: Waiting for all pods to be running @ 08/24/23 15:07:02.704
  Aug 24 15:07:02.715: INFO: running pods: 0 < 1
  E0824 15:07:03.141366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:04.141493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 08/24/23 15:07:04.723
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:07:04.74
  STEP: Patching PodDisruptionBudget status @ 08/24/23 15:07:04.754
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:07:04.779
  Aug 24 15:07:04.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6188" for this suite. @ 08/24/23 15:07:04.794
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 08/24/23 15:07:04.81
  Aug 24 15:07:04.810: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:07:04.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:04.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:04.84
  STEP: apply creating a deployment @ 08/24/23 15:07:04.844
  Aug 24 15:07:04.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7559" for this suite. @ 08/24/23 15:07:04.872
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 08/24/23 15:07:04.888
  Aug 24 15:07:04.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 15:07:04.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:04.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:04.92
  Aug 24 15:07:04.925: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:07:05.142445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:06.143579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:07.144045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:08.144501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:09.145600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:10.146444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:11.147297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:11.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2541" for this suite. @ 08/24/23 15:07:11.844
• [6.996 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 08/24/23 15:07:11.886
  Aug 24 15:07:11.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:07:11.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:11.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:11.932
  STEP: Creating a test headless service @ 08/24/23 15:07:11.95
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9947.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9947.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9947.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9947.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 78.34.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.34.78_udp@PTR;check="$$(dig +tcp +noall +answer +search 78.34.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.34.78_tcp@PTR;sleep 1; done
   @ 08/24/23 15:07:12.004
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9947.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9947.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9947.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9947.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9947.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 78.34.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.34.78_udp@PTR;check="$$(dig +tcp +noall +answer +search 78.34.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.34.78_tcp@PTR;sleep 1; done
   @ 08/24/23 15:07:12.005
  STEP: creating a pod to probe DNS @ 08/24/23 15:07:12.005
  STEP: submitting the pod to kubernetes @ 08/24/23 15:07:12.006
  E0824 15:07:12.147827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:13.148758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:07:14.065
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:07:14.072
  Aug 24 15:07:14.088: INFO: Unable to read wheezy_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:14.096: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:14.105: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:14.111: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  E0824 15:07:14.149183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:14.159: INFO: Unable to read jessie_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:14.165: INFO: Unable to read jessie_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:14.170: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:14.176: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:14.200: INFO: Lookups using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 failed for: [wheezy_udp@dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_udp@dns-test-service.dns-9947.svc.cluster.local jessie_tcp@dns-test-service.dns-9947.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local]

  Aug 24 15:07:14.211: INFO: Pod client logs for webserver: 
  Aug 24 15:07:14.221: INFO: Pod client logs for querier: 
  Aug 24 15:07:14.230: INFO: Pod client logs for jessie-querier: 
  E0824 15:07:15.149766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:16.151495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:17.151445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:18.152422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:19.152693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:19.237: INFO: Unable to read wheezy_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.245: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.252: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.257: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.289: INFO: Unable to read jessie_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.295: INFO: Unable to read jessie_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.304: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.311: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:19.336: INFO: Lookups using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 failed for: [wheezy_udp@dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_udp@dns-test-service.dns-9947.svc.cluster.local jessie_tcp@dns-test-service.dns-9947.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local]

  Aug 24 15:07:19.349: INFO: Pod client logs for webserver: 
  Aug 24 15:07:19.361: INFO: Pod client logs for querier: 
  Aug 24 15:07:19.374: INFO: Pod client logs for jessie-querier: 
  E0824 15:07:20.152916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:21.153833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:22.155654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:23.156740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:24.157110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:24.239: INFO: Unable to read wheezy_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.245: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.250: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.255: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.296: INFO: Unable to read jessie_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.301: INFO: Unable to read jessie_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.321: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.326: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:24.342: INFO: Lookups using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 failed for: [wheezy_udp@dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_udp@dns-test-service.dns-9947.svc.cluster.local jessie_tcp@dns-test-service.dns-9947.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local]

  Aug 24 15:07:24.392: INFO: Pod client logs for webserver: 
  Aug 24 15:07:24.412: INFO: Pod client logs for querier: 
  Aug 24 15:07:24.426: INFO: Pod client logs for jessie-querier: 
  E0824 15:07:25.157408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:26.158210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:27.159097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:28.159796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:29.159968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:29.239: INFO: Unable to read wheezy_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.245: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.252: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.259: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.292: INFO: Unable to read jessie_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.298: INFO: Unable to read jessie_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.309: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.318: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:29.349: INFO: Lookups using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 failed for: [wheezy_udp@dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_udp@dns-test-service.dns-9947.svc.cluster.local jessie_tcp@dns-test-service.dns-9947.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local]

  Aug 24 15:07:29.366: INFO: Pod client logs for webserver: 
  Aug 24 15:07:29.376: INFO: Pod client logs for querier: 
  Aug 24 15:07:29.387: INFO: Pod client logs for jessie-querier: 
  E0824 15:07:30.160718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:31.161387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:32.161906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:33.162860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:34.163031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:34.237: INFO: Unable to read wheezy_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.245: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.252: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.257: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.286: INFO: Unable to read jessie_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.291: INFO: Unable to read jessie_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.297: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.304: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:34.328: INFO: Lookups using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 failed for: [wheezy_udp@dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_udp@dns-test-service.dns-9947.svc.cluster.local jessie_tcp@dns-test-service.dns-9947.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local]

  Aug 24 15:07:34.340: INFO: Pod client logs for webserver: 
  Aug 24 15:07:34.352: INFO: Pod client logs for querier: 
  Aug 24 15:07:34.362: INFO: Pod client logs for jessie-querier: 
  E0824 15:07:35.163759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:36.163949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:37.164137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:38.165208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:39.165399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:39.239: INFO: Unable to read wheezy_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.244: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.250: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.256: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.286: INFO: Unable to read jessie_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.292: INFO: Unable to read jessie_tcp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.298: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.304: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:39.326: INFO: Lookups using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 failed for: [wheezy_udp@dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@dns-test-service.dns-9947.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_udp@dns-test-service.dns-9947.svc.cluster.local jessie_tcp@dns-test-service.dns-9947.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local]

  Aug 24 15:07:39.336: INFO: Pod client logs for webserver: 
  Aug 24 15:07:39.346: INFO: Pod client logs for querier: 
  Aug 24 15:07:39.356: INFO: Pod client logs for jessie-querier: 
  E0824 15:07:40.165606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:41.165945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:42.166766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:43.166935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:44.167200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:44.289: INFO: Unable to read jessie_udp@dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:44.300: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:44.306: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local from pod dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86: the server could not find the requested resource (get pods dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86)
  Aug 24 15:07:44.324: INFO: Lookups using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 failed for: [jessie_udp@dns-test-service.dns-9947.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9947.svc.cluster.local]

  Aug 24 15:07:44.333: INFO: Pod client logs for webserver: 
  Aug 24 15:07:44.348: INFO: Pod client logs for querier: 
  Aug 24 15:07:44.384: INFO: Pod client logs for jessie-querier: 
  E0824 15:07:45.167921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:46.168463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:47.168516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:48.168463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:49.168812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:49.359: INFO: DNS probes using dns-9947/dns-test-65ac917d-eb93-4bba-be7e-9986b7796c86 succeeded

  Aug 24 15:07:49.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:07:49.368
  STEP: deleting the test service @ 08/24/23 15:07:49.439
  STEP: deleting the test headless service @ 08/24/23 15:07:49.481
  STEP: Destroying namespace "dns-9947" for this suite. @ 08/24/23 15:07:49.546
• [37.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 08/24/23 15:07:49.572
  Aug 24 15:07:49.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:07:49.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:49.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:49.611
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/24/23 15:07:49.622
  E0824 15:07:50.171554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:51.172092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:52.172500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:53.172547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:07:53.662
  Aug 24 15:07:53.667: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-5aeea84e-1670-49db-a5a7-593b8fa7e3d3 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:07:53.677
  Aug 24 15:07:53.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7061" for this suite. @ 08/24/23 15:07:53.709
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 08/24/23 15:07:53.733
  Aug 24 15:07:53.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:07:53.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:53.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:53.776
  STEP: Creating ServiceAccount "e2e-sa-9qzvs"  @ 08/24/23 15:07:53.78
  Aug 24 15:07:53.788: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9qzvs"  @ 08/24/23 15:07:53.788
  Aug 24 15:07:53.801: INFO: AutomountServiceAccountToken: true
  Aug 24 15:07:53.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9390" for this suite. @ 08/24/23 15:07:53.808
• [0.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 08/24/23 15:07:53.822
  Aug 24 15:07:53.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:07:53.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:53.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:53.854
  Aug 24 15:07:53.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:07:54.173103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:55.173914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/24/23 15:07:56.159
  Aug 24 15:07:56.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-848 --namespace=crd-publish-openapi-848 create -f -'
  E0824 15:07:56.174091      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:57.174341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:57.267: INFO: stderr: ""
  Aug 24 15:07:57.267: INFO: stdout: "e2e-test-crd-publish-openapi-1573-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 24 15:07:57.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-848 --namespace=crd-publish-openapi-848 delete e2e-test-crd-publish-openapi-1573-crds test-cr'
  Aug 24 15:07:57.419: INFO: stderr: ""
  Aug 24 15:07:57.419: INFO: stdout: "e2e-test-crd-publish-openapi-1573-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Aug 24 15:07:57.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-848 --namespace=crd-publish-openapi-848 apply -f -'
  E0824 15:07:58.174898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:58.256: INFO: stderr: ""
  Aug 24 15:07:58.256: INFO: stdout: "e2e-test-crd-publish-openapi-1573-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 24 15:07:58.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-848 --namespace=crd-publish-openapi-848 delete e2e-test-crd-publish-openapi-1573-crds test-cr'
  Aug 24 15:07:58.395: INFO: stderr: ""
  Aug 24 15:07:58.395: INFO: stdout: "e2e-test-crd-publish-openapi-1573-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 08/24/23 15:07:58.395
  Aug 24 15:07:58.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-848 explain e2e-test-crd-publish-openapi-1573-crds'
  Aug 24 15:07:58.727: INFO: stderr: ""
  Aug 24 15:07:58.727: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1573-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0824 15:07:59.175984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:00.176623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:00.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-848" for this suite. @ 08/24/23 15:08:00.792
• [6.980 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 08/24/23 15:08:00.813
  Aug 24 15:08:00.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:08:00.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:08:00.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:08:00.844
  STEP: Creating pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745 @ 08/24/23 15:08:00.849
  E0824 15:08:01.176381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:02.177089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:08:02.882
  Aug 24 15:08:02.887: INFO: Initial restart count of pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 is 0
  Aug 24 15:08:02.891: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:03.177614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:04.177713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:04.899: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:05.177838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:06.178556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:06.906: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:07.179456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:08.179643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:08.913: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:09.179979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:10.180177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:10.919: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:11.180764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:12.181413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:12.931: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:13.181563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:14.181817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:14.938: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:15.182248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:16.182541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:16.944: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:17.182764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:18.183697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:18.954: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:19.183996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:20.184088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:20.962: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:21.184457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:22.184900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:22.969: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:23.185153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:24.185310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:24.978: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:25.185964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:26.186078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:26.987: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:27.186638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:28.186676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:28.996: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:29.187226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:30.187537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:31.003: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:31.187902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:32.187796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:33.010: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:33.188558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:34.189054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:35.017: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:35.189616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:36.190005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:37.025: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:37.190575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:38.190652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:39.033: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:39.191450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:40.191551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:41.043: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:41.192455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:42.192662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:43.049: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:43.193640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:44.193812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:45.059: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:45.194622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:46.194957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:47.067: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:47.195667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:48.195943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:49.084: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:49.196625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:50.196800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:51.095: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:51.197566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:52.197799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:53.102: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:53.198516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:54.198858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:55.112: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:55.199191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:56.199670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:57.120: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:57.199830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:58.199753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:59.127: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:08:59.200670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:00.201142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:01.136: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:09:01.201751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:02.202013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:03.145: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:09:03.202680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:04.202582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:05.154: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  E0824 15:09:05.202947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:06.203179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:07.163: INFO: Get pod test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 in namespace container-probe-745
  Aug 24 15:09:07.164: INFO: Restart count of pod container-probe-745/test-grpc-746985fe-0971-4307-9b24-ae96a5fbd046 is now 1 (1m4.276838871s elapsed)
  Aug 24 15:09:07.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:09:07.177
  STEP: Destroying namespace "container-probe-745" for this suite. @ 08/24/23 15:09:07.202
  E0824 15:09:07.203703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [66.411 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 08/24/23 15:09:07.229
  Aug 24 15:09:07.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:09:07.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:07.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:07.269
  E0824 15:09:08.204226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:09.204415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:09.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:09:09.316: INFO: Deleting pod "var-expansion-ff25b77e-b2a5-4f79-954e-03f58703f3a4" in namespace "var-expansion-7294"
  Aug 24 15:09:09.328: INFO: Wait up to 5m0s for pod "var-expansion-ff25b77e-b2a5-4f79-954e-03f58703f3a4" to be fully deleted
  E0824 15:09:10.204647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:11.205059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-7294" for this suite. @ 08/24/23 15:09:11.347
• [4.129 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 08/24/23 15:09:11.358
  Aug 24 15:09:11.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:09:11.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:11.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:11.391
  STEP: creating a collection of services @ 08/24/23 15:09:11.395
  Aug 24 15:09:11.396: INFO: Creating e2e-svc-a-dwpxd
  Aug 24 15:09:11.416: INFO: Creating e2e-svc-b-5ddxd
  Aug 24 15:09:11.453: INFO: Creating e2e-svc-c-9jvmk
  STEP: deleting service collection @ 08/24/23 15:09:11.496
  Aug 24 15:09:11.564: INFO: Collection of services has been deleted
  Aug 24 15:09:11.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5974" for this suite. @ 08/24/23 15:09:11.571
• [0.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 08/24/23 15:09:11.584
  Aug 24 15:09:11.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:09:11.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:11.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:11.621
  STEP: creating an Endpoint @ 08/24/23 15:09:11.63
  STEP: waiting for available Endpoint @ 08/24/23 15:09:11.638
  STEP: listing all Endpoints @ 08/24/23 15:09:11.64
  STEP: updating the Endpoint @ 08/24/23 15:09:11.649
  STEP: fetching the Endpoint @ 08/24/23 15:09:11.658
  STEP: patching the Endpoint @ 08/24/23 15:09:11.665
  STEP: fetching the Endpoint @ 08/24/23 15:09:11.684
  STEP: deleting the Endpoint by Collection @ 08/24/23 15:09:11.691
  STEP: waiting for Endpoint deletion @ 08/24/23 15:09:11.708
  STEP: fetching the Endpoint @ 08/24/23 15:09:11.71
  Aug 24 15:09:11.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8751" for this suite. @ 08/24/23 15:09:11.73
• [0.157 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 08/24/23 15:09:11.744
  Aug 24 15:09:11.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:09:11.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:11.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:11.786
  Aug 24 15:09:11.823: INFO: created pod pod-service-account-defaultsa
  Aug 24 15:09:11.823: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Aug 24 15:09:11.833: INFO: created pod pod-service-account-mountsa
  Aug 24 15:09:11.833: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Aug 24 15:09:11.860: INFO: created pod pod-service-account-nomountsa
  Aug 24 15:09:11.860: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Aug 24 15:09:11.894: INFO: created pod pod-service-account-defaultsa-mountspec
  Aug 24 15:09:11.894: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Aug 24 15:09:11.915: INFO: created pod pod-service-account-mountsa-mountspec
  Aug 24 15:09:11.915: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Aug 24 15:09:11.945: INFO: created pod pod-service-account-nomountsa-mountspec
  Aug 24 15:09:11.945: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Aug 24 15:09:11.998: INFO: created pod pod-service-account-defaultsa-nomountspec
  Aug 24 15:09:11.998: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Aug 24 15:09:12.044: INFO: created pod pod-service-account-mountsa-nomountspec
  Aug 24 15:09:12.044: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Aug 24 15:09:12.091: INFO: created pod pod-service-account-nomountsa-nomountspec
  Aug 24 15:09:12.092: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Aug 24 15:09:12.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4241" for this suite. @ 08/24/23 15:09:12.181
  E0824 15:09:12.205966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.507 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 08/24/23 15:09:12.262
  Aug 24 15:09:12.262: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename tables @ 08/24/23 15:09:12.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:12.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:12.599
  Aug 24 15:09:12.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1284" for this suite. @ 08/24/23 15:09:12.716
• [0.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 08/24/23 15:09:12.861
  Aug 24 15:09:12.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename disruption @ 08/24/23 15:09:12.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:12.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:12.967
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:09:13.002
  E0824 15:09:13.229396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:14.230352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 08/24/23 15:09:15.083
  Aug 24 15:09:15.108: INFO: running pods: 0 < 3
  E0824 15:09:15.231165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:16.231619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:17.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4146" for this suite. @ 08/24/23 15:09:17.152
• [4.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 08/24/23 15:09:17.169
  Aug 24 15:09:17.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename ingress @ 08/24/23 15:09:17.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:17.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:17.201
  STEP: getting /apis @ 08/24/23 15:09:17.208
  STEP: getting /apis/networking.k8s.io @ 08/24/23 15:09:17.219
  STEP: getting /apis/networking.k8s.iov1 @ 08/24/23 15:09:17.224
  STEP: creating @ 08/24/23 15:09:17.225
  E0824 15:09:17.232465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 08/24/23 15:09:17.253
  STEP: listing @ 08/24/23 15:09:17.265
  STEP: watching @ 08/24/23 15:09:17.275
  Aug 24 15:09:17.275: INFO: starting watch
  STEP: cluster-wide listing @ 08/24/23 15:09:17.277
  STEP: cluster-wide watching @ 08/24/23 15:09:17.287
  Aug 24 15:09:17.287: INFO: starting watch
  STEP: patching @ 08/24/23 15:09:17.29
  STEP: updating @ 08/24/23 15:09:17.306
  Aug 24 15:09:17.336: INFO: waiting for watch events with expected annotations
  Aug 24 15:09:17.336: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/24/23 15:09:17.337
  STEP: updating /status @ 08/24/23 15:09:17.349
  STEP: get /status @ 08/24/23 15:09:17.367
  STEP: deleting @ 08/24/23 15:09:17.373
  STEP: deleting a collection @ 08/24/23 15:09:17.405
  Aug 24 15:09:17.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8305" for this suite. @ 08/24/23 15:09:17.485
• [0.339 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 08/24/23 15:09:17.507
  Aug 24 15:09:17.507: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:09:17.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:17.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:17.653
  STEP: create the rc1 @ 08/24/23 15:09:17.684
  STEP: create the rc2 @ 08/24/23 15:09:17.699
  E0824 15:09:18.233564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:19.234061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:20.251973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:21.252767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:22.263573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:23.267707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 08/24/23 15:09:23.841
  E0824 15:09:24.279658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:25.279636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:26.280621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:27.296446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:28.343557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:29.344368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:30.348007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 08/24/23 15:09:30.928
  STEP: wait for the rc to be deleted @ 08/24/23 15:09:31.099
  E0824 15:09:31.348907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:32.396175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:33.396360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:34.396642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:35.396665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:36.229: INFO: 95 pods remaining
  Aug 24 15:09:36.229: INFO: 65 pods has nil DeletionTimestamp
  Aug 24 15:09:36.229: INFO: 
  E0824 15:09:36.397519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:37.397872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:38.398141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:39.399012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:40.399616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:41.221: INFO: 82 pods remaining
  Aug 24 15:09:41.221: INFO: 50 pods has nil DeletionTimestamp
  Aug 24 15:09:41.221: INFO: 
  E0824 15:09:41.400611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:42.400752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:43.400929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:44.401645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:45.401961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/24/23 15:09:46.175
  Aug 24 15:09:46.354: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 15:09:46.354: INFO: Deleting pod "simpletest-rc-to-be-deleted-46cpf" in namespace "gc-1658"
  Aug 24 15:09:46.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-46z7h" in namespace "gc-1658"
  E0824 15:09:46.402871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:46.423: INFO: Deleting pod "simpletest-rc-to-be-deleted-49h7x" in namespace "gc-1658"
  Aug 24 15:09:46.489: INFO: Deleting pod "simpletest-rc-to-be-deleted-4l2wt" in namespace "gc-1658"
  Aug 24 15:09:46.580: INFO: Deleting pod "simpletest-rc-to-be-deleted-52jsd" in namespace "gc-1658"
  Aug 24 15:09:46.633: INFO: Deleting pod "simpletest-rc-to-be-deleted-5659h" in namespace "gc-1658"
  Aug 24 15:09:46.743: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g9qb" in namespace "gc-1658"
  Aug 24 15:09:46.934: INFO: Deleting pod "simpletest-rc-to-be-deleted-5h2hs" in namespace "gc-1658"
  Aug 24 15:09:46.972: INFO: Deleting pod "simpletest-rc-to-be-deleted-5stkj" in namespace "gc-1658"
  Aug 24 15:09:47.052: INFO: Deleting pod "simpletest-rc-to-be-deleted-5zhgd" in namespace "gc-1658"
  Aug 24 15:09:47.105: INFO: Deleting pod "simpletest-rc-to-be-deleted-62rvl" in namespace "gc-1658"
  Aug 24 15:09:47.204: INFO: Deleting pod "simpletest-rc-to-be-deleted-668j7" in namespace "gc-1658"
  Aug 24 15:09:47.242: INFO: Deleting pod "simpletest-rc-to-be-deleted-6clv7" in namespace "gc-1658"
  Aug 24 15:09:47.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-6k6h6" in namespace "gc-1658"
  Aug 24 15:09:47.391: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qsj6" in namespace "gc-1658"
  E0824 15:09:47.403727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:47.497: INFO: Deleting pod "simpletest-rc-to-be-deleted-6rgr6" in namespace "gc-1658"
  Aug 24 15:09:47.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-6w8hs" in namespace "gc-1658"
  Aug 24 15:09:47.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-72gnz" in namespace "gc-1658"
  Aug 24 15:09:47.730: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bh76" in namespace "gc-1658"
  Aug 24 15:09:47.781: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qzlt" in namespace "gc-1658"
  Aug 24 15:09:47.893: INFO: Deleting pod "simpletest-rc-to-be-deleted-7s6w9" in namespace "gc-1658"
  Aug 24 15:09:47.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-88ng8" in namespace "gc-1658"
  Aug 24 15:09:48.023: INFO: Deleting pod "simpletest-rc-to-be-deleted-8b466" in namespace "gc-1658"
  Aug 24 15:09:48.072: INFO: Deleting pod "simpletest-rc-to-be-deleted-8l2s9" in namespace "gc-1658"
  Aug 24 15:09:48.152: INFO: Deleting pod "simpletest-rc-to-be-deleted-9d6vt" in namespace "gc-1658"
  Aug 24 15:09:48.240: INFO: Deleting pod "simpletest-rc-to-be-deleted-9fcqg" in namespace "gc-1658"
  Aug 24 15:09:48.287: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lwzx" in namespace "gc-1658"
  Aug 24 15:09:48.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-9nrtx" in namespace "gc-1658"
  E0824 15:09:48.404469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:48.540: INFO: Deleting pod "simpletest-rc-to-be-deleted-bh5hc" in namespace "gc-1658"
  Aug 24 15:09:48.737: INFO: Deleting pod "simpletest-rc-to-be-deleted-br8dt" in namespace "gc-1658"
  Aug 24 15:09:48.772: INFO: Deleting pod "simpletest-rc-to-be-deleted-bslln" in namespace "gc-1658"
  Aug 24 15:09:48.792: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvgn9" in namespace "gc-1658"
  Aug 24 15:09:48.833: INFO: Deleting pod "simpletest-rc-to-be-deleted-c7qxz" in namespace "gc-1658"
  Aug 24 15:09:48.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfzkc" in namespace "gc-1658"
  Aug 24 15:09:48.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgbrk" in namespace "gc-1658"
  Aug 24 15:09:49.014: INFO: Deleting pod "simpletest-rc-to-be-deleted-cmd2p" in namespace "gc-1658"
  Aug 24 15:09:49.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-cqsgg" in namespace "gc-1658"
  Aug 24 15:09:49.210: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctv6f" in namespace "gc-1658"
  Aug 24 15:09:49.298: INFO: Deleting pod "simpletest-rc-to-be-deleted-cxdm7" in namespace "gc-1658"
  Aug 24 15:09:49.381: INFO: Deleting pod "simpletest-rc-to-be-deleted-d9v4r" in namespace "gc-1658"
  E0824 15:09:49.407463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:49.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-fq5d9" in namespace "gc-1658"
  Aug 24 15:09:49.589: INFO: Deleting pod "simpletest-rc-to-be-deleted-fv4vr" in namespace "gc-1658"
  Aug 24 15:09:49.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwrqp" in namespace "gc-1658"
  Aug 24 15:09:49.906: INFO: Deleting pod "simpletest-rc-to-be-deleted-gmdml" in namespace "gc-1658"
  Aug 24 15:09:49.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpw5k" in namespace "gc-1658"
  Aug 24 15:09:50.096: INFO: Deleting pod "simpletest-rc-to-be-deleted-j697m" in namespace "gc-1658"
  Aug 24 15:09:50.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-jx4hg" in namespace "gc-1658"
  Aug 24 15:09:50.226: INFO: Deleting pod "simpletest-rc-to-be-deleted-k77hm" in namespace "gc-1658"
  Aug 24 15:09:50.262: INFO: Deleting pod "simpletest-rc-to-be-deleted-k8d5c" in namespace "gc-1658"
  Aug 24 15:09:50.383: INFO: Deleting pod "simpletest-rc-to-be-deleted-kftp9" in namespace "gc-1658"
  E0824 15:09:50.407961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:50.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1658" for this suite. @ 08/24/23 15:09:50.529
• [33.042 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 08/24/23 15:09:50.554
  Aug 24 15:09:50.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/24/23 15:09:50.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:50.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:50.721
  STEP: creating a target pod @ 08/24/23 15:09:50.734
  E0824 15:09:51.414751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:52.414833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 08/24/23 15:09:52.822
  E0824 15:09:53.415503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:54.415778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 08/24/23 15:09:54.88
  Aug 24 15:09:54.880: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2708 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:09:54.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:09:54.882: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:09:54.882: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-2708/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 24 15:09:55.041: INFO: Exec stderr: ""
  Aug 24 15:09:55.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2708" for this suite. @ 08/24/23 15:09:55.12
• [4.578 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 08/24/23 15:09:55.134
  Aug 24 15:09:55.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:09:55.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:55.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:55.18
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:09:55.185
  E0824 15:09:55.416546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:56.417050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:57.417631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:58.417761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:09:59.242
  Aug 24 15:09:59.248: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-a6e7cab3-07da-4232-83a5-091aa958b033 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:09:59.263
  Aug 24 15:09:59.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5836" for this suite. @ 08/24/23 15:09:59.302
• [4.186 seconds]
------------------------------
S
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 08/24/23 15:09:59.321
  Aug 24 15:09:59.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename controllerrevisions @ 08/24/23 15:09:59.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:59.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:59.368
  STEP: Creating DaemonSet "e2e-5sxl5-daemon-set" @ 08/24/23 15:09:59.413
  E0824 15:09:59.418035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:09:59.424
  Aug 24 15:09:59.440: INFO: Number of nodes with available pods controlled by daemonset e2e-5sxl5-daemon-set: 0
  Aug 24 15:09:59.440: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:10:00.418356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:00.502: INFO: Number of nodes with available pods controlled by daemonset e2e-5sxl5-daemon-set: 0
  Aug 24 15:10:00.502: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:10:01.419546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:01.456: INFO: Number of nodes with available pods controlled by daemonset e2e-5sxl5-daemon-set: 2
  Aug 24 15:10:01.456: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:10:02.419890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:02.455: INFO: Number of nodes with available pods controlled by daemonset e2e-5sxl5-daemon-set: 3
  Aug 24 15:10:02.455: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-5sxl5-daemon-set
  STEP: Confirm DaemonSet "e2e-5sxl5-daemon-set" successfully created with "daemonset-name=e2e-5sxl5-daemon-set" label @ 08/24/23 15:10:02.461
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-5sxl5-daemon-set" @ 08/24/23 15:10:02.472
  Aug 24 15:10:02.478: INFO: Located ControllerRevision: "e2e-5sxl5-daemon-set-67fb55447b"
  STEP: Patching ControllerRevision "e2e-5sxl5-daemon-set-67fb55447b" @ 08/24/23 15:10:02.486
  Aug 24 15:10:02.498: INFO: e2e-5sxl5-daemon-set-67fb55447b has been patched
  STEP: Create a new ControllerRevision @ 08/24/23 15:10:02.498
  Aug 24 15:10:02.509: INFO: Created ControllerRevision: e2e-5sxl5-daemon-set-84ff8df886
  STEP: Confirm that there are two ControllerRevisions @ 08/24/23 15:10:02.509
  Aug 24 15:10:02.510: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:10:02.516: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-5sxl5-daemon-set-67fb55447b" @ 08/24/23 15:10:02.516
  STEP: Confirm that there is only one ControllerRevision @ 08/24/23 15:10:02.527
  Aug 24 15:10:02.527: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:10:02.537: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-5sxl5-daemon-set-84ff8df886" @ 08/24/23 15:10:02.542
  Aug 24 15:10:02.563: INFO: e2e-5sxl5-daemon-set-84ff8df886 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 08/24/23 15:10:02.563
  W0824 15:10:02.579441      14 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 08/24/23 15:10:02.58
  Aug 24 15:10:02.580: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0824 15:10:03.420069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:03.589: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:10:03.597: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-5sxl5-daemon-set-84ff8df886=updated" @ 08/24/23 15:10:03.597
  STEP: Confirm that there is only one ControllerRevision @ 08/24/23 15:10:03.613
  Aug 24 15:10:03.613: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:10:03.617: INFO: Found 1 ControllerRevisions
  Aug 24 15:10:03.623: INFO: ControllerRevision "e2e-5sxl5-daemon-set-68688c9b95" has revision 3
  STEP: Deleting DaemonSet "e2e-5sxl5-daemon-set" @ 08/24/23 15:10:03.628
  STEP: deleting DaemonSet.extensions e2e-5sxl5-daemon-set in namespace controllerrevisions-784, will wait for the garbage collector to delete the pods @ 08/24/23 15:10:03.628
  Aug 24 15:10:03.695: INFO: Deleting DaemonSet.extensions e2e-5sxl5-daemon-set took: 9.452563ms
  Aug 24 15:10:03.795: INFO: Terminating DaemonSet.extensions e2e-5sxl5-daemon-set pods took: 100.206047ms
  E0824 15:10:04.420425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:05.402: INFO: Number of nodes with available pods controlled by daemonset e2e-5sxl5-daemon-set: 0
  Aug 24 15:10:05.403: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-5sxl5-daemon-set
  Aug 24 15:10:05.415: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26090"},"items":null}

  Aug 24 15:10:05.419: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26090"},"items":null}

  E0824 15:10:05.420518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:05.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-784" for this suite. @ 08/24/23 15:10:05.467
• [6.155 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 08/24/23 15:10:05.477
  Aug 24 15:10:05.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl-logs @ 08/24/23 15:10:05.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:05.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:05.511
  STEP: creating an pod @ 08/24/23 15:10:05.515
  Aug 24 15:10:05.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Aug 24 15:10:05.696: INFO: stderr: ""
  Aug 24 15:10:05.696: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 08/24/23 15:10:05.702
  Aug 24 15:10:05.703: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0824 15:10:06.423338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:07.424035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:07.720: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 08/24/23 15:10:07.72
  Aug 24 15:10:07.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 logs logs-generator logs-generator'
  Aug 24 15:10:07.884: INFO: stderr: ""
  Aug 24 15:10:07.884: INFO: stdout: "I0824 15:10:06.738804       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/v4wz 229\nI0824 15:10:06.938393       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/mr9 512\nI0824 15:10:07.138823       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/8m9k 571\nI0824 15:10:07.338245       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/fkz 391\nI0824 15:10:07.538665       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/qm4v 589\nI0824 15:10:07.737983       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/qrdv 381\n"
  STEP: limiting log lines @ 08/24/23 15:10:07.884
  Aug 24 15:10:07.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 logs logs-generator logs-generator --tail=1'
  Aug 24 15:10:08.013: INFO: stderr: ""
  Aug 24 15:10:08.014: INFO: stdout: "I0824 15:10:07.939423       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/2xd 430\n"
  Aug 24 15:10:08.014: INFO: got output "I0824 15:10:07.939423       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/2xd 430\n"
  STEP: limiting log bytes @ 08/24/23 15:10:08.014
  Aug 24 15:10:08.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 logs logs-generator logs-generator --limit-bytes=1'
  Aug 24 15:10:08.158: INFO: stderr: ""
  Aug 24 15:10:08.158: INFO: stdout: "I"
  Aug 24 15:10:08.158: INFO: got output "I"
  STEP: exposing timestamps @ 08/24/23 15:10:08.159
  Aug 24 15:10:08.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 logs logs-generator logs-generator --tail=1 --timestamps'
  Aug 24 15:10:08.316: INFO: stderr: ""
  Aug 24 15:10:08.316: INFO: stdout: "2023-08-24T15:10:08.138146415Z I0824 15:10:08.138061       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/qj7b 562\n"
  Aug 24 15:10:08.316: INFO: got output "2023-08-24T15:10:08.138146415Z I0824 15:10:08.138061       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/qj7b 562\n"
  STEP: restricting to a time range @ 08/24/23 15:10:08.316
  E0824 15:10:08.424628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:09.424762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:10.424943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:10.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 logs logs-generator logs-generator --since=1s'
  Aug 24 15:10:10.992: INFO: stderr: ""
  Aug 24 15:10:10.992: INFO: stdout: "I0824 15:10:10.138051       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/d2dv 371\nI0824 15:10:10.338553       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/krzs 575\nI0824 15:10:10.537971       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/47tg 427\nI0824 15:10:10.738500       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/js7 240\nI0824 15:10:10.938865       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/z2l 340\n"
  Aug 24 15:10:10.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 logs logs-generator logs-generator --since=24h'
  Aug 24 15:10:11.184: INFO: stderr: ""
  Aug 24 15:10:11.184: INFO: stdout: "I0824 15:10:06.738804       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/v4wz 229\nI0824 15:10:06.938393       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/mr9 512\nI0824 15:10:07.138823       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/8m9k 571\nI0824 15:10:07.338245       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/fkz 391\nI0824 15:10:07.538665       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/qm4v 589\nI0824 15:10:07.737983       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/qrdv 381\nI0824 15:10:07.939423       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/2xd 430\nI0824 15:10:08.138061       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/qj7b 562\nI0824 15:10:08.338694       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/lzn5 404\nI0824 15:10:08.538266       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/mlp 227\nI0824 15:10:08.738886       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/5qf 231\nI0824 15:10:08.938502       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/kg79 278\nI0824 15:10:09.137901       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/htc 480\nI0824 15:10:09.338330       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/pnm8 212\nI0824 15:10:09.537949       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/77q 518\nI0824 15:10:09.738287       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/mvl9 212\nI0824 15:10:09.938737       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/h22 285\nI0824 15:10:10.138051       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/d2dv 371\nI0824 15:10:10.338553       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/krzs 575\nI0824 15:10:10.537971       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/47tg 427\nI0824 15:10:10.738500       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/js7 240\nI0824 15:10:10.938865       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/z2l 340\nI0824 15:10:11.138301       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/n4p 208\n"
  Aug 24 15:10:11.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-logs-4264 delete pod logs-generator'
  E0824 15:10:11.425170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:12.098: INFO: stderr: ""
  Aug 24 15:10:12.098: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Aug 24 15:10:12.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4264" for this suite. @ 08/24/23 15:10:12.105
• [6.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 08/24/23 15:10:12.128
  Aug 24 15:10:12.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 15:10:12.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:12.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:12.159
  Aug 24 15:10:12.162: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:10:12.426149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:12.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8817" for this suite. @ 08/24/23 15:10:13.048
• [0.949 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 08/24/23 15:10:13.082
  Aug 24 15:10:13.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:10:13.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:13.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:13.221
  STEP: Creating the pod @ 08/24/23 15:10:13.237
  E0824 15:10:13.426444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:14.426632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:15.427159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:15.830: INFO: Successfully updated pod "labelsupdate72b325ca-1bc1-455c-b222-1a3e04edbd32"
  E0824 15:10:16.428039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:17.428280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:17.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3301" for this suite. @ 08/24/23 15:10:17.883
• [4.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 08/24/23 15:10:17.903
  Aug 24 15:10:17.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:10:17.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:17.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:17.934
  STEP: Creating secret with name secret-test-d02b984b-b081-4f95-a5c8-a4f6b6917e1b @ 08/24/23 15:10:17.972
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:10:17.98
  E0824 15:10:18.428531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:19.429235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:20.430486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:21.431573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:10:22.012
  Aug 24 15:10:22.017: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-44bfd210-91c5-4015-8edb-31f33801f29e container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:10:22.028
  Aug 24 15:10:22.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5064" for this suite. @ 08/24/23 15:10:22.066
  STEP: Destroying namespace "secret-namespace-4991" for this suite. @ 08/24/23 15:10:22.077
• [4.185 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 08/24/23 15:10:22.089
  Aug 24 15:10:22.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:10:22.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:22.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:22.134
  STEP: Setting up server cert @ 08/24/23 15:10:22.171
  E0824 15:10:22.431661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:10:22.736
  STEP: Deploying the webhook pod @ 08/24/23 15:10:22.746
  STEP: Wait for the deployment to be ready @ 08/24/23 15:10:22.763
  Aug 24 15:10:22.773: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 15:10:23.432736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:24.432835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:10:24.792
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:10:24.815
  E0824 15:10:25.432915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:25.816: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 15:10:25.830: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-961-crds.webhook.example.com via the AdmissionRegistration API @ 08/24/23 15:10:26.353
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/24/23 15:10:26.396
  E0824 15:10:26.433216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:27.433785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:28.434000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:28.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4542" for this suite. @ 08/24/23 15:10:29.386
  STEP: Destroying namespace "webhook-markers-4276" for this suite. @ 08/24/23 15:10:29.395
  E0824 15:10:29.435380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [7.355 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 08/24/23 15:10:29.444
  Aug 24 15:10:29.445: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename containers @ 08/24/23 15:10:29.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:29.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:29.484
  STEP: Creating a pod to test override command @ 08/24/23 15:10:29.49
  E0824 15:10:30.436842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:31.437213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:32.437648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:33.437970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:10:33.531
  Aug 24 15:10:33.536: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod client-containers-3bd66e02-1054-41e7-920e-c4384adc229f container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:10:33.548
  Aug 24 15:10:33.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-258" for this suite. @ 08/24/23 15:10:33.585
• [4.150 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 08/24/23 15:10:33.596
  Aug 24 15:10:33.596: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:10:33.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:33.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:33.637
  STEP: Creating secret with name projected-secret-test-11393d39-cbc1-47d0-b41e-19a65d74156d @ 08/24/23 15:10:33.642
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:10:33.65
  E0824 15:10:34.438516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:35.438927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:36.440213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:37.443613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:10:37.692
  Aug 24 15:10:37.699: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-secrets-7b12af61-60f6-4e8f-ade6-657a4345d836 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:10:37.714
  Aug 24 15:10:37.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8010" for this suite. @ 08/24/23 15:10:37.756
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 08/24/23 15:10:37.771
  Aug 24 15:10:37.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:10:37.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:37.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:37.81
  Aug 24 15:10:37.894: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"53c531e6-8392-4e02-936a-a181db03dd38", Controller:(*bool)(0xc004a53c16), BlockOwnerDeletion:(*bool)(0xc004a53c17)}}
  Aug 24 15:10:37.912: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"396ca61f-fd3b-4e1d-a90d-61047c1ff102", Controller:(*bool)(0xc00511e9ae), BlockOwnerDeletion:(*bool)(0xc00511e9af)}}
  Aug 24 15:10:37.932: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e70ccaa3-6787-46d8-b0a5-8ce05637a2f6", Controller:(*bool)(0xc00511ec4e), BlockOwnerDeletion:(*bool)(0xc00511ec4f)}}
  E0824 15:10:38.444616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:39.444893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:40.444927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:41.445464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:42.445993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:42.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1374" for this suite. @ 08/24/23 15:10:42.968
• [5.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 08/24/23 15:10:42.993
  Aug 24 15:10:42.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:10:42.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:43.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:43.026
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-258 @ 08/24/23 15:10:43.031
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/24/23 15:10:43.058
  STEP: creating service externalsvc in namespace services-258 @ 08/24/23 15:10:43.058
  STEP: creating replication controller externalsvc in namespace services-258 @ 08/24/23 15:10:43.101
  I0824 15:10:43.120549      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-258, replica count: 2
  E0824 15:10:43.446916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:44.447444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:45.448040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:10:46.172011      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 08/24/23 15:10:46.181
  Aug 24 15:10:46.216: INFO: Creating new exec pod
  E0824 15:10:46.448169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:47.448292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:48.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-258 exec execpodrt7q2 -- /bin/sh -x -c nslookup nodeport-service.services-258.svc.cluster.local'
  E0824 15:10:48.448689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:48.660: INFO: stderr: "+ nslookup nodeport-service.services-258.svc.cluster.local\n"
  Aug 24 15:10:48.660: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-258.svc.cluster.local\tcanonical name = externalsvc.services-258.svc.cluster.local.\nName:\texternalsvc.services-258.svc.cluster.local\nAddress: 10.233.27.104\n\n"
  Aug 24 15:10:48.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-258, will wait for the garbage collector to delete the pods @ 08/24/23 15:10:48.67
  Aug 24 15:10:48.744: INFO: Deleting ReplicationController externalsvc took: 16.579962ms
  Aug 24 15:10:48.845: INFO: Terminating ReplicationController externalsvc pods took: 100.840716ms
  E0824 15:10:49.449918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:50.450578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:51.451430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:51.686: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-258" for this suite. @ 08/24/23 15:10:51.735
• [8.761 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 08/24/23 15:10:51.758
  Aug 24 15:10:51.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:10:51.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:51.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:51.821
  STEP: Starting the proxy @ 08/24/23 15:10:51.828
  Aug 24 15:10:51.829: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4992 proxy --unix-socket=/tmp/kubectl-proxy-unix3938776621/test'
  STEP: retrieving proxy /api/ output @ 08/24/23 15:10:51.921
  Aug 24 15:10:51.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4992" for this suite. @ 08/24/23 15:10:51.932
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 08/24/23 15:10:51.953
  Aug 24 15:10:51.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:10:51.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:51.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:51.989
  STEP: Setting up server cert @ 08/24/23 15:10:52.039
  E0824 15:10:52.451493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:10:53.042
  STEP: Deploying the webhook pod @ 08/24/23 15:10:53.061
  STEP: Wait for the deployment to be ready @ 08/24/23 15:10:53.123
  Aug 24 15:10:53.156: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:10:53.451843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:54.452564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:10:55.172
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:10:55.191
  E0824 15:10:55.453221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:56.191: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 15:10:56.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:10:56.453222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7065-crds.webhook.example.com via the AdmissionRegistration API @ 08/24/23 15:10:56.733
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/24/23 15:10:56.764
  E0824 15:10:57.454086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:58.454432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:58.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:10:59.454367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9369" for this suite. @ 08/24/23 15:10:59.54
  STEP: Destroying namespace "webhook-markers-5853" for this suite. @ 08/24/23 15:10:59.55
• [7.609 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 08/24/23 15:10:59.563
  Aug 24 15:10:59.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:10:59.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:59.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:59.592
  STEP: Creating pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577 @ 08/24/23 15:10:59.597
  E0824 15:11:00.455023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:01.455945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:11:01.627
  Aug 24 15:11:01.635: INFO: Initial restart count of pod liveness-af5582db-730f-471e-9373-fa7c61b28195 is 0
  Aug 24 15:11:01.640: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:02.456190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:03.457049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:03.652: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:04.457496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:05.457912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:05.667: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:06.458068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:07.458193      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:07.674: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:08.459407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:09.460124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:09.685: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:10.460664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:11.461298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:11.692: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:12.461727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:13.461778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:13.699: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:14.462242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:15.462379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:15.707: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:16.463343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:17.464068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:17.716: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:18.464668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:19.465573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:19.730: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:20.465185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:21.465307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:21.738: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  Aug 24 15:11:21.738: INFO: Restart count of pod container-probe-2577/liveness-af5582db-730f-471e-9373-fa7c61b28195 is now 1 (20.10352369s elapsed)
  E0824 15:11:22.465373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:23.465561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:23.748: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:24.465895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:25.466360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:25.757: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:26.467258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:27.467660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:27.764: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:28.467985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:29.468307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:29.772: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:30.469145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:31.469809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:31.781: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:32.469647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:33.469998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:33.788: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:34.470842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:35.471177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:35.796: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:36.471752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:37.472225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:37.803: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:38.472421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:39.472463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:39.811: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:40.472801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:41.475074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:41.823: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  Aug 24 15:11:41.824: INFO: Restart count of pod container-probe-2577/liveness-af5582db-730f-471e-9373-fa7c61b28195 is now 2 (40.18892528s elapsed)
  E0824 15:11:42.473559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:43.473629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:43.831: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:44.473724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:45.474006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:45.840: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:46.474285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:47.475336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:47.847: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:48.475798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:49.475956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:49.858: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:50.476183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:51.476553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:51.867: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:52.477371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:53.477542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:53.874: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:54.478185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:55.478937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:55.883: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:56.479133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:57.479175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:57.894: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:11:58.479393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:59.479511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:59.906: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:00.480397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:01.480637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:01.917: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  Aug 24 15:12:01.917: INFO: Restart count of pod container-probe-2577/liveness-af5582db-730f-471e-9373-fa7c61b28195 is now 3 (1m0.28250886s elapsed)
  E0824 15:12:02.480795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:03.481468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:03.925: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:04.481285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:05.505529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:05.936: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:06.494401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:07.495073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:07.945: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:08.495151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:09.495593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:09.954: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:10.495814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:11.496844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:11.962: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:12.497266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:13.497308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:13.971: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:14.498226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:15.498813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:15.979: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:16.498910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:17.499574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:17.987: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:18.499698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:19.500097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:19.997: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:20.500959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:21.501108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:22.005: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  Aug 24 15:12:22.005: INFO: Restart count of pod container-probe-2577/liveness-af5582db-730f-471e-9373-fa7c61b28195 is now 4 (1m20.370299584s elapsed)
  E0824 15:12:22.502024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:23.502211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:24.018: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:24.503782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:25.504002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:26.030: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:26.504010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:27.504405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:28.037: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:28.505232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:29.505561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:30.045: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:30.505631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:31.505836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:32.056: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:32.506545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:33.506630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:34.064: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:34.507812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:35.508594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:36.070: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:36.509623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:37.510142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:38.077: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:38.510416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:39.511112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:40.087: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:40.512071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:41.512702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:42.095: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:42.512909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:43.512949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:44.103: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:44.514042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:45.514786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:46.110: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:46.515905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:47.516290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:48.122: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:48.516368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:49.516614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:50.131: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:50.517204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:51.518163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:52.141: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:52.517760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:53.517961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:54.149: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:54.518704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:55.518794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:56.156: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:56.518914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:57.519180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:58.165: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:12:58.520310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:59.521309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:00.177: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:00.522031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:01.522358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:02.183: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:02.523145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:03.523472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:04.191: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:04.523720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:05.524636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:06.199: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:06.524640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:07.524994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:08.206: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:08.525750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:09.525951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:10.214: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:10.526922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:11.527142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:12.222: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:12.527220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:13.527496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:14.229: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:14.528298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:15.529064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:16.237: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:16.529873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:17.530584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:18.243: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:18.531046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:19.532206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:20.250: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:20.532337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:21.533378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:22.256: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:22.534146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:23.534316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:24.268: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:24.535205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:25.535477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:26.277: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:26.536021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:27.536222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:28.286: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:28.536426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:29.537316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:30.292: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:30.538205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:31.538468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:32.311: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  E0824 15:13:32.538934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:33.539305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:34.320: INFO: Get pod liveness-af5582db-730f-471e-9373-fa7c61b28195 in namespace container-probe-2577
  Aug 24 15:13:34.320: INFO: Restart count of pod container-probe-2577/liveness-af5582db-730f-471e-9373-fa7c61b28195 is now 5 (2m32.685252564s elapsed)
  Aug 24 15:13:34.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:13:34.331
  STEP: Destroying namespace "container-probe-2577" for this suite. @ 08/24/23 15:13:34.352
• [154.812 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 08/24/23 15:13:34.377
  Aug 24 15:13:34.377: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename init-container @ 08/24/23 15:13:34.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:13:34.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:13:34.432
  STEP: creating the pod @ 08/24/23 15:13:34.436
  Aug 24 15:13:34.436: INFO: PodSpec: initContainers in spec.initContainers
  E0824 15:13:34.539420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:35.539958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:36.540138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:37.540739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:37.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7840" for this suite. @ 08/24/23 15:13:37.839
• [3.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 08/24/23 15:13:37.878
  Aug 24 15:13:37.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:13:37.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:13:37.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:13:37.912
  STEP: Setting up server cert @ 08/24/23 15:13:37.944
  E0824 15:13:38.541244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:13:38.556
  STEP: Deploying the webhook pod @ 08/24/23 15:13:38.565
  STEP: Wait for the deployment to be ready @ 08/24/23 15:13:38.583
  Aug 24 15:13:38.596: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:13:39.541706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:40.541792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:13:40.625
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:13:40.644
  E0824 15:13:41.543769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:41.645: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 08/24/23 15:13:41.658
  STEP: create a configmap that should be updated by the webhook @ 08/24/23 15:13:41.688
  Aug 24 15:13:41.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4638" for this suite. @ 08/24/23 15:13:41.812
  STEP: Destroying namespace "webhook-markers-4090" for this suite. @ 08/24/23 15:13:41.833
• [3.971 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 08/24/23 15:13:41.856
  Aug 24 15:13:41.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 15:13:41.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:13:41.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:13:41.887
  STEP: Creating a cronjob @ 08/24/23 15:13:41.891
  STEP: Ensuring more than one job is running at a time @ 08/24/23 15:13:41.899
  E0824 15:13:42.544718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:43.544694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:44.545006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:45.545741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:46.545448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:47.546556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:48.546506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:49.547140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:50.547736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:51.547798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:52.548095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:53.548470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:54.549675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:55.550534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:56.551022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:57.552018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:58.551534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:59.551655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:00.552656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:01.552931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:02.553293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:03.553930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:04.554287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:05.554916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:06.555972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:07.556541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:08.556485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:09.557272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:10.557643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:11.557909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:12.558453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:13.558959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:14.559671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:15.559750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:16.561008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:17.561592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:18.561786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:19.562297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:20.562307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:21.562868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:22.563706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:23.564018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:24.564324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:25.564633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:26.564763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:27.565454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:28.566356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:29.567202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:30.567542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:31.568152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:32.568749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:33.569199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:34.569527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:35.570026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:36.570197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:37.570696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:38.571027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:39.571607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:40.572537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:41.572553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:42.573403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:43.573639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:44.573977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:45.574472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:46.575388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:47.575859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:48.576949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:49.577443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:50.577836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:51.578563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:52.579449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:53.579617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:54.580613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:55.581396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:56.582379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:57.583335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:58.584416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:59.584498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:00.585430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:01.585626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 08/24/23 15:15:01.911
  STEP: Removing cronjob @ 08/24/23 15:15:01.92
  Aug 24 15:15:01.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7912" for this suite. @ 08/24/23 15:15:01.945
• [80.109 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 08/24/23 15:15:01.969
  Aug 24 15:15:01.969: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:15:01.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:15:02.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:15:02.043
  STEP: Waiting for pod completion @ 08/24/23 15:15:02.063
  E0824 15:15:02.586290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:03.586692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:04.586782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:05.586841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:06.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9502" for this suite. @ 08/24/23 15:15:06.124
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 08/24/23 15:15:06.153
  Aug 24 15:15:06.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:15:06.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:15:06.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:15:06.188
  STEP: creating a replication controller @ 08/24/23 15:15:06.193
  Aug 24 15:15:06.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 create -f -'
  E0824 15:15:06.588050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:07.531: INFO: stderr: ""
  Aug 24 15:15:07.531: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 15:15:07.531
  Aug 24 15:15:07.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0824 15:15:07.590711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:07.719: INFO: stderr: ""
  Aug 24 15:15:07.719: INFO: stdout: "update-demo-nautilus-lfrkx update-demo-nautilus-p5dkl "
  Aug 24 15:15:07.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:15:07.846: INFO: stderr: ""
  Aug 24 15:15:07.846: INFO: stdout: ""
  Aug 24 15:15:07.846: INFO: update-demo-nautilus-lfrkx is created but not running
  E0824 15:15:08.590683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:09.590906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:10.590992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:11.591408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:12.593020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:12.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:15:13.051: INFO: stderr: ""
  Aug 24 15:15:13.051: INFO: stdout: "update-demo-nautilus-lfrkx update-demo-nautilus-p5dkl "
  Aug 24 15:15:13.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:15:13.239: INFO: stderr: ""
  Aug 24 15:15:13.239: INFO: stdout: ""
  Aug 24 15:15:13.239: INFO: update-demo-nautilus-lfrkx is created but not running
  E0824 15:15:13.592623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:14.593162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:15.593381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:16.593784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:17.593866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:18.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:15:18.407: INFO: stderr: ""
  Aug 24 15:15:18.407: INFO: stdout: "update-demo-nautilus-lfrkx update-demo-nautilus-p5dkl "
  Aug 24 15:15:18.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:15:18.553: INFO: stderr: ""
  Aug 24 15:15:18.553: INFO: stdout: ""
  Aug 24 15:15:18.553: INFO: update-demo-nautilus-lfrkx is created but not running
  E0824 15:15:18.595336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:19.595591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:20.595971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:21.596089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:22.596329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:23.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0824 15:15:23.596694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:23.702: INFO: stderr: ""
  Aug 24 15:15:23.702: INFO: stdout: "update-demo-nautilus-lfrkx update-demo-nautilus-p5dkl "
  Aug 24 15:15:23.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:15:23.836: INFO: stderr: ""
  Aug 24 15:15:23.836: INFO: stdout: ""
  Aug 24 15:15:23.836: INFO: update-demo-nautilus-lfrkx is created but not running
  E0824 15:15:24.597033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:25.597506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:26.597666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:27.597736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:28.598449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:28.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:15:28.974: INFO: stderr: ""
  Aug 24 15:15:28.974: INFO: stdout: "update-demo-nautilus-lfrkx update-demo-nautilus-p5dkl "
  Aug 24 15:15:28.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:15:29.107: INFO: stderr: ""
  Aug 24 15:15:29.108: INFO: stdout: ""
  Aug 24 15:15:29.108: INFO: update-demo-nautilus-lfrkx is created but not running
  E0824 15:15:29.598823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:30.598948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:31.599147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:32.599494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:33.600369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:34.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:15:34.278: INFO: stderr: ""
  Aug 24 15:15:34.278: INFO: stdout: "update-demo-nautilus-lfrkx update-demo-nautilus-p5dkl "
  Aug 24 15:15:34.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:15:34.418: INFO: stderr: ""
  Aug 24 15:15:34.418: INFO: stdout: ""
  Aug 24 15:15:34.418: INFO: update-demo-nautilus-lfrkx is created but not running
  E0824 15:15:34.600777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:35.600953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:36.601268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:37.601559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:38.602513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:39.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:15:39.569: INFO: stderr: ""
  Aug 24 15:15:39.569: INFO: stdout: "update-demo-nautilus-lfrkx update-demo-nautilus-p5dkl "
  Aug 24 15:15:39.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0824 15:15:39.602646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:39.711: INFO: stderr: ""
  Aug 24 15:15:39.711: INFO: stdout: "true"
  Aug 24 15:15:39.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-lfrkx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:15:39.845: INFO: stderr: ""
  Aug 24 15:15:39.845: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:15:39.845: INFO: validating pod update-demo-nautilus-lfrkx
  Aug 24 15:15:39.861: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:15:39.862: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:15:39.862: INFO: update-demo-nautilus-lfrkx is verified up and running
  Aug 24 15:15:39.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-p5dkl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:15:39.991: INFO: stderr: ""
  Aug 24 15:15:39.991: INFO: stdout: "true"
  Aug 24 15:15:39.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods update-demo-nautilus-p5dkl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:15:40.113: INFO: stderr: ""
  Aug 24 15:15:40.113: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:15:40.113: INFO: validating pod update-demo-nautilus-p5dkl
  Aug 24 15:15:40.125: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:15:40.125: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:15:40.125: INFO: update-demo-nautilus-p5dkl is verified up and running
  STEP: using delete to clean up resources @ 08/24/23 15:15:40.125
  Aug 24 15:15:40.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 delete --grace-period=0 --force -f -'
  Aug 24 15:15:40.260: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:15:40.260: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 24 15:15:40.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get rc,svc -l name=update-demo --no-headers'
  Aug 24 15:15:40.517: INFO: stderr: "No resources found in kubectl-7015 namespace.\n"
  Aug 24 15:15:40.517: INFO: stdout: ""
  Aug 24 15:15:40.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7015 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0824 15:15:40.603578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:40.727: INFO: stderr: ""
  Aug 24 15:15:40.727: INFO: stdout: ""
  Aug 24 15:15:40.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7015" for this suite. @ 08/24/23 15:15:40.738
• [34.596 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 08/24/23 15:15:40.75
  Aug 24 15:15:40.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename subpath @ 08/24/23 15:15:40.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:15:40.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:15:40.782
  STEP: Setting up data @ 08/24/23 15:15:40.787
  STEP: Creating pod pod-subpath-test-configmap-cqvw @ 08/24/23 15:15:40.803
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 15:15:40.803
  E0824 15:15:41.603569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:42.604429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:43.604542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:44.605222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:45.605500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:46.606217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:47.606538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:48.607592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:49.607739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:50.608021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:51.608920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:52.609539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:53.610221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:54.610563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:55.610761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:56.610984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:57.611440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:58.611348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:59.611666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:00.612035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:01.612711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:02.612745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:03.613195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:04.613603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:16:04.917
  Aug 24 15:16:04.922: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-subpath-test-configmap-cqvw container test-container-subpath-configmap-cqvw: <nil>
  STEP: delete the pod @ 08/24/23 15:16:04.937
  STEP: Deleting pod pod-subpath-test-configmap-cqvw @ 08/24/23 15:16:04.962
  Aug 24 15:16:04.963: INFO: Deleting pod "pod-subpath-test-configmap-cqvw" in namespace "subpath-6161"
  Aug 24 15:16:04.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6161" for this suite. @ 08/24/23 15:16:04.976
• [24.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 08/24/23 15:16:05
  Aug 24 15:16:05.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:16:05.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:16:05.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:16:05.042
  STEP: Creating a pod to test substitution in volume subpath @ 08/24/23 15:16:05.059
  E0824 15:16:05.623593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:06.623902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:07.624440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:08.624525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:16:09.143
  Aug 24 15:16:09.147: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod var-expansion-569d31a7-0e72-4df0-8f96-d019ef13f766 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:16:09.158
  Aug 24 15:16:09.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8600" for this suite. @ 08/24/23 15:16:09.191
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 08/24/23 15:16:09.226
  Aug 24 15:16:09.226: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 15:16:09.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:16:09.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:16:09.263
  Aug 24 15:16:09.281: INFO: Endpoints addresses: [192.168.121.240 192.168.121.75] , ports: [6443]
  Aug 24 15:16:09.282: INFO: EndpointSlices addresses: [192.168.121.240 192.168.121.75] , ports: [6443]
  Aug 24 15:16:09.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8650" for this suite. @ 08/24/23 15:16:09.292
• [0.086 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 08/24/23 15:16:09.314
  Aug 24 15:16:09.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:16:09.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:16:09.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:16:09.345
  STEP: Counting existing ResourceQuota @ 08/24/23 15:16:09.35
  E0824 15:16:09.624689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:10.625802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:11.626825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:12.627581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:13.628393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:16:14.357
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:16:14.367
  E0824 15:16:14.629666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:15.630345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 08/24/23 15:16:16.373
  STEP: Ensuring ResourceQuota status captures the pod usage @ 08/24/23 15:16:16.42
  E0824 15:16:16.630583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:17.631229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 08/24/23 15:16:18.433
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 08/24/23 15:16:18.439
  STEP: Ensuring a pod cannot update its resource requirements @ 08/24/23 15:16:18.444
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 08/24/23 15:16:18.453
  E0824 15:16:18.631732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:19.632066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/24/23 15:16:20.46
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 15:16:20.477
  E0824 15:16:20.632564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:21.632822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:16:22.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3474" for this suite. @ 08/24/23 15:16:22.499
• [13.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 08/24/23 15:16:22.524
  Aug 24 15:16:22.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename conformance-tests @ 08/24/23 15:16:22.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:16:22.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:16:22.561
  STEP: Getting node addresses @ 08/24/23 15:16:22.566
  Aug 24 15:16:22.566: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Aug 24 15:16:22.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-710" for this suite. @ 08/24/23 15:16:22.586
• [0.073 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 08/24/23 15:16:22.599
  Aug 24 15:16:22.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/24/23 15:16:22.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:16:22.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:16:22.63
  E0824 15:16:22.632950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating @ 08/24/23 15:16:22.635
  STEP: getting @ 08/24/23 15:16:22.664
  STEP: listing in namespace @ 08/24/23 15:16:22.673
  STEP: patching @ 08/24/23 15:16:22.686
  STEP: deleting @ 08/24/23 15:16:22.712
  Aug 24 15:16:22.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4321" for this suite. @ 08/24/23 15:16:22.741
• [0.154 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 08/24/23 15:16:22.754
  Aug 24 15:16:22.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 15:16:22.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:16:22.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:16:22.785
  Aug 24 15:16:22.789: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 24 15:16:22.802: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 15:16:22.806: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-1 before test
  Aug 24 15:16:22.820: INFO: cilium-249jg from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.820: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:16:22.820: INFO: cilium-node-init-c95pq from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.820: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 15:16:22.820: INFO: kube-addon-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.820: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 15:16:22.820: INFO: kube-apiserver-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.820: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 15:16:22.820: INFO: kube-controller-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.820: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 15:16:22.820: INFO: kube-proxy-5qdnk from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.820: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:16:22.820: INFO: kube-scheduler-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.820: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 15:16:22.820: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-rzlvs from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:16:22.821: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:16:22.821: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 15:16:22.821: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-2 before test
  Aug 24 15:16:22.839: INFO: cilium-dhltd from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.839: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:16:22.839: INFO: cilium-node-init-6p2dn from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.839: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 15:16:22.840: INFO: cilium-operator-7d96878f5-db9bp from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.840: INFO: 	Container cilium-operator ready: true, restart count 7
  Aug 24 15:16:22.840: INFO: coredns-5dd5756b68-7j9vk from kube-system started at 2023-08-24 14:24:52 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.840: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:16:22.840: INFO: coredns-5dd5756b68-chvhm from kube-system started at 2023-08-24 14:25:06 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.841: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:16:22.841: INFO: kube-addon-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.841: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 15:16:22.841: INFO: kube-apiserver-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.841: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 15:16:22.841: INFO: kube-controller-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.841: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 15:16:22.842: INFO: kube-proxy-92pnj from kube-system started at 2023-08-24 14:24:12 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.842: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:16:22.842: INFO: kube-scheduler-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.842: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 15:16:22.842: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-7j6r9 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:16:22.842: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:16:22.842: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 15:16:22.842: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-3 before test
  Aug 24 15:16:22.855: INFO: pod-csi-inline-volumes from csiinlinevolumes-4321 started at 2023-08-24 15:16:22 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.855: INFO: 	Container pod-csi-inline-volumes ready: false, restart count 0
  Aug 24 15:16:22.856: INFO: cilium-kzxs7 from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.856: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:16:22.856: INFO: cilium-node-init-k898v from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.856: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 15:16:22.856: INFO: kube-proxy-7z2wb from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.856: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:16:22.856: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:43:41 +0000 UTC (1 container statuses recorded)
  Aug 24 15:16:22.856: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 15:16:22.857: INFO: sonobuoy-e2e-job-54beda60178f4a68 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:16:22.857: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 15:16:22.857: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:16:22.857: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-g4xff from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:16:22.857: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:16:22.857: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/24/23 15:16:22.857
  E0824 15:16:23.633049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:24.633678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/24/23 15:16:24.902
  STEP: Trying to apply a random label on the found node. @ 08/24/23 15:16:24.93
  STEP: verifying the node has the label kubernetes.io/e2e-5b6b6ef4-5a85-4148-9dd6-beab12806e7a 95 @ 08/24/23 15:16:24.953
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 08/24/23 15:16:24.974
  E0824 15:16:25.640441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:26.636069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.161 on the node which pod4 resides and expect not scheduled @ 08/24/23 15:16:27.035
  E0824 15:16:27.651244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:28.639537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:29.639657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:30.640337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:31.641022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:32.641761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:33.642766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:34.642934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:35.643721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:36.644074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:37.644320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:38.644622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:39.644865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:40.645194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:41.645216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:42.645900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:43.646095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:44.646557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:45.646552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:46.647251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:47.647878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:48.648161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:49.648668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:50.649616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:51.649988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:52.650097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:53.650947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:54.651796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:55.652756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:56.652839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:57.653274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:58.654162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:59.655025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:00.655844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:01.656799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:02.657605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:03.657864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:04.658112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:05.658238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:06.658954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:07.659477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:08.659686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:09.659779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:10.660000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:11.660897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:12.660846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:13.660926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:14.661117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:15.662123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:16.662057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:17.663577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:18.663601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:19.664355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:20.664650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:21.665544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:22.665596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:23.665779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:24.666479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:25.667388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:26.667754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:27.668229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:28.668750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:29.669769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:30.670756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:31.671526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:32.671881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:33.672348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:34.673312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:35.674147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:36.674195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:37.675186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:38.675504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:39.676693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:40.676642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:41.677664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:42.677900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:43.678762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:44.678967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:45.680030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:46.680332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:47.681154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:48.681305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:49.682026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:50.681973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:51.682347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:52.682935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:53.683814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:54.684360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:55.685257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:56.685701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:57.686120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:58.686372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:59.686579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:00.686906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:01.687547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:02.687645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:03.688780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:04.689760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:05.689873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:06.690523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:07.691551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:08.691629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:09.692426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:10.692983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:11.693773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:12.693795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:13.693798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:14.694860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:15.695776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:16.696294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:17.696794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:18.697511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:19.698070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:20.698105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:21.698644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:22.698754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:23.699708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:24.699835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:25.700300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:26.700573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:27.700889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:28.701090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:29.701234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:30.701513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:31.701561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:32.702612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:33.702868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:34.703224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:35.703498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:36.703693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:37.704570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:38.704792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:39.705723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:40.706650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:41.706527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:42.707357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:43.707558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:44.708115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:45.708125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:46.708506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:47.709329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:48.709660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:49.710405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:50.710801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:51.712001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:52.711680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:53.712197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:54.713436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:55.713754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:56.714330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:57.714390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:58.715062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:59.715592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:00.715934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:01.716698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:02.717307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:03.717667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:04.718541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:05.719047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:06.719774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:07.720433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:08.721096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:09.721874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:10.722197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:11.722510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:12.723051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:13.723653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:14.724745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:15.724444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:16.724707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:17.725649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:18.725704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:19.726204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:20.727512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:21.727074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:22.728134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:23.728757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:24.728963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:25.729477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:26.730076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:27.730395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:28.730566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:29.730886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:30.731550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:31.732146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:32.733019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:33.733107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:34.733929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:35.734385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:36.734474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:37.735618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:38.736035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:39.735997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:40.736122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:41.736780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:42.737773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:43.737652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:44.738737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:45.739540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:46.739779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:47.740754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:48.740827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:49.741040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:50.741568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:51.741773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:52.742063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:53.742384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:54.742959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:55.743407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:56.743465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:57.743558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:58.743711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:59.744358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:00.744626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:01.745154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:02.745786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:03.746051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:04.746185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:05.746715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:06.746998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:07.747783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:08.748969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:09.748894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:10.749119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:11.749855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:12.750938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:13.751133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:14.751632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:15.751592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:16.755731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:17.756532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:18.756735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:19.756906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:20.757824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:21.758157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:22.758728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:23.758961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:24.759503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:25.759899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:26.759914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:27.760517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:28.760684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:29.761500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:30.761898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:31.762186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:32.762823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:33.763722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:34.764332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:35.764277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:36.765181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:37.766179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:38.766506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:39.766696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:40.767818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:41.767892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:42.768493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:43.769263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:44.769390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:45.769544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:46.769747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:47.770868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:48.771041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:49.771624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:50.772259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:51.772037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:52.772188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:53.772644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:54.772904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:55.772995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:56.774311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:57.774323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:58.774481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:59.775106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:00.775498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:01.776127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:02.777130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:03.777188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:04.777377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:05.778514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:06.778849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:07.779404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:08.780221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:09.784628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:10.781936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:11.782447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:12.782703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:13.782707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:14.782956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:15.785364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:16.784541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:17.785565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:18.785600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:19.786404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:20.787426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:21.787605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:22.788574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:23.788752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:24.805304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:25.794800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:26.794147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5b6b6ef4-5a85-4148-9dd6-beab12806e7a off the node eiyoo9ohd4ei-3 @ 08/24/23 15:21:27.057
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5b6b6ef4-5a85-4148-9dd6-beab12806e7a @ 08/24/23 15:21:27.087
  Aug 24 15:21:27.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9982" for this suite. @ 08/24/23 15:21:27.114
• [304.370 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 08/24/23 15:21:27.126
  Aug 24 15:21:27.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:21:27.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:27.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:27.168
  Aug 24 15:21:27.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  W0824 15:21:27.180273      14 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0053b70e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0824 15:21:27.794772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:28.795798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:29.796338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0824 15:21:29.914325      14 warnings.go:70] unknown field "alpha"
  W0824 15:21:29.914363      14 warnings.go:70] unknown field "beta"
  W0824 15:21:29.914373      14 warnings.go:70] unknown field "delta"
  W0824 15:21:29.914381      14 warnings.go:70] unknown field "epsilon"
  W0824 15:21:29.914389      14 warnings.go:70] unknown field "gamma"
  Aug 24 15:21:30.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-719" for this suite. @ 08/24/23 15:21:30.493
• [3.377 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 08/24/23 15:21:30.505
  Aug 24 15:21:30.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:21:30.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:30.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:30.535
  STEP: creating the pod with failed condition @ 08/24/23 15:21:30.539
  E0824 15:21:30.797295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:31.797884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:32.799099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:33.799792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:34.800892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:35.800981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:36.802031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:37.802538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:38.803612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:39.803859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:40.806129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:41.805432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:42.806699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:43.805844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:44.806674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:45.807026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:46.807159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:47.807337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:48.807641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:49.807855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:50.808020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:51.808545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:52.809031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:53.809423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:54.810021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:55.809983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:56.810394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:57.810542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:58.811430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:59.812305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:00.813246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:01.813643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:02.814522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:03.814857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:04.815676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:05.816465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:06.817234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:07.818345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:08.819178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:09.819408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:10.820001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:11.820542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:12.821806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:13.822356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:14.823191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:15.823679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:16.823868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:17.824409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:18.824994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:19.825906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:20.826384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:21.826632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:22.827647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:23.828032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:24.829068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:25.829189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:26.829773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:27.830621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:28.831512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:29.831609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:30.831833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:31.832117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:32.832672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:33.832941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:34.833734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:35.834633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:36.835582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:37.836628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:38.837223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:39.837597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:40.838332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:41.838717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:42.838736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:43.839299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:44.839634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:45.840100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:46.840830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:47.841956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:48.842056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:49.842164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:50.842312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:51.842732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:52.842992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:53.843652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:54.843570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:55.844391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:56.844972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:57.846260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:58.846550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:59.847234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:00.847790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:01.847947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:02.848303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:03.848623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:04.849295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:05.849554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:06.849520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:07.850319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:08.851021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:09.851561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:10.851539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:11.851856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:12.852155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:13.852576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:14.852811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:15.852928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:16.853208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:17.853257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:18.853494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:19.853549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:20.853862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:21.854522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:22.855505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:23.855940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:24.856379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:25.858589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:26.857795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:27.858861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:28.859157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:29.859402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 08/24/23 15:23:30.553
  E0824 15:23:30.860237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:31.077: INFO: Successfully updated pod "var-expansion-bc6f831e-64ec-42cd-9c37-e1709d2db536"
  STEP: waiting for pod running @ 08/24/23 15:23:31.077
  E0824 15:23:31.860539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:32.861244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 08/24/23 15:23:33.103
  Aug 24 15:23:33.103: INFO: Deleting pod "var-expansion-bc6f831e-64ec-42cd-9c37-e1709d2db536" in namespace "var-expansion-4602"
  Aug 24 15:23:33.116: INFO: Wait up to 5m0s for pod "var-expansion-bc6f831e-64ec-42cd-9c37-e1709d2db536" to be fully deleted
  E0824 15:23:33.861820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:34.862753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:35.864339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:36.864100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:37.864224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:38.864333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:39.864684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:40.864841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:41.865955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:42.867461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:43.868429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:44.868757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:45.869130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:46.869199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:47.869302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:48.869813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:49.870206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:50.870242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:51.870638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:52.871586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:53.872496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:54.873080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:55.874318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:56.874127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:57.874423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:58.874717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:59.874767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:00.875226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:01.875182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:02.875811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:03.876601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:04.876857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:05.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4602" for this suite. @ 08/24/23 15:24:05.278
• [154.790 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 08/24/23 15:24:05.299
  Aug 24 15:24:05.299: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename events @ 08/24/23 15:24:05.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:05.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:05.341
  STEP: creating a test event @ 08/24/23 15:24:05.345
  STEP: listing events in all namespaces @ 08/24/23 15:24:05.36
  STEP: listing events in test namespace @ 08/24/23 15:24:05.376
  STEP: listing events with field selection filtering on source @ 08/24/23 15:24:05.381
  STEP: listing events with field selection filtering on reportingController @ 08/24/23 15:24:05.385
  STEP: getting the test event @ 08/24/23 15:24:05.391
  STEP: patching the test event @ 08/24/23 15:24:05.394
  STEP: getting the test event @ 08/24/23 15:24:05.45
  STEP: updating the test event @ 08/24/23 15:24:05.454
  STEP: getting the test event @ 08/24/23 15:24:05.468
  STEP: deleting the test event @ 08/24/23 15:24:05.473
  STEP: listing events in all namespaces @ 08/24/23 15:24:05.49
  STEP: listing events in test namespace @ 08/24/23 15:24:05.505
  Aug 24 15:24:05.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4487" for this suite. @ 08/24/23 15:24:05.519
• [0.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 08/24/23 15:24:05.536
  Aug 24 15:24:05.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 15:24:05.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:05.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:05.567
  STEP: getting /apis @ 08/24/23 15:24:05.572
  STEP: getting /apis/discovery.k8s.io @ 08/24/23 15:24:05.579
  STEP: getting /apis/discovery.k8s.iov1 @ 08/24/23 15:24:05.581
  STEP: creating @ 08/24/23 15:24:05.583
  STEP: getting @ 08/24/23 15:24:05.613
  STEP: listing @ 08/24/23 15:24:05.618
  STEP: watching @ 08/24/23 15:24:05.623
  Aug 24 15:24:05.623: INFO: starting watch
  STEP: cluster-wide listing @ 08/24/23 15:24:05.625
  STEP: cluster-wide watching @ 08/24/23 15:24:05.632
  Aug 24 15:24:05.632: INFO: starting watch
  STEP: patching @ 08/24/23 15:24:05.634
  STEP: updating @ 08/24/23 15:24:05.647
  Aug 24 15:24:05.663: INFO: waiting for watch events with expected annotations
  Aug 24 15:24:05.663: INFO: saw patched and updated annotations
  STEP: deleting @ 08/24/23 15:24:05.663
  STEP: deleting a collection @ 08/24/23 15:24:05.683
  Aug 24 15:24:05.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3839" for this suite. @ 08/24/23 15:24:05.72
• [0.198 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 08/24/23 15:24:05.734
  Aug 24 15:24:05.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:24:05.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:05.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:05.767
  STEP: Creating service test in namespace statefulset-7278 @ 08/24/23 15:24:05.772
  STEP: Creating statefulset ss in namespace statefulset-7278 @ 08/24/23 15:24:05.789
  Aug 24 15:24:05.806: INFO: Found 0 stateful pods, waiting for 1
  E0824 15:24:05.876774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:06.877254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:07.877390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:08.877479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:09.877627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:10.877751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:11.878267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:12.878896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:13.879209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:14.879458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:15.815: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 08/24/23 15:24:15.828
  STEP: Getting /status @ 08/24/23 15:24:15.844
  Aug 24 15:24:15.853: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 08/24/23 15:24:15.853
  Aug 24 15:24:15.868: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 08/24/23 15:24:15.868
  Aug 24 15:24:15.872: INFO: Observed &StatefulSet event: ADDED
  Aug 24 15:24:15.872: INFO: Found Statefulset ss in namespace statefulset-7278 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 15:24:15.873: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 08/24/23 15:24:15.873
  Aug 24 15:24:15.873: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  E0824 15:24:15.879929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:15.884: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 08/24/23 15:24:15.885
  Aug 24 15:24:15.888: INFO: Observed &StatefulSet event: ADDED
  Aug 24 15:24:15.888: INFO: Deleting all statefulset in ns statefulset-7278
  Aug 24 15:24:15.893: INFO: Scaling statefulset ss to 0
  E0824 15:24:16.882331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:17.883964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:18.884069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:19.883951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:20.884128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:21.884321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:22.884592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:23.884878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:24.885242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:25.885331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:25.922: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:24:25.927: INFO: Deleting statefulset ss
  Aug 24 15:24:25.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7278" for this suite. @ 08/24/23 15:24:25.959
• [20.239 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 08/24/23 15:24:25.974
  Aug 24 15:24:25.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:24:25.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:26.007
  E0824 15:24:26.885730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:27.886537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:28.886678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:29.886849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:30.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2207" for this suite. @ 08/24/23 15:24:30.058
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 08/24/23 15:24:30.079
  Aug 24 15:24:30.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:24:30.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:30.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:30.109
  STEP: Creating a pod to test substitution in container's args @ 08/24/23 15:24:30.113
  E0824 15:24:30.887358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:31.887541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:32.887620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:33.887982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:24:34.162
  Aug 24 15:24:34.168: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod var-expansion-a238ce6f-1633-4a39-a69f-a3850888c37d container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:24:34.205
  Aug 24 15:24:34.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8026" for this suite. @ 08/24/23 15:24:34.241
• [4.171 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 08/24/23 15:24:34.25
  Aug 24 15:24:34.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:24:34.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:34.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:34.281
  STEP: Creating resourceQuota "e2e-rq-status-mhfdf" @ 08/24/23 15:24:34.292
  Aug 24 15:24:34.306: INFO: Resource quota "e2e-rq-status-mhfdf" reports spec: hard cpu limit of 500m
  Aug 24 15:24:34.306: INFO: Resource quota "e2e-rq-status-mhfdf" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-mhfdf" /status @ 08/24/23 15:24:34.306
  STEP: Confirm /status for "e2e-rq-status-mhfdf" resourceQuota via watch @ 08/24/23 15:24:34.353
  Aug 24 15:24:34.356: INFO: observed resourceQuota "e2e-rq-status-mhfdf" in namespace "resourcequota-6432" with hard status: v1.ResourceList(nil)
  Aug 24 15:24:34.356: INFO: Found resourceQuota "e2e-rq-status-mhfdf" in namespace "resourcequota-6432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 24 15:24:34.356: INFO: ResourceQuota "e2e-rq-status-mhfdf" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 08/24/23 15:24:34.364
  Aug 24 15:24:34.372: INFO: Resource quota "e2e-rq-status-mhfdf" reports spec: hard cpu limit of 1
  Aug 24 15:24:34.372: INFO: Resource quota "e2e-rq-status-mhfdf" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-mhfdf" /status @ 08/24/23 15:24:34.372
  STEP: Confirm /status for "e2e-rq-status-mhfdf" resourceQuota via watch @ 08/24/23 15:24:34.385
  Aug 24 15:24:34.387: INFO: observed resourceQuota "e2e-rq-status-mhfdf" in namespace "resourcequota-6432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 24 15:24:34.387: INFO: Found resourceQuota "e2e-rq-status-mhfdf" in namespace "resourcequota-6432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Aug 24 15:24:34.387: INFO: ResourceQuota "e2e-rq-status-mhfdf" /status was patched
  STEP: Get "e2e-rq-status-mhfdf" /status @ 08/24/23 15:24:34.388
  Aug 24 15:24:34.393: INFO: Resourcequota "e2e-rq-status-mhfdf" reports status: hard cpu of 1
  Aug 24 15:24:34.393: INFO: Resourcequota "e2e-rq-status-mhfdf" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-mhfdf" /status before checking Spec is unchanged @ 08/24/23 15:24:34.4
  Aug 24 15:24:34.411: INFO: Resourcequota "e2e-rq-status-mhfdf" reports status: hard cpu of 2
  Aug 24 15:24:34.411: INFO: Resourcequota "e2e-rq-status-mhfdf" reports status: hard memory of 2Gi
  Aug 24 15:24:34.413: INFO: Found resourceQuota "e2e-rq-status-mhfdf" in namespace "resourcequota-6432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0824 15:24:34.888040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:35.888319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:36.888512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:37.889137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:38.889270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:39.889927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:40.890371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:41.890936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:42.891685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:43.891958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:44.427: INFO: ResourceQuota "e2e-rq-status-mhfdf" Spec was unchanged and /status reset
  Aug 24 15:24:44.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6432" for this suite. @ 08/24/23 15:24:44.438
• [10.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 08/24/23 15:24:44.456
  Aug 24 15:24:44.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:24:44.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:44.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:44.488
  STEP: apply creating a deployment @ 08/24/23 15:24:44.494
  Aug 24 15:24:44.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4414" for this suite. @ 08/24/23 15:24:44.531
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 08/24/23 15:24:44.551
  Aug 24 15:24:44.551: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename watch @ 08/24/23 15:24:44.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:44.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:44.589
  STEP: creating a watch on configmaps with a certain label @ 08/24/23 15:24:44.593
  STEP: creating a new configmap @ 08/24/23 15:24:44.595
  STEP: modifying the configmap once @ 08/24/23 15:24:44.604
  STEP: changing the label value of the configmap @ 08/24/23 15:24:44.623
  STEP: Expecting to observe a delete notification for the watched object @ 08/24/23 15:24:44.637
  Aug 24 15:24:44.637: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9250  87b9c112-812c-4a4c-b802-cf9fe4e4c144 29329 0 2023-08-24 15:24:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 15:24:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:24:44.637: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9250  87b9c112-812c-4a4c-b802-cf9fe4e4c144 29330 0 2023-08-24 15:24:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 15:24:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:24:44.638: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9250  87b9c112-812c-4a4c-b802-cf9fe4e4c144 29332 0 2023-08-24 15:24:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 15:24:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 08/24/23 15:24:44.638
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 08/24/23 15:24:44.65
  E0824 15:24:44.892384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:45.892349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:46.892671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:47.892731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:48.893082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:49.893140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:50.894071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:51.894362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:52.894956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:53.895329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 08/24/23 15:24:54.65
  STEP: modifying the configmap a third time @ 08/24/23 15:24:54.667
  STEP: deleting the configmap @ 08/24/23 15:24:54.682
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 08/24/23 15:24:54.69
  Aug 24 15:24:54.690: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9250  87b9c112-812c-4a4c-b802-cf9fe4e4c144 29371 0 2023-08-24 15:24:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 15:24:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:24:54.690: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9250  87b9c112-812c-4a4c-b802-cf9fe4e4c144 29372 0 2023-08-24 15:24:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 15:24:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:24:54.691: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9250  87b9c112-812c-4a4c-b802-cf9fe4e4c144 29373 0 2023-08-24 15:24:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 15:24:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:24:54.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9250" for this suite. @ 08/24/23 15:24:54.698
• [10.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 08/24/23 15:24:54.72
  Aug 24 15:24:54.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:24:54.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:54.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:54.757
  STEP: Creating a pod to test service account token:  @ 08/24/23 15:24:54.761
  E0824 15:24:54.896221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:55.897273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:56.898161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:57.898669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:24:58.798
  Aug 24 15:24:58.803: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod test-pod-7dac9d02-5b0b-452a-99c6-fbac8c5696fa container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:24:58.815
  Aug 24 15:24:58.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6740" for this suite. @ 08/24/23 15:24:58.852
• [4.144 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 08/24/23 15:24:58.869
  Aug 24 15:24:58.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 15:24:58.874
  E0824 15:24:58.899641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:58.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:58.907
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 08/24/23 15:24:58.93
  E0824 15:24:59.900148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:00.900726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:01.901115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:02.902895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:03.902077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:04.902562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:05.902604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:06.902935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:07.903628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:08.904012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:09.905072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:10.905868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:11.906411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:12.907200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:13.908230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 08/24/23 15:25:14.111
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 08/24/23 15:25:14.119
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 08/24/23 15:25:14.132
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 08/24/23 15:25:14.132
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 08/24/23 15:25:14.175
  E0824 15:25:14.907837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:15.907927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:16.908203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 08/24/23 15:25:17.206
  E0824 15:25:17.909114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:18.909206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 08/24/23 15:25:19.232
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 08/24/23 15:25:19.244
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 08/24/23 15:25:19.244
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 08/24/23 15:25:19.28
  E0824 15:25:19.909941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 08/24/23 15:25:20.298
  E0824 15:25:20.911031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:21.911584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 08/24/23 15:25:22.323
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 08/24/23 15:25:22.334
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 08/24/23 15:25:22.335
  Aug 24 15:25:22.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-619" for this suite. @ 08/24/23 15:25:22.386
• [23.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 08/24/23 15:25:22.425
  Aug 24 15:25:22.425: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:25:22.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:25:22.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:25:22.466
  STEP: Creating secret with name s-test-opt-del-350a66ca-8bee-4f7e-93cf-49a8fb3ad875 @ 08/24/23 15:25:22.48
  STEP: Creating secret with name s-test-opt-upd-4a8601d1-93bc-4cab-bd8e-be0422535140 @ 08/24/23 15:25:22.488
  STEP: Creating the pod @ 08/24/23 15:25:22.497
  E0824 15:25:22.912258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:23.913162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-350a66ca-8bee-4f7e-93cf-49a8fb3ad875 @ 08/24/23 15:25:24.569
  STEP: Updating secret s-test-opt-upd-4a8601d1-93bc-4cab-bd8e-be0422535140 @ 08/24/23 15:25:24.579
  STEP: Creating secret with name s-test-opt-create-3191ab36-5856-4ba2-a18f-7750a68f8e0b @ 08/24/23 15:25:24.588
  STEP: waiting to observe update in volume @ 08/24/23 15:25:24.596
  E0824 15:25:24.913484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:25.913424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:26.913839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:27.914688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:28.915556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:29.916316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:30.916487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:31.916730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:32.916832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:33.917276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:34.917606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:35.917770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:36.918389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:37.918763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:38.919231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:39.919695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:40.920759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:41.921490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:42.925162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:43.925180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:44.925700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:45.925611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:46.926098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:47.927039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:48.928064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:49.928857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:50.930250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:51.930300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:52.930522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:53.931039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:54.931958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:55.931972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:56.932477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:57.932792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:58.933738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:59.933774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:00.934092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:01.934515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:02.934522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:03.935051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:04.935472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:05.936038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:06.936066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:07.936893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:08.937084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:09.937169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:10.937852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:11.937981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:12.938866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:13.939070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:14.939767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:15.940064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:16.940686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:17.941083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:18.941686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:19.941826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:20.942010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:21.942250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:22.943172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:23.943488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:24.944094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:25.944371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:26.944507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:27.945046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:28.945915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:29.946024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:30.946673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:31.946895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:32.948016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:33.948264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:34.948414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:35.948725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:36.949708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:37.950108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:38.950285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:39.950621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:40.950786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:41.952042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:42.952179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:43.952301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:44.952600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:45.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1316" for this suite. @ 08/24/23 15:26:45.381
• [82.977 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 08/24/23 15:26:45.406
  Aug 24 15:26:45.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:26:45.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:26:45.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:26:45.448
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:26:45.456
  E0824 15:26:45.952801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:46.953119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:47.954063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:48.954610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:26:49.501
  Aug 24 15:26:49.506: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-3560f112-8fdb-4ef1-8238-d19cd3f941b6 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:26:49.515
  Aug 24 15:26:49.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9963" for this suite. @ 08/24/23 15:26:49.554
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 08/24/23 15:26:49.572
  Aug 24 15:26:49.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:26:49.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:26:49.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:26:49.602
  Aug 24 15:26:49.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:26:49.955576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:50.955805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/24/23 15:26:51.791
  Aug 24 15:26:51.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-8651 --namespace=crd-publish-openapi-8651 create -f -'
  E0824 15:26:51.956624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:52.957471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:53.108: INFO: stderr: ""
  Aug 24 15:26:53.108: INFO: stdout: "e2e-test-crd-publish-openapi-5327-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 24 15:26:53.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-8651 --namespace=crd-publish-openapi-8651 delete e2e-test-crd-publish-openapi-5327-crds test-cr'
  Aug 24 15:26:53.245: INFO: stderr: ""
  Aug 24 15:26:53.245: INFO: stdout: "e2e-test-crd-publish-openapi-5327-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Aug 24 15:26:53.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-8651 --namespace=crd-publish-openapi-8651 apply -f -'
  E0824 15:26:53.957490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:54.070: INFO: stderr: ""
  Aug 24 15:26:54.070: INFO: stdout: "e2e-test-crd-publish-openapi-5327-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 24 15:26:54.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-8651 --namespace=crd-publish-openapi-8651 delete e2e-test-crd-publish-openapi-5327-crds test-cr'
  Aug 24 15:26:54.213: INFO: stderr: ""
  Aug 24 15:26:54.213: INFO: stdout: "e2e-test-crd-publish-openapi-5327-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/24/23 15:26:54.213
  Aug 24 15:26:54.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-8651 explain e2e-test-crd-publish-openapi-5327-crds'
  Aug 24 15:26:54.594: INFO: stderr: ""
  Aug 24 15:26:54.594: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5327-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0824 15:26:54.958175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:55.958798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:56.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8651" for this suite. @ 08/24/23 15:26:56.554
• [7.010 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 08/24/23 15:26:56.583
  Aug 24 15:26:56.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:26:56.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:26:56.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:26:56.631
  STEP: Creating service test in namespace statefulset-4578 @ 08/24/23 15:26:56.639
  Aug 24 15:26:56.698: INFO: Found 0 stateful pods, waiting for 1
  E0824 15:26:56.959723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:57.960361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:58.960843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:59.961246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:00.961585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:01.961772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:02.961975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:03.962117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:04.962342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:05.962715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:06.706: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 08/24/23 15:27:06.717
  W0824 15:27:06.731773      14 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Aug 24 15:27:06.749: INFO: Found 1 stateful pods, waiting for 2
  E0824 15:27:06.963534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:07.964632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:08.964870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:09.965631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:10.966082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:11.966571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:12.966992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:13.967066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:14.967484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:15.968054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:16.756: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:27:16.756: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 08/24/23 15:27:16.769
  STEP: Delete all of the StatefulSets @ 08/24/23 15:27:16.774
  STEP: Verify that StatefulSets have been deleted @ 08/24/23 15:27:16.79
  Aug 24 15:27:16.794: INFO: Deleting all statefulset in ns statefulset-4578
  Aug 24 15:27:16.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4578" for this suite. @ 08/24/23 15:27:16.827
• [20.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 08/24/23 15:27:16.898
  Aug 24 15:27:16.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:27:16.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:16.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:16.958
  STEP: Creating configMap with name projected-configmap-test-volume-8e3e053f-56c9-486d-822d-93425b5eba9a @ 08/24/23 15:27:16.967
  E0824 15:27:16.968525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:27:16.979
  E0824 15:27:17.969910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:18.970181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:19.970216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:20.970777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:27:21.033
  Aug 24 15:27:21.046: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-configmaps-46792ea8-a2cf-4107-baf0-8215693764dd container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:27:21.057
  Aug 24 15:27:21.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2539" for this suite. @ 08/24/23 15:27:21.138
• [4.252 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 08/24/23 15:27:21.15
  Aug 24 15:27:21.150: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename subpath @ 08/24/23 15:27:21.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:21.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:21.193
  STEP: Setting up data @ 08/24/23 15:27:21.198
  STEP: Creating pod pod-subpath-test-secret-btj8 @ 08/24/23 15:27:21.213
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 15:27:21.213
  E0824 15:27:21.971500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:22.972246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:23.972242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:24.972610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:25.973716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:26.975004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:27.975669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:28.976287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:29.976586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:30.977488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:31.977959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:32.978178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:33.978656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:34.979590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:35.979734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:36.980047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:37.981020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:38.981272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:39.981473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:40.981492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:41.981717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:42.982328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:43.981940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:44.982312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:27:45.348
  Aug 24 15:27:45.353: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-subpath-test-secret-btj8 container test-container-subpath-secret-btj8: <nil>
  STEP: delete the pod @ 08/24/23 15:27:45.373
  STEP: Deleting pod pod-subpath-test-secret-btj8 @ 08/24/23 15:27:45.4
  Aug 24 15:27:45.400: INFO: Deleting pod "pod-subpath-test-secret-btj8" in namespace "subpath-1635"
  Aug 24 15:27:45.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1635" for this suite. @ 08/24/23 15:27:45.414
• [24.274 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 08/24/23 15:27:45.435
  Aug 24 15:27:45.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:27:45.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:45.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:45.48
  STEP: Setting up server cert @ 08/24/23 15:27:45.539
  E0824 15:27:45.983194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:27:46.598
  STEP: Deploying the webhook pod @ 08/24/23 15:27:46.611
  STEP: Wait for the deployment to be ready @ 08/24/23 15:27:46.629
  Aug 24 15:27:46.650: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 15:27:46.984272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:47.985724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:27:48.679
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:27:48.703
  E0824 15:27:48.986256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:49.704: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 08/24/23 15:27:49.716
  STEP: create a pod that should be updated by the webhook @ 08/24/23 15:27:49.745
  Aug 24 15:27:49.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2105" for this suite. @ 08/24/23 15:27:49.913
  STEP: Destroying namespace "webhook-markers-5066" for this suite. @ 08/24/23 15:27:49.928
• [4.506 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 08/24/23 15:27:49.948
  Aug 24 15:27:49.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:27:49.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:49.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:49.979
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/24/23 15:27:49.983
  E0824 15:27:49.986145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:50.986294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:51.986666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:52.987415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:53.987522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:27:54.029
  Aug 24 15:27:54.037: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-8d56911a-44e8-4be4-a496-a8c20c6c56f1 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:27:54.051
  Aug 24 15:27:54.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4622" for this suite. @ 08/24/23 15:27:54.086
• [4.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 08/24/23 15:27:54.099
  Aug 24 15:27:54.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 15:27:54.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:54.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:54.131
  STEP: fetching the /apis discovery document @ 08/24/23 15:27:54.137
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 08/24/23 15:27:54.142
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 08/24/23 15:27:54.142
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 08/24/23 15:27:54.143
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 08/24/23 15:27:54.145
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 08/24/23 15:27:54.145
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 08/24/23 15:27:54.147
  Aug 24 15:27:54.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9285" for this suite. @ 08/24/23 15:27:54.157
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 08/24/23 15:27:54.17
  Aug 24 15:27:54.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:27:54.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:54.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:54.212
  STEP: Setting up server cert @ 08/24/23 15:27:54.266
  E0824 15:27:54.987784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:27:55.601
  STEP: Deploying the webhook pod @ 08/24/23 15:27:55.608
  STEP: Wait for the deployment to be ready @ 08/24/23 15:27:55.624
  Aug 24 15:27:55.640: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:27:55.988795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:56.989484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:27:57.662
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:27:57.677
  E0824 15:27:57.989509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:58.677: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 08/24/23 15:27:58.693
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 15:27:58.693
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 08/24/23 15:27:58.72
  E0824 15:27:58.989826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 08/24/23 15:27:59.737
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 15:27:59.737
  E0824 15:27:59.989918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 08/24/23 15:28:00.786
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 15:28:00.786
  E0824 15:28:00.990798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:01.991504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:02.991759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:03.991931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:04.992022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 08/24/23 15:28:05.841
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 15:28:05.841
  E0824 15:28:05.993061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:06.993940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:07.994794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:08.994945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:09.995080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:10.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:28:10.995878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3871" for this suite. @ 08/24/23 15:28:11.1
  STEP: Destroying namespace "webhook-markers-3976" for this suite. @ 08/24/23 15:28:11.112
• [16.958 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 08/24/23 15:28:11.129
  Aug 24 15:28:11.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 15:28:11.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:11.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:11.168
  STEP: Creating a test namespace @ 08/24/23 15:28:11.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:11.221
  STEP: Creating a service in the namespace @ 08/24/23 15:28:11.235
  STEP: Deleting the namespace @ 08/24/23 15:28:11.265
  STEP: Waiting for the namespace to be removed. @ 08/24/23 15:28:11.286
  E0824 15:28:11.996382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:12.997219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:13.997380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:14.998025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:15.998911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:16.999949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 08/24/23 15:28:17.294
  STEP: Verifying there is no service in the namespace @ 08/24/23 15:28:17.32
  Aug 24 15:28:17.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7252" for this suite. @ 08/24/23 15:28:17.331
  STEP: Destroying namespace "nsdeletetest-3252" for this suite. @ 08/24/23 15:28:17.344
  Aug 24 15:28:17.350: INFO: Namespace nsdeletetest-3252 was already deleted
  STEP: Destroying namespace "nsdeletetest-9124" for this suite. @ 08/24/23 15:28:17.35
• [6.236 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 08/24/23 15:28:17.368
  Aug 24 15:28:17.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:28:17.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:17.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:17.401
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/24/23 15:28:17.405
  E0824 15:28:18.058235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:19.042235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:20.042222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:21.042452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:28:21.471
  Aug 24 15:28:21.478: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-939dcb74-20f8-4be1-978a-6136c69c9d25 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:28:21.495
  Aug 24 15:28:21.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4196" for this suite. @ 08/24/23 15:28:21.53
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 08/24/23 15:28:21.546
  Aug 24 15:28:21.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 15:28:21.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:21.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:21.575
  STEP: Create a ReplicaSet @ 08/24/23 15:28:21.579
  STEP: Verify that the required pods have come up @ 08/24/23 15:28:21.59
  Aug 24 15:28:21.601: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0824 15:28:22.043102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:23.043523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:24.043587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:25.043804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:26.044665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:26.613: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 08/24/23 15:28:26.613
  Aug 24 15:28:26.616: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 08/24/23 15:28:26.617
  STEP: DeleteCollection of the ReplicaSets @ 08/24/23 15:28:26.625
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 08/24/23 15:28:26.641
  Aug 24 15:28:26.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5257" for this suite. @ 08/24/23 15:28:26.68
• [5.234 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 08/24/23 15:28:26.781
  Aug 24 15:28:26.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename security-context @ 08/24/23 15:28:26.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:26.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:26.918
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/24/23 15:28:26.928
  E0824 15:28:27.045454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:28.046370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:29.046712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:30.048633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:28:31.003
  Aug 24 15:28:31.008: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod security-context-eead3676-b826-43b4-b836-7a47c53c67bc container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:28:31.02
  E0824 15:28:31.049579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:31.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3295" for this suite. @ 08/24/23 15:28:31.06
• [4.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 08/24/23 15:28:31.075
  Aug 24 15:28:31.075: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:28:31.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:31.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:31.107
  STEP: Creating a test headless service @ 08/24/23 15:28:31.113
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7001.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7001.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 08/24/23 15:28:31.121
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7001.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7001.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 08/24/23 15:28:31.121
  STEP: creating a pod to probe DNS @ 08/24/23 15:28:31.121
  STEP: submitting the pod to kubernetes @ 08/24/23 15:28:31.122
  E0824 15:28:32.049628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:33.050672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:28:33.176
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:28:33.185
  Aug 24 15:28:33.220: INFO: DNS probes using dns-7001/dns-test-adba6109-52ae-4891-b22e-27232a2c9775 succeeded

  Aug 24 15:28:33.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:28:33.228
  STEP: deleting the test headless service @ 08/24/23 15:28:33.251
  STEP: Destroying namespace "dns-7001" for this suite. @ 08/24/23 15:28:33.281
• [2.222 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 08/24/23 15:28:33.3
  Aug 24 15:28:33.301: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:28:33.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:33.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:33.332
  E0824 15:28:34.051543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:35.051605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:35.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3935" for this suite. @ 08/24/23 15:28:35.389
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 08/24/23 15:28:35.405
  Aug 24 15:28:35.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:28:35.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:35.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:35.445
  STEP: Creating a pod to test downward api env vars @ 08/24/23 15:28:35.451
  E0824 15:28:36.115537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:37.055874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:38.056703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:39.057086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:28:39.495
  Aug 24 15:28:39.499: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downward-api-b70c7963-1bf8-417c-ba31-33d61d9a28ed container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:28:39.512
  Aug 24 15:28:39.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4384" for this suite. @ 08/24/23 15:28:39.536
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 08/24/23 15:28:39.55
  Aug 24 15:28:39.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:28:39.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:39.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:39.575
  STEP: Setting up server cert @ 08/24/23 15:28:39.61
  E0824 15:28:40.057893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:28:40.262
  STEP: Deploying the webhook pod @ 08/24/23 15:28:40.276
  STEP: Wait for the deployment to be ready @ 08/24/23 15:28:40.294
  Aug 24 15:28:40.319: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:28:41.067323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:42.063795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:28:42.338
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:28:42.355
  E0824 15:28:43.064141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:43.356: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/24/23 15:28:43.466
  STEP: Creating a configMap that should be mutated @ 08/24/23 15:28:43.494
  STEP: Deleting the collection of validation webhooks @ 08/24/23 15:28:43.547
  STEP: Creating a configMap that should not be mutated @ 08/24/23 15:28:43.624
  Aug 24 15:28:43.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6022" for this suite. @ 08/24/23 15:28:43.732
  STEP: Destroying namespace "webhook-markers-6233" for this suite. @ 08/24/23 15:28:43.743
• [4.210 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 08/24/23 15:28:43.766
  Aug 24 15:28:43.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:28:43.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:43.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:43.804
  Aug 24 15:28:43.812: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Aug 24 15:28:43.832: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0824 15:28:44.064559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:45.066448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:46.065438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:47.066281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:48.066856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:48.841: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 15:28:48.841
  Aug 24 15:28:48.841: INFO: Creating deployment "test-rolling-update-deployment"
  Aug 24 15:28:48.851: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Aug 24 15:28:48.867: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0824 15:28:49.068104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:50.069037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:50.879: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Aug 24 15:28:50.885: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Aug 24 15:28:50.908: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "efa23c28-6ff8-4793-bcd5-4178a36a53e9",
      ResourceVersion: (string) (len=5) "30871",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828487728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 15:28:50.917: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67f37436-bcb2-4277-be8d-3248469d5020",
      ResourceVersion: (string) (len=5) "30860",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828487728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "efa23c28-6ff8-4793-bcd5-4178a36a53e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 66 61 32 33 63  32 38 2d 36 66 66 38 2d  |\"efa23c28-6ff8-|
              00000120  34 37 39 33 2d 62 63 64  35 2d 34 31 37 38 61 33  |4793-bcd5-4178a3|
              00000130  36 61 35 33 65 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6a53e9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:28:50.920: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Aug 24 15:28:50.920: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "206d2563-c1cb-4445-a51c-642e6eedb868",
      ResourceVersion: (string) (len=5) "30870",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828487723,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "efa23c28-6ff8-4793-bcd5-4178a36a53e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 65 66 61 32 33 63 32  |"uid\":\"efa23c2|
              000000b0  38 2d 36 66 66 38 2d 34  37 39 33 2d 62 63 64 35  |8-6ff8-4793-bcd5|
              000000c0  2d 34 31 37 38 61 33 36  61 35 33 65 39 5c 22 7d  |-4178a36a53e9\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:28:50.932: INFO: Pod "test-rolling-update-deployment-7f5c55c64-t8hxc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-t8hxc",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-8495",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fae2996b-16e8-41fb-bf50-ee81c21bc704",
      ResourceVersion: (string) (len=5) "30859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828487728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "67f37436-bcb2-4277-be8d-3248469d5020",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 37  66 33 37 34 33 36 2d 62  |d\":\"67f37436-b|
              00000090  63 62 32 2d 34 32 37 37  2d 62 65 38 64 2d 33 32  |cb2-4277-be8d-32|
              000000a0  34 38 34 36 39 64 35 30  32 30 5c 22 7d 22 3a 7b  |48469d5020\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 34 5c 22 7d 22 3a  |10.233.66.4\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z2cpc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z2cpc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828487728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.233.66.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.66.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828487728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828487729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://6995cc35041b22a778adcf1c6d4fc4c9cc1325f45fb0cb332d028f1ebc6bc64e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:28:50.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8495" for this suite. @ 08/24/23 15:28:50.948
• [7.194 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 08/24/23 15:28:50.964
  Aug 24 15:28:50.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 15:28:50.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:51.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:51.018
  STEP: Performing setup for networking test in namespace pod-network-test-7162 @ 08/24/23 15:28:51.025
  STEP: creating a selector @ 08/24/23 15:28:51.025
  STEP: Creating the service pods in kubernetes @ 08/24/23 15:28:51.025
  Aug 24 15:28:51.026: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0824 15:28:51.069934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:52.070771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:53.071724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:54.072057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:55.072217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:56.073077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:57.073434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:58.074777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:59.075216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:00.075366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:01.075654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:02.076669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:03.077506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:04.078398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:05.078753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:06.078958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:07.079178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:08.079950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:09.080273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:10.080565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:11.081485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:12.081602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:13.081755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/24/23 15:29:13.23
  E0824 15:29:14.082720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:15.083875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:15.285: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 24 15:29:15.286: INFO: Going to poll 10.233.65.198 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 24 15:29:15.291: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.198 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7162 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:29:15.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:29:15.293: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:29:15.294: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7162/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.198+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0824 15:29:16.084575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:16.443: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 24 15:29:16.444: INFO: Going to poll 10.233.64.167 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 24 15:29:16.451: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.167 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7162 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:29:16.451: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:29:16.452: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:29:16.452: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7162/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.167+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0824 15:29:17.084856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:17.589: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 24 15:29:17.590: INFO: Going to poll 10.233.66.209 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 24 15:29:17.596: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.209 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7162 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:29:17.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:29:17.598: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:29:17.598: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7162/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.209+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0824 15:29:18.085006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:18.749: INFO: Found all 1 expected endpoints: [netserver-2]
  Aug 24 15:29:18.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7162" for this suite. @ 08/24/23 15:29:18.764
• [27.812 seconds]
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 08/24/23 15:29:18.778
  Aug 24 15:29:18.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:29:18.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:18.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:18.824
  STEP: Creating secret with name s-test-opt-del-cf2f956c-79df-48c5-b8b3-5ec6728daa99 @ 08/24/23 15:29:18.838
  STEP: Creating secret with name s-test-opt-upd-547af166-a637-4dda-883d-641799c072de @ 08/24/23 15:29:18.846
  STEP: Creating the pod @ 08/24/23 15:29:18.855
  E0824 15:29:19.085132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:20.086268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:21.087547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:22.087183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-cf2f956c-79df-48c5-b8b3-5ec6728daa99 @ 08/24/23 15:29:22.961
  STEP: Updating secret s-test-opt-upd-547af166-a637-4dda-883d-641799c072de @ 08/24/23 15:29:22.97
  STEP: Creating secret with name s-test-opt-create-69ba6ae6-0f69-43ca-a9bb-43cf4b1dd51b @ 08/24/23 15:29:22.977
  STEP: waiting to observe update in volume @ 08/24/23 15:29:22.986
  E0824 15:29:23.087605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:24.087889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:25.087870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:26.088482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:27.089006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:28.089121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:29.089570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:30.089934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:31.090558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:32.091160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:33.091723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:34.092122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:35.092176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:36.092414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:37.092593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:38.093142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:39.093875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:40.094248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:41.094248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:42.094391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:43.095137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:44.095666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:45.095913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:46.096901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:47.097322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:48.097147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:49.097426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:50.097568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:51.097670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:52.097727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:53.098589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:54.098845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:55.099900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:56.100340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:57.100147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:58.100246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:59.100440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:00.101151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:01.101144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:02.101803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:03.102168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:04.102783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:05.103107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:06.103215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:07.103739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:08.104727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:09.105082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:10.105255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:11.105442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:12.105698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:13.105825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:14.106877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:15.107064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:16.107487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:17.107740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:18.108000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:19.108824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:20.110195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:21.110204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:22.111013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:23.111409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:24.111757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:25.111996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:26.112780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:27.113749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:28.114005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:29.115514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:30.116062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:31.116007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:32.116593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:33.117865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:34.119031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:35.118833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:35.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9339" for this suite. @ 08/24/23 15:30:35.652
• [76.885 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 08/24/23 15:30:35.665
  Aug 24 15:30:35.665: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename job @ 08/24/23 15:30:35.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:35.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:35.713
  STEP: Creating a suspended job @ 08/24/23 15:30:35.725
  STEP: Patching the Job @ 08/24/23 15:30:35.737
  STEP: Watching for Job to be patched @ 08/24/23 15:30:35.782
  Aug 24 15:30:35.788: INFO: Event ADDED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-job-label:e2e-2hmbh] and annotations: map[]
  Aug 24 15:30:35.789: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-job-label:e2e-2hmbh] and annotations: map[]
  Aug 24 15:30:35.790: INFO: Event MODIFIED found for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[]
  STEP: Updating the job @ 08/24/23 15:30:35.79
  STEP: Watching for Job to be updated @ 08/24/23 15:30:35.808
  Aug 24 15:30:35.812: INFO: Event MODIFIED found for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:35.813: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 08/24/23 15:30:35.813
  Aug 24 15:30:35.818: INFO: Job: e2e-2hmbh as labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh]
  STEP: Waiting for job to complete @ 08/24/23 15:30:35.819
  E0824 15:30:36.119771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:37.120146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:38.121152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:39.121970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:40.144751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:41.138032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:42.138909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:43.139768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:44.140133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:45.140482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 08/24/23 15:30:45.826
  STEP: Watching for Job to be deleted @ 08/24/23 15:30:45.84
  Aug 24 15:30:45.845: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.845: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.845: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.845: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.847: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.847: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.847: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.848: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.848: INFO: Event MODIFIED observed for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  Aug 24 15:30:45.848: INFO: Event DELETED found for Job e2e-2hmbh in namespace job-6359 with labels: map[e2e-2hmbh:patched e2e-job-label:e2e-2hmbh] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 08/24/23 15:30:45.849
  Aug 24 15:30:45.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6359" for this suite. @ 08/24/23 15:30:45.87
• [10.232 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 08/24/23 15:30:45.901
  Aug 24 15:30:45.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename limitrange @ 08/24/23 15:30:45.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:45.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:45.958
  STEP: Creating LimitRange "e2e-limitrange-mlgc2" in namespace "limitrange-776" @ 08/24/23 15:30:45.962
  STEP: Creating another limitRange in another namespace @ 08/24/23 15:30:45.972
  Aug 24 15:30:45.996: INFO: Namespace "e2e-limitrange-mlgc2-1461" created
  Aug 24 15:30:45.997: INFO: Creating LimitRange "e2e-limitrange-mlgc2" in namespace "e2e-limitrange-mlgc2-1461"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-mlgc2" @ 08/24/23 15:30:46.007
  Aug 24 15:30:46.013: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-mlgc2" in "limitrange-776" namespace @ 08/24/23 15:30:46.014
  Aug 24 15:30:46.030: INFO: LimitRange "e2e-limitrange-mlgc2" has been patched
  STEP: Delete LimitRange "e2e-limitrange-mlgc2" by Collection with labelSelector: "e2e-limitrange-mlgc2=patched" @ 08/24/23 15:30:46.03
  STEP: Confirm that the limitRange "e2e-limitrange-mlgc2" has been deleted @ 08/24/23 15:30:46.045
  Aug 24 15:30:46.046: INFO: Requesting list of LimitRange to confirm quantity
  Aug 24 15:30:46.051: INFO: Found 0 LimitRange with label "e2e-limitrange-mlgc2=patched"
  Aug 24 15:30:46.051: INFO: LimitRange "e2e-limitrange-mlgc2" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-mlgc2" @ 08/24/23 15:30:46.051
  Aug 24 15:30:46.057: INFO: Found 1 limitRange
  Aug 24 15:30:46.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-776" for this suite. @ 08/24/23 15:30:46.066
  STEP: Destroying namespace "e2e-limitrange-mlgc2-1461" for this suite. @ 08/24/23 15:30:46.08
• [0.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 08/24/23 15:30:46.098
  Aug 24 15:30:46.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 15:30:46.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:46.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:46.137
  E0824 15:30:46.141004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Namespace "namespaces-6109" @ 08/24/23 15:30:46.144
  Aug 24 15:30:46.161: INFO: Namespace "namespaces-6109" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"b2df8b56-5fa5-4a3c-9a52-63b88dba1d84", "kubernetes.io/metadata.name":"namespaces-6109", "namespaces-6109":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Aug 24 15:30:46.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6109" for this suite. @ 08/24/23 15:30:46.173
• [0.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 08/24/23 15:30:46.191
  Aug 24 15:30:46.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:30:46.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:46.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:46.23
  STEP: validating cluster-info @ 08/24/23 15:30:46.235
  Aug 24 15:30:46.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-9168 cluster-info'
  Aug 24 15:30:46.424: INFO: stderr: ""
  Aug 24 15:30:46.424: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Aug 24 15:30:46.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9168" for this suite. @ 08/24/23 15:30:46.437
• [0.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 08/24/23 15:30:46.46
  Aug 24 15:30:46.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:30:46.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:46.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:46.518
  Aug 24 15:30:46.535: INFO: Got root ca configmap in namespace "svcaccounts-5450"
  Aug 24 15:30:46.554: INFO: Deleted root ca configmap in namespace "svcaccounts-5450"
  STEP: waiting for a new root ca configmap created @ 08/24/23 15:30:47.057
  Aug 24 15:30:47.067: INFO: Recreated root ca configmap in namespace "svcaccounts-5450"
  Aug 24 15:30:47.076: INFO: Updated root ca configmap in namespace "svcaccounts-5450"
  E0824 15:30:47.141677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 08/24/23 15:30:47.577
  Aug 24 15:30:47.585: INFO: Reconciled root ca configmap in namespace "svcaccounts-5450"
  Aug 24 15:30:47.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5450" for this suite. @ 08/24/23 15:30:47.595
• [1.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 08/24/23 15:30:47.613
  Aug 24 15:30:47.613: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 15:30:47.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:47.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:47.647
  STEP: create the container @ 08/24/23 15:30:47.653
  W0824 15:30:47.670460      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/24/23 15:30:47.671
  E0824 15:30:48.141949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:49.142870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:50.143055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/24/23 15:30:50.702
  STEP: the container should be terminated @ 08/24/23 15:30:50.708
  STEP: the termination message should be set @ 08/24/23 15:30:50.708
  Aug 24 15:30:50.708: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/24/23 15:30:50.708
  Aug 24 15:30:50.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6408" for this suite. @ 08/24/23 15:30:50.747
• [3.148 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 08/24/23 15:30:50.764
  Aug 24 15:30:50.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:30:50.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:50.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:50.808
  STEP: Creating configMap with name configmap-test-upd-10459b98-4815-4f7d-8977-b5c1754515b5 @ 08/24/23 15:30:50.82
  STEP: Creating the pod @ 08/24/23 15:30:50.83
  E0824 15:30:51.143537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:52.144816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-10459b98-4815-4f7d-8977-b5c1754515b5 @ 08/24/23 15:30:52.883
  STEP: waiting to observe update in volume @ 08/24/23 15:30:52.896
  E0824 15:30:53.144564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:54.145215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:55.146454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:56.146798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:57.147598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:58.147624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:59.147920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:00.148327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:01.148794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:02.149291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:03.150039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:04.150234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:05.151216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:06.151669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:07.152214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:08.152353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:09.152574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:10.152784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:11.153501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:12.153586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:13.154334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:14.154904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:15.155756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:16.155961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:17.156382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:18.157221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:19.157311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:20.157626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:21.158492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:22.159147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:23.160195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:24.160681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:25.161520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:26.161950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:27.162527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:28.163476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:29.163880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:30.164350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:31.165236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:32.165443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:33.166307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:34.166336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:35.166500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:36.166674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:37.167351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:38.167801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:39.168147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:40.168545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:41.169127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:42.169328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:43.169423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:44.169979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:45.169935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:46.170175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:47.172426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:48.171524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:49.171687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:50.172007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:51.172217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:52.172765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:53.172898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:54.173266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:55.173315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:56.173589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:57.173863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:58.175221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:59.175234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:00.175449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:01.175678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:02.175927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:03.176174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:04.176473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:05.176676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:06.177629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:07.178531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:08.179529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:09.179329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:10.179476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:11.179560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:12.180870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:13.182042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:14.181900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:15.182375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:16.185253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:17.183542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:18.184372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:19.184530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:20.184635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:21.184992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:22.185432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:23.185525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:23.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2082" for this suite. @ 08/24/23 15:32:23.625
• [92.877 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 08/24/23 15:32:23.648
  Aug 24 15:32:23.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-watch @ 08/24/23 15:32:23.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:23.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:23.699
  Aug 24 15:32:23.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:32:24.186258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:25.187027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:26.187247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 08/24/23 15:32:26.355
  Aug 24 15:32:26.362: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T15:32:26Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T15:32:26Z]] name:name1 resourceVersion:31747 uid:249639c7-e2f4-4177-9f11-67676d433013] num:map[num1:9223372036854775807 num2:1000000]]}
  E0824 15:32:27.187454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:28.188419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:29.189007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:30.189317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:31.189962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:32.190135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:33.191151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:34.191471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:35.191819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:36.192100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 08/24/23 15:32:36.363
  Aug 24 15:32:36.375: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T15:32:36Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T15:32:36Z]] name:name2 resourceVersion:31782 uid:f2037a71-c807-493f-915a-632a2a03cb58] num:map[num1:9223372036854775807 num2:1000000]]}
  E0824 15:32:37.192275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:38.192748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:39.193059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:40.193227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:41.193587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:42.193943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:43.194084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:44.194705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:45.194822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:46.195420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 08/24/23 15:32:46.376
  Aug 24 15:32:46.387: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T15:32:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T15:32:46Z]] name:name1 resourceVersion:31804 uid:249639c7-e2f4-4177-9f11-67676d433013] num:map[num1:9223372036854775807 num2:1000000]]}
  E0824 15:32:47.196252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:48.196822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:49.197703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:50.198221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:51.198876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:52.198987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:53.200151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:54.200306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:55.200552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:56.200760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 08/24/23 15:32:56.388
  Aug 24 15:32:56.400: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T15:32:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T15:32:56Z]] name:name2 resourceVersion:31827 uid:f2037a71-c807-493f-915a-632a2a03cb58] num:map[num1:9223372036854775807 num2:1000000]]}
  E0824 15:32:57.201138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:58.202123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:59.202294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:00.202882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:01.203393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:02.203555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:03.204044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:04.204174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:05.204692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:06.204846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 08/24/23 15:33:06.401
  Aug 24 15:33:06.416: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T15:32:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T15:32:46Z]] name:name1 resourceVersion:31850 uid:249639c7-e2f4-4177-9f11-67676d433013] num:map[num1:9223372036854775807 num2:1000000]]}
  E0824 15:33:07.205966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:08.206905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:09.207415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:10.208161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:11.208760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:12.209134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:13.210005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:14.210161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:15.210448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:16.210558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 08/24/23 15:33:16.418
  Aug 24 15:33:16.434: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T15:32:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T15:32:56Z]] name:name2 resourceVersion:31872 uid:f2037a71-c807-493f-915a-632a2a03cb58] num:map[num1:9223372036854775807 num2:1000000]]}
  E0824 15:33:17.210809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:18.211353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:19.211432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:20.212753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:21.213264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:22.213472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:23.213588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:24.213746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:25.213985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:26.214039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:33:26.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4588" for this suite. @ 08/24/23 15:33:26.979
• [63.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 08/24/23 15:33:27.002
  Aug 24 15:33:27.002: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:33:27.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:33:27.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:33:27.034
  Aug 24 15:33:27.044: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:33:27.214979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:28.215124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/24/23 15:33:28.892
  Aug 24 15:33:28.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-5776 --namespace=crd-publish-openapi-5776 create -f -'
  E0824 15:33:29.215508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:33:30.112: INFO: stderr: ""
  Aug 24 15:33:30.112: INFO: stdout: "e2e-test-crd-publish-openapi-7076-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 24 15:33:30.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-5776 --namespace=crd-publish-openapi-5776 delete e2e-test-crd-publish-openapi-7076-crds test-cr'
  E0824 15:33:30.215839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:33:30.393: INFO: stderr: ""
  Aug 24 15:33:30.393: INFO: stdout: "e2e-test-crd-publish-openapi-7076-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Aug 24 15:33:30.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-5776 --namespace=crd-publish-openapi-5776 apply -f -'
  Aug 24 15:33:30.736: INFO: stderr: ""
  Aug 24 15:33:30.736: INFO: stdout: "e2e-test-crd-publish-openapi-7076-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 24 15:33:30.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-5776 --namespace=crd-publish-openapi-5776 delete e2e-test-crd-publish-openapi-7076-crds test-cr'
  Aug 24 15:33:30.871: INFO: stderr: ""
  Aug 24 15:33:30.871: INFO: stdout: "e2e-test-crd-publish-openapi-7076-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/24/23 15:33:30.871
  Aug 24 15:33:30.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-5776 explain e2e-test-crd-publish-openapi-7076-crds'
  Aug 24 15:33:31.193: INFO: stderr: ""
  Aug 24 15:33:31.193: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7076-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0824 15:33:31.217247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:32.217426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:33:33.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5776" for this suite. @ 08/24/23 15:33:33.104
• [6.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 08/24/23 15:33:33.122
  Aug 24 15:33:33.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename endpointslicemirroring @ 08/24/23 15:33:33.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:33:33.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:33:33.157
  STEP: mirroring a new custom Endpoint @ 08/24/23 15:33:33.18
  Aug 24 15:33:33.204: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0824 15:33:33.218028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:34.218555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 08/24/23 15:33:35.211
  E0824 15:33:35.218731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:33:35.233: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0824 15:33:36.219047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:37.219871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 08/24/23 15:33:37.24
  Aug 24 15:33:37.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2681" for this suite. @ 08/24/23 15:33:37.275
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 08/24/23 15:33:37.302
  Aug 24 15:33:37.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:33:37.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:33:37.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:33:37.334
  STEP: Setting up server cert @ 08/24/23 15:33:37.38
  E0824 15:33:38.220781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:33:38.409
  STEP: Deploying the webhook pod @ 08/24/23 15:33:38.42
  STEP: Wait for the deployment to be ready @ 08/24/23 15:33:38.438
  Aug 24 15:33:38.453: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:33:39.221003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:40.221448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:33:40.471
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:33:40.49
  E0824 15:33:41.221548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:33:41.491: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 08/24/23 15:33:41.5
  STEP: Creating a custom resource definition that should be denied by the webhook @ 08/24/23 15:33:41.534
  Aug 24 15:33:41.535: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:33:41.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5275" for this suite. @ 08/24/23 15:33:41.654
  STEP: Destroying namespace "webhook-markers-7398" for this suite. @ 08/24/23 15:33:41.671
• [4.388 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 08/24/23 15:33:41.699
  Aug 24 15:33:41.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:33:41.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:33:41.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:33:41.789
  STEP: Creating projection with secret that has name projected-secret-test-b854e555-c449-4fc4-9d21-9940c30d3617 @ 08/24/23 15:33:41.794
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:33:41.802
  E0824 15:33:42.221940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:43.221943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:44.223237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:45.223664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:33:45.84
  Aug 24 15:33:45.844: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-secrets-71caf7da-6b43-412d-964f-cb3acccf73c9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:33:45.871
  Aug 24 15:33:45.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5160" for this suite. @ 08/24/23 15:33:45.905
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 08/24/23 15:33:45.921
  Aug 24 15:33:45.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:33:45.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:33:45.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:33:45.962
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:33:45.967
  E0824 15:33:46.223675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:47.223896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:48.224559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:49.224743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:33:50.003
  Aug 24 15:33:50.009: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-3d03a684-3006-46dd-a5b3-ab5b3a346c7f container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:33:50.021
  Aug 24 15:33:50.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7717" for this suite. @ 08/24/23 15:33:50.068
• [4.158 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 08/24/23 15:33:50.084
  Aug 24 15:33:50.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 15:33:50.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:33:50.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:33:50.119
  Aug 24 15:33:50.148: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:33:50.225156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:51.225979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:52.226910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:53.226951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:54.227388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:55.227789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:56.227702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:57.227909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:58.228089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:59.228442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:00.229199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:01.229397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:02.229820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:03.230884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:04.231470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:05.231564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:06.232213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:07.233209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:08.233815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:09.234027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:10.234270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:11.234565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:12.235033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:13.235493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:14.235818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:15.235973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:16.236156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:17.236284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:18.236713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:19.237525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:20.238117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:21.238718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:22.239796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:23.239854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:24.240172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:25.240440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:26.240866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:27.241365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:28.241676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:29.241961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:30.242541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:31.242857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:32.243622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:33.244961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:34.245393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:35.245532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:36.245807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:37.246089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:38.246492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:39.246677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:40.247439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:41.247565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:42.248490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:43.249653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:44.250331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:45.250549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:46.251329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:47.251488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:48.252158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:49.252341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:50.196: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/24/23 15:34:50.202
  Aug 24 15:34:50.245: INFO: Created pod: pod0-0-sched-preemption-low-priority
  E0824 15:34:50.252863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:50.257: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 24 15:34:50.291: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 24 15:34:50.307: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Aug 24 15:34:50.377: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Aug 24 15:34:50.449: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/24/23 15:34:50.459
  E0824 15:34:51.255779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:52.258357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:53.257029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:54.257363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 08/24/23 15:34:54.53
  E0824 15:34:55.258038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:56.258669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:57.258963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:58.259694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:58.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5500" for this suite. @ 08/24/23 15:34:58.691
• [68.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 08/24/23 15:34:58.714
  Aug 24 15:34:58.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:34:58.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:58.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:58.757
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 08/24/23 15:34:58.762
  Aug 24 15:34:58.778: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2812  c5490d2b-5b27-462c-9432-e0aaea328536 32361 0 2023-08-24 15:34:58 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-08-24 15:34:58 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ftqdt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ftqdt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0824 15:34:59.260783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:00.261705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 08/24/23 15:35:00.794
  Aug 24 15:35:00.794: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2812 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:35:00.794: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:35:00.796: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:35:00.796: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2812/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 08/24/23 15:35:00.98
  Aug 24 15:35:00.981: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2812 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:35:00.981: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:35:00.985: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:35:00.985: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2812/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 24 15:35:01.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:35:01.198: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-2812" for this suite. @ 08/24/23 15:35:01.221
• [2.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 08/24/23 15:35:01.242
  Aug 24 15:35:01.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 15:35:01.245
  E0824 15:35:01.263378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:01.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:01.287
  STEP: getting /apis @ 08/24/23 15:35:01.294
  STEP: getting /apis/node.k8s.io @ 08/24/23 15:35:01.306
  STEP: getting /apis/node.k8s.io/v1 @ 08/24/23 15:35:01.31
  STEP: creating @ 08/24/23 15:35:01.312
  STEP: watching @ 08/24/23 15:35:01.348
  Aug 24 15:35:01.348: INFO: starting watch
  STEP: getting @ 08/24/23 15:35:01.36
  STEP: listing @ 08/24/23 15:35:01.372
  STEP: patching @ 08/24/23 15:35:01.379
  STEP: updating @ 08/24/23 15:35:01.389
  Aug 24 15:35:01.405: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 08/24/23 15:35:01.406
  STEP: deleting a collection @ 08/24/23 15:35:01.458
  Aug 24 15:35:01.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8790" for this suite. @ 08/24/23 15:35:01.499
• [0.280 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 08/24/23 15:35:01.523
  Aug 24 15:35:01.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:35:01.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:01.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:01.585
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/24/23 15:35:01.592
  E0824 15:35:02.263531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:03.264222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:04.264222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:05.264657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:35:05.683
  Aug 24 15:35:05.688: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-0dc80a62-7653-41f8-95a6-e9c539ee5164 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:35:05.706
  Aug 24 15:35:05.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4082" for this suite. @ 08/24/23 15:35:05.739
• [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 08/24/23 15:35:05.758
  Aug 24 15:35:05.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 15:35:05.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:05.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:05.796
  Aug 24 15:35:05.822: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0824 15:35:06.265251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:07.265680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:08.266743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:09.266693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:10.267007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:10.830: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 15:35:10.831
  STEP: Scaling up "test-rs" replicaset  @ 08/24/23 15:35:10.831
  Aug 24 15:35:10.847: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 08/24/23 15:35:10.848
  Aug 24 15:35:10.868: INFO: observed ReplicaSet test-rs in namespace replicaset-9111 with ReadyReplicas 1, AvailableReplicas 1
  Aug 24 15:35:10.933: INFO: observed ReplicaSet test-rs in namespace replicaset-9111 with ReadyReplicas 1, AvailableReplicas 1
  Aug 24 15:35:10.966: INFO: observed ReplicaSet test-rs in namespace replicaset-9111 with ReadyReplicas 1, AvailableReplicas 1
  Aug 24 15:35:10.996: INFO: observed ReplicaSet test-rs in namespace replicaset-9111 with ReadyReplicas 1, AvailableReplicas 1
  E0824 15:35:11.267646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:12.268632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:12.279: INFO: observed ReplicaSet test-rs in namespace replicaset-9111 with ReadyReplicas 2, AvailableReplicas 2
  Aug 24 15:35:12.388: INFO: observed Replicaset test-rs in namespace replicaset-9111 with ReadyReplicas 3 found true
  Aug 24 15:35:12.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9111" for this suite. @ 08/24/23 15:35:12.398
• [6.656 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 08/24/23 15:35:12.417
  Aug 24 15:35:12.417: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:35:12.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:12.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:12.46
  STEP: Creating a pod to test emptydir volume type on node default medium @ 08/24/23 15:35:12.464
  E0824 15:35:13.270768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:14.271073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:15.271362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:16.271603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:35:16.5
  Aug 24 15:35:16.504: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-1f66e11a-39e3-477a-a6ec-d8cde502f3a2 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:35:16.514
  Aug 24 15:35:16.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2742" for this suite. @ 08/24/23 15:35:16.549
• [4.143 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 08/24/23 15:35:16.564
  Aug 24 15:35:16.564: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:35:16.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:16.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:16.602
  STEP: create the rc @ 08/24/23 15:35:16.608
  W0824 15:35:16.620167      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0824 15:35:17.271508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:18.272682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:19.273201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:20.273872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:21.274526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/24/23 15:35:21.63
  STEP: wait for all pods to be garbage collected @ 08/24/23 15:35:21.642
  E0824 15:35:22.275116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:23.276097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:24.277003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:25.277143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:26.277946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/24/23 15:35:26.653
  Aug 24 15:35:26.846: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 15:35:26.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5437" for this suite. @ 08/24/23 15:35:26.857
• [10.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 08/24/23 15:35:26.872
  Aug 24 15:35:26.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/24/23 15:35:26.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:26.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:26.911
  STEP: Creating 50 configmaps @ 08/24/23 15:35:26.916
  E0824 15:35:27.278926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 08/24/23 15:35:27.338
  Aug 24 15:35:27.361: INFO: Pod name wrapped-volume-race-9a7492c4-ad25-46f3-8775-842171b06865: Found 0 pods out of 5
  E0824 15:35:28.295567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:29.288763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:30.288899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:31.289892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:32.290140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:32.386: INFO: Pod name wrapped-volume-race-9a7492c4-ad25-46f3-8775-842171b06865: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/24/23 15:35:32.386
  STEP: Creating RC which spawns configmap-volume pods @ 08/24/23 15:35:32.433
  Aug 24 15:35:32.477: INFO: Pod name wrapped-volume-race-2ee151f7-3723-4b47-8fc5-847cf560dd87: Found 0 pods out of 5
  E0824 15:35:33.291046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:34.290996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:35.291322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:36.291995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:37.292954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:37.494: INFO: Pod name wrapped-volume-race-2ee151f7-3723-4b47-8fc5-847cf560dd87: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/24/23 15:35:37.494
  STEP: Creating RC which spawns configmap-volume pods @ 08/24/23 15:35:37.541
  Aug 24 15:35:37.585: INFO: Pod name wrapped-volume-race-c6f7b29f-f591-41f4-a20f-0b67bab3357d: Found 0 pods out of 5
  E0824 15:35:38.295555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:39.335417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:40.310448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:41.310686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:42.310856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:42.601: INFO: Pod name wrapped-volume-race-c6f7b29f-f591-41f4-a20f-0b67bab3357d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/24/23 15:35:42.601
  Aug 24 15:35:42.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-c6f7b29f-f591-41f4-a20f-0b67bab3357d in namespace emptydir-wrapper-3069, will wait for the garbage collector to delete the pods @ 08/24/23 15:35:42.66
  Aug 24 15:35:42.732: INFO: Deleting ReplicationController wrapped-volume-race-c6f7b29f-f591-41f4-a20f-0b67bab3357d took: 13.570365ms
  Aug 24 15:35:42.933: INFO: Terminating ReplicationController wrapped-volume-race-c6f7b29f-f591-41f4-a20f-0b67bab3357d pods took: 201.298079ms
  E0824 15:35:43.311577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2ee151f7-3723-4b47-8fc5-847cf560dd87 in namespace emptydir-wrapper-3069, will wait for the garbage collector to delete the pods @ 08/24/23 15:35:44.234
  Aug 24 15:35:44.309: INFO: Deleting ReplicationController wrapped-volume-race-2ee151f7-3723-4b47-8fc5-847cf560dd87 took: 16.883145ms
  E0824 15:35:44.316004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:44.410: INFO: Terminating ReplicationController wrapped-volume-race-2ee151f7-3723-4b47-8fc5-847cf560dd87 pods took: 101.231997ms
  E0824 15:35:45.316932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-9a7492c4-ad25-46f3-8775-842171b06865 in namespace emptydir-wrapper-3069, will wait for the garbage collector to delete the pods @ 08/24/23 15:35:46.112
  Aug 24 15:35:46.182: INFO: Deleting ReplicationController wrapped-volume-race-9a7492c4-ad25-46f3-8775-842171b06865 took: 11.867268ms
  E0824 15:35:46.318196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:46.383: INFO: Terminating ReplicationController wrapped-volume-race-9a7492c4-ad25-46f3-8775-842171b06865 pods took: 201.198524ms
  E0824 15:35:47.319229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 08/24/23 15:35:48.285
  E0824 15:35:48.319328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-3069" for this suite. @ 08/24/23 15:35:48.774
• [21.915 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 08/24/23 15:35:48.79
  Aug 24 15:35:48.790: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:35:48.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:48.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:48.875
  STEP: Creating secret with name secret-test-3ce469e0-339b-4a43-9ad3-718902810765 @ 08/24/23 15:35:48.878
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:35:48.886
  E0824 15:35:49.319774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:50.320073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:51.320808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:52.321851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:35:52.918
  Aug 24 15:35:52.923: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-7f60a1ad-fe39-410d-9777-b538111d2c6d container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:35:52.939
  Aug 24 15:35:52.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1779" for this suite. @ 08/24/23 15:35:52.973
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 08/24/23 15:35:52.992
  Aug 24 15:35:52.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:35:52.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:53.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:53.042
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4242 @ 08/24/23 15:35:53.048
  STEP: changing the ExternalName service to type=ClusterIP @ 08/24/23 15:35:53.061
  STEP: creating replication controller externalname-service in namespace services-4242 @ 08/24/23 15:35:53.135
  I0824 15:35:53.172019      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4242, replica count: 2
  E0824 15:35:53.322689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:54.323426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:55.323722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:35:56.224302      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0824 15:35:56.324581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:57.324976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:58.325804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:35:59.225035      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:35:59.225: INFO: Creating new exec pod
  E0824 15:35:59.326307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:00.327477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:01.327759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:02.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-4242 exec execpodb6smz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0824 15:36:02.327912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:02.605: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 24 15:36:02.605: INFO: stdout: "externalname-service-9f7tn"
  Aug 24 15:36:02.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-4242 exec execpodb6smz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.39.108 80'
  Aug 24 15:36:02.872: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.39.108 80\nConnection to 10.233.39.108 80 port [tcp/http] succeeded!\n"
  Aug 24 15:36:02.872: INFO: stdout: "externalname-service-9f7tn"
  Aug 24 15:36:02.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:36:02.881: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-4242" for this suite. @ 08/24/23 15:36:02.911
• [9.932 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 08/24/23 15:36:02.941
  Aug 24 15:36:02.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:36:02.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:36:02.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:36:02.982
  STEP: Creating secret with name secret-test-8143ac80-a9dc-41a6-bb17-a6b0f972367e @ 08/24/23 15:36:02.986
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:36:02.995
  E0824 15:36:03.328155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:04.328434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:05.329138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:06.328985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:36:07.035
  Aug 24 15:36:07.041: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-0308d5c3-a9b4-4c4a-b7ec-d5732acad281 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:36:07.052
  Aug 24 15:36:07.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5203" for this suite. @ 08/24/23 15:36:07.081
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 08/24/23 15:36:07.105
  Aug 24 15:36:07.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 15:36:07.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:36:07.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:36:07.142
  STEP: Performing setup for networking test in namespace pod-network-test-7551 @ 08/24/23 15:36:07.148
  STEP: creating a selector @ 08/24/23 15:36:07.148
  STEP: Creating the service pods in kubernetes @ 08/24/23 15:36:07.148
  Aug 24 15:36:07.148: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0824 15:36:07.329370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:08.332844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:09.333621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:10.333723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:11.333897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:12.334453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:13.335382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:14.335559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:15.335639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:16.335656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:17.335792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:18.336996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:19.336845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:20.337097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:21.338189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:22.338866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:23.339195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:24.339984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:25.340736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:26.340945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:27.341061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:28.341811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/24/23 15:36:29.327
  E0824 15:36:29.342967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:30.342875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:31.343395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:31.359: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 24 15:36:31.359: INFO: Breadth first check of 10.233.65.198 on host 192.168.121.240...
  Aug 24 15:36:31.366: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.140:9080/dial?request=hostname&protocol=udp&host=10.233.65.198&port=8081&tries=1'] Namespace:pod-network-test-7551 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:36:31.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:36:31.368: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:36:31.368: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7551/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.140%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.198%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 15:36:31.545: INFO: Waiting for responses: map[]
  Aug 24 15:36:31.546: INFO: reached 10.233.65.198 after 0/1 tries
  Aug 24 15:36:31.546: INFO: Breadth first check of 10.233.64.241 on host 192.168.121.75...
  Aug 24 15:36:31.552: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.140:9080/dial?request=hostname&protocol=udp&host=10.233.64.241&port=8081&tries=1'] Namespace:pod-network-test-7551 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:36:31.552: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:36:31.554: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:36:31.554: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7551/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.140%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.241%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 15:36:31.697: INFO: Waiting for responses: map[]
  Aug 24 15:36:31.697: INFO: reached 10.233.64.241 after 0/1 tries
  Aug 24 15:36:31.697: INFO: Breadth first check of 10.233.66.73 on host 192.168.121.161...
  Aug 24 15:36:31.702: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.140:9080/dial?request=hostname&protocol=udp&host=10.233.66.73&port=8081&tries=1'] Namespace:pod-network-test-7551 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:36:31.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:36:31.704: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:36:31.704: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7551/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.140%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.73%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 15:36:31.814: INFO: Waiting for responses: map[]
  Aug 24 15:36:31.814: INFO: reached 10.233.66.73 after 0/1 tries
  Aug 24 15:36:31.814: INFO: Going to retry 0 out of 3 pods....
  Aug 24 15:36:31.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7551" for this suite. @ 08/24/23 15:36:31.825
• [24.736 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 08/24/23 15:36:31.843
  Aug 24 15:36:31.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename limitrange @ 08/24/23 15:36:31.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:36:31.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:36:31.882
  STEP: Creating a LimitRange @ 08/24/23 15:36:31.886
  STEP: Setting up watch @ 08/24/23 15:36:31.887
  STEP: Submitting a LimitRange @ 08/24/23 15:36:31.992
  STEP: Verifying LimitRange creation was observed @ 08/24/23 15:36:32.008
  STEP: Fetching the LimitRange to ensure it has proper values @ 08/24/23 15:36:32.008
  Aug 24 15:36:32.014: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 24 15:36:32.014: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 08/24/23 15:36:32.014
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 08/24/23 15:36:32.026
  Aug 24 15:36:32.032: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 24 15:36:32.033: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 08/24/23 15:36:32.033
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 08/24/23 15:36:32.049
  Aug 24 15:36:32.073: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Aug 24 15:36:32.073: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 08/24/23 15:36:32.073
  STEP: Failing to create a Pod with more than max resources @ 08/24/23 15:36:32.082
  STEP: Updating a LimitRange @ 08/24/23 15:36:32.086
  STEP: Verifying LimitRange updating is effective @ 08/24/23 15:36:32.099
  E0824 15:36:32.343916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:33.344952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 08/24/23 15:36:34.107
  STEP: Failing to create a Pod with more than max resources @ 08/24/23 15:36:34.115
  STEP: Deleting a LimitRange @ 08/24/23 15:36:34.12
  STEP: Verifying the LimitRange was deleted @ 08/24/23 15:36:34.141
  E0824 15:36:34.345276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:35.345527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:36.345638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:37.346107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:38.346461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:39.147: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 08/24/23 15:36:39.147
  Aug 24 15:36:39.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5495" for this suite. @ 08/24/23 15:36:39.17
• [7.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 08/24/23 15:36:39.186
  Aug 24 15:36:39.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename taint-multiple-pods @ 08/24/23 15:36:39.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:36:39.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:36:39.219
  Aug 24 15:36:39.227: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:36:39.346901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:40.346902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:41.347843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:42.348182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:43.348338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:44.348512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:45.348624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:46.349549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:47.350552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:48.351467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:49.352254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:50.352862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:51.353909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:52.354549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:53.354968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:54.355485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:55.356502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:56.356629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:57.356941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:58.357083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:59.358086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:00.358716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:01.359521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:02.359647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:03.360692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:04.360862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:05.362642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:06.361744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:07.361880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:08.362046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:09.362651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:10.362844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:11.363933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:12.364551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:13.365461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:14.365470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:15.366151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:16.366566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:17.366655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:18.367185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:19.368094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:20.368257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:21.368755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:22.368972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:23.370058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:24.370240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:25.370700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:26.371207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:27.371752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:28.372525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:29.373247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:30.373563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:31.374523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:32.375002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:33.375289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:34.375908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:35.377032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:36.376863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:37.377545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:38.378515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:39.271: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 15:37:39.277: INFO: Starting informer...
  STEP: Starting pods... @ 08/24/23 15:37:39.278
  E0824 15:37:39.378957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:39.507: INFO: Pod1 is running on eiyoo9ohd4ei-3. Tainting Node
  E0824 15:37:40.383467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:41.383748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:41.744: INFO: Pod2 is running on eiyoo9ohd4ei-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/24/23 15:37:41.744
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 15:37:41.762
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 08/24/23 15:37:41.769
  E0824 15:37:42.383871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:43.383996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:44.384365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:45.399463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:46.392141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:47.392637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:47.553: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0824 15:37:48.396455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:49.397968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:50.397152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:51.397064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:52.397492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:53.397558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:54.397684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:55.397864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:56.398174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:57.398335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:58.398439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:59.398900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:00.399643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:01.399843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:02.401138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:03.400430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:04.400870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:05.401601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:06.401769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:07.402022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:07.613: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Aug 24 15:38:07.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 15:38:07.656
  STEP: Destroying namespace "taint-multiple-pods-1482" for this suite. @ 08/24/23 15:38:07.662
• [88.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 08/24/23 15:38:07.689
  Aug 24 15:38:07.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:38:07.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:38:07.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:38:07.725
  STEP: create deployment with httpd image @ 08/24/23 15:38:07.73
  Aug 24 15:38:07.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-5471 create -f -'
  E0824 15:38:08.402656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:08.979: INFO: stderr: ""
  Aug 24 15:38:08.979: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 08/24/23 15:38:08.979
  Aug 24 15:38:08.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-5471 diff -f -'
  Aug 24 15:38:09.392: INFO: rc: 1
  Aug 24 15:38:09.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-5471 delete -f -'
  E0824 15:38:09.403390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:09.676: INFO: stderr: ""
  Aug 24 15:38:09.676: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Aug 24 15:38:09.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5471" for this suite. @ 08/24/23 15:38:09.687
• [2.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 08/24/23 15:38:09.71
  Aug 24 15:38:09.710: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:38:09.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:38:09.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:38:09.757
  STEP: Creating service test in namespace statefulset-9595 @ 08/24/23 15:38:09.762
  STEP: Creating stateful set ss in namespace statefulset-9595 @ 08/24/23 15:38:09.775
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9595 @ 08/24/23 15:38:09.791
  Aug 24 15:38:09.799: INFO: Found 0 stateful pods, waiting for 1
  E0824 15:38:10.424392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:11.419578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:12.419521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:13.419648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:14.419975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:15.420342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:16.420545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:17.420768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:18.421779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:19.422259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:19.809: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 08/24/23 15:38:19.809
  Aug 24 15:38:19.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9595 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 15:38:20.098: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:38:20.098: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:38:20.099: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:38:20.105: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0824 15:38:20.423301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:21.423705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:22.423846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:23.424813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:24.425025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:25.425226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:26.425337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:27.425722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:28.425907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:29.426096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:30.115: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:38:30.115: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 15:38:30.162: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Aug 24 15:38:30.163: INFO: ss-0  eiyoo9ohd4ei-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:09 +0000 UTC  }]
  Aug 24 15:38:30.163: INFO: 
  Aug 24 15:38:30.163: INFO: StatefulSet ss has not reached scale 3, at 1
  E0824 15:38:30.426903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:31.171: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.984762428s
  E0824 15:38:31.427101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:32.180: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.976809754s
  E0824 15:38:32.427242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:33.188: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.967847291s
  E0824 15:38:33.427827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:34.198: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.960046311s
  E0824 15:38:34.428209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:35.205: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.950727361s
  E0824 15:38:35.428242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:36.213: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.943175246s
  E0824 15:38:36.428404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:37.224: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.934496446s
  E0824 15:38:37.429060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:38.233: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.923900706s
  E0824 15:38:38.429785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:39.242: INFO: Verifying statefulset ss doesn't scale past 3 for another 914.126678ms
  E0824 15:38:39.430357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9595 @ 08/24/23 15:38:40.242
  Aug 24 15:38:40.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9595 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0824 15:38:40.431336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:40.518: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 15:38:40.518: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 15:38:40.518: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 15:38:40.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9595 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 15:38:40.802: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 24 15:38:40.802: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 15:38:40.802: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 15:38:40.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9595 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 15:38:41.077: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 24 15:38:41.077: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 15:38:41.077: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 15:38:41.108: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0824 15:38:41.431808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:42.432917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:43.433027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:44.433191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:45.433419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:46.434152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:47.434219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:48.434395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:49.434512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:50.434647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:51.115: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:38:51.115: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:38:51.115: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 08/24/23 15:38:51.115
  Aug 24 15:38:51.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9595 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 15:38:51.397: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:38:51.397: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:38:51.397: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:38:51.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9595 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0824 15:38:51.435497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:51.668: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:38:51.668: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:38:51.668: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:38:51.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9595 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 15:38:51.923: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:38:51.923: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:38:51.923: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:38:51.923: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 15:38:51.928: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0824 15:38:52.436292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:53.436547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:54.436733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:55.436906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:56.437169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:57.437461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:58.437653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:59.437861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:00.437973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:01.438119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:01.943: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:39:01.943: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:39:01.943: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:39:01.973: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Aug 24 15:39:01.973: INFO: ss-0  eiyoo9ohd4ei-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:09 +0000 UTC  }]
  Aug 24 15:39:01.973: INFO: ss-1  eiyoo9ohd4ei-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:30 +0000 UTC  }]
  Aug 24 15:39:01.973: INFO: ss-2  eiyoo9ohd4ei-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:30 +0000 UTC  }]
  Aug 24 15:39:01.973: INFO: 
  Aug 24 15:39:01.973: INFO: StatefulSet ss has not reached scale 0, at 3
  E0824 15:39:02.438454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:02.982: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Aug 24 15:39:02.982: INFO: ss-1  eiyoo9ohd4ei-1  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:30 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:38:30 +0000 UTC  }]
  Aug 24 15:39:02.982: INFO: 
  Aug 24 15:39:02.982: INFO: StatefulSet ss has not reached scale 0, at 1
  E0824 15:39:03.438656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:03.988: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.980580191s
  E0824 15:39:04.438975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:04.995: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.975587011s
  E0824 15:39:05.439167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:06.000: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.968043829s
  E0824 15:39:06.439513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:07.007: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.962172433s
  E0824 15:39:07.440000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:08.015: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.955487546s
  E0824 15:39:08.440145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:09.020: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.947852216s
  E0824 15:39:09.440319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:10.028: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.942585011s
  E0824 15:39:10.441257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:11.036: INFO: Verifying statefulset ss doesn't scale past 0 for another 934.978646ms
  E0824 15:39:11.441998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9595 @ 08/24/23 15:39:12.036
  Aug 24 15:39:12.044: INFO: Scaling statefulset ss to 0
  Aug 24 15:39:12.072: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:39:12.080: INFO: Deleting all statefulset in ns statefulset-9595
  Aug 24 15:39:12.090: INFO: Scaling statefulset ss to 0
  Aug 24 15:39:12.114: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:39:12.121: INFO: Deleting statefulset ss
  Aug 24 15:39:12.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9595" for this suite. @ 08/24/23 15:39:12.164
• [62.477 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 08/24/23 15:39:12.188
  Aug 24 15:39:12.189: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 15:39:12.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:12.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:12.239
  E0824 15:39:12.442017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:13.442651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:14.443410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:15.443954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:16.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5603" for this suite. @ 08/24/23 15:39:16.298
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 08/24/23 15:39:16.323
  Aug 24 15:39:16.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:39:16.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:16.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:16.357
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 15:39:16.361
  Aug 24 15:39:16.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7770 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0824 15:39:16.444830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:16.519: INFO: stderr: ""
  Aug 24 15:39:16.519: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 08/24/23 15:39:16.519
  E0824 15:39:17.445910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:18.446909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:19.447009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:20.447405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:21.447574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/24/23 15:39:21.57
  Aug 24 15:39:21.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7770 get pod e2e-test-httpd-pod -o json'
  Aug 24 15:39:21.742: INFO: stderr: ""
  Aug 24 15:39:21.742: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-08-24T15:39:16Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7770\",\n        \"resourceVersion\": \"34332\",\n        \"uid\": \"0b41f352-2363-444b-a6e0-10e5b1016a24\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ncwnx\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"eiyoo9ohd4ei-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-ncwnx\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:39:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:39:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:39:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:39:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://c96d7bef76170c030d8f17436e3993ab2751d04fc54f630c5b2076e21cd2c612\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-08-24T15:39:17Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.161\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.116\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.116\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-08-24T15:39:16Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 08/24/23 15:39:21.743
  Aug 24 15:39:21.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7770 replace -f -'
  Aug 24 15:39:22.306: INFO: stderr: ""
  Aug 24 15:39:22.306: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 08/24/23 15:39:22.306
  Aug 24 15:39:22.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7770 delete pods e2e-test-httpd-pod'
  E0824 15:39:22.448151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:23.448678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:23.882: INFO: stderr: ""
  Aug 24 15:39:23.882: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 24 15:39:23.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7770" for this suite. @ 08/24/23 15:39:23.891
• [7.577 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 08/24/23 15:39:23.902
  Aug 24 15:39:23.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:39:23.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:23.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:23.937
  STEP: creating a Deployment @ 08/24/23 15:39:23.947
  STEP: waiting for Deployment to be created @ 08/24/23 15:39:23.956
  STEP: waiting for all Replicas to be Ready @ 08/24/23 15:39:23.959
  Aug 24 15:39:23.961: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 15:39:23.961: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 15:39:23.985: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 15:39:23.986: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 15:39:24.040: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 15:39:24.040: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 15:39:24.077: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 15:39:24.077: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0824 15:39:24.449275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:25.450067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:25.858: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 24 15:39:25.859: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0824 15:39:26.450326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:27.255: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 08/24/23 15:39:27.255
  Aug 24 15:39:27.270: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 08/24/23 15:39:27.27
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.273: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 0
  Aug 24 15:39:27.274: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:27.274: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:27.274: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.274: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.275: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.275: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.304: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.305: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.365: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.365: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:27.423: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:27.423: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  E0824 15:39:27.451554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:27.456: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:27.456: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  E0824 15:39:28.452180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:28.891: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:28.891: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:28.972: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  STEP: listing Deployments @ 08/24/23 15:39:28.973
  Aug 24 15:39:28.980: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 08/24/23 15:39:28.98
  Aug 24 15:39:29.006: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 08/24/23 15:39:29.007
  Aug 24 15:39:29.055: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 15:39:29.069: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 15:39:29.169: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 15:39:29.322: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 15:39:29.383: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0824 15:39:29.453291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:30.319: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0824 15:39:30.454863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:30.896: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 15:39:30.992: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 15:39:31.060: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0824 15:39:31.454985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:32.313: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 08/24/23 15:39:32.376
  STEP: fetching the DeploymentStatus @ 08/24/23 15:39:32.406
  Aug 24 15:39:32.427: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:32.428: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:32.428: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:32.429: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:32.430: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 1
  Aug 24 15:39:32.430: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:32.431: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 3
  Aug 24 15:39:32.432: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:32.432: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 2
  Aug 24 15:39:32.433: INFO: observed Deployment test-deployment in namespace deployment-7974 with ReadyReplicas 3
  STEP: deleting the Deployment @ 08/24/23 15:39:32.434
  E0824 15:39:32.455929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:32.460: INFO: observed event type MODIFIED
  Aug 24 15:39:32.461: INFO: observed event type MODIFIED
  Aug 24 15:39:32.462: INFO: observed event type MODIFIED
  Aug 24 15:39:32.463: INFO: observed event type MODIFIED
  Aug 24 15:39:32.463: INFO: observed event type MODIFIED
  Aug 24 15:39:32.464: INFO: observed event type MODIFIED
  Aug 24 15:39:32.464: INFO: observed event type MODIFIED
  Aug 24 15:39:32.465: INFO: observed event type MODIFIED
  Aug 24 15:39:32.466: INFO: observed event type MODIFIED
  Aug 24 15:39:32.467: INFO: observed event type MODIFIED
  Aug 24 15:39:32.468: INFO: observed event type MODIFIED
  Aug 24 15:39:32.470: INFO: observed event type MODIFIED
  Aug 24 15:39:32.471: INFO: observed event type MODIFIED
  Aug 24 15:39:32.478: INFO: Log out all the ReplicaSets if there is no deployment created
  Aug 24 15:39:32.483: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b8cd1e0-0a59-4c69-9e72-ab015ec43c08",
      ResourceVersion: (string) (len=5) "34556",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d695935b-9be3-4928-a8fa-31a12246a716",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 36 39 35  39 33 35 62 2d 39 62 65  |":\"d695935b-9be|
              00000130  33 2d 34 39 32 38 2d 61  38 66 61 2d 33 31 61 31  |3-4928-a8fa-31a1|
              00000140  32 32 34 36 61 37 31 36  5c 22 7d 22 3a 7b 7d 7d  |2246a716\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 24 15:39:32.510: INFO: pod: "test-deployment-64fd565c98-9lclz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-9lclz",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-7974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a833a356-845a-4ab3-800c-1242febbc04f",
      ResourceVersion: (string) (len=5) "34551",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488369,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488374,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "3b8cd1e0-0a59-4c69-9e72-ab015ec43c08",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 62 38 63 64 31 65 30  |uid\":\"3b8cd1e0|
              000000a0  2d 30 61 35 39 2d 34 63  36 39 2d 39 65 37 32 2d  |-0a59-4c69-9e72-|
              000000b0  61 62 30 31 35 65 63 34  33 63 30 38 5c 22 7d 22  |ab015ec43c08\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 32 37 5c 22 7d 22  |10.233.65.27\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gx5h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gx5h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488369,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828488370,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=64) "e6f1816883972d4be47bd48879a08919b96afcd344132622e4d444987919323c",
          ContainerID: (string) (len=72) "cri-o://f47d04b4cf0ecd36323934cfe7ade2080b647c4cbc28190896c4441eee5d679b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 24 15:39:32.526: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86a44bcc-c5c7-444d-9081-5cf2868242bd",
      ResourceVersion: (string) (len=5) "34456",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488363,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d695935b-9be3-4928-a8fa-31a12246a716",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 36 39 35  39 33 35 62 2d 39 62 65  |":\"d695935b-9be|
              00000130  33 2d 34 39 32 38 2d 61  38 66 61 2d 33 31 61 31  |3-4928-a8fa-31a1|
              00000140  32 32 34 36 61 37 31 36  5c 22 7d 22 3a 7b 7d 7d  |2246a716\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 24 15:39:32.546: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "919b11d1-684c-494f-b38c-c70232e62b90",
      ResourceVersion: (string) (len=5) "34548",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488369,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d695935b-9be3-4928-a8fa-31a12246a716",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 36 39 35  39 33 35 62 2d 39 62 65  |":\"d695935b-9be|
              00000130  33 2d 34 39 32 38 2d 61  38 66 61 2d 33 31 61 31  |3-4928-a8fa-31a1|
              00000140  32 32 34 36 61 37 31 36  5c 22 7d 22 3a 7b 7d 7d  |2246a716\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 24 15:39:32.560: INFO: pod: "test-deployment-79ff746c4-b22zp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-b22zp",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-7974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd431266-d635-4391-9335-65604f781d02",
      ResourceVersion: (string) (len=5) "34564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488369,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488373,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "919b11d1-684c-494f-b38c-c70232e62b90",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 31 39 62 31 31 64 31  |uid\":\"919b11d1|
              000000a0  2d 36 38 34 63 2d 34 39  34 66 2d 62 33 38 63 2d  |-684c-494f-b38c-|
              000000b0  63 37 30 32 33 32 65 36  32 62 39 30 5c 22 7d 22  |c70232e62b90\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 32 32 30 5c 22 7d  |10.233.66.220\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gg9lv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gg9lv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.220",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.220"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488369,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828488370,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://e37395625676787e45660f4e2f247917df26d0e8c4b76caa7d6312343f5be46d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 24 15:39:32.565: INFO: pod: "test-deployment-79ff746c4-h7m6z":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-h7m6z",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-7974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78826960-c939-4fdf-bffd-236d4c93dfa4",
      ResourceVersion: (string) (len=5) "34565",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488373,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "919b11d1-684c-494f-b38c-c70232e62b90",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 31 39 62 31 31 64 31  |uid\":\"919b11d1|
              000000a0  2d 36 38 34 63 2d 34 39  34 66 2d 62 33 38 63 2d  |-684c-494f-b38c-|
              000000b0  63 37 30 32 33 32 65 36  32 62 39 30 5c 22 7d 22  |c70232e62b90\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 32 35 34 5c 22 7d  |10.233.65.254\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vw2kp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vw2kp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.254",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.254"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828488372,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://a5d7ef4e4452561ef8841e5aaeafc9eead0a7e0e9d1a49445c4f4b96af4a1ae1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 24 15:39:32.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7974" for this suite. @ 08/24/23 15:39:32.587
• [8.698 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 08/24/23 15:39:32.61
  Aug 24 15:39:32.611: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:39:32.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:32.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:32.657
  STEP: creating service in namespace services-9470 @ 08/24/23 15:39:32.665
  STEP: creating service affinity-clusterip in namespace services-9470 @ 08/24/23 15:39:32.665
  STEP: creating replication controller affinity-clusterip in namespace services-9470 @ 08/24/23 15:39:32.712
  I0824 15:39:32.727838      14 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9470, replica count: 3
  E0824 15:39:33.455815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:34.456121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:35.457155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:39:35.780506      14 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:39:35.795: INFO: Creating new exec pod
  E0824 15:39:36.463773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:37.462053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:38.462144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:38.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9470 exec execpod-affinity68fxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Aug 24 15:39:39.135: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Aug 24 15:39:39.135: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:39:39.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9470 exec execpod-affinity68fxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.28.165 80'
  Aug 24 15:39:39.402: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.28.165 80\nConnection to 10.233.28.165 80 port [tcp/http] succeeded!\n"
  Aug 24 15:39:39.402: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:39:39.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-9470 exec execpod-affinity68fxg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.28.165:80/ ; done'
  E0824 15:39:39.462583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:39.871: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.28.165:80/\n"
  Aug 24 15:39:39.871: INFO: stdout: "\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh\naffinity-clusterip-jxbfh"
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.871: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Received response from host: affinity-clusterip-jxbfh
  Aug 24 15:39:39.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:39:39.880: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9470, will wait for the garbage collector to delete the pods @ 08/24/23 15:39:39.902
  Aug 24 15:39:39.973: INFO: Deleting ReplicationController affinity-clusterip took: 12.182734ms
  Aug 24 15:39:40.075: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.363825ms
  E0824 15:39:40.462309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:41.462833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:42.463699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-9470" for this suite. @ 08/24/23 15:39:43.114
• [10.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 08/24/23 15:39:43.149
  Aug 24 15:39:43.150: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:39:43.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:43.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:43.189
  Aug 24 15:39:43.245: INFO: Create a RollingUpdate DaemonSet
  Aug 24 15:39:43.255: INFO: Check that daemon pods launch on every node of the cluster
  Aug 24 15:39:43.276: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:39:43.276: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:39:43.465301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:44.345: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:39:44.345: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:39:44.465822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:45.293: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:39:45.294: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:39:45.467125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:46.293: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 15:39:46.293: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Aug 24 15:39:46.293: INFO: Update the DaemonSet to trigger a rollout
  Aug 24 15:39:46.310: INFO: Updating DaemonSet daemon-set
  E0824 15:39:46.467942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:47.344: INFO: Roll back the DaemonSet before rollout is complete
  Aug 24 15:39:47.383: INFO: Updating DaemonSet daemon-set
  Aug 24 15:39:47.383: INFO: Make sure DaemonSet rollback is complete
  Aug 24 15:39:47.395: INFO: Wrong image for pod: daemon-set-zgsw2. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Aug 24 15:39:47.395: INFO: Pod daemon-set-zgsw2 is not available
  E0824 15:39:47.468285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:48.468837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:49.470270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:50.470915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:51.471849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:52.472668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:53.472936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:54.473711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:55.474426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:56.474813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:57.467: INFO: Pod daemon-set-p56ht is not available
  E0824 15:39:57.475786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 15:39:57.504
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5433, will wait for the garbage collector to delete the pods @ 08/24/23 15:39:57.504
  Aug 24 15:39:57.573: INFO: Deleting DaemonSet.extensions daemon-set took: 14.233569ms
  Aug 24 15:39:57.675: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.337948ms
  E0824 15:39:58.476005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:59.476225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:00.476892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:00.683: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:40:00.683: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 15:40:00.688: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34988"},"items":null}

  Aug 24 15:40:00.692: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34988"},"items":null}

  Aug 24 15:40:00.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5433" for this suite. @ 08/24/23 15:40:00.722
• [17.586 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 08/24/23 15:40:00.735
  Aug 24 15:40:00.735: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:40:00.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:00.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:00.773
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/24/23 15:40:00.777
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/24/23 15:40:00.777
  STEP: creating a pod to probe DNS @ 08/24/23 15:40:00.777
  STEP: submitting the pod to kubernetes @ 08/24/23 15:40:00.778
  E0824 15:40:01.477159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:02.477436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:03.477589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:04.478365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:40:04.816
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:40:04.822
  Aug 24 15:40:04.854: INFO: DNS probes using dns-4265/dns-test-2090c7e3-af33-4db1-aeda-b73d8cebfdbd succeeded

  Aug 24 15:40:04.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:40:04.864
  STEP: Destroying namespace "dns-4265" for this suite. @ 08/24/23 15:40:04.886
• [4.163 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 08/24/23 15:40:04.901
  Aug 24 15:40:04.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:40:04.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:04.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:04.946
  STEP: Setting up server cert @ 08/24/23 15:40:04.988
  E0824 15:40:05.478993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:40:06.14
  STEP: Deploying the webhook pod @ 08/24/23 15:40:06.154
  STEP: Wait for the deployment to be ready @ 08/24/23 15:40:06.172
  Aug 24 15:40:06.184: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 15:40:06.479691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:07.479820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:40:08.203
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:40:08.227
  E0824 15:40:08.480576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:09.227: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 08/24/23 15:40:09.239
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 08/24/23 15:40:09.241
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 08/24/23 15:40:09.242
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 08/24/23 15:40:09.242
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 08/24/23 15:40:09.244
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/24/23 15:40:09.244
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/24/23 15:40:09.246
  Aug 24 15:40:09.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9793" for this suite. @ 08/24/23 15:40:09.334
  STEP: Destroying namespace "webhook-markers-5366" for this suite. @ 08/24/23 15:40:09.345
• [4.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 08/24/23 15:40:09.368
  Aug 24 15:40:09.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 15:40:09.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:09.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:09.417
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 15:40:09.431
  E0824 15:40:09.480971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:10.481741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:11.481979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:12.482057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:13.482259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/24/23 15:40:13.548
  E0824 15:40:14.482717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:15.482906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 08/24/23 15:40:15.596
  E0824 15:40:16.483454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:17.484119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 08/24/23 15:40:17.625
  Aug 24 15:40:17.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1030" for this suite. @ 08/24/23 15:40:17.665
• [8.318 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 08/24/23 15:40:17.687
  Aug 24 15:40:17.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:40:17.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:17.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:17.728
  STEP: creating a Deployment @ 08/24/23 15:40:17.743
  Aug 24 15:40:17.744: INFO: Creating simple deployment test-deployment-dtbjh
  Aug 24 15:40:17.783: INFO: deployment "test-deployment-dtbjh" doesn't have the required revision set
  E0824 15:40:18.485166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:19.484807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 08/24/23 15:40:19.805
  Aug 24 15:40:19.814: INFO: Deployment test-deployment-dtbjh has Conditions: [{Available True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dtbjh-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 08/24/23 15:40:19.814
  Aug 24 15:40:19.829: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 17, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-dtbjh-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 08/24/23 15:40:19.829
  Aug 24 15:40:19.833: INFO: Observed &Deployment event: ADDED
  Aug 24 15:40:19.833: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dtbjh-5d576bd769"}
  Aug 24 15:40:19.833: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.833: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dtbjh-5d576bd769"}
  Aug 24 15:40:19.834: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:40:19.834: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.835: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:40:19.835: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dtbjh-5d576bd769" is progressing.}
  Aug 24 15:40:19.836: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.836: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:40:19.836: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dtbjh-5d576bd769" has successfully progressed.}
  Aug 24 15:40:19.837: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.837: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:40:19.838: INFO: Observed Deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dtbjh-5d576bd769" has successfully progressed.}
  Aug 24 15:40:19.838: INFO: Found Deployment test-deployment-dtbjh in namespace deployment-9419 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 15:40:19.838: INFO: Deployment test-deployment-dtbjh has an updated status
  STEP: patching the Statefulset Status @ 08/24/23 15:40:19.838
  Aug 24 15:40:19.838: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 24 15:40:19.853: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 08/24/23 15:40:19.853
  Aug 24 15:40:19.856: INFO: Observed &Deployment event: ADDED
  Aug 24 15:40:19.856: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dtbjh-5d576bd769"}
  Aug 24 15:40:19.858: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.859: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dtbjh-5d576bd769"}
  Aug 24 15:40:19.859: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:40:19.860: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.860: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:40:19.860: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:17 +0000 UTC 2023-08-24 15:40:17 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dtbjh-5d576bd769" is progressing.}
  Aug 24 15:40:19.861: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.861: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:40:19.862: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dtbjh-5d576bd769" has successfully progressed.}
  Aug 24 15:40:19.862: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.864: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:40:19.865: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:40:19 +0000 UTC 2023-08-24 15:40:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dtbjh-5d576bd769" has successfully progressed.}
  Aug 24 15:40:19.865: INFO: Observed deployment test-deployment-dtbjh in namespace deployment-9419 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 15:40:19.867: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:40:19.867: INFO: Found deployment test-deployment-dtbjh in namespace deployment-9419 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Aug 24 15:40:19.867: INFO: Deployment test-deployment-dtbjh has a patched status
  Aug 24 15:40:19.878: INFO: Deployment "test-deployment-dtbjh":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-dtbjh",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9419",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49f063ce-6c1e-4a99-b42f-63d94291a95c",
      ResourceVersion: (string) (len=5) "35223",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-dtbjh-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 15:40:19.894: INFO: New ReplicaSet "test-deployment-dtbjh-5d576bd769" of Deployment "test-deployment-dtbjh":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-dtbjh-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9419",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c43b14c-bac9-4688-8a09-84c05866d19d",
      ResourceVersion: (string) (len=5) "35218",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-dtbjh",
          UID: (types.UID) (len=36) "49f063ce-6c1e-4a99-b42f-63d94291a95c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 34 39 66  |k:{\"uid\":\"49f|
              00000120  30 36 33 63 65 2d 36 63  31 65 2d 34 61 39 39 2d  |063ce-6c1e-4a99-|
              00000130  62 34 32 66 2d 36 33 64  39 34 32 39 31 61 39 35  |b42f-63d94291a95|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:40:19.917: INFO: Pod "test-deployment-dtbjh-5d576bd769-dqqcp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-dtbjh-5d576bd769-dqqcp",
      GenerateName: (string) (len=33) "test-deployment-dtbjh-5d576bd769-",
      Namespace: (string) (len=15) "deployment-9419",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b7fbb77-a99a-4c04-8032-bfe294798174",
      ResourceVersion: (string) (len=5) "35217",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-dtbjh-5d576bd769",
          UID: (types.UID) (len=36) "4c43b14c-bac9-4688-8a09-84c05866d19d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 34 63 34 33 62 31 34  63 2d 62 61 63 39 2d 34  |"4c43b14c-bac9-4|
              000000a0  36 38 38 2d 38 61 30 39  2d 38 34 63 30 35 38 36  |688-8a09-84c0586|
              000000b0  36 64 31 39 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |6d19d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 36 37 5c 22 7d 22  |10.233.66.67\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zx6kj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zx6kj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828488418,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://3dcc74a283566cad012ae688c166f851108d96e8e0083495bd666bde4842697b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:40:19.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9419" for this suite. @ 08/24/23 15:40:19.928
• [2.252 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 08/24/23 15:40:19.939
  Aug 24 15:40:19.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:40:19.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:19.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:19.967
  E0824 15:40:20.486732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:21.487062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:22.487167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:23.488016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:24.488272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:25.488703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:26.489032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:27.489124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:28.489716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:29.490972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:30.490830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:31.491888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:32.492650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:33.493387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:34.493211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:35.493291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:36.494197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:37.495078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:38.496020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:39.497037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:40.497516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:41.497342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:42.498491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:43.498541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:44.499933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:45.500708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:46.501517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:47.502448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:48.502708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:49.503453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:50.504016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:51.504586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:52.504690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:53.504806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:54.505754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:55.506168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:56.506686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:57.507568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:58.507994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:59.508392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:00.509035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:01.510047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:02.510114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:03.510267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:04.511314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:05.512358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:06.512867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:07.513686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:08.514774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:09.515434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:10.515445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:11.515819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:12.516170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:13.517014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:14.518008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:15.518281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:16.519184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:17.519643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:18.519842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:19.520087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:19.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4110" for this suite. @ 08/24/23 15:41:20.001
• [60.073 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 08/24/23 15:41:20.015
  Aug 24 15:41:20.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:41:20.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:20.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:20.056
  STEP: Counting existing ResourceQuota @ 08/24/23 15:41:20.06
  E0824 15:41:20.521516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:21.522034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:22.523135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:23.524176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:24.524883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:41:25.069
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:41:25.107
  E0824 15:41:25.525175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:26.525584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 08/24/23 15:41:27.116
  STEP: Ensuring resource quota status captures replicaset creation @ 08/24/23 15:41:27.138
  E0824 15:41:27.526098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:28.526225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 08/24/23 15:41:29.145
  STEP: Ensuring resource quota status released usage @ 08/24/23 15:41:29.156
  E0824 15:41:29.526408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:30.527010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:31.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4042" for this suite. @ 08/24/23 15:41:31.17
• [11.165 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 08/24/23 15:41:31.185
  Aug 24 15:41:31.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:41:31.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:31.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:31.227
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 08/24/23 15:41:31.231
  Aug 24 15:41:31.233: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:41:31.527422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:32.527497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:33.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:41:33.527869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:34.527984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:35.528979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:36.529285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:37.529987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:38.530322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:39.530498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:40.534977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:40.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7232" for this suite. @ 08/24/23 15:41:40.898
• [9.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 08/24/23 15:41:40.919
  Aug 24 15:41:40.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:41:40.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:40.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:40.959
  STEP: Creating a pod to test downward api env vars @ 08/24/23 15:41:40.969
  E0824 15:41:41.536070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:42.536840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:43.537400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:44.537871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:41:45.015
  Aug 24 15:41:45.038: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downward-api-5e63f116-1f29-4a39-a502-1f6c1f0ebf7a container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:41:45.079
  Aug 24 15:41:45.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2782" for this suite. @ 08/24/23 15:41:45.147
• [4.241 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 08/24/23 15:41:45.162
  Aug 24 15:41:45.162: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:41:45.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:45.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:45.197
  STEP: Creating pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715 @ 08/24/23 15:41:45.201
  E0824 15:41:45.538315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:46.538849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:41:47.232
  Aug 24 15:41:47.238: INFO: Initial restart count of pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 is 0
  Aug 24 15:41:47.244: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:41:47.539047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:48.539503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:49.252: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:41:49.540455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:50.541121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:51.260: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:41:51.541711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:52.542127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:53.267: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:41:53.542772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:54.543394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:55.274: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:41:55.544136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:56.544849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:57.282: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:41:57.545595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:58.545957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:59.289: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:41:59.547106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:00.547305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:01.296: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:01.547722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:02.547982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:03.305: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:03.548412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:04.548709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:05.312: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:05.549311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:06.549682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:07.319: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:07.550315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:08.550930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:09.327: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:09.551103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:10.551763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:11.335: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:11.552635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:12.553556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:13.344: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:13.553976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:14.554625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:15.351: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:15.555831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:16.556297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:17.357: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:17.557152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:18.557377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:19.364: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:19.558253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:20.558685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:21.377: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:21.559177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:22.559405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:23.385: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:23.560364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:24.561191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:25.392: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:25.562215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:26.562327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:27.399: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:27.562447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:28.562581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:29.436: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:29.562733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:30.563342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:31.442: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:31.563602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:32.564436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:33.452: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:33.564946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:34.565553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:35.460: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:35.566416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:36.566215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:37.467: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:37.567123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:38.567876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:39.477: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:39.569463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:40.569661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:41.488: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:41.570494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:42.570818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:43.498: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:43.571427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:44.572317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:45.504: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:45.573435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:46.573502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:47.511: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:47.573844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:48.574716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:49.516: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:49.575153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:50.575847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:51.525: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:51.576456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:52.577463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:53.535: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:53.577960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:54.578364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:55.545: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:55.579189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:56.579786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:57.553: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:57.580948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:58.580985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:59.560: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:42:59.581307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:00.581562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:01.568: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:01.582487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:02.583457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:03.580: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:03.584569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:04.585045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:05.586117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:05.588: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:06.586257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:07.586489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:07.600: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:08.587012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:09.587302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:09.608: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:10.587548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:11.587637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:11.618: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:12.588619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:13.589691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:13.628: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:14.590758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:15.591244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:15.638: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:16.591611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:17.591846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:17.645: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:18.592054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:19.592564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:19.651: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:20.592732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:21.592951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:21.659: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:22.593858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:23.594602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:23.668: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:24.594768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:25.595035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:25.676: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:26.595245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:27.595515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:27.685: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:28.596034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:29.596364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:29.694: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:30.596604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:31.597614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:31.703: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:32.598321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:33.598523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:33.711: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:34.598824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:35.599065      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:35.719: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:36.599329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:37.599545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:37.726: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:38.599863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:39.600785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:39.733: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:40.604825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:41.604869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:41.739: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:42.605441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:43.606328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:43.755: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:44.606925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:45.607003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:45.764: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:46.607546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:47.607781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:47.771: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:48.607905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:49.608370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:49.779: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:50.609255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:51.609984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:51.787: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:52.610454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:53.611028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:53.794: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:54.611322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:55.611910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:55.805: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:56.612129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:57.612411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:57.816: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:43:58.613269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:59.612700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:59.824: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:00.615155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:01.613536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:01.832: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:02.613916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:03.613945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:03.842: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:04.614523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:05.614594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:05.852: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:06.614695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:07.615439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:07.862: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:08.615791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:09.615992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:09.869: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:10.617027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:11.617990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:11.877: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:12.619060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:13.619451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:13.887: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:14.619601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:15.620080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:15.894: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:16.620862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:17.621490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:17.902: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:18.622206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:19.622625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:19.910: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:20.624244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:21.623524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:21.923: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:22.623696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:23.624202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:23.933: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:24.624586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:25.625089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:25.939: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:26.625279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:27.625976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:27.948: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:28.628032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:29.627601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:29.955: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:30.627970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:31.628409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:31.965: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:32.629100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:33.629703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:33.972: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:34.630831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:35.631367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:35.982: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:36.631625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:37.632430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:37.990: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:38.632673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:39.632904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:39.999: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:40.634378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:41.634183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:42.017: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:42.635039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:43.635644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:44.023: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:44.636439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:45.636706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:46.031: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:46.636757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:47.637879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:48.038: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:48.638860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:49.639837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:50.045: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:50.640604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:51.640779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:52.057: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:52.641959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:53.642915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:54.066: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:54.643196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:55.643404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:56.074: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:56.643553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:57.644336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:58.082: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:44:58.645482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:59.645677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:00.089: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:00.645971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:01.646824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:02.095: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:02.647700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:03.647854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:04.104: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:04.648729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:05.649302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:06.112: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:06.649797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:07.650360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:08.120: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:08.651477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:09.652238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:10.129: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:10.653205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:11.653307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:12.138: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:12.653617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:13.654718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:14.151: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:14.654763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:15.655016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:16.160: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:16.655964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:17.656788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:18.168: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:18.656998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:19.657444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:20.180: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:20.658273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:21.658382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:22.188: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:22.658500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:23.658690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:24.195: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:24.658839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:25.659003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:26.201: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:26.660009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:27.660784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:28.208: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:28.660996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:29.661753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:30.215: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:30.661796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:31.662284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:32.223: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:32.662704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:33.663125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:34.231: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:34.663004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:35.663454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:36.239: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:36.664446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:37.664323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:38.247: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:38.664494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:39.665090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:40.254: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:40.666230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:41.665611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:42.262: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:42.665626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:43.666013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:44.271: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:44.666625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:45.667487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:46.279: INFO: Get pod test-grpc-08d1b96a-bc51-42ed-8f54-53120e478ab0 in namespace container-probe-9715
  E0824 15:45:46.668572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:47.669214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:48.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:45:48.288
  STEP: Destroying namespace "container-probe-9715" for this suite. @ 08/24/23 15:45:48.336
• [243.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 08/24/23 15:45:48.402
  Aug 24 15:45:48.402: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:45:48.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:45:48.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:45:48.451
  STEP: Creating service test in namespace statefulset-9790 @ 08/24/23 15:45:48.454
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 08/24/23 15:45:48.461
  STEP: Creating stateful set ss in namespace statefulset-9790 @ 08/24/23 15:45:48.475
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9790 @ 08/24/23 15:45:48.488
  Aug 24 15:45:48.512: INFO: Found 0 stateful pods, waiting for 1
  E0824 15:45:48.669451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:49.670557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:50.671149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:51.671829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:52.672767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:53.672766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:54.673312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:55.673263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:56.673516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:57.674413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:58.523: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 08/24/23 15:45:58.523
  Aug 24 15:45:58.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0824 15:45:58.675559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:58.802: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:45:58.802: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:45:58.802: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:45:58.808: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0824 15:45:59.675566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:00.675750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:01.676808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:02.677668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:03.678261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:04.678253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:05.678701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:06.678927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:07.679428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:08.679533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:08.817: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:46:08.817: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 15:46:08.846: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999433s
  E0824 15:46:09.679941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:09.857: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.992344601s
  E0824 15:46:10.680013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:10.865: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.980576269s
  E0824 15:46:11.680529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:11.878: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.972950035s
  E0824 15:46:12.681617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:12.887: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.959912723s
  E0824 15:46:13.682667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:13.896: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.950682796s
  E0824 15:46:14.682882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:14.903: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.941806648s
  E0824 15:46:15.683037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:15.910: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.934399837s
  E0824 15:46:16.683617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:16.916: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.92737588s
  E0824 15:46:17.684292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:17.924: INFO: Verifying statefulset ss doesn't scale past 1 for another 922.1327ms
  E0824 15:46:18.684555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9790 @ 08/24/23 15:46:18.925
  Aug 24 15:46:18.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 15:46:19.233: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 15:46:19.233: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 15:46:19.233: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 15:46:19.243: INFO: Found 1 stateful pods, waiting for 3
  E0824 15:46:19.685228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:20.685398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:21.686508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:22.687480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:23.687618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:24.687762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:25.687955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:26.688092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:27.688322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:28.688520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:29.254: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:46:29.254: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:46:29.254: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 08/24/23 15:46:29.254
  STEP: Scale down will halt with unhealthy stateful pod @ 08/24/23 15:46:29.254
  Aug 24 15:46:29.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 15:46:29.562: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:46:29.562: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:46:29.562: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:46:29.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0824 15:46:29.690026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:29.794: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:46:29.794: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:46:29.794: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:46:29.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 15:46:30.079: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 15:46:30.079: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 15:46:30.079: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 15:46:30.079: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 15:46:30.085: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0824 15:46:30.690651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:31.690818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:32.691284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:33.691623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:34.692731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:35.692820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:36.692969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:37.693570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:38.693760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:39.693965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:40.100: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:46:40.100: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:46:40.100: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 15:46:40.128: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999546s
  E0824 15:46:40.694384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:41.142: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.984038547s
  E0824 15:46:41.694946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:42.151: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.97154856s
  E0824 15:46:42.696176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:43.161: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.961646746s
  E0824 15:46:43.696049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:44.172: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.952019634s
  E0824 15:46:44.696926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:45.180: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.940143287s
  E0824 15:46:45.698086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:46.188: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.932902797s
  E0824 15:46:46.698105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:47.199: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.92474733s
  E0824 15:46:47.698426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:48.213: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.913468147s
  E0824 15:46:48.699045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:49.222: INFO: Verifying statefulset ss doesn't scale past 3 for another 898.912769ms
  E0824 15:46:49.699775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9790 @ 08/24/23 15:46:50.223
  Aug 24 15:46:50.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 15:46:50.484: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 15:46:50.484: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 15:46:50.484: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 15:46:50.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0824 15:46:50.699582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:50.779: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 15:46:50.779: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 15:46:50.779: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 15:46:50.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=statefulset-9790 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 15:46:51.057: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 15:46:51.057: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 15:46:51.057: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 15:46:51.057: INFO: Scaling statefulset ss to 0
  E0824 15:46:51.700336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:52.700783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:53.701708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:54.701884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:55.702197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:56.702438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:57.703382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:58.703625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:59.704661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:00.705059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 08/24/23 15:47:01.091
  Aug 24 15:47:01.092: INFO: Deleting all statefulset in ns statefulset-9790
  Aug 24 15:47:01.104: INFO: Scaling statefulset ss to 0
  Aug 24 15:47:01.129: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:47:01.136: INFO: Deleting statefulset ss
  Aug 24 15:47:01.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9790" for this suite. @ 08/24/23 15:47:01.175
• [72.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 08/24/23 15:47:01.191
  Aug 24 15:47:01.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:47:01.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:01.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:01.231
  STEP: creating a secret @ 08/24/23 15:47:01.235
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 08/24/23 15:47:01.245
  STEP: patching the secret @ 08/24/23 15:47:01.251
  STEP: deleting the secret using a LabelSelector @ 08/24/23 15:47:01.271
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 08/24/23 15:47:01.287
  Aug 24 15:47:01.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2196" for this suite. @ 08/24/23 15:47:01.3
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 08/24/23 15:47:01.316
  Aug 24 15:47:01.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:47:01.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:01.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:01.35
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 08/24/23 15:47:01.356
  E0824 15:47:01.706044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:02.706248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:03.706504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:04.706692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:47:05.412
  Aug 24 15:47:05.436: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-8847d384-d6bd-4743-b2d8-302f7c5b51c4 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:47:05.474
  Aug 24 15:47:05.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8288" for this suite. @ 08/24/23 15:47:05.527
• [4.232 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 08/24/23 15:47:05.549
  Aug 24 15:47:05.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:47:05.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:05.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:05.586
  Aug 24 15:47:05.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4349 create -f -'
  E0824 15:47:05.706678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:06.185: INFO: stderr: ""
  Aug 24 15:47:06.185: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Aug 24 15:47:06.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4349 create -f -'
  E0824 15:47:06.707189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:06.853: INFO: stderr: ""
  Aug 24 15:47:06.853: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/24/23 15:47:06.853
  E0824 15:47:07.707462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:07.860: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:47:07.861: INFO: Found 1 / 1
  Aug 24 15:47:07.861: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 24 15:47:07.866: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:47:07.866: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 15:47:07.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4349 describe pod agnhost-primary-kmlnt'
  Aug 24 15:47:08.059: INFO: stderr: ""
  Aug 24 15:47:08.059: INFO: stdout: "Name:             agnhost-primary-kmlnt\nNamespace:        kubectl-4349\nPriority:         0\nService Account:  default\nNode:             eiyoo9ohd4ei-3/192.168.121.161\nStart Time:       Thu, 24 Aug 2023 15:47:06 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.143\nIPs:\n  IP:           10.233.66.143\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://d341488dec0aac3ac83675ca4082455cc7e50ba1d909e826065833e309bcf421\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 24 Aug 2023 15:47:07 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-pp5xx (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-pp5xx:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4349/agnhost-primary-kmlnt to eiyoo9ohd4ei-3\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Aug 24 15:47:08.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4349 describe rc agnhost-primary'
  Aug 24 15:47:08.238: INFO: stderr: ""
  Aug 24 15:47:08.238: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4349\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-kmlnt\n"
  Aug 24 15:47:08.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4349 describe service agnhost-primary'
  Aug 24 15:47:08.437: INFO: stderr: ""
  Aug 24 15:47:08.437: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4349\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.7.24\nIPs:               10.233.7.24\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.143:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Aug 24 15:47:08.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4349 describe node eiyoo9ohd4ei-1'
  Aug 24 15:47:08.646: INFO: stderr: ""
  Aug 24 15:47:08.646: INFO: stdout: "Name:               eiyoo9ohd4ei-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=eiyoo9ohd4ei-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 24 Aug 2023 13:05:58 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  eiyoo9ohd4ei-1\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 24 Aug 2023 15:47:06 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 24 Aug 2023 14:25:09 +0000   Thu, 24 Aug 2023 14:25:09 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Thu, 24 Aug 2023 15:46:00 +0000   Thu, 24 Aug 2023 13:05:54 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 24 Aug 2023 15:46:00 +0000   Thu, 24 Aug 2023 13:05:54 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 24 Aug 2023 15:46:00 +0000   Thu, 24 Aug 2023 13:05:54 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 24 Aug 2023 15:46:00 +0000   Thu, 24 Aug 2023 14:24:13 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.240\n  Hostname:    eiyoo9ohd4ei-1\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      115008636Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 8123912Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1600m\n  ephemeral-storage:      111880401014\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3274248Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 58ebe332db034b71903b020f22399980\n  System UUID:                58ebe332-db03-4b71-903b-020f22399980\n  Boot ID:                    0cb8488f-00d7-45f3-8d6e-f7952a5051b4\n  Kernel Version:             6.2.0-26-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.28.0\n  Kubelet Version:            v1.28.1\n  Kube-Proxy Version:         v1.28.1\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-249jg                                               100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         96m\n  kube-system                 cilium-node-init-c95pq                                     100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         96m\n  kube-system                 kube-addon-manager-eiyoo9ohd4ei-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         96m\n  kube-system                 kube-apiserver-eiyoo9ohd4ei-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-controller-manager-eiyoo9ohd4ei-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-proxy-5qdnk                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                 kube-scheduler-eiyoo9ohd4ei-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         96m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-rzlvs    0 (0%)        0 (0%)      0 (0%)           0 (0%)         63m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    755m (47%)  0 (0%)\n  memory                 250Mi (7%)  0 (0%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  Aug 24 15:47:08.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-4349 describe namespace kubectl-4349'
  E0824 15:47:08.708392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:08.828: INFO: stderr: ""
  Aug 24 15:47:08.828: INFO: stdout: "Name:         kubectl-4349\nLabels:       e2e-framework=kubectl\n              e2e-run=b2df8b56-5fa5-4a3c-9a52-63b88dba1d84\n              kubernetes.io/metadata.name=kubectl-4349\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Aug 24 15:47:08.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4349" for this suite. @ 08/24/23 15:47:08.836
• [3.297 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 08/24/23 15:47:08.846
  Aug 24 15:47:08.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:47:08.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:08.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:08.878
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:47:08.883
  E0824 15:47:09.708607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:10.709102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:11.709099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:12.709731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:47:12.921
  Aug 24 15:47:12.926: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-9b093bcf-9233-4fbb-8475-423935c65862 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:47:12.938
  Aug 24 15:47:12.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2332" for this suite. @ 08/24/23 15:47:12.984
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 08/24/23 15:47:12.998
  Aug 24 15:47:12.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 15:47:13
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:13.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:13.036
  STEP: Creating ReplicationController "e2e-rc-9jhpr" @ 08/24/23 15:47:13.042
  Aug 24 15:47:13.050: INFO: Get Replication Controller "e2e-rc-9jhpr" to confirm replicas
  E0824 15:47:13.710781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:14.058: INFO: Get Replication Controller "e2e-rc-9jhpr" to confirm replicas
  Aug 24 15:47:14.068: INFO: Found 1 replicas for "e2e-rc-9jhpr" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-9jhpr" @ 08/24/23 15:47:14.069
  STEP: Updating a scale subresource @ 08/24/23 15:47:14.077
  STEP: Verifying replicas where modified for replication controller "e2e-rc-9jhpr" @ 08/24/23 15:47:14.091
  Aug 24 15:47:14.092: INFO: Get Replication Controller "e2e-rc-9jhpr" to confirm replicas
  E0824 15:47:14.711335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:15.099: INFO: Get Replication Controller "e2e-rc-9jhpr" to confirm replicas
  Aug 24 15:47:15.104: INFO: Found 2 replicas for "e2e-rc-9jhpr" replication controller
  Aug 24 15:47:15.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7736" for this suite. @ 08/24/23 15:47:15.113
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 08/24/23 15:47:15.137
  Aug 24 15:47:15.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename watch @ 08/24/23 15:47:15.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:15.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:15.173
  STEP: creating a watch on configmaps with label A @ 08/24/23 15:47:15.178
  STEP: creating a watch on configmaps with label B @ 08/24/23 15:47:15.18
  STEP: creating a watch on configmaps with label A or B @ 08/24/23 15:47:15.182
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 08/24/23 15:47:15.186
  Aug 24 15:47:15.203: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36683 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:47:15.204: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36683 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 08/24/23 15:47:15.204
  Aug 24 15:47:15.221: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36684 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:47:15.222: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36684 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 08/24/23 15:47:15.223
  Aug 24 15:47:15.241: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36685 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:47:15.242: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36685 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 08/24/23 15:47:15.243
  Aug 24 15:47:15.255: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36686 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:47:15.255: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4120  fd3ccb4f-1467-46ce-b24e-1210dc3ba53a 36686 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 08/24/23 15:47:15.256
  Aug 24 15:47:15.267: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4120  bc3e05ce-2bc8-419a-b398-a49c451273e8 36687 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:47:15.268: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4120  bc3e05ce-2bc8-419a-b398-a49c451273e8 36687 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0824 15:47:15.711311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:16.711889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:17.712846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:18.713109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:19.713403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:20.713418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:21.713651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:22.714569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:23.714698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:24.715009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 08/24/23 15:47:25.269
  Aug 24 15:47:25.281: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4120  bc3e05ce-2bc8-419a-b398-a49c451273e8 36743 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:47:25.282: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4120  bc3e05ce-2bc8-419a-b398-a49c451273e8 36743 0 2023-08-24 15:47:15 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 15:47:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0824 15:47:25.715153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:26.715531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:27.716375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:28.717276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:29.717439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:30.718289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:31.718229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:32.718722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:33.718970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:34.719933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:35.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4120" for this suite. @ 08/24/23 15:47:35.294
• [20.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 08/24/23 15:47:35.316
  Aug 24 15:47:35.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 15:47:35.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:35.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:35.35
  E0824 15:47:35.720906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:36.721076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:37.721113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:38.721282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:39.413: INFO: Got logs for pod "busybox-privileged-false-f00d8399-4ad4-4e4c-91af-4cf767aa4534": "ip: RTNETLINK answers: Operation not permitted\n"
  Aug 24 15:47:39.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7951" for this suite. @ 08/24/23 15:47:39.422
• [4.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 08/24/23 15:47:39.44
  Aug 24 15:47:39.441: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:47:39.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:39.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:39.474
  STEP: creating secret secrets-6722/secret-test-8c2d5387-5c86-407b-b7f2-053a9db104b5 @ 08/24/23 15:47:39.479
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:47:39.489
  E0824 15:47:39.721526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:40.723999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:41.724531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:42.725227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:47:43.541
  Aug 24 15:47:43.547: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-07315eb7-7dce-4212-8771-c5f7b61dc190 container env-test: <nil>
  STEP: delete the pod @ 08/24/23 15:47:43.563
  Aug 24 15:47:43.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6722" for this suite. @ 08/24/23 15:47:43.619
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 08/24/23 15:47:43.634
  Aug 24 15:47:43.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:47:43.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:43.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:43.667
  STEP: Creating configMap with name configmap-test-volume-4e426c8a-35b7-4e34-81c4-b80f9b7bfdee @ 08/24/23 15:47:43.674
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:47:43.681
  E0824 15:47:43.725763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:44.726066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:45.726446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:46.726706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:47:47.716
  Aug 24 15:47:47.727: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-14dbe093-7a35-4d30-be97-1901cf9dcbae container agnhost-container: <nil>
  E0824 15:47:47.727972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/24/23 15:47:47.744
  Aug 24 15:47:47.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-965" for this suite. @ 08/24/23 15:47:47.789
• [4.169 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 08/24/23 15:47:47.804
  Aug 24 15:47:47.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename taint-single-pod @ 08/24/23 15:47:47.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:47.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:47.839
  Aug 24 15:47:47.844: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:47:48.727606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:49.728361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:50.728454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:51.729257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:52.729375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:53.730062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:54.730318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:55.730455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:56.730695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:57.731311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:58.731537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:59.732139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:00.732670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:01.732880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:02.733961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:03.734446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:04.735109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:05.735875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:06.736044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:07.737219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:08.737818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:09.738019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:10.738171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:11.738715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:12.738935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:13.739483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:14.739694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:15.740601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:16.740723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:17.741513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:18.741679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:19.741889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:20.742033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:21.742565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:22.742637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:23.742768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:24.742973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:25.743326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:26.743796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:27.744857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:28.744986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:29.745531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:30.745789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:31.746542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:32.747409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:33.747467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:34.747644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:35.748187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:36.748387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:37.749298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:38.750014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:39.750345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:40.750514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:41.750763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:42.751472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:43.751701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:44.752277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:45.752492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:46.752725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:47.753776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:47.886: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 15:48:47.893: INFO: Starting informer...
  STEP: Starting pod... @ 08/24/23 15:48:47.893
  Aug 24 15:48:48.131: INFO: Pod is running on eiyoo9ohd4ei-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/24/23 15:48:48.131
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 15:48:48.167
  STEP: Waiting short time to make sure Pod is queued for deletion @ 08/24/23 15:48:48.174
  Aug 24 15:48:48.175: INFO: Pod wasn't evicted. Proceeding
  Aug 24 15:48:48.175: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 15:48:48.196
  STEP: Waiting some time to make sure that toleration time passed. @ 08/24/23 15:48:48.204
  E0824 15:48:48.755516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:49.755631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:50.756215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:51.756370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:52.756855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:53.756993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:54.757798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:55.757907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:56.758173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:57.759036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:58.759598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:59.760602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:00.760845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:01.761505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:02.761697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:03.761945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:04.762562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:05.762809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:06.763562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:07.764262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:08.764503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:09.764736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:10.764915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:11.765609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:12.766689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:13.766869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:14.767794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:15.768341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:16.768872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:17.769947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:18.770906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:19.771450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:20.773914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:21.772809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:22.773796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:23.773984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:24.774515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:25.774669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:26.775180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:27.775440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:28.775922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:29.776047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:30.776340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:31.776609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:32.776881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:33.777611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:34.777742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:35.778450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:36.778580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:37.779235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:38.779556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:39.780111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:40.780491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:41.781080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:42.781635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:43.782147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:44.782373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:45.782700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:46.782942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:47.783524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:48.783749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:49.783898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:50.784180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:51.784740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:52.784909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:53.785960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:54.786121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:55.786602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:56.786809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:57.787399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:58.787978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:59.788739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:00.789323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:01.789196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:02.789734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:03.205: INFO: Pod wasn't evicted. Test successful
  Aug 24 15:50:03.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7781" for this suite. @ 08/24/23 15:50:03.216
• [135.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 08/24/23 15:50:03.233
  Aug 24 15:50:03.233: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:50:03.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:03.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:03.279
  STEP: creating the pod @ 08/24/23 15:50:03.288
  Aug 24 15:50:03.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 create -f -'
  E0824 15:50:03.790131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:03.795: INFO: stderr: ""
  Aug 24 15:50:03.795: INFO: stdout: "pod/pause created\n"
  E0824 15:50:04.790216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:05.790453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 08/24/23 15:50:05.816
  Aug 24 15:50:05.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 label pods pause testing-label=testing-label-value'
  Aug 24 15:50:05.994: INFO: stderr: ""
  Aug 24 15:50:05.994: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 08/24/23 15:50:05.994
  Aug 24 15:50:05.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 get pod pause -L testing-label'
  Aug 24 15:50:06.118: INFO: stderr: ""
  Aug 24 15:50:06.118: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 08/24/23 15:50:06.118
  Aug 24 15:50:06.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 label pods pause testing-label-'
  Aug 24 15:50:06.255: INFO: stderr: ""
  Aug 24 15:50:06.255: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 08/24/23 15:50:06.255
  Aug 24 15:50:06.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 get pod pause -L testing-label'
  Aug 24 15:50:06.390: INFO: stderr: ""
  Aug 24 15:50:06.391: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 08/24/23 15:50:06.391
  Aug 24 15:50:06.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 delete --grace-period=0 --force -f -'
  Aug 24 15:50:06.528: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:50:06.528: INFO: stdout: "pod \"pause\" force deleted\n"
  Aug 24 15:50:06.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 get rc,svc -l name=pause --no-headers'
  Aug 24 15:50:06.686: INFO: stderr: "No resources found in kubectl-8351 namespace.\n"
  Aug 24 15:50:06.686: INFO: stdout: ""
  Aug 24 15:50:06.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-8351 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0824 15:50:06.791557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:06.815: INFO: stderr: ""
  Aug 24 15:50:06.815: INFO: stdout: ""
  Aug 24 15:50:06.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8351" for this suite. @ 08/24/23 15:50:06.823
• [3.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 08/24/23 15:50:06.834
  Aug 24 15:50:06.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:50:06.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:06.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:06.862
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3240 @ 08/24/23 15:50:06.866
  STEP: changing the ExternalName service to type=NodePort @ 08/24/23 15:50:06.876
  STEP: creating replication controller externalname-service in namespace services-3240 @ 08/24/23 15:50:06.902
  I0824 15:50:06.926059      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3240, replica count: 2
  E0824 15:50:07.792841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:08.793030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:09.792912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:50:09.977773      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:50:09.978: INFO: Creating new exec pod
  E0824 15:50:10.793271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:11.793972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:12.794854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:13.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-3240 exec execpodg8lg5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 24 15:50:13.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 24 15:50:13.326: INFO: stdout: "externalname-service-smjlm"
  Aug 24 15:50:13.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-3240 exec execpodg8lg5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.160 80'
  Aug 24 15:50:13.597: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.47.160 80\nConnection to 10.233.47.160 80 port [tcp/http] succeeded!\n"
  Aug 24 15:50:13.597: INFO: stdout: "externalname-service-smjlm"
  Aug 24 15:50:13.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-3240 exec execpodg8lg5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.240 30668'
  E0824 15:50:13.795577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:13.869: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.240 30668\nConnection to 192.168.121.240 30668 port [tcp/*] succeeded!\n"
  Aug 24 15:50:13.870: INFO: stdout: "externalname-service-pgcgw"
  Aug 24 15:50:13.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-3240 exec execpodg8lg5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.161 30668'
  Aug 24 15:50:14.131: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.161 30668\nConnection to 192.168.121.161 30668 port [tcp/*] succeeded!\n"
  Aug 24 15:50:14.131: INFO: stdout: "externalname-service-pgcgw"
  Aug 24 15:50:14.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:50:14.142: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-3240" for this suite. @ 08/24/23 15:50:14.191
• [7.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 08/24/23 15:50:14.208
  Aug 24 15:50:14.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:50:14.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:14.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:14.258
  STEP: Creating simple DaemonSet "daemon-set" @ 08/24/23 15:50:14.299
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:50:14.312
  Aug 24 15:50:14.327: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:50:14.327: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:14.796081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:15.344: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:50:15.344: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:15.796567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:16.345: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:50:16.345: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:16.796687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:17.344: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 15:50:17.344: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 08/24/23 15:50:17.349
  STEP: DeleteCollection of the DaemonSets @ 08/24/23 15:50:17.356
  STEP: Verify that ReplicaSets have been deleted @ 08/24/23 15:50:17.381
  Aug 24 15:50:17.420: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37372"},"items":null}

  Aug 24 15:50:17.446: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37373"},"items":[{"metadata":{"name":"daemon-set-fmp4c","generateName":"daemon-set-","namespace":"daemonsets-5781","uid":"34e500c3-527b-449c-9349-41227c61c3ca","resourceVersion":"37372","creationTimestamp":"2023-08-24T15:50:14Z","deletionTimestamp":"2023-08-24T15:50:47Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"14b1ffd3-22ad-4045-a6dc-87e75c258528","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:50:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"14b1ffd3-22ad-4045-a6dc-87e75c258528\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:50:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.153\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xs26g","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xs26g","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eiyoo9ohd4ei-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eiyoo9ohd4ei-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:14Z"}],"hostIP":"192.168.121.161","podIP":"10.233.66.153","podIPs":[{"ip":"10.233.66.153"}],"startTime":"2023-08-24T15:50:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-24T15:50:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://4179f09dfef2dc9956a7471091697182c0a3e31617cef0ac018aee81b89b87fe","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tkvzk","generateName":"daemon-set-","namespace":"daemonsets-5781","uid":"ea70fb09-eec0-491d-8125-b78e053a8743","resourceVersion":"37371","creationTimestamp":"2023-08-24T15:50:14Z","deletionTimestamp":"2023-08-24T15:50:47Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"14b1ffd3-22ad-4045-a6dc-87e75c258528","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:50:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"14b1ffd3-22ad-4045-a6dc-87e75c258528\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:50:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.77\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-cvknt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-cvknt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eiyoo9ohd4ei-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eiyoo9ohd4ei-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:14Z"}],"hostIP":"192.168.121.240","podIP":"10.233.65.77","podIPs":[{"ip":"10.233.65.77"}],"startTime":"2023-08-24T15:50:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-24T15:50:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://79b28d5a6283378cbe7e8d140466d73fbc4a5f9cbc97023b65f7e2252f51e32b","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xf7l6","generateName":"daemon-set-","namespace":"daemonsets-5781","uid":"0e48f5b0-5ef6-4266-b2ee-8cac777ad558","resourceVersion":"37373","creationTimestamp":"2023-08-24T15:50:14Z","deletionTimestamp":"2023-08-24T15:50:47Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"14b1ffd3-22ad-4045-a6dc-87e75c258528","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:50:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"14b1ffd3-22ad-4045-a6dc-87e75c258528\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:50:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.207\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-nxvkc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-nxvkc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eiyoo9ohd4ei-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eiyoo9ohd4ei-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:50:14Z"}],"hostIP":"192.168.121.75","podIP":"10.233.64.207","podIPs":[{"ip":"10.233.64.207"}],"startTime":"2023-08-24T15:50:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-24T15:50:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://41f97f65c60d3e1d6db56aa420842d969dac5c816d5c1daa185517f435b9fbc5","started":true}],"qosClass":"BestEffort"}}]}

  Aug 24 15:50:17.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5781" for this suite. @ 08/24/23 15:50:17.524
• [3.331 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 08/24/23 15:50:17.539
  Aug 24 15:50:17.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename proxy @ 08/24/23 15:50:17.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:17.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:17.598
  STEP: starting an echo server on multiple ports @ 08/24/23 15:50:17.639
  STEP: creating replication controller proxy-service-lvkhd in namespace proxy-6183 @ 08/24/23 15:50:17.64
  I0824 15:50:17.668618      14 runners.go:197] Created replication controller with name: proxy-service-lvkhd, namespace: proxy-6183, replica count: 1
  E0824 15:50:17.797553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:50:18.719815      14 runners.go:197] proxy-service-lvkhd Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0824 15:50:18.798215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:50:19.720805      14 runners.go:197] proxy-service-lvkhd Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:50:19.729: INFO: setup took 2.125155314s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 08/24/23 15:50:19.729
  Aug 24 15:50:19.752: INFO: (0) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 22.95153ms)
  Aug 24 15:50:19.754: INFO: (0) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 25.124911ms)
  Aug 24 15:50:19.772: INFO: (0) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 42.630158ms)
  Aug 24 15:50:19.772: INFO: (0) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 43.269066ms)
  Aug 24 15:50:19.772: INFO: (0) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 43.042045ms)
  Aug 24 15:50:19.772: INFO: (0) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 42.846464ms)
  Aug 24 15:50:19.773: INFO: (0) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 42.629238ms)
  Aug 24 15:50:19.773: INFO: (0) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 42.797401ms)
  Aug 24 15:50:19.774: INFO: (0) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 44.457894ms)
  Aug 24 15:50:19.774: INFO: (0) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 44.820167ms)
  Aug 24 15:50:19.774: INFO: (0) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 44.627251ms)
  Aug 24 15:50:19.774: INFO: (0) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 44.509736ms)
  Aug 24 15:50:19.774: INFO: (0) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 44.915148ms)
  Aug 24 15:50:19.775: INFO: (0) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 44.557324ms)
  Aug 24 15:50:19.775: INFO: (0) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 45.369544ms)
  Aug 24 15:50:19.776: INFO: (0) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 46.703859ms)
  Aug 24 15:50:19.792: INFO: (1) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 15.362393ms)
  Aug 24 15:50:19.792: INFO: (1) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 16.012863ms)
  Aug 24 15:50:19.795: INFO: (1) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 18.576541ms)
  Aug 24 15:50:19.796: INFO: (1) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 17.993882ms)
  Aug 24 15:50:19.797: INFO: (1) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 19.467214ms)
  Aug 24 15:50:19.797: INFO: (1) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 20.061012ms)
  E0824 15:50:19.798383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:19.800: INFO: (1) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 23.338554ms)
  Aug 24 15:50:19.800: INFO: (1) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 21.754061ms)
  Aug 24 15:50:19.800: INFO: (1) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 22.864388ms)
  Aug 24 15:50:19.800: INFO: (1) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 21.950971ms)
  Aug 24 15:50:19.800: INFO: (1) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 22.744292ms)
  Aug 24 15:50:19.802: INFO: (1) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 24.947135ms)
  Aug 24 15:50:19.802: INFO: (1) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 24.853929ms)
  Aug 24 15:50:19.803: INFO: (1) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 25.701873ms)
  Aug 24 15:50:19.803: INFO: (1) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 26.36878ms)
  Aug 24 15:50:19.804: INFO: (1) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 26.979877ms)
  Aug 24 15:50:19.820: INFO: (2) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 15.82132ms)
  Aug 24 15:50:19.820: INFO: (2) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 16.051626ms)
  Aug 24 15:50:19.820: INFO: (2) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 16.101747ms)
  Aug 24 15:50:19.820: INFO: (2) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 15.798526ms)
  Aug 24 15:50:19.824: INFO: (2) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 18.919721ms)
  Aug 24 15:50:19.824: INFO: (2) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 19.3408ms)
  Aug 24 15:50:19.825: INFO: (2) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 19.880524ms)
  Aug 24 15:50:19.825: INFO: (2) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 20.339839ms)
  Aug 24 15:50:19.827: INFO: (2) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 21.401617ms)
  Aug 24 15:50:19.827: INFO: (2) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 22.275037ms)
  Aug 24 15:50:19.828: INFO: (2) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 22.63407ms)
  Aug 24 15:50:19.830: INFO: (2) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 25.505948ms)
  Aug 24 15:50:19.831: INFO: (2) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 25.96379ms)
  Aug 24 15:50:19.831: INFO: (2) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 26.364639ms)
  Aug 24 15:50:19.831: INFO: (2) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 26.271626ms)
  Aug 24 15:50:19.834: INFO: (2) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 28.356126ms)
  Aug 24 15:50:19.848: INFO: (3) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 13.728224ms)
  Aug 24 15:50:19.849: INFO: (3) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 15.410137ms)
  Aug 24 15:50:19.849: INFO: (3) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 15.024441ms)
  Aug 24 15:50:19.850: INFO: (3) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 16.163877ms)
  Aug 24 15:50:19.853: INFO: (3) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 19.181264ms)
  Aug 24 15:50:19.853: INFO: (3) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 19.253157ms)
  Aug 24 15:50:19.853: INFO: (3) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 19.167696ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 22.201225ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 22.5475ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 22.546947ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 22.504859ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 22.952663ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 22.96853ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 23.298078ms)
  Aug 24 15:50:19.857: INFO: (3) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 23.105712ms)
  Aug 24 15:50:19.863: INFO: (3) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 28.341273ms)
  Aug 24 15:50:19.881: INFO: (4) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 17.128059ms)
  Aug 24 15:50:19.881: INFO: (4) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 17.855349ms)
  Aug 24 15:50:19.881: INFO: (4) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 18.185222ms)
  Aug 24 15:50:19.881: INFO: (4) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 18.602766ms)
  Aug 24 15:50:19.881: INFO: (4) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 17.563415ms)
  Aug 24 15:50:19.883: INFO: (4) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 19.40123ms)
  Aug 24 15:50:19.885: INFO: (4) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 21.299882ms)
  Aug 24 15:50:19.888: INFO: (4) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 23.756437ms)
  Aug 24 15:50:19.889: INFO: (4) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 25.947106ms)
  Aug 24 15:50:19.890: INFO: (4) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 25.608526ms)
  Aug 24 15:50:19.890: INFO: (4) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 27.422065ms)
  Aug 24 15:50:19.890: INFO: (4) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 26.435581ms)
  Aug 24 15:50:19.890: INFO: (4) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 26.723892ms)
  Aug 24 15:50:19.892: INFO: (4) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 27.90839ms)
  Aug 24 15:50:19.892: INFO: (4) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 28.58441ms)
  Aug 24 15:50:19.893: INFO: (4) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 28.864207ms)
  Aug 24 15:50:19.911: INFO: (5) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 18.006811ms)
  Aug 24 15:50:19.912: INFO: (5) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 19.226618ms)
  Aug 24 15:50:19.913: INFO: (5) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 19.763118ms)
  Aug 24 15:50:19.917: INFO: (5) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 23.119548ms)
  Aug 24 15:50:19.917: INFO: (5) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 22.848694ms)
  Aug 24 15:50:19.917: INFO: (5) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 23.629233ms)
  Aug 24 15:50:19.919: INFO: (5) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 25.556341ms)
  Aug 24 15:50:19.917: INFO: (5) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 23.265807ms)
  Aug 24 15:50:19.919: INFO: (5) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 25.373791ms)
  Aug 24 15:50:19.919: INFO: (5) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 25.139208ms)
  Aug 24 15:50:19.919: INFO: (5) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 24.922044ms)
  Aug 24 15:50:19.923: INFO: (5) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 28.337861ms)
  Aug 24 15:50:19.925: INFO: (5) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 31.732803ms)
  Aug 24 15:50:19.926: INFO: (5) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 31.937091ms)
  Aug 24 15:50:19.926: INFO: (5) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 32.821277ms)
  Aug 24 15:50:19.926: INFO: (5) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 32.238375ms)
  Aug 24 15:50:19.938: INFO: (6) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 10.623912ms)
  Aug 24 15:50:19.938: INFO: (6) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 11.084497ms)
  Aug 24 15:50:19.938: INFO: (6) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 11.540874ms)
  Aug 24 15:50:19.944: INFO: (6) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 16.154025ms)
  Aug 24 15:50:19.944: INFO: (6) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 17.610524ms)
  Aug 24 15:50:19.945: INFO: (6) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 17.126666ms)
  Aug 24 15:50:19.947: INFO: (6) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 19.953479ms)
  Aug 24 15:50:19.951: INFO: (6) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 23.421196ms)
  Aug 24 15:50:19.951: INFO: (6) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 24.079706ms)
  Aug 24 15:50:19.951: INFO: (6) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 24.015486ms)
  Aug 24 15:50:19.951: INFO: (6) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 23.800178ms)
  Aug 24 15:50:19.952: INFO: (6) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 24.713705ms)
  Aug 24 15:50:19.953: INFO: (6) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 25.927131ms)
  Aug 24 15:50:19.954: INFO: (6) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 26.175387ms)
  Aug 24 15:50:19.954: INFO: (6) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 26.199243ms)
  Aug 24 15:50:19.959: INFO: (6) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 32.180403ms)
  Aug 24 15:50:19.978: INFO: (7) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 18.553049ms)
  Aug 24 15:50:19.979: INFO: (7) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 18.466002ms)
  Aug 24 15:50:19.979: INFO: (7) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 19.135295ms)
  Aug 24 15:50:19.979: INFO: (7) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 18.39165ms)
  Aug 24 15:50:19.979: INFO: (7) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 18.552902ms)
  Aug 24 15:50:19.979: INFO: (7) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 18.873802ms)
  Aug 24 15:50:19.987: INFO: (7) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 26.435171ms)
  Aug 24 15:50:19.987: INFO: (7) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 27.252433ms)
  Aug 24 15:50:19.988: INFO: (7) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 27.321402ms)
  Aug 24 15:50:19.988: INFO: (7) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 27.12936ms)
  Aug 24 15:50:19.990: INFO: (7) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 29.483954ms)
  Aug 24 15:50:19.995: INFO: (7) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 34.702434ms)
  Aug 24 15:50:19.995: INFO: (7) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 34.280526ms)
  Aug 24 15:50:19.995: INFO: (7) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 34.794499ms)
  Aug 24 15:50:19.995: INFO: (7) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 35.623567ms)
  Aug 24 15:50:19.998: INFO: (7) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 36.085418ms)
  Aug 24 15:50:20.018: INFO: (8) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 17.753189ms)
  Aug 24 15:50:20.018: INFO: (8) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 18.448758ms)
  Aug 24 15:50:20.018: INFO: (8) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 18.771698ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 19.383526ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 19.326856ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 19.571513ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 19.545246ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 19.359719ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 20.143568ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 19.390139ms)
  Aug 24 15:50:20.019: INFO: (8) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 19.368445ms)
  Aug 24 15:50:20.026: INFO: (8) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 26.88728ms)
  Aug 24 15:50:20.029: INFO: (8) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 29.960603ms)
  Aug 24 15:50:20.030: INFO: (8) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 30.644082ms)
  Aug 24 15:50:20.030: INFO: (8) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 30.700201ms)
  Aug 24 15:50:20.030: INFO: (8) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 30.424884ms)
  Aug 24 15:50:20.043: INFO: (9) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 12.759818ms)
  Aug 24 15:50:20.045: INFO: (9) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 13.56348ms)
  Aug 24 15:50:20.045: INFO: (9) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 13.674617ms)
  Aug 24 15:50:20.050: INFO: (9) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 18.119158ms)
  Aug 24 15:50:20.050: INFO: (9) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 18.752842ms)
  Aug 24 15:50:20.056: INFO: (9) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 25.606054ms)
  Aug 24 15:50:20.056: INFO: (9) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 24.611241ms)
  Aug 24 15:50:20.056: INFO: (9) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 24.84425ms)
  Aug 24 15:50:20.056: INFO: (9) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 25.007625ms)
  Aug 24 15:50:20.058: INFO: (9) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 26.127441ms)
  Aug 24 15:50:20.059: INFO: (9) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 27.313717ms)
  Aug 24 15:50:20.059: INFO: (9) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 27.846997ms)
  Aug 24 15:50:20.061: INFO: (9) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 30.14453ms)
  Aug 24 15:50:20.070: INFO: (9) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 38.737481ms)
  Aug 24 15:50:20.072: INFO: (9) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 40.216022ms)
  Aug 24 15:50:20.072: INFO: (9) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 40.120488ms)
  Aug 24 15:50:20.090: INFO: (10) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 17.422709ms)
  Aug 24 15:50:20.090: INFO: (10) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 15.381853ms)
  Aug 24 15:50:20.091: INFO: (10) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 15.839194ms)
  Aug 24 15:50:20.091: INFO: (10) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 16.728865ms)
  Aug 24 15:50:20.091: INFO: (10) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 17.42438ms)
  Aug 24 15:50:20.091: INFO: (10) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 16.171835ms)
  Aug 24 15:50:20.099: INFO: (10) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 25.531473ms)
  Aug 24 15:50:20.100: INFO: (10) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 28.03186ms)
  Aug 24 15:50:20.101: INFO: (10) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 26.237707ms)
  Aug 24 15:50:20.101: INFO: (10) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 27.756114ms)
  Aug 24 15:50:20.101: INFO: (10) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 28.046524ms)
  Aug 24 15:50:20.101: INFO: (10) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 26.639878ms)
  Aug 24 15:50:20.101: INFO: (10) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 27.177043ms)
  Aug 24 15:50:20.103: INFO: (10) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 29.997417ms)
  Aug 24 15:50:20.103: INFO: (10) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 30.051476ms)
  Aug 24 15:50:20.103: INFO: (10) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 30.79171ms)
  Aug 24 15:50:20.115: INFO: (11) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 11.305517ms)
  Aug 24 15:50:20.128: INFO: (11) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 22.947032ms)
  Aug 24 15:50:20.130: INFO: (11) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 26.019862ms)
  Aug 24 15:50:20.130: INFO: (11) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 26.021401ms)
  Aug 24 15:50:20.131: INFO: (11) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 26.001572ms)
  Aug 24 15:50:20.132: INFO: (11) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 27.840342ms)
  Aug 24 15:50:20.133: INFO: (11) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 28.478075ms)
  Aug 24 15:50:20.139: INFO: (11) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 34.358924ms)
  Aug 24 15:50:20.144: INFO: (11) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 39.697915ms)
  Aug 24 15:50:20.147: INFO: (11) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 42.274543ms)
  Aug 24 15:50:20.148: INFO: (11) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 43.497016ms)
  Aug 24 15:50:20.148: INFO: (11) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 43.665747ms)
  Aug 24 15:50:20.149: INFO: (11) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 43.505232ms)
  Aug 24 15:50:20.149: INFO: (11) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 44.291727ms)
  Aug 24 15:50:20.154: INFO: (11) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 49.843341ms)
  Aug 24 15:50:20.155: INFO: (11) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 49.598062ms)
  Aug 24 15:50:20.173: INFO: (12) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 18.055264ms)
  Aug 24 15:50:20.174: INFO: (12) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 19.181263ms)
  Aug 24 15:50:20.174: INFO: (12) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 19.294416ms)
  Aug 24 15:50:20.175: INFO: (12) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 20.329463ms)
  Aug 24 15:50:20.175: INFO: (12) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 20.601196ms)
  Aug 24 15:50:20.176: INFO: (12) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 21.324727ms)
  Aug 24 15:50:20.177: INFO: (12) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 21.884588ms)
  Aug 24 15:50:20.177: INFO: (12) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 22.019465ms)
  Aug 24 15:50:20.181: INFO: (12) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 26.311097ms)
  Aug 24 15:50:20.185: INFO: (12) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 29.476225ms)
  Aug 24 15:50:20.185: INFO: (12) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 30.269123ms)
  Aug 24 15:50:20.193: INFO: (12) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 37.222414ms)
  Aug 24 15:50:20.198: INFO: (12) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 42.172648ms)
  Aug 24 15:50:20.198: INFO: (12) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 42.825602ms)
  Aug 24 15:50:20.199: INFO: (12) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 42.824843ms)
  Aug 24 15:50:20.199: INFO: (12) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 42.931148ms)
  Aug 24 15:50:20.223: INFO: (13) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 22.58389ms)
  Aug 24 15:50:20.223: INFO: (13) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 23.857305ms)
  Aug 24 15:50:20.229: INFO: (13) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 29.470477ms)
  Aug 24 15:50:20.237: INFO: (13) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 38.346472ms)
  Aug 24 15:50:20.237: INFO: (13) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 37.594291ms)
  Aug 24 15:50:20.237: INFO: (13) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 36.836154ms)
  Aug 24 15:50:20.237: INFO: (13) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 36.913342ms)
  Aug 24 15:50:20.239: INFO: (13) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 40.571868ms)
  Aug 24 15:50:20.240: INFO: (13) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 40.472569ms)
  Aug 24 15:50:20.240: INFO: (13) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 39.686316ms)
  Aug 24 15:50:20.250: INFO: (13) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 51.309742ms)
  Aug 24 15:50:20.252: INFO: (13) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 52.184056ms)
  Aug 24 15:50:20.252: INFO: (13) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 52.511357ms)
  Aug 24 15:50:20.256: INFO: (13) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 55.902695ms)
  Aug 24 15:50:20.257: INFO: (13) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 57.143711ms)
  Aug 24 15:50:20.258: INFO: (13) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 58.997231ms)
  Aug 24 15:50:20.274: INFO: (14) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 12.991187ms)
  Aug 24 15:50:20.277: INFO: (14) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 18.116269ms)
  Aug 24 15:50:20.279: INFO: (14) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 18.677975ms)
  Aug 24 15:50:20.282: INFO: (14) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 23.664755ms)
  Aug 24 15:50:20.282: INFO: (14) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 23.104821ms)
  Aug 24 15:50:20.282: INFO: (14) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 20.564565ms)
  Aug 24 15:50:20.282: INFO: (14) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 21.139068ms)
  Aug 24 15:50:20.282: INFO: (14) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 23.584082ms)
  Aug 24 15:50:20.282: INFO: (14) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 20.252844ms)
  Aug 24 15:50:20.291: INFO: (14) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 29.344514ms)
  Aug 24 15:50:20.297: INFO: (14) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 34.587073ms)
  Aug 24 15:50:20.297: INFO: (14) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 36.553469ms)
  Aug 24 15:50:20.306: INFO: (14) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 44.771903ms)
  Aug 24 15:50:20.308: INFO: (14) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 45.988434ms)
  Aug 24 15:50:20.308: INFO: (14) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 48.090452ms)
  Aug 24 15:50:20.310: INFO: (14) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 47.732385ms)
  Aug 24 15:50:20.319: INFO: (15) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 8.683845ms)
  Aug 24 15:50:20.321: INFO: (15) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 10.558263ms)
  Aug 24 15:50:20.327: INFO: (15) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 15.880499ms)
  Aug 24 15:50:20.328: INFO: (15) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 16.660609ms)
  Aug 24 15:50:20.328: INFO: (15) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 16.899907ms)
  Aug 24 15:50:20.328: INFO: (15) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 16.677365ms)
  Aug 24 15:50:20.328: INFO: (15) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 16.789349ms)
  Aug 24 15:50:20.338: INFO: (15) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 26.922267ms)
  Aug 24 15:50:20.338: INFO: (15) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 27.942958ms)
  Aug 24 15:50:20.338: INFO: (15) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 27.845154ms)
  Aug 24 15:50:20.338: INFO: (15) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 27.707879ms)
  Aug 24 15:50:20.338: INFO: (15) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 27.371463ms)
  Aug 24 15:50:20.339: INFO: (15) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 27.163958ms)
  Aug 24 15:50:20.339: INFO: (15) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 27.489864ms)
  Aug 24 15:50:20.339: INFO: (15) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 27.196699ms)
  Aug 24 15:50:20.341: INFO: (15) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 29.568649ms)
  Aug 24 15:50:20.367: INFO: (16) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 25.169686ms)
  Aug 24 15:50:20.368: INFO: (16) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 26.166396ms)
  Aug 24 15:50:20.384: INFO: (16) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 41.702968ms)
  Aug 24 15:50:20.386: INFO: (16) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 42.007786ms)
  Aug 24 15:50:20.406: INFO: (16) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 63.369451ms)
  Aug 24 15:50:20.407: INFO: (16) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 62.121249ms)
  Aug 24 15:50:20.407: INFO: (16) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 62.125596ms)
  Aug 24 15:50:20.407: INFO: (16) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 64.388925ms)
  Aug 24 15:50:20.428: INFO: (16) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 83.916234ms)
  Aug 24 15:50:20.429: INFO: (16) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 85.501558ms)
  Aug 24 15:50:20.433: INFO: (16) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 90.671253ms)
  Aug 24 15:50:20.438: INFO: (16) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 93.619921ms)
  Aug 24 15:50:20.439: INFO: (16) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 95.757191ms)
  Aug 24 15:50:20.447: INFO: (16) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 102.29299ms)
  Aug 24 15:50:20.448: INFO: (16) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 104.705121ms)
  Aug 24 15:50:20.450: INFO: (16) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 105.696006ms)
  Aug 24 15:50:20.472: INFO: (17) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 20.825353ms)
  Aug 24 15:50:20.472: INFO: (17) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 20.509908ms)
  Aug 24 15:50:20.473: INFO: (17) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 22.128915ms)
  Aug 24 15:50:20.473: INFO: (17) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 22.856097ms)
  Aug 24 15:50:20.476: INFO: (17) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 23.916949ms)
  Aug 24 15:50:20.476: INFO: (17) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 24.725392ms)
  Aug 24 15:50:20.484: INFO: (17) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 32.670542ms)
  Aug 24 15:50:20.484: INFO: (17) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 32.064144ms)
  Aug 24 15:50:20.484: INFO: (17) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 31.696987ms)
  Aug 24 15:50:20.488: INFO: (17) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 36.075229ms)
  Aug 24 15:50:20.488: INFO: (17) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 35.904287ms)
  Aug 24 15:50:20.488: INFO: (17) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 36.198763ms)
  Aug 24 15:50:20.489: INFO: (17) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 38.261016ms)
  Aug 24 15:50:20.490: INFO: (17) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 38.508756ms)
  Aug 24 15:50:20.495: INFO: (17) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 43.699161ms)
  Aug 24 15:50:20.505: INFO: (17) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 52.986883ms)
  Aug 24 15:50:20.532: INFO: (18) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 26.329472ms)
  Aug 24 15:50:20.535: INFO: (18) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 28.452347ms)
  Aug 24 15:50:20.535: INFO: (18) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 29.068518ms)
  Aug 24 15:50:20.536: INFO: (18) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 30.109118ms)
  Aug 24 15:50:20.537: INFO: (18) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 30.541902ms)
  Aug 24 15:50:20.537: INFO: (18) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 30.825282ms)
  Aug 24 15:50:20.537: INFO: (18) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 31.235729ms)
  Aug 24 15:50:20.537: INFO: (18) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 31.204894ms)
  Aug 24 15:50:20.537: INFO: (18) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 32.06342ms)
  Aug 24 15:50:20.541: INFO: (18) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 34.737877ms)
  Aug 24 15:50:20.549: INFO: (18) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 43.408147ms)
  Aug 24 15:50:20.550: INFO: (18) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 44.419691ms)
  Aug 24 15:50:20.551: INFO: (18) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 45.044218ms)
  Aug 24 15:50:20.553: INFO: (18) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 47.316943ms)
  Aug 24 15:50:20.556: INFO: (18) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 49.777164ms)
  Aug 24 15:50:20.556: INFO: (18) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 49.814276ms)
  Aug 24 15:50:20.572: INFO: (19) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:462/proxy/: tls qux (200; 15.557074ms)
  Aug 24 15:50:20.573: INFO: (19) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 16.718893ms)
  Aug 24 15:50:20.573: INFO: (19) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:443/proxy/tlsrewritem... (200; 16.281978ms)
  Aug 24 15:50:20.574: INFO: (19) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">... (200; 17.858218ms)
  Aug 24 15:50:20.575: INFO: (19) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 17.863724ms)
  Aug 24 15:50:20.578: INFO: (19) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt/proxy/rewriteme">test</a> (200; 21.291399ms)
  Aug 24 15:50:20.578: INFO: (19) /api/v1/namespaces/proxy-6183/pods/https:proxy-service-lvkhd-5xpmt:460/proxy/: tls baz (200; 21.53163ms)
  Aug 24 15:50:20.581: INFO: (19) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname1/proxy/: tls baz (200; 23.770646ms)
  Aug 24 15:50:20.581: INFO: (19) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:160/proxy/: foo (200; 23.123133ms)
  Aug 24 15:50:20.584: INFO: (19) /api/v1/namespaces/proxy-6183/pods/http:proxy-service-lvkhd-5xpmt:162/proxy/: bar (200; 27.177516ms)
  Aug 24 15:50:20.585: INFO: (19) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname1/proxy/: foo (200; 27.274064ms)
  Aug 24 15:50:20.587: INFO: (19) /api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/: <a href="/api/v1/namespaces/proxy-6183/pods/proxy-service-lvkhd-5xpmt:1080/proxy/rewriteme">test<... (200; 29.825675ms)
  Aug 24 15:50:20.588: INFO: (19) /api/v1/namespaces/proxy-6183/services/proxy-service-lvkhd:portname2/proxy/: bar (200; 30.855841ms)
  Aug 24 15:50:20.588: INFO: (19) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname1/proxy/: foo (200; 31.173805ms)
  Aug 24 15:50:20.588: INFO: (19) /api/v1/namespaces/proxy-6183/services/http:proxy-service-lvkhd:portname2/proxy/: bar (200; 30.994192ms)
  Aug 24 15:50:20.590: INFO: (19) /api/v1/namespaces/proxy-6183/services/https:proxy-service-lvkhd:tlsportname2/proxy/: tls qux (200; 33.017166ms)
  Aug 24 15:50:20.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-lvkhd in namespace proxy-6183, will wait for the garbage collector to delete the pods @ 08/24/23 15:50:20.597
  Aug 24 15:50:20.669: INFO: Deleting ReplicationController proxy-service-lvkhd took: 14.940446ms
  Aug 24 15:50:20.770: INFO: Terminating ReplicationController proxy-service-lvkhd pods took: 100.462003ms
  E0824 15:50:20.798488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:21.799520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:22.800228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-6183" for this suite. @ 08/24/23 15:50:23.171
• [5.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 08/24/23 15:50:23.19
  Aug 24 15:50:23.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:50:23.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:23.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:23.228
  STEP: creating Agnhost RC @ 08/24/23 15:50:23.233
  Aug 24 15:50:23.233: INFO: namespace kubectl-7986
  Aug 24 15:50:23.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7986 create -f -'
  Aug 24 15:50:23.725: INFO: stderr: ""
  Aug 24 15:50:23.725: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/24/23 15:50:23.725
  E0824 15:50:23.800487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:24.732: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:50:24.732: INFO: Found 0 / 1
  E0824 15:50:24.800649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:25.732: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:50:25.732: INFO: Found 1 / 1
  Aug 24 15:50:25.732: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 24 15:50:25.740: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:50:25.741: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 15:50:25.742: INFO: wait on agnhost-primary startup in kubectl-7986 
  Aug 24 15:50:25.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7986 logs agnhost-primary-82rnk agnhost-primary'
  E0824 15:50:25.801662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:25.901: INFO: stderr: ""
  Aug 24 15:50:25.901: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 08/24/23 15:50:25.901
  Aug 24 15:50:25.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7986 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Aug 24 15:50:26.059: INFO: stderr: ""
  Aug 24 15:50:26.059: INFO: stdout: "service/rm2 exposed\n"
  Aug 24 15:50:26.066: INFO: Service rm2 in namespace kubectl-7986 found.
  E0824 15:50:26.801760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:27.802456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 08/24/23 15:50:28.081
  Aug 24 15:50:28.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7986 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Aug 24 15:50:28.243: INFO: stderr: ""
  Aug 24 15:50:28.243: INFO: stdout: "service/rm3 exposed\n"
  Aug 24 15:50:28.251: INFO: Service rm3 in namespace kubectl-7986 found.
  E0824 15:50:28.802721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:29.803043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:30.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7986" for this suite. @ 08/24/23 15:50:30.274
• [7.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 08/24/23 15:50:30.286
  Aug 24 15:50:30.286: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:50:30.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:30.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:30.334
  STEP: Creating configMap with name configmap-test-volume-8effb2aa-d290-491b-998a-35eb84beba73 @ 08/24/23 15:50:30.339
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:50:30.351
  E0824 15:50:30.803104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:31.803556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:32.803736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:33.804435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:50:34.388
  Aug 24 15:50:34.393: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-2e0c9511-ea79-45e4-904e-c2eacd0b1c13 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:50:34.417
  Aug 24 15:50:34.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3289" for this suite. @ 08/24/23 15:50:34.445
• [4.174 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 08/24/23 15:50:34.461
  Aug 24 15:50:34.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:50:34.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:34.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:34.507
  STEP: Creating simple DaemonSet "daemon-set" @ 08/24/23 15:50:34.566
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:50:34.578
  Aug 24 15:50:34.599: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:50:34.599: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:34.804876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:35.638: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:50:35.638: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:35.805215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:36.621: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 15:50:36.621: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 08/24/23 15:50:36.629
  Aug 24 15:50:36.665: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:50:36.666: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:36.805607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:37.681: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:50:37.682: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:37.806575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:38.686: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:50:38.687: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 15:50:38.806760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:39.685: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 15:50:39.685: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 15:50:39.691
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6388, will wait for the garbage collector to delete the pods @ 08/24/23 15:50:39.692
  Aug 24 15:50:39.759: INFO: Deleting DaemonSet.extensions daemon-set took: 10.329052ms
  E0824 15:50:39.807537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:39.860: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.552944ms
  E0824 15:50:40.808083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:41.667: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:50:41.667: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 15:50:41.675: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37718"},"items":null}

  Aug 24 15:50:41.684: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37718"},"items":null}

  Aug 24 15:50:41.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6388" for this suite. @ 08/24/23 15:50:41.733
• [7.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 08/24/23 15:50:41.761
  Aug 24 15:50:41.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 15:50:41.764
  E0824 15:50:41.808934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:41.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:41.815
  E0824 15:50:42.809387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:43.809122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:44.810216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:45.810662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:50:45.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5246" for this suite. @ 08/24/23 15:50:45.876
• [4.127 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 08/24/23 15:50:45.889
  Aug 24 15:50:45.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:50:45.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:50:45.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:50:45.921
  E0824 15:50:46.810942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:47.812045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:48.812744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:49.812923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:50.813220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:51.813489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:52.814454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:53.814851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:54.815666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:55.815543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:56.815518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:57.816278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:58.816394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:59.816779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:00.817058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:01.817782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:02.818365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/24/23 15:51:02.931
  E0824 15:51:03.818504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:04.818677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:05.819068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:06.819295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:07.819786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:51:07.936
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:51:07.95
  E0824 15:51:08.819511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:09.819824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 08/24/23 15:51:09.955
  STEP: Ensuring resource quota status captures configMap creation @ 08/24/23 15:51:09.979
  E0824 15:51:10.819950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:11.820691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 08/24/23 15:51:11.986
  STEP: Ensuring resource quota status released usage @ 08/24/23 15:51:11.997
  E0824 15:51:12.821280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:13.822018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:14.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2701" for this suite. @ 08/24/23 15:51:14.018
• [28.142 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 08/24/23 15:51:14.035
  Aug 24 15:51:14.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:51:14.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:14.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:14.069
  STEP: Creating the pod @ 08/24/23 15:51:14.075
  E0824 15:51:14.823822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:15.823945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:16.671: INFO: Successfully updated pod "annotationupdate672ab7f6-f8b9-40d1-85f5-880f01f909fd"
  E0824 15:51:16.824275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:17.824610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:18.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7161" for this suite. @ 08/24/23 15:51:18.71
• [4.688 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 08/24/23 15:51:18.725
  Aug 24 15:51:18.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 15:51:18.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:18.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:18.765
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 08/24/23 15:51:18.779
  Aug 24 15:51:18.801: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0824 15:51:18.825013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:19.825308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:20.825728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:21.826381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:22.827214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:23.810: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 15:51:23.81
  STEP: getting scale subresource @ 08/24/23 15:51:23.81
  STEP: updating a scale subresource @ 08/24/23 15:51:23.821
  E0824 15:51:23.828105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the replicaset Spec.Replicas was modified @ 08/24/23 15:51:23.833
  STEP: Patch a scale subresource @ 08/24/23 15:51:23.843
  Aug 24 15:51:23.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2638" for this suite. @ 08/24/23 15:51:23.932
• [5.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 08/24/23 15:51:23.969
  Aug 24 15:51:23.969: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:51:23.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:24.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:24.031
  STEP: Creating a ResourceQuota @ 08/24/23 15:51:24.039
  STEP: Getting a ResourceQuota @ 08/24/23 15:51:24.049
  STEP: Updating a ResourceQuota @ 08/24/23 15:51:24.06
  STEP: Verifying a ResourceQuota was modified @ 08/24/23 15:51:24.084
  STEP: Deleting a ResourceQuota @ 08/24/23 15:51:24.095
  STEP: Verifying the deleted ResourceQuota @ 08/24/23 15:51:24.11
  Aug 24 15:51:24.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-643" for this suite. @ 08/24/23 15:51:24.127
• [0.198 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 08/24/23 15:51:24.169
  Aug 24 15:51:24.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename proxy @ 08/24/23 15:51:24.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:24.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:24.235
  Aug 24 15:51:24.240: INFO: Creating pod...
  E0824 15:51:24.835629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:25.836077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:26.268: INFO: Creating service...
  Aug 24 15:51:26.284: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/pods/agnhost/proxy?method=DELETE
  Aug 24 15:51:26.300: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:51:26.300: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/pods/agnhost/proxy?method=OPTIONS
  Aug 24 15:51:26.322: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:51:26.322: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/pods/agnhost/proxy?method=PATCH
  Aug 24 15:51:26.328: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:51:26.329: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/pods/agnhost/proxy?method=POST
  Aug 24 15:51:26.335: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:51:26.336: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/pods/agnhost/proxy?method=PUT
  Aug 24 15:51:26.342: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:51:26.342: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/services/e2e-proxy-test-service/proxy?method=DELETE
  Aug 24 15:51:26.351: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:51:26.352: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Aug 24 15:51:26.364: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:51:26.364: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/services/e2e-proxy-test-service/proxy?method=PATCH
  Aug 24 15:51:26.374: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:51:26.374: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/services/e2e-proxy-test-service/proxy?method=POST
  Aug 24 15:51:26.381: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:51:26.382: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/services/e2e-proxy-test-service/proxy?method=PUT
  Aug 24 15:51:26.399: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:51:26.399: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/pods/agnhost/proxy?method=GET
  Aug 24 15:51:26.403: INFO: http.Client request:GET StatusCode:301
  Aug 24 15:51:26.403: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/services/e2e-proxy-test-service/proxy?method=GET
  Aug 24 15:51:26.412: INFO: http.Client request:GET StatusCode:301
  Aug 24 15:51:26.412: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/pods/agnhost/proxy?method=HEAD
  Aug 24 15:51:26.418: INFO: http.Client request:HEAD StatusCode:301
  Aug 24 15:51:26.418: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3946/services/e2e-proxy-test-service/proxy?method=HEAD
  Aug 24 15:51:26.423: INFO: http.Client request:HEAD StatusCode:301
  Aug 24 15:51:26.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3946" for this suite. @ 08/24/23 15:51:26.43
• [2.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 08/24/23 15:51:26.446
  Aug 24 15:51:26.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 15:51:26.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:26.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:26.475
  STEP: creating a Namespace @ 08/24/23 15:51:26.479
  STEP: patching the Namespace @ 08/24/23 15:51:26.501
  STEP: get the Namespace and ensuring it has the label @ 08/24/23 15:51:26.51
  Aug 24 15:51:26.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1127" for this suite. @ 08/24/23 15:51:26.52
  STEP: Destroying namespace "nspatchtest-6abbc539-2460-4e16-b0fa-6c7b85237967-8906" for this suite. @ 08/24/23 15:51:26.531
• [0.094 seconds]
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 08/24/23 15:51:26.54
  Aug 24 15:51:26.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:51:26.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:26.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:26.571
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:51:26.575
  E0824 15:51:26.836825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:27.837504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:28.838655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:29.839172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:51:30.628
  Aug 24 15:51:30.634: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-2acf1aef-2841-48fc-9028-367a61387f29 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:51:30.646
  Aug 24 15:51:30.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4536" for this suite. @ 08/24/23 15:51:30.672
• [4.148 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 08/24/23 15:51:30.691
  Aug 24 15:51:30.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 15:51:30.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:30.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:30.722
  STEP: Given a ReplicationController is created @ 08/24/23 15:51:30.727
  STEP: When the matched label of one of its pods change @ 08/24/23 15:51:30.734
  Aug 24 15:51:30.742: INFO: Pod name pod-release: Found 0 pods out of 1
  E0824 15:51:30.839757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:31.839821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:32.839953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:33.840137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:34.840291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:35.749: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/24/23 15:51:35.781
  Aug 24 15:51:35.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3050" for this suite. @ 08/24/23 15:51:35.818
  E0824 15:51:35.843515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 08/24/23 15:51:35.857
  Aug 24 15:51:35.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:51:35.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:35.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:35.899
  STEP: Creating service test in namespace statefulset-7030 @ 08/24/23 15:51:35.905
  STEP: Looking for a node to schedule stateful set and pod @ 08/24/23 15:51:35.923
  STEP: Creating pod with conflicting port in namespace statefulset-7030 @ 08/24/23 15:51:35.935
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7030 @ 08/24/23 15:51:35.952
  E0824 15:51:36.843782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:37.843782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-7030 @ 08/24/23 15:51:37.969
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7030 @ 08/24/23 15:51:37.98
  Aug 24 15:51:38.001: INFO: Observed stateful pod in namespace: statefulset-7030, name: ss-0, uid: 5ed1dfca-ee69-47c3-971b-10f639889ab8, status phase: Pending. Waiting for statefulset controller to delete.
  Aug 24 15:51:38.036: INFO: Observed stateful pod in namespace: statefulset-7030, name: ss-0, uid: 5ed1dfca-ee69-47c3-971b-10f639889ab8, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 24 15:51:38.059: INFO: Observed stateful pod in namespace: statefulset-7030, name: ss-0, uid: 5ed1dfca-ee69-47c3-971b-10f639889ab8, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 24 15:51:38.075: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7030
  STEP: Removing pod with conflicting port in namespace statefulset-7030 @ 08/24/23 15:51:38.075
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7030 and will be in running state @ 08/24/23 15:51:38.118
  E0824 15:51:38.843823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:39.844616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:40.138: INFO: Deleting all statefulset in ns statefulset-7030
  Aug 24 15:51:40.142: INFO: Scaling statefulset ss to 0
  E0824 15:51:40.844970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:41.845241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:42.845311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:43.845545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:44.846026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:45.846450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:46.846906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:47.847634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:48.848162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:49.848452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:50.179: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:51:50.184: INFO: Deleting statefulset ss
  Aug 24 15:51:50.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7030" for this suite. @ 08/24/23 15:51:50.218
• [14.375 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 08/24/23 15:51:50.233
  Aug 24 15:51:50.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:51:50.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:50.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:50.261
  STEP: Creating a pod to test substitution in container's command @ 08/24/23 15:51:50.264
  E0824 15:51:50.848583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:51.848742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:52.849226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:53.849535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:51:54.304
  Aug 24 15:51:54.310: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod var-expansion-7d9fc040-c7af-470b-8f5a-dbc3e11d93de container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:51:54.321
  Aug 24 15:51:54.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8474" for this suite. @ 08/24/23 15:51:54.353
• [4.136 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 08/24/23 15:51:54.37
  Aug 24 15:51:54.370: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:51:54.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:54.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:54.412
  STEP: creating Agnhost RC @ 08/24/23 15:51:54.415
  Aug 24 15:51:54.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-6668 create -f -'
  E0824 15:51:54.850157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:54.924: INFO: stderr: ""
  Aug 24 15:51:54.924: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/24/23 15:51:54.924
  E0824 15:51:55.850509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:55.931: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:51:55.931: INFO: Found 0 / 1
  E0824 15:51:56.850681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:51:56.932: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:51:56.932: INFO: Found 1 / 1
  Aug 24 15:51:56.932: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 08/24/23 15:51:56.932
  Aug 24 15:51:56.938: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:51:56.938: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 15:51:56.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-6668 patch pod agnhost-primary-f9ffc -p {"metadata":{"annotations":{"x":"y"}}}'
  Aug 24 15:51:57.131: INFO: stderr: ""
  Aug 24 15:51:57.131: INFO: stdout: "pod/agnhost-primary-f9ffc patched\n"
  STEP: checking annotations @ 08/24/23 15:51:57.131
  Aug 24 15:51:57.137: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:51:57.137: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 15:51:57.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6668" for this suite. @ 08/24/23 15:51:57.147
• [2.789 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 08/24/23 15:51:57.159
  Aug 24 15:51:57.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename job @ 08/24/23 15:51:57.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:51:57.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:51:57.19
  STEP: Creating a job @ 08/24/23 15:51:57.193
  STEP: Ensuring active pods == parallelism @ 08/24/23 15:51:57.202
  E0824 15:51:57.851791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:58.852145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 08/24/23 15:51:59.21
  Aug 24 15:51:59.750: INFO: Successfully updated pod "adopt-release-l27wg"
  STEP: Checking that the Job readopts the Pod @ 08/24/23 15:51:59.75
  E0824 15:51:59.852917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:00.853283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 08/24/23 15:52:01.773
  E0824 15:52:01.853605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:52:02.302: INFO: Successfully updated pod "adopt-release-l27wg"
  STEP: Checking that the Job releases the Pod @ 08/24/23 15:52:02.303
  E0824 15:52:02.853716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:03.855782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:52:04.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3364" for this suite. @ 08/24/23 15:52:04.33
• [7.194 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 08/24/23 15:52:04.353
  Aug 24 15:52:04.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 15:52:04.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:52:04.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:52:04.419
  Aug 24 15:52:04.424: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 24 15:52:04.445: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 15:52:04.453: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-1 before test
  Aug 24 15:52:04.469: INFO: cilium-249jg from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:52:04.469: INFO: cilium-node-init-c95pq from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 15:52:04.469: INFO: kube-addon-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 15:52:04.469: INFO: kube-apiserver-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 15:52:04.469: INFO: kube-controller-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 15:52:04.469: INFO: kube-proxy-5qdnk from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:52:04.469: INFO: kube-scheduler-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 15:52:04.469: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-rzlvs from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:52:04.469: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:52:04.469: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 15:52:04.469: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-2 before test
  Aug 24 15:52:04.486: INFO: cilium-dhltd from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:52:04.486: INFO: cilium-node-init-6p2dn from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 15:52:04.486: INFO: cilium-operator-7d96878f5-db9bp from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container cilium-operator ready: true, restart count 7
  Aug 24 15:52:04.486: INFO: coredns-5dd5756b68-7j9vk from kube-system started at 2023-08-24 14:24:52 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:52:04.486: INFO: coredns-5dd5756b68-chvhm from kube-system started at 2023-08-24 14:25:06 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:52:04.486: INFO: kube-addon-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 15:52:04.486: INFO: kube-apiserver-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 15:52:04.486: INFO: kube-controller-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 15:52:04.486: INFO: kube-proxy-92pnj from kube-system started at 2023-08-24 14:24:12 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:52:04.486: INFO: kube-scheduler-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 15:52:04.486: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-7j6r9 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:52:04.486: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:52:04.486: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 15:52:04.486: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-3 before test
  Aug 24 15:52:04.502: INFO: adopt-release-bvfgs from job-3364 started at 2023-08-24 15:52:03 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container c ready: false, restart count 0
  Aug 24 15:52:04.502: INFO: adopt-release-l27wg from job-3364 started at 2023-08-24 15:51:57 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container c ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: adopt-release-pqphg from job-3364 started at 2023-08-24 15:51:57 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container c ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: cilium-kzxs7 from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: cilium-node-init-k898v from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: kube-proxy-7z2wb from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:43:41 +0000 UTC (1 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: sonobuoy-e2e-job-54beda60178f4a68 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-g4xff from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 15:52:04.502: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:52:04.502: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/24/23 15:52:04.502
  E0824 15:52:04.856754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:05.856948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:06.857749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:07.858521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/24/23 15:52:08.554
  STEP: Trying to apply a random label on the found node. @ 08/24/23 15:52:08.609
  STEP: verifying the node has the label kubernetes.io/e2e-6cd76520-8e1e-4500-b2b3-e434fb3651da 42 @ 08/24/23 15:52:08.629
  STEP: Trying to relaunch the pod, now with labels. @ 08/24/23 15:52:08.639
  E0824 15:52:08.859912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:09.860061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-6cd76520-8e1e-4500-b2b3-e434fb3651da off the node eiyoo9ohd4ei-3 @ 08/24/23 15:52:10.684
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-6cd76520-8e1e-4500-b2b3-e434fb3651da @ 08/24/23 15:52:10.712
  Aug 24 15:52:10.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5931" for this suite. @ 08/24/23 15:52:10.741
• [6.405 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 08/24/23 15:52:10.759
  Aug 24 15:52:10.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:52:10.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:52:10.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:52:10.809
  STEP: Setting up server cert @ 08/24/23 15:52:10.852
  E0824 15:52:10.860880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:11.861150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:52:11.936
  STEP: Deploying the webhook pod @ 08/24/23 15:52:11.948
  STEP: Wait for the deployment to be ready @ 08/24/23 15:52:11.966
  Aug 24 15:52:11.981: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:52:12.861264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:13.861567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:52:14.006: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 15, 52, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 52, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 52, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 52, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:52:14.861816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:15.861799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:52:16.02
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:52:16.06
  E0824 15:52:16.862458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:52:17.061: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 15:52:17.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2613-crds.webhook.example.com via the AdmissionRegistration API @ 08/24/23 15:52:17.623
  STEP: Creating a custom resource while v1 is storage version @ 08/24/23 15:52:17.657
  E0824 15:52:17.862984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:18.863584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:19.863849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 08/24/23 15:52:19.896
  STEP: Patching the custom resource while v2 is storage version @ 08/24/23 15:52:19.953
  Aug 24 15:52:20.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:52:20.865044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-2852" for this suite. @ 08/24/23 15:52:20.911
  STEP: Destroying namespace "webhook-markers-3017" for this suite. @ 08/24/23 15:52:20.921
• [10.188 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 08/24/23 15:52:20.95
  Aug 24 15:52:20.950: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 15:52:20.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:52:20.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:52:20.981
  Aug 24 15:52:21.004: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:52:21.865311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:22.865573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:23.865645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:24.865892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:25.866146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:26.866414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:27.867059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:28.867191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:29.867996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:30.868227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:31.868494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:32.868768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:33.869632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:34.869775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:35.870610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:36.871363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:37.872272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:38.872478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:39.872735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:40.873463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:41.874504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:42.876950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:43.875840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:44.876589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:45.877547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:46.877902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:47.878663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:48.878893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:49.879224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:50.879626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:51.879852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:52.880770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:53.880942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:54.881218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:55.882351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:56.882607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:57.883234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:58.883847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:59.884996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:00.885127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:01.886045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:02.886881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:03.887020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:04.887508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:05.887700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:06.887955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:07.888346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:08.889011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:09.889306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:10.890176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:11.890466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:12.890722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:13.891767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:14.892081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:15.892345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:16.892525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:17.893326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:18.893504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:19.893682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:20.894441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:21.064: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/24/23 15:53:21.071
  Aug 24 15:53:21.120: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 24 15:53:21.133: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 24 15:53:21.193: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 24 15:53:21.206: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Aug 24 15:53:21.272: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Aug 24 15:53:21.285: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/24/23 15:53:21.285
  E0824 15:53:21.907506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:22.899025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:23.899481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:24.899581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 08/24/23 15:53:25.368
  E0824 15:53:25.899712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:26.900754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:27.901876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:28.902004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:29.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8624" for this suite. @ 08/24/23 15:53:29.709
• [68.780 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 08/24/23 15:53:29.731
  Aug 24 15:53:29.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:53:29.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:29.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:29.78
  Aug 24 15:53:29.787: INFO: Creating deployment "webserver-deployment"
  Aug 24 15:53:29.799: INFO: Waiting for observed generation 1
  E0824 15:53:29.902152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:30.925143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:31.911: INFO: Waiting for all required pods to come up
  E0824 15:53:31.929210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:32.064: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 08/24/23 15:53:32.065
  E0824 15:53:32.930485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:33.931093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:34.932108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:35.932515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:36.149: INFO: Waiting for deployment "webserver-deployment" to complete
  Aug 24 15:53:36.179: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Aug 24 15:53:36.237: INFO: Updating deployment webserver-deployment
  Aug 24 15:53:36.237: INFO: Waiting for observed generation 2
  E0824 15:53:36.932781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:37.933219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:38.263: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Aug 24 15:53:38.273: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Aug 24 15:53:38.282: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 24 15:53:38.314: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Aug 24 15:53:38.314: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Aug 24 15:53:38.325: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 24 15:53:38.346: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Aug 24 15:53:38.346: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Aug 24 15:53:38.372: INFO: Updating deployment webserver-deployment
  Aug 24 15:53:38.372: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Aug 24 15:53:38.396: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  E0824 15:53:38.937565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:39.938900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:40.440: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Aug 24 15:53:40.646: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94b23187-4276-4d80-9b4a-9b6d6721de1e",
      ResourceVersion: (string) (len=5) "39203",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489209,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0824 15:53:40.950367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:41.307: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
      ResourceVersion: (string) (len=5) "39195",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "94b23187-4276-4d80-9b4a-9b6d6721de1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 34 62 32 33 31  38 37 2d 34 32 37 36 2d  |\"94b23187-4276-|
              00000120  34 64 38 30 2d 39 62 34  61 2d 39 62 36 64 36 37  |4d80-9b4a-9b6d67|
              00000130  32 31 64 65 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |21de1e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:53:41.343: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Aug 24 15:53:41.344: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
      ResourceVersion: (string) (len=5) "39193",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489209,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "94b23187-4276-4d80-9b4a-9b6d6721de1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 34 62 32 33 31  38 37 2d 34 32 37 36 2d  |\"94b23187-4276-|
              00000120  34 64 38 30 2d 39 62 34  61 2d 39 62 36 64 36 37  |4d80-9b4a-9b6d67|
              00000130  32 31 64 65 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |21de1e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0824 15:53:42.068019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:42.122: INFO: Pod "webserver-deployment-557759b7c7-2qccv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2qccv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d18b577e-fceb-4f09-9562-8e236fffdcf6",
      ResourceVersion: (string) (len=5) "39218",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9gmfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9gmfs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.262: INFO: Pod "webserver-deployment-557759b7c7-5n5xp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5n5xp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b14fa5b-bb8c-46d2-b688-1516120eaa07",
      ResourceVersion: (string) (len=5) "39200",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjv9w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjv9w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.272: INFO: Pod "webserver-deployment-557759b7c7-7xtgg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7xtgg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8921b1ad-f081-42fd-aa9b-212ed93f9225",
      ResourceVersion: (string) (len=5) "38953",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 39 34 5c 22 7d  |10.233.64.194\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54z9z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54z9z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.194",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.194"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489212,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://c5ef846e60ead0fadb255f2860d49da390375f0a74c38625825e7863a43ed5af",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.278: INFO: Pod "webserver-deployment-557759b7c7-9l5sg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9l5sg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0850ca6-c4a7-460c-b0bc-74a536b5df74",
      ResourceVersion: (string) (len=5) "39210",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2w8d4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2w8d4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.290: INFO: Pod "webserver-deployment-557759b7c7-c6vvr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c6vvr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dcf4e26b-7182-4b8e-9e9f-65699a9824dc",
      ResourceVersion: (string) (len=5) "39198",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zkwqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zkwqg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.302: INFO: Pod "webserver-deployment-557759b7c7-cr7lt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cr7lt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63e99098-46f7-401b-a637-1db07add7502",
      ResourceVersion: (string) (len=5) "38985",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 34 38 5c 22 7d  |10.233.65.148\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jw2j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jw2j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489213,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://70f878a38c974fd43fc54089fb5975682aa047a72d59a96c508e8a0dc1c32bce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.322: INFO: Pod "webserver-deployment-557759b7c7-l74ld" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l74ld",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4c1bb6e-264f-4e93-97c1-efa2239aa10d",
      ResourceVersion: (string) (len=5) "39166",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5hcc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5hcc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.332: INFO: Pod "webserver-deployment-557759b7c7-lfvq2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lfvq2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c609d88-34d8-4a4e-b273-369f002a5483",
      ResourceVersion: (string) (len=5) "38944",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489209,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 33 36 5c 22 7d  |10.233.64.136\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zjpgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zjpgd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489212,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://94da3f9bd2a53ad2253b49b2e3e7f2e6b129acbf6481cd45bb64ee3c45dffb50",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.432: INFO: Pod "webserver-deployment-557759b7c7-nq9jr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nq9jr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4b57fbb-fee0-4747-9bc7-d23a6f8dc46b",
      ResourceVersion: (string) (len=5) "39165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rghp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rghp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.676: INFO: Pod "webserver-deployment-557759b7c7-ntqzh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ntqzh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f47427d-1d2b-4f4b-a40f-b53941358e8b",
      ResourceVersion: (string) (len=5) "39206",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8r6cd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8r6cd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.680: INFO: Pod "webserver-deployment-557759b7c7-rkdwq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rkdwq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33a9f16f-b67b-4f84-b128-9f271654940a",
      ResourceVersion: (string) (len=5) "39181",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lpd6g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lpd6g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.683: INFO: Pod "webserver-deployment-557759b7c7-st8rr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-st8rr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5982ba4e-4d74-4a89-a74c-d1575107da73",
      ResourceVersion: (string) (len=5) "38988",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489209,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 31 38 5c 22 7d  |10.233.65.118\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jbslv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jbslv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489213,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://331ca86370d2efc2c42851b4f6aaee001fd003d9fa2f7bd1f22a58db6a867053",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.688: INFO: Pod "webserver-deployment-557759b7c7-t2zcx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-t2zcx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80c64308-a411-4269-b43e-36d3c0ed0cfa",
      ResourceVersion: (string) (len=5) "39220",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rvknc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rvknc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.691: INFO: Pod "webserver-deployment-557759b7c7-t6jgg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-t6jgg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcb9ad45-8a42-45e1-b3a3-079b22d0a427",
      ResourceVersion: (string) (len=5) "39151",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jh6mt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jh6mt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.709: INFO: Pod "webserver-deployment-557759b7c7-tw2q8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tw2q8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f598b897-5539-4e0f-9f56-0f66547a6b70",
      ResourceVersion: (string) (len=5) "38961",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 32 31 39 5c 22 7d  |10.233.66.219\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8479t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8479t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.219",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.219"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489212,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://0c75618347c8550df498bec8caaafbbec94a7f5afadf0282c78d9691ad6785d4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.723: INFO: Pod "webserver-deployment-557759b7c7-vswld" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vswld",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25e06d28-ceff-494b-9a92-42572d730cce",
      ResourceVersion: (string) (len=5) "38990",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 39 35 5c 22 7d 22  |10.233.65.95\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhdwk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhdwk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489213,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://67691af9eae45ad3d6c8bb59e7c1ee4ac1f64299b04830be9510071d85aa4a53",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.727: INFO: Pod "webserver-deployment-557759b7c7-wcnhp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wcnhp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d96ab364-2a4a-4f29-937e-5ce592b431d7",
      ResourceVersion: (string) (len=5) "38964",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 32 32 33 5c 22 7d  |10.233.66.223\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mxrf2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mxrf2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489212,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://d723b201a09148d96b548a61aa9db860363502a4d972021f79ec1d51be1651d7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.731: INFO: Pod "webserver-deployment-557759b7c7-wf2vt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wf2vt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "997c04c5-2e19-42c6-8a16-e636711ef526",
      ResourceVersion: (string) (len=5) "39208",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ckr86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ckr86",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.737: INFO: Pod "webserver-deployment-557759b7c7-z5z6c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z5z6c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "640eac7e-4205-4d75-a792-c0afd1359b9a",
      ResourceVersion: (string) (len=5) "39232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2q95g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2q95g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.742: INFO: Pod "webserver-deployment-557759b7c7-zqchx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zqchx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c2e6660-e620-4718-b2a9-632101499294",
      ResourceVersion: (string) (len=5) "38974",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6be2e5d8-f3d7-4680-8093-898dcfd315e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  65 32 65 35 64 38 2d 66  |d\":\"6be2e5d8-f|
              00000090  33 64 37 2d 34 36 38 30  2d 38 30 39 33 2d 38 39  |3d7-4680-8093-89|
              000000a0  38 64 63 66 64 33 31 35  65 32 5c 22 7d 22 3a 7b  |8dcfd315e2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 32 34 31 5c 22 7d  |10.233.64.241\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mcrm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mcrm8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.241",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.241"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489212,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://bbcd8d8116e8d0efb5955844432bb8f12c684bbcd885f2ddf24251ba75b2c1e7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.752: INFO: Pod "webserver-deployment-9b4f5bf69-6dtmz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6dtmz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7984b6b6-8142-49d1-b72b-29d0fa372803",
      ResourceVersion: (string) (len=5) "39078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8v684",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8v684",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.763: INFO: Pod "webserver-deployment-9b4f5bf69-g6tfq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g6tfq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f088f5d4-a239-4ce6-9e75-e70b2e135544",
      ResourceVersion: (string) (len=5) "39215",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vns5t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vns5t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.785: INFO: Pod "webserver-deployment-9b4f5bf69-h5p86" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-h5p86",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1943507-8821-440d-b302-a266e09d9776",
      ResourceVersion: (string) (len=5) "39226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmh9x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmh9x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.823: INFO: Pod "webserver-deployment-9b4f5bf69-hn4km" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hn4km",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d8973b8-6b18-4675-9b53-984d0342f05e",
      ResourceVersion: (string) (len=5) "39106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zj9lh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zj9lh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.836: INFO: Pod "webserver-deployment-9b4f5bf69-jhlcd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jhlcd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "930b233c-4ce1-4731-891a-e825aa403ae7",
      ResourceVersion: (string) (len=5) "39096",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v59kj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v59kj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.857: INFO: Pod "webserver-deployment-9b4f5bf69-jvvzn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jvvzn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1065f856-64d9-4af8-987f-53c768e6281f",
      ResourceVersion: (string) (len=5) "39184",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mp2ww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mp2ww",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.869: INFO: Pod "webserver-deployment-9b4f5bf69-kksrx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kksrx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea9231ae-03f6-4fa5-a7b4-721e6fc9ad1d",
      ResourceVersion: (string) (len=5) "39073",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2pvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2pvm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.881: INFO: Pod "webserver-deployment-9b4f5bf69-lrbj8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lrbj8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4154cc30-c71d-4023-a8b8-94b1cfab8463",
      ResourceVersion: (string) (len=5) "39162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z85rw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z85rw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.893: INFO: Pod "webserver-deployment-9b4f5bf69-qchbw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qchbw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfa2caa9-99f5-4a5e-9f94-ac604b8ae208",
      ResourceVersion: (string) (len=5) "39202",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c7mns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c7mns",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.240",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.902: INFO: Pod "webserver-deployment-9b4f5bf69-t54cb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t54cb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbf33191-6280-4f4f-8752-d9455d342939",
      ResourceVersion: (string) (len=5) "39062",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jtkxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jtkxf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489216,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.910: INFO: Pod "webserver-deployment-9b4f5bf69-v8hjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-v8hjb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "403b9dbf-33ab-4f5c-858e-c593baaeccba",
      ResourceVersion: (string) (len=5) "39199",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rt8q4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rt8q4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.75",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.929: INFO: Pod "webserver-deployment-9b4f5bf69-wcrwf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wcrwf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ac9e2dc-a381-4531-93fe-f5bf98c33306",
      ResourceVersion: (string) (len=5) "39213",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sfd7j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sfd7j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.942: INFO: Pod "webserver-deployment-9b4f5bf69-x9p5h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-x9p5h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c400e109-27b9-4d9c-ac08-5c2428227771",
      ResourceVersion: (string) (len=5) "39178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b93b138e-399a-4b61-894b-e87005409fd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  33 62 31 33 38 65 2d 33  |d\":\"b93b138e-3|
              00000090  39 39 61 2d 34 62 36 31  2d 38 39 34 62 2d 65 38  |99a-4b61-894b-e8|
              000000a0  37 30 30 35 34 30 39 66  64 30 5c 22 7d 22 3a 7b  |7005409fd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4v9xz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4v9xz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:53:42.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:53:42.992443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-109" for this suite. @ 08/24/23 15:53:43.079
• [13.411 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 08/24/23 15:53:43.145
  Aug 24 15:53:43.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:53:43.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:43.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:43.222
  STEP: Creating configMap with name configmap-test-volume-map-28ae2bf1-f938-47c8-af66-422525a764d5 @ 08/24/23 15:53:43.227
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:53:43.24
  E0824 15:53:43.981849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:44.982676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:45.982663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:46.983330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:53:47.295
  Aug 24 15:53:47.304: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-b866397f-34b2-4e3c-bcf2-7e596d344d17 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:53:47.352
  Aug 24 15:53:47.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8918" for this suite. @ 08/24/23 15:53:47.386
• [4.254 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 08/24/23 15:53:47.401
  Aug 24 15:53:47.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:53:47.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:47.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:47.453
  STEP: create the deployment @ 08/24/23 15:53:47.458
  W0824 15:53:47.469772      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/24/23 15:53:47.47
  E0824 15:53:47.984008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 08/24/23 15:53:48.009
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 08/24/23 15:53:48.028
  STEP: Gathering metrics @ 08/24/23 15:53:48.698
  E0824 15:53:48.985323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:49.085: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 15:53:49.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9543" for this suite. @ 08/24/23 15:53:49.134
• [1.754 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 08/24/23 15:53:49.159
  Aug 24 15:53:49.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:53:49.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:49.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:49.348
  STEP: Creating configMap with name configmap-test-volume-map-a682e480-0257-41da-a61a-3cafd3b665dc @ 08/24/23 15:53:49.361
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:53:49.371
  E0824 15:53:49.999536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:50.999115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:52.001522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:53.001766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:54.002866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:55.002810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:53:55.493
  Aug 24 15:53:55.499: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-12a64f92-53fe-4109-9d74-b47741bf3e23 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:53:55.521
  Aug 24 15:53:55.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5865" for this suite. @ 08/24/23 15:53:55.565
• [6.418 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 08/24/23 15:53:55.581
  Aug 24 15:53:55.581: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:53:55.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:55.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:55.623
  Aug 24 15:53:55.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:53:56.003519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:57.004044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:58.004878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0824 15:53:58.412146      14 warnings.go:70] unknown field "alpha"
  W0824 15:53:58.412185      14 warnings.go:70] unknown field "beta"
  W0824 15:53:58.412195      14 warnings.go:70] unknown field "delta"
  W0824 15:53:58.412204      14 warnings.go:70] unknown field "epsilon"
  W0824 15:53:58.412213      14 warnings.go:70] unknown field "gamma"
  Aug 24 15:53:58.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2398" for this suite. @ 08/24/23 15:53:58.988
• [3.417 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 08/24/23 15:53:59.002
  Aug 24 15:53:59.002: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:53:59.005
  E0824 15:53:59.005639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:59.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:59.035
  STEP: Creating a pod to test downward api env vars @ 08/24/23 15:53:59.039
  E0824 15:54:00.005874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:01.006496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:02.006628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:03.007620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:54:03.112
  Aug 24 15:54:03.117: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downward-api-93f87c39-d229-44a4-b32f-aedb060baa7e container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:54:03.13
  Aug 24 15:54:03.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9072" for this suite. @ 08/24/23 15:54:03.173
• [4.182 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 08/24/23 15:54:03.184
  Aug 24 15:54:03.184: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:54:03.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:03.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:03.218
  STEP: creating service multi-endpoint-test in namespace services-1176 @ 08/24/23 15:54:03.224
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1176 to expose endpoints map[] @ 08/24/23 15:54:03.248
  Aug 24 15:54:03.279: INFO: successfully validated that service multi-endpoint-test in namespace services-1176 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1176 @ 08/24/23 15:54:03.28
  E0824 15:54:04.008620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:05.008670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1176 to expose endpoints map[pod1:[100]] @ 08/24/23 15:54:05.317
  Aug 24 15:54:05.335: INFO: successfully validated that service multi-endpoint-test in namespace services-1176 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1176 @ 08/24/23 15:54:05.336
  E0824 15:54:06.008824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:07.009240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1176 to expose endpoints map[pod1:[100] pod2:[101]] @ 08/24/23 15:54:07.372
  Aug 24 15:54:07.394: INFO: successfully validated that service multi-endpoint-test in namespace services-1176 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 08/24/23 15:54:07.394
  Aug 24 15:54:07.394: INFO: Creating new exec pod
  E0824 15:54:08.011357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:09.011713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:10.012189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:10.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-1176 exec execpod64qpd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Aug 24 15:54:10.734: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Aug 24 15:54:10.734: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:54:10.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-1176 exec execpod64qpd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.0 80'
  Aug 24 15:54:11.000: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.0 80\nConnection to 10.233.13.0 80 port [tcp/http] succeeded!\n"
  Aug 24 15:54:11.000: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:54:11.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-1176 exec execpod64qpd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E0824 15:54:11.012410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:11.268: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Aug 24 15:54:11.269: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:54:11.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-1176 exec execpod64qpd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.0 81'
  Aug 24 15:54:11.574: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.0 81\nConnection to 10.233.13.0 81 port [tcp/*] succeeded!\n"
  Aug 24 15:54:11.574: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1176 @ 08/24/23 15:54:11.574
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1176 to expose endpoints map[pod2:[101]] @ 08/24/23 15:54:11.597
  Aug 24 15:54:11.658: INFO: successfully validated that service multi-endpoint-test in namespace services-1176 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1176 @ 08/24/23 15:54:11.659
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1176 to expose endpoints map[] @ 08/24/23 15:54:11.725
  E0824 15:54:12.012960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:12.767: INFO: successfully validated that service multi-endpoint-test in namespace services-1176 exposes endpoints map[]
  Aug 24 15:54:12.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1176" for this suite. @ 08/24/23 15:54:12.817
• [9.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 08/24/23 15:54:12.831
  Aug 24 15:54:12.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename certificates @ 08/24/23 15:54:12.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:12.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:12.865
  E0824 15:54:13.013520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:14.013824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 08/24/23 15:54:14.374
  STEP: getting /apis/certificates.k8s.io @ 08/24/23 15:54:14.381
  STEP: getting /apis/certificates.k8s.io/v1 @ 08/24/23 15:54:14.383
  STEP: creating @ 08/24/23 15:54:14.385
  STEP: getting @ 08/24/23 15:54:14.415
  STEP: listing @ 08/24/23 15:54:14.422
  STEP: watching @ 08/24/23 15:54:14.431
  Aug 24 15:54:14.431: INFO: starting watch
  STEP: patching @ 08/24/23 15:54:14.434
  STEP: updating @ 08/24/23 15:54:14.449
  Aug 24 15:54:14.465: INFO: waiting for watch events with expected annotations
  Aug 24 15:54:14.465: INFO: saw patched and updated annotations
  STEP: getting /approval @ 08/24/23 15:54:14.466
  STEP: patching /approval @ 08/24/23 15:54:14.488
  STEP: updating /approval @ 08/24/23 15:54:14.503
  STEP: getting /status @ 08/24/23 15:54:14.523
  STEP: patching /status @ 08/24/23 15:54:14.529
  STEP: updating /status @ 08/24/23 15:54:14.541
  STEP: deleting @ 08/24/23 15:54:14.552
  STEP: deleting a collection @ 08/24/23 15:54:14.576
  Aug 24 15:54:14.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6964" for this suite. @ 08/24/23 15:54:14.61
• [1.789 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 08/24/23 15:54:14.623
  Aug 24 15:54:14.623: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 15:54:14.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:14.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:14.709
  Aug 24 15:54:14.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5788" for this suite. @ 08/24/23 15:54:14.728
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 08/24/23 15:54:14.746
  Aug 24 15:54:14.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 15:54:14.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:14.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:14.777
  STEP: create the container @ 08/24/23 15:54:14.781
  W0824 15:54:14.794229      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/24/23 15:54:14.794
  E0824 15:54:15.014235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:16.014752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:17.015603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/24/23 15:54:17.825
  STEP: the container should be terminated @ 08/24/23 15:54:17.83
  STEP: the termination message should be set @ 08/24/23 15:54:17.831
  Aug 24 15:54:17.831: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 08/24/23 15:54:17.831
  Aug 24 15:54:17.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5252" for this suite. @ 08/24/23 15:54:17.863
• [3.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 08/24/23 15:54:17.88
  Aug 24 15:54:17.881: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:54:17.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:17.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:17.925
  Aug 24 15:54:17.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:54:18.016287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:19.017090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:20.017456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:21.017806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:21.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9619" for this suite. @ 08/24/23 15:54:21.349
• [3.480 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 08/24/23 15:54:21.361
  Aug 24 15:54:21.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:54:21.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:21.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:21.396
  STEP: creating a replication controller @ 08/24/23 15:54:21.402
  Aug 24 15:54:21.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 create -f -'
  Aug 24 15:54:21.956: INFO: stderr: ""
  Aug 24 15:54:21.956: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 15:54:21.957
  Aug 24 15:54:21.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0824 15:54:22.018538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:22.146: INFO: stderr: ""
  Aug 24 15:54:22.146: INFO: stdout: "update-demo-nautilus-7mt2m update-demo-nautilus-tkgpc "
  Aug 24 15:54:22.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-7mt2m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:54:22.283: INFO: stderr: ""
  Aug 24 15:54:22.283: INFO: stdout: ""
  Aug 24 15:54:22.283: INFO: update-demo-nautilus-7mt2m is created but not running
  E0824 15:54:23.018635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:24.019239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:25.019553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:26.020130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:27.020260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:27.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:54:27.444: INFO: stderr: ""
  Aug 24 15:54:27.444: INFO: stdout: "update-demo-nautilus-7mt2m update-demo-nautilus-tkgpc "
  Aug 24 15:54:27.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-7mt2m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:54:27.590: INFO: stderr: ""
  Aug 24 15:54:27.590: INFO: stdout: "true"
  Aug 24 15:54:27.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-7mt2m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:54:27.739: INFO: stderr: ""
  Aug 24 15:54:27.739: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:54:27.739: INFO: validating pod update-demo-nautilus-7mt2m
  Aug 24 15:54:27.755: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:54:27.755: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:54:27.755: INFO: update-demo-nautilus-7mt2m is verified up and running
  Aug 24 15:54:27.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-tkgpc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:54:27.891: INFO: stderr: ""
  Aug 24 15:54:27.891: INFO: stdout: "true"
  Aug 24 15:54:27.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-tkgpc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0824 15:54:28.021390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:28.026: INFO: stderr: ""
  Aug 24 15:54:28.027: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:54:28.027: INFO: validating pod update-demo-nautilus-tkgpc
  Aug 24 15:54:28.041: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:54:28.041: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:54:28.041: INFO: update-demo-nautilus-tkgpc is verified up and running
  STEP: scaling down the replication controller @ 08/24/23 15:54:28.041
  Aug 24 15:54:28.055: INFO: scanned /root for discovery docs: <nil>
  Aug 24 15:54:28.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0824 15:54:29.022439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:29.268: INFO: stderr: ""
  Aug 24 15:54:29.268: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 15:54:29.269
  Aug 24 15:54:29.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:54:29.404: INFO: stderr: ""
  Aug 24 15:54:29.405: INFO: stdout: "update-demo-nautilus-tkgpc "
  Aug 24 15:54:29.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-tkgpc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:54:29.534: INFO: stderr: ""
  Aug 24 15:54:29.534: INFO: stdout: "true"
  Aug 24 15:54:29.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-tkgpc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:54:29.665: INFO: stderr: ""
  Aug 24 15:54:29.665: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:54:29.665: INFO: validating pod update-demo-nautilus-tkgpc
  Aug 24 15:54:29.673: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:54:29.673: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:54:29.673: INFO: update-demo-nautilus-tkgpc is verified up and running
  STEP: scaling up the replication controller @ 08/24/23 15:54:29.673
  Aug 24 15:54:29.683: INFO: scanned /root for discovery docs: <nil>
  Aug 24 15:54:29.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0824 15:54:30.022659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:30.873: INFO: stderr: ""
  Aug 24 15:54:30.873: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 15:54:30.873
  Aug 24 15:54:30.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0824 15:54:31.023873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:31.036: INFO: stderr: ""
  Aug 24 15:54:31.036: INFO: stdout: "update-demo-nautilus-s57bg update-demo-nautilus-tkgpc "
  Aug 24 15:54:31.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-s57bg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:54:31.215: INFO: stderr: ""
  Aug 24 15:54:31.215: INFO: stdout: "true"
  Aug 24 15:54:31.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-s57bg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:54:31.358: INFO: stderr: ""
  Aug 24 15:54:31.358: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:54:31.358: INFO: validating pod update-demo-nautilus-s57bg
  Aug 24 15:54:31.376: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:54:31.377: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:54:31.377: INFO: update-demo-nautilus-s57bg is verified up and running
  Aug 24 15:54:31.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-tkgpc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:54:31.520: INFO: stderr: ""
  Aug 24 15:54:31.520: INFO: stdout: "true"
  Aug 24 15:54:31.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods update-demo-nautilus-tkgpc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:54:31.660: INFO: stderr: ""
  Aug 24 15:54:31.660: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:54:31.660: INFO: validating pod update-demo-nautilus-tkgpc
  Aug 24 15:54:31.670: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:54:31.671: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:54:31.671: INFO: update-demo-nautilus-tkgpc is verified up and running
  STEP: using delete to clean up resources @ 08/24/23 15:54:31.671
  Aug 24 15:54:31.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 delete --grace-period=0 --force -f -'
  Aug 24 15:54:31.814: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:54:31.814: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 24 15:54:31.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get rc,svc -l name=update-demo --no-headers'
  E0824 15:54:32.024743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:32.053: INFO: stderr: "No resources found in kubectl-7800 namespace.\n"
  Aug 24 15:54:32.053: INFO: stdout: ""
  Aug 24 15:54:32.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7800 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 24 15:54:32.260: INFO: stderr: ""
  Aug 24 15:54:32.260: INFO: stdout: ""
  Aug 24 15:54:32.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7800" for this suite. @ 08/24/23 15:54:32.271
• [10.927 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 08/24/23 15:54:32.305
  Aug 24 15:54:32.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:54:32.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:32.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:32.368
  STEP: Creating configMap with name configmap-test-volume-67beda9a-97f2-4609-b179-dd29d9e7ada8 @ 08/24/23 15:54:32.395
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:54:32.419
  E0824 15:54:33.027634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:34.028129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:35.028783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:36.029293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:54:36.466
  Aug 24 15:54:36.472: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-5b63231c-2d30-4357-9a8e-13db1df59ca1 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:54:36.487
  Aug 24 15:54:36.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7923" for this suite. @ 08/24/23 15:54:36.525
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 08/24/23 15:54:36.562
  Aug 24 15:54:36.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:54:36.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:54:36.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:54:36.591
  STEP: creating the pod @ 08/24/23 15:54:36.597
  STEP: waiting for pod running @ 08/24/23 15:54:36.614
  E0824 15:54:37.029457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:38.029738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 08/24/23 15:54:38.632
  Aug 24 15:54:38.640: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7562 PodName:var-expansion-c1ff9a6f-ee33-4cc5-abc8-48c6a878e6b6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:54:38.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:54:38.642: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:54:38.642: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-7562/pods/var-expansion-c1ff9a6f-ee33-4cc5-abc8-48c6a878e6b6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 08/24/23 15:54:38.754
  Aug 24 15:54:38.760: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7562 PodName:var-expansion-c1ff9a6f-ee33-4cc5-abc8-48c6a878e6b6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:54:38.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 15:54:38.761: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:54:38.762: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-7562/pods/var-expansion-c1ff9a6f-ee33-4cc5-abc8-48c6a878e6b6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 08/24/23 15:54:38.884
  E0824 15:54:39.030096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:39.405: INFO: Successfully updated pod "var-expansion-c1ff9a6f-ee33-4cc5-abc8-48c6a878e6b6"
  STEP: waiting for annotated pod running @ 08/24/23 15:54:39.405
  STEP: deleting the pod gracefully @ 08/24/23 15:54:39.412
  Aug 24 15:54:39.413: INFO: Deleting pod "var-expansion-c1ff9a6f-ee33-4cc5-abc8-48c6a878e6b6" in namespace "var-expansion-7562"
  Aug 24 15:54:39.426: INFO: Wait up to 5m0s for pod "var-expansion-c1ff9a6f-ee33-4cc5-abc8-48c6a878e6b6" to be fully deleted
  E0824 15:54:40.031382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:41.031645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:42.032370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:43.033122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:44.033684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:45.034059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:46.034452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:47.034649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:48.034946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:49.035464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:50.036256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:51.036518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:52.036596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:53.036885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:54.037062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:55.037323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:56.037564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:57.037666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:58.037898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:59.038082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:00.038239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:01.039061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:02.039425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:03.039579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:04.039633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:05.040167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:06.041110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:07.040959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:08.041010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:09.041788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:10.041978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:11.042257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:11.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7562" for this suite. @ 08/24/23 15:55:11.584
• [35.031 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 08/24/23 15:55:11.595
  Aug 24 15:55:11.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:55:11.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:55:11.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:55:11.629
  Aug 24 15:55:11.653: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0824 15:55:12.042979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:13.043248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:14.043945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:15.043996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:16.044190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:16.658: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 15:55:16.658
  Aug 24 15:55:16.658: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0824 15:55:17.045010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:18.045319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:18.665: INFO: Creating deployment "test-rollover-deployment"
  Aug 24 15:55:18.682: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0824 15:55:19.045860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:20.046205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:20.695: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Aug 24 15:55:20.711: INFO: Ensure that both replica sets have 1 created replica
  Aug 24 15:55:20.724: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Aug 24 15:55:20.752: INFO: Updating deployment test-rollover-deployment
  Aug 24 15:55:20.752: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0824 15:55:21.046877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:22.047544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:22.769: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Aug 24 15:55:22.781: INFO: Make sure deployment "test-rollover-deployment" is complete
  Aug 24 15:55:22.792: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:55:22.793: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:55:23.048395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:24.049416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:24.807: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:55:24.807: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:55:25.050256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:26.051449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:26.805: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:55:26.806: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:55:27.052014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:28.052188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:28.808: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:55:28.809: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:55:29.053226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:30.053363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:30.807: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:55:30.807: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 55, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 55, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:55:31.054073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:32.054541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:32.820: INFO: 
  Aug 24 15:55:32.820: INFO: Ensure that both old replica sets have no replicas
  Aug 24 15:55:32.843: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-171",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2dd063c-8f50-49c3-8f00-1333e2976a4e",
      ResourceVersion: (string) (len=5) "40491",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 15:55:32.862: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-171",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "184e4c3f-f62a-4078-b42c-e2c70ec2b360",
      ResourceVersion: (string) (len=5) "40481",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f2dd063c-8f50-49c3-8f00-1333e2976a4e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 32 64 64 30 36  33 63 2d 38 66 35 30 2d  |\"f2dd063c-8f50-|
              00000120  34 39 63 33 2d 38 66 30  30 2d 31 33 33 33 65 32  |49c3-8f00-1333e2|
              00000130  39 37 36 61 34 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |976a4e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:55:32.864: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Aug 24 15:55:32.865: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-171",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35b47d18-68ba-46cd-a909-7287ddd7be26",
      ResourceVersion: (string) (len=5) "40490",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489311,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f2dd063c-8f50-49c3-8f00-1333e2976a4e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 32 64 64 30 36 33 63  2d 38 66 35 30 2d 34 39  |f2dd063c-8f50-49|
              000000c0  63 33 2d 38 66 30 30 2d  31 33 33 33 65 32 39 37  |c3-8f00-1333e297|
              000000d0  36 61 34 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |6a4e\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:55:32.867: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-171",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ee6184d-b4a6-4ca8-8028-0afccb636b06",
      ResourceVersion: (string) (len=5) "40441",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f2dd063c-8f50-49c3-8f00-1333e2976a4e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 32 64 64 30 36  33 63 2d 38 66 35 30 2d  |\"f2dd063c-8f50-|
              00000120  34 39 63 33 2d 38 66 30  30 2d 31 33 33 33 65 32  |49c3-8f00-1333e2|
              00000130  39 37 36 61 34 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |976a4e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:55:32.875: INFO: Pod "test-rollover-deployment-5d484bf7f9-m7qg6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-m7qg6",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=14) "deployment-171",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c4b629c-9476-4e8a-99c3-c520126a0e2d",
      ResourceVersion: (string) (len=5) "40456",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "184e4c3f-f62a-4078-b42c-e2c70ec2b360",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  34 65 34 63 33 66 2d 66  |d\":\"184e4c3f-f|
              00000090  36 32 61 2d 34 30 37 38  2d 62 34 32 63 2d 65 32  |62a-4078-b42c-e2|
              000000a0  63 37 30 65 63 32 62 33  36 30 5c 22 7d 22 3a 7b  |c70ec2b360\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 33 36 5c 22 7d  |10.233.66.136\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h7zld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h7zld",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828489320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828489320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828489321,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://e3f98a982cccea3153268fb1ad2aeb83422fe3625326e9b01a8dcfa2b2809670",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:55:32.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-171" for this suite. @ 08/24/23 15:55:32.886
• [21.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 08/24/23 15:55:32.909
  Aug 24 15:55:32.909: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename disruption @ 08/24/23 15:55:32.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:55:32.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:55:32.964
  STEP: creating the pdb @ 08/24/23 15:55:32.972
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:55:32.989
  E0824 15:55:33.055136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:34.055953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 08/24/23 15:55:35.015
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:55:35.04
  E0824 15:55:35.055495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:36.055810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:37.056940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 08/24/23 15:55:37.057
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:55:37.077
  STEP: Waiting for the pdb to be deleted @ 08/24/23 15:55:37.171
  Aug 24 15:55:37.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7563" for this suite. @ 08/24/23 15:55:37.188
• [4.297 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 08/24/23 15:55:37.208
  Aug 24 15:55:37.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename job @ 08/24/23 15:55:37.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:55:37.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:55:37.244
  STEP: Creating Indexed job @ 08/24/23 15:55:37.25
  STEP: Ensuring job reaches completions @ 08/24/23 15:55:37.268
  E0824 15:55:38.227632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:39.099848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:40.100146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:41.100721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:42.102220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:43.103007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:44.103222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:45.103409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:46.103731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:47.104147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 08/24/23 15:55:47.277
  Aug 24 15:55:47.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7849" for this suite. @ 08/24/23 15:55:47.298
• [10.108 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 08/24/23 15:55:47.32
  Aug 24 15:55:47.320: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:55:47.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:55:47.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:55:47.364
  STEP: Creating a ResourceQuota with best effort scope @ 08/24/23 15:55:47.37
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 15:55:47.38
  E0824 15:55:48.104809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:49.105194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 08/24/23 15:55:49.388
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 15:55:49.424
  E0824 15:55:50.105283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:51.106255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 08/24/23 15:55:51.431
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 08/24/23 15:55:51.45
  E0824 15:55:52.106469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:53.107388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 08/24/23 15:55:53.458
  E0824 15:55:54.107611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:55.107754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/24/23 15:55:55.466
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 15:55:55.488
  E0824 15:55:56.109186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:57.109181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 08/24/23 15:55:57.495
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 08/24/23 15:55:57.511
  E0824 15:55:58.109957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:59.110112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 08/24/23 15:55:59.52
  E0824 15:56:00.110543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:01.110746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/24/23 15:56:01.529
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 15:56:01.555
  E0824 15:56:02.111656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:03.112563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:03.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9383" for this suite. @ 08/24/23 15:56:03.571
• [16.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 08/24/23 15:56:03.589
  Aug 24 15:56:03.589: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 15:56:03.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:03.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:03.62
  STEP: Read namespace status @ 08/24/23 15:56:03.625
  Aug 24 15:56:03.630: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 08/24/23 15:56:03.63
  Aug 24 15:56:03.642: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 08/24/23 15:56:03.643
  Aug 24 15:56:03.657: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Aug 24 15:56:03.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8938" for this suite. @ 08/24/23 15:56:03.666
• [0.095 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 08/24/23 15:56:03.686
  Aug 24 15:56:03.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:56:03.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:03.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:03.721
  E0824 15:56:04.113338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:05.113909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:05.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:56:05.775: INFO: Deleting pod "var-expansion-ff76a142-2078-4785-b23e-3c84dfdadc7e" in namespace "var-expansion-5827"
  Aug 24 15:56:05.793: INFO: Wait up to 5m0s for pod "var-expansion-ff76a142-2078-4785-b23e-3c84dfdadc7e" to be fully deleted
  E0824 15:56:06.114163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:07.114364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-5827" for this suite. @ 08/24/23 15:56:07.807
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 08/24/23 15:56:07.82
  Aug 24 15:56:07.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:56:07.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:07.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:07.902
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 08/24/23 15:56:07.907
  Aug 24 15:56:07.908: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:56:08.114537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:09.114813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:10.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 15:56:10.115339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:11.115908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:12.116746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:13.117260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:14.117576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:15.117543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:16.118312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:17.118614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:17.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1932" for this suite. @ 08/24/23 15:56:17.567
• [9.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 08/24/23 15:56:17.596
  Aug 24 15:56:17.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:56:17.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:17.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:17.642
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:56:17.649
  E0824 15:56:18.122216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:19.122530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:20.123367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:21.123393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:56:21.692
  Aug 24 15:56:21.698: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-b1f49ace-1f5b-43ba-ac3f-1c0951d3171d container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:56:21.733
  Aug 24 15:56:21.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4620" for this suite. @ 08/24/23 15:56:21.782
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 08/24/23 15:56:21.837
  Aug 24 15:56:21.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:56:21.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:21.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:21.883
  STEP: Counting existing ResourceQuota @ 08/24/23 15:56:21.888
  E0824 15:56:22.123753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:23.124861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:24.124857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:25.125554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:26.125975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:56:26.894
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:56:26.902
  E0824 15:56:27.126384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:28.127451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:28.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5221" for this suite. @ 08/24/23 15:56:28.92
• [7.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 08/24/23 15:56:28.932
  Aug 24 15:56:28.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:56:28.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:28.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:28.964
  STEP: creating a ServiceAccount @ 08/24/23 15:56:28.967
  STEP: watching for the ServiceAccount to be added @ 08/24/23 15:56:28.979
  STEP: patching the ServiceAccount @ 08/24/23 15:56:28.984
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 08/24/23 15:56:28.994
  STEP: deleting the ServiceAccount @ 08/24/23 15:56:28.998
  Aug 24 15:56:29.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4356" for this suite. @ 08/24/23 15:56:29.04
• [0.120 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 08/24/23 15:56:29.053
  Aug 24 15:56:29.053: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:56:29.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:29.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:29.102
  STEP: Creating projection with secret that has name projected-secret-test-2f3bff36-a255-4534-bc02-9d51cb042d41 @ 08/24/23 15:56:29.109
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:56:29.115
  E0824 15:56:29.127729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:30.128635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:31.128875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:32.129339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:33.129607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:56:33.171
  Aug 24 15:56:33.176: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-secrets-fec1081e-2772-4331-8157-c8e931c7318f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:56:33.191
  Aug 24 15:56:33.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6123" for this suite. @ 08/24/23 15:56:33.226
• [4.186 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 08/24/23 15:56:33.24
  Aug 24 15:56:33.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 15:56:33.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:33.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:33.279
  Aug 24 15:56:33.306: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:56:34.130506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:35.130780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:36.131281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:37.132128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:38.132700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:39.132991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:40.134035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:41.134874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:42.135982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:43.137025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:44.137657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:45.137939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:46.138426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:47.138565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:48.139590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:49.140558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:50.140851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:51.140996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:52.141638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:53.141575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:54.141829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:55.142460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:56.143106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:57.143542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:58.143688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:59.143824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:00.143997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:01.144624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:02.144817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:03.144946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:04.145134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:05.145864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:06.145533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:07.145693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:08.146760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:09.147552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:10.147702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:11.148184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:12.149027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:13.149647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:14.149833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:15.150784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:16.151779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:17.152321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:18.152580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:19.153117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:20.153216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:21.153363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:22.153717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:23.154773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:24.155032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:25.155186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:26.155414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:27.155829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:28.156796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:29.157263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:30.157581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:31.157801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:32.158163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:33.158137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:33.359: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/24/23 15:57:33.38
  Aug 24 15:57:33.381: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/24/23 15:57:33.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:33.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:33.432
  STEP: Finding an available node @ 08/24/23 15:57:33.452
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/24/23 15:57:33.452
  E0824 15:57:34.159736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:35.159792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/24/23 15:57:35.495
  Aug 24 15:57:35.518: INFO: found a healthy node: eiyoo9ohd4ei-3
  E0824 15:57:36.169298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:37.170018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:38.171690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:39.171948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:40.182464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:41.174023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:41.671: INFO: pods created so far: [1 1 1]
  Aug 24 15:57:41.672: INFO: length of pods created so far: 3
  E0824 15:57:42.175032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:43.175853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:43.691: INFO: pods created so far: [2 2 1]
  E0824 15:57:44.176299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:45.176935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:46.177766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:47.177997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:48.179082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:49.179563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:50.179666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:50.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:57:50.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5466" for this suite. @ 08/24/23 15:57:50.831
  STEP: Destroying namespace "sched-preemption-2865" for this suite. @ 08/24/23 15:57:50.844
• [77.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 08/24/23 15:57:50.864
  Aug 24 15:57:50.864: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename job @ 08/24/23 15:57:50.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:50.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:50.902
  STEP: Creating a job @ 08/24/23 15:57:50.905
  STEP: Ensuring job reaches completions @ 08/24/23 15:57:50.913
  E0824 15:57:51.180226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:52.180759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:53.180964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:54.180964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:55.182005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:56.182221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:57.223227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:58.208315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:59.208620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:00.209230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:01.210592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:02.210654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:02.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-833" for this suite. @ 08/24/23 15:58:02.929
• [12.076 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 08/24/23 15:58:02.946
  Aug 24 15:58:02.946: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:58:02.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:58:02.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:58:02.981
  STEP: Creating pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619 @ 08/24/23 15:58:02.988
  E0824 15:58:03.210759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:04.211031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:58:05.019
  Aug 24 15:58:05.031: INFO: Initial restart count of pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 is 0
  Aug 24 15:58:05.037: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:05.211181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:06.211436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:07.044: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:07.211762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:08.213127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:09.050: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:09.212844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:10.213345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:11.058: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:11.213900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:12.213914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:13.066: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:13.214804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:14.215560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:15.077: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:15.216533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:16.216599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:17.106: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:17.216958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:18.217589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:19.114: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:19.217855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:20.218013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:21.124: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:21.218687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:22.218826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:23.130: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:23.219412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:24.219553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:25.142: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:25.219742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:26.219801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:27.148: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:27.220734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:28.220899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:29.157: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:29.221316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:30.221587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:31.164: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:31.222215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:32.222462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:33.171: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:33.223067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:34.223680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:35.178: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:35.224309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:36.224476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:37.185: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:37.225304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:38.226376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:39.191: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:39.227001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:40.229424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:41.199: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:41.230496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:42.230534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:43.207: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:43.231523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:44.231767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:45.214: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:45.232077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:46.232866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:47.222: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:47.233610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:48.233829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:49.230: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:49.234853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:50.235153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:51.236029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:51.240: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:52.237087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:53.237289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:53.249: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:54.238216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:55.238915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:55.256: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:56.239473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:57.239490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:57.265: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:58:58.239932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:59.240849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:58:59.273: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:00.241183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:01.241923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:01.283: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:02.241961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:03.242012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:03.289: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:04.242171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:05.242323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:05.297: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:06.242562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:07.242825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:07.304: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:08.242963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:09.243415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:09.310: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:10.243591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:11.243886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:11.318: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:12.244024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:13.244327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:13.325: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:14.244788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:15.245925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:15.331: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:16.246033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:17.246553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:17.338: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:18.246850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:19.246931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:19.346: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:20.247694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:21.248771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:21.356: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:22.249318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:23.249695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:23.364: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:24.250439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:25.251108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:25.372: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:26.251498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:27.251804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:27.380: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:28.251966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:29.252296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:29.386: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:30.252496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:31.252680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:31.395: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:32.253082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:33.253292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:33.401: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:34.254215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:35.254883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:35.407: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:36.255219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:37.255699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:37.437: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:38.255939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:39.256038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:39.445: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:40.256174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:41.256265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:41.455: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:42.256522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:43.257658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:43.463: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:44.257649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:45.257881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:45.471: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:46.258012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:47.258231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:47.477: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:48.258395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:49.258622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:49.484: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:50.258766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:51.258925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:51.499: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:52.259588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:53.260595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:53.507: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:54.261663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:55.261949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:55.516: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:56.262626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:57.262889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:57.525: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 15:59:58.263113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:59.263516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:59.532: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:00.263551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:01.264303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:01.540: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:02.264834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:03.264880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:03.549: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:04.265543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:05.265771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:05.557: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:06.265880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:07.266024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:07.564: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:08.266966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:09.267567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:09.572: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:10.267689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:11.268486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:11.581: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:12.268617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:13.269665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:13.586: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:14.270576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:15.270838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:15.593: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:16.271646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:17.271809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:17.599: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:18.272775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:19.272832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:19.607: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:20.273069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:21.273329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:21.615: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:22.273502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:23.273603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:23.623: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:24.273740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:25.274617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:25.631: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:26.274800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:27.275218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:27.639: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:28.275524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:29.275750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:29.645: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:30.275862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:31.276013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:31.655: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:32.276170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:33.277159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:33.661: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:34.277553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:35.277708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:35.669: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:36.277816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:37.277952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:37.677: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:38.278822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:39.279019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:39.685: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:40.279119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:41.279670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:41.693: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:42.280412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:43.280971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:43.701: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:44.281024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:45.281531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:45.708: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:46.281680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:47.282217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:47.715: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:48.282629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:49.283103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:49.723: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:50.283877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:51.284018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:51.731: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:52.284239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:53.284619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:53.737: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:54.284967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:55.285163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:55.744: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:56.285340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:57.285565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:57.750: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:00:58.286458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:00:59.286792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:59.757: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:00.287663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:01.288574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:01.765: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:02.288726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:03.288850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:03.773: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:04.288947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:05.289189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:05.780: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:06.290293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:07.290467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:07.787: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:08.291540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:09.291701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:09.795: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:10.291930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:11.292262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:11.803: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:12.292960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:13.294021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:13.810: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:14.294132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:15.294340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:15.816: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:16.295053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:17.295202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:17.825: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:18.295519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:19.295755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:19.832: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:20.296543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:21.296739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:21.840: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:22.296954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:23.297131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:23.848: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:24.297843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:25.298336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:25.858: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:26.298537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:27.299180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:27.865: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:28.299420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:29.299815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:29.872: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:30.300729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:31.301349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:31.880: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:32.301857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:33.302150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:33.887: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:34.302156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:35.303024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:35.892: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:36.303039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:37.303238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:37.899: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:38.304278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:39.304548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:39.908: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:40.304753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:41.305327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:41.915: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:42.305535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:43.306550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:43.922: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:44.306881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:45.307130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:45.930: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:46.307160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:47.307999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:47.937: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:48.308707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:49.309296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:49.945: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:50.310436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:51.311437      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:51.953: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:52.311145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:53.311368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:53.961: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:54.312297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:55.312571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:55.972: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:56.312619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:57.312708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:57.979: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:01:58.313090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:01:59.313291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:01:59.989: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:02:00.313448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:01.313563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:02:01.998: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:02:02.313845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:03.314160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:02:04.008: INFO: Get pod liveness-f487bf47-bf72-4e02-bff0-b30170748003 in namespace container-probe-1619
  E0824 16:02:04.315113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:05.315879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:02:06.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 16:02:06.019
  STEP: Destroying namespace "container-probe-1619" for this suite. @ 08/24/23 16:02:06.059
• [243.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 08/24/23 16:02:06.093
  Aug 24 16:02:06.093: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 16:02:06.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:02:06.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:02:06.134
  STEP: Creating a ReplaceConcurrent cronjob @ 08/24/23 16:02:06.138
  STEP: Ensuring a job is scheduled @ 08/24/23 16:02:06.151
  E0824 16:02:06.316629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:07.316981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:08.317203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:09.317261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:10.318090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:11.318346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:12.319300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:13.319363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:14.319933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:15.320537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:16.321204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:17.321500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:18.322400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:19.322758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:20.335008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:21.335112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:22.336169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:23.336180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:24.336965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:25.337074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:26.337539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:27.337775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:28.338623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:29.339079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:30.339844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:31.340220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:32.340684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:33.342024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:34.342433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:35.342530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:36.343810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:37.344627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:38.345646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:39.345814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:40.347075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:41.346273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:42.346846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:43.347706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:44.347789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:45.348060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:46.348581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:47.348758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:48.348812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:49.348980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:50.349550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:51.349667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:52.350175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:53.351361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:54.351869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:55.352023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:56.352544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:57.352803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:58.353584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:02:59.353763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:00.354506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:01.354707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 08/24/23 16:03:02.157
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/24/23 16:03:02.165
  STEP: Ensuring the job is replaced with a new one @ 08/24/23 16:03:02.176
  E0824 16:03:02.355864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:03.356671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:04.359644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:05.360276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:06.360838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:07.361092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:08.362181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:09.362881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:10.363913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:11.364222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:12.364710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:13.364730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:14.364837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:15.365180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:16.365768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:17.365888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:18.366135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:19.366206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:20.367238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:21.367207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:22.368067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:23.368160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:24.369144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:25.369439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:26.370440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:27.370809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:28.370689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:29.370957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:30.371918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:31.372060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:32.372299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:33.372759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:34.372916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:35.373334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:36.374104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:37.374649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:38.374826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:39.375504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:40.375608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:41.376588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:42.377300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:43.377329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:44.378197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:45.378801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:46.379237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:47.379835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:48.380509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:49.380753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:50.381806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:51.382561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:52.383747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:53.384636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:54.385718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:55.385892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:56.386560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:57.386781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:58.387431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:03:59.387656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 08/24/23 16:04:00.206
  Aug 24 16:04:00.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1752" for this suite. @ 08/24/23 16:04:00.256
• [114.175 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 08/24/23 16:04:00.269
  Aug 24 16:04:00.269: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename gc @ 08/24/23 16:04:00.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:04:00.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:04:00.317
  STEP: create the rc @ 08/24/23 16:04:00.333
  W0824 16:04:00.360792      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0824 16:04:00.388205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:01.388360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:02.639670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:03.442504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:04.462441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:05.615783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:06.617325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/24/23 16:04:06.821
  STEP: wait for the rc to be deleted @ 08/24/23 16:04:07.086
  E0824 16:04:07.619634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:08.358: INFO: 89 pods remaining
  Aug 24 16:04:08.362: INFO: 80 pods has nil DeletionTimestamp
  Aug 24 16:04:08.362: INFO: 
  E0824 16:04:08.621080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:09.622445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:10.193: INFO: 83 pods remaining
  Aug 24 16:04:10.206: INFO: 66 pods has nil DeletionTimestamp
  Aug 24 16:04:10.206: INFO: 
  E0824 16:04:10.659607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:11.339: INFO: 71 pods remaining
  Aug 24 16:04:11.344: INFO: 43 pods has nil DeletionTimestamp
  Aug 24 16:04:11.344: INFO: 
  E0824 16:04:11.645030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:12.528: INFO: 66 pods remaining
  Aug 24 16:04:12.535: INFO: 26 pods has nil DeletionTimestamp
  Aug 24 16:04:12.535: INFO: 
  E0824 16:04:12.645830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:13.659476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:13.756: INFO: 60 pods remaining
  Aug 24 16:04:13.756: INFO: 15 pods has nil DeletionTimestamp
  Aug 24 16:04:13.756: INFO: 
  E0824 16:04:14.655563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:15.450: INFO: 51 pods remaining
  Aug 24 16:04:15.451: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:15.451: INFO: 
  E0824 16:04:15.683613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:16.282: INFO: 43 pods remaining
  Aug 24 16:04:16.282: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:16.282: INFO: 
  E0824 16:04:16.683817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:17.135: INFO: 37 pods remaining
  Aug 24 16:04:17.136: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:17.136: INFO: 
  E0824 16:04:17.684944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:18.206: INFO: 31 pods remaining
  Aug 24 16:04:18.206: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:18.207: INFO: 
  E0824 16:04:18.685880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:19.145: INFO: 25 pods remaining
  Aug 24 16:04:19.146: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:19.146: INFO: 
  E0824 16:04:19.686147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:20.242: INFO: 17 pods remaining
  Aug 24 16:04:20.243: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:20.243: INFO: 
  E0824 16:04:20.686840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:21.116: INFO: 10 pods remaining
  Aug 24 16:04:21.116: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:21.116: INFO: 
  E0824 16:04:21.688915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:22.111: INFO: 2 pods remaining
  Aug 24 16:04:22.111: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:22.111: INFO: 
  E0824 16:04:22.688658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:23.102: INFO: 0 pods remaining
  Aug 24 16:04:23.102: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 16:04:23.102: INFO: 
  E0824 16:04:23.689218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/24/23 16:04:24.097
  E0824 16:04:24.689159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:24.831: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 16:04:24.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6750" for this suite. @ 08/24/23 16:04:24.847
• [24.639 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 08/24/23 16:04:24.913
  Aug 24 16:04:24.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 16:04:24.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:04:25.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:04:25.656
  E0824 16:04:25.689467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:04:25.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 16:04:26.690020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:27.690057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:28.690224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0824 16:04:28.787628      14 warnings.go:70] unknown field "alpha"
  W0824 16:04:28.787926      14 warnings.go:70] unknown field "beta"
  W0824 16:04:28.788078      14 warnings.go:70] unknown field "delta"
  W0824 16:04:28.788244      14 warnings.go:70] unknown field "epsilon"
  W0824 16:04:28.788392      14 warnings.go:70] unknown field "gamma"
  Aug 24 16:04:29.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 16:04:29.691103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "field-validation-5079" for this suite. @ 08/24/23 16:04:29.788
• [4.906 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 08/24/23 16:04:29.823
  Aug 24 16:04:29.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename events @ 08/24/23 16:04:29.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:04:29.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:04:29.906
  STEP: Create set of events @ 08/24/23 16:04:29.911
  STEP: get a list of Events with a label in the current namespace @ 08/24/23 16:04:29.95
  STEP: delete a list of events @ 08/24/23 16:04:29.967
  Aug 24 16:04:29.968: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/24/23 16:04:30.08
  Aug 24 16:04:30.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-914" for this suite. @ 08/24/23 16:04:30.098
• [0.298 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 08/24/23 16:04:30.122
  Aug 24 16:04:30.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 16:04:30.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:04:30.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:04:30.197
  STEP: Creating configMap configmap-7017/configmap-test-d2c2dcd5-17f5-40a5-a7d6-b97a2a5ce8d5 @ 08/24/23 16:04:30.205
  STEP: Creating a pod to test consume configMaps @ 08/24/23 16:04:30.269
  E0824 16:04:30.691551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:31.691607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:32.692664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:33.692759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:04:34.359
  Aug 24 16:04:34.366: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-78a593fc-31f3-4658-8d3c-6f6560afa072 container env-test: <nil>
  STEP: delete the pod @ 08/24/23 16:04:34.408
  Aug 24 16:04:34.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7017" for this suite. @ 08/24/23 16:04:34.472
• [4.373 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 08/24/23 16:04:34.496
  Aug 24 16:04:34.496: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 16:04:34.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:04:34.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:04:34.557
  STEP: Creating a ForbidConcurrent cronjob @ 08/24/23 16:04:34.564
  STEP: Ensuring a job is scheduled @ 08/24/23 16:04:34.576
  E0824 16:04:34.693849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:35.693995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:36.694307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:37.694516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:38.695148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:39.695773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:40.696088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:41.696262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:42.696819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:43.697208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:44.697218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:45.698017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:46.698053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:47.698738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:48.698898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:49.699475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:50.699895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:51.700138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:52.701411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:53.701483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:54.702277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:55.702496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:56.702984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:57.703463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:58.704204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:04:59.704380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 08/24/23 16:05:00.584
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/24/23 16:05:00.593
  STEP: Ensuring no more jobs are scheduled @ 08/24/23 16:05:00.598
  E0824 16:05:00.746343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:01.719101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:02.719066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:03.719752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:04.720509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:05.721167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:06.721777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:07.722438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:08.723298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:09.724287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:10.725196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:11.725750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:12.726486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:13.726557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:14.726631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:15.726715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:16.727361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:17.727627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:18.727922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:19.727962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:20.729013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:21.729445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:22.729281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:23.729765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:24.729538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:25.729733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:26.730272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:27.730729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:28.731229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:29.731676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:30.732691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:31.733142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:32.733365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:33.733600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:34.733502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:35.733768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:36.734268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:37.734473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:38.735491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:39.736107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:40.736094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:41.736325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:42.736445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:43.736729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:44.737738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:45.738228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:46.738489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:47.739597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:48.740068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:49.740430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:50.740959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:51.741209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:52.741943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:53.742061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:54.742985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:55.743083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:56.743688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:57.744374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:58.744427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:05:59.744887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:00.745772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:01.746082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:02.746534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:03.747127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:04.748230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:05.748405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:06.748521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:07.749759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:08.749949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:09.750147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:10.750625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:11.751226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:12.752230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:13.752381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:14.752671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:15.752930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:16.753670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:17.754500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:18.755517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:19.755984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:20.756711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:21.756990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:22.757844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:23.758731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:24.759672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:25.760289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:26.761004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:27.761471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:28.762256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:29.762517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:30.762706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:31.762898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:32.763577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:33.763651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:34.764398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:35.764495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:36.765526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:37.765594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:38.765877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:39.766633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:40.768069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:41.767069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:42.767818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:43.767984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:44.768140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:45.768317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:46.769049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:47.769301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:48.769967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:49.770151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:50.770613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:51.770823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:52.771228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:53.771588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:54.772341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:55.772598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:56.772656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:57.773195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:58.774319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:06:59.775505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:00.777220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:01.775823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:02.776440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:03.777022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:04.778084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:05.778682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:06.779619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:07.780642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:08.780815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:09.780986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:10.781227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:11.781432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:12.782474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:13.782733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:14.783558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:15.783880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:16.784663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:17.785282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:18.786209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:19.786720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:20.787322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:21.787576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:22.788636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:23.802138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:24.795634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:25.795555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:26.796439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:27.797078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:28.797809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:29.798525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:30.799291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:31.800087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:32.800733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:33.802956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:34.802602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:35.802703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:36.803807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:37.803820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:38.804409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:39.804720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:40.804744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:41.805153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:42.805758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:43.806877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:44.807727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:45.808021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:46.808098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:47.808419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:48.809370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:49.810092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:50.810438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:51.810604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:52.811303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:53.811586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:54.812767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:55.813215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:56.813518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:57.814979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:58.815495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:07:59.815828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:00.815894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:01.816907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:02.817888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:03.818166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:04.821366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:05.820043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:06.820908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:07.821679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:08.822277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:09.822824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:10.823500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:11.824102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:12.824162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:13.824444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:14.824673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:15.824754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:16.825886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:17.826494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:18.826698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:19.826973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:20.827139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:21.827650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:22.828459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:23.828741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:24.828999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:25.829082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:26.829530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:27.829607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:28.830208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:29.830269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:30.831071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:31.831420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:32.831628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:33.832388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:34.833506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:35.833989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:36.835057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:37.835517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:38.836135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:39.836368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:40.837649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:41.836741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:42.837497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:43.837719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:44.838653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:45.838839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:46.839128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:47.839321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:48.839545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:49.840078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:50.840157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:51.840641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:52.841629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:53.842335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:54.843422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:55.843559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:56.844699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:57.845478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:58.846531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:08:59.847114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:00.847726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:01.847799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:02.847995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:03.848700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:04.848905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:05.849042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:06.850038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:07.850188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:08.851419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:09.851532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:10.852457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:11.852856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:12.853829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:13.854033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:14.854915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:15.855106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:16.855314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:17.856110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:18.856224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:19.856757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:20.857530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:21.858153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:22.858781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:23.859325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:24.859610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:25.860243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:26.860945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:27.861807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:28.861855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:29.862069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:30.863136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:31.863706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:32.864213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:33.864747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:34.865558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:35.865749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:36.866225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:37.866330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:38.866453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:39.867597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:40.867945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:41.868558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:42.869392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:43.869585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:44.870509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:45.870743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:46.871529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:47.872441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:48.872808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:49.873146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:50.873889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:51.874553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:52.874677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:53.874972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:54.875444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:55.875793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:56.876599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:57.877328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:58.877730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:09:59.878068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 08/24/23 16:10:00.617
  Aug 24 16:10:00.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5629" for this suite. @ 08/24/23 16:10:00.652
• [326.172 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 08/24/23 16:10:00.674
  Aug 24 16:10:00.674: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 16:10:00.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:10:00.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:10:00.73
  STEP: Creating pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985 @ 08/24/23 16:10:00.735
  E0824 16:10:00.878595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:01.879894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 16:10:02.762
  Aug 24 16:10:02.769: INFO: Initial restart count of pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 is 0
  Aug 24 16:10:02.776: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:02.880008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:03.880339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:04.784: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:04.880230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:05.880808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:06.793: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:06.881673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:07.882376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:08.800: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:08.883202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:09.883160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:10.811: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:10.883663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:11.883557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:12.825: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:12.885529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:13.885783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:14.831: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:14.886961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:15.887530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:16.839: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:16.888399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:17.889472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:18.846: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:18.890615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:19.890541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:20.857: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:20.899406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:21.892268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:22.868: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:22.892345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:23.892803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:24.876: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:24.893934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:25.894164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:26.883: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:26.894449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:27.894884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:28.892: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:28.895630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:29.895896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:30.896765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:30.902: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:31.897009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:32.898117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:32.910: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:33.899366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:34.898830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:34.918: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:35.899243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:36.899869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:36.927: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:37.899632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:38.900159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:38.935: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:39.900643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:40.904199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:40.947: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:41.901282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:42.901959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:42.954: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:43.902004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:44.902223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:44.962: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:45.906180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:46.903779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:46.972: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:47.904527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:48.904721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:48.980: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:49.904740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:50.904981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:50.991: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:51.905475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:52.905524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:52.997: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:53.906305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:54.906520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:55.014: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:55.906764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:56.906941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:57.022: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:57.907826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:10:58.908066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:10:59.029: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:10:59.908087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:00.908351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:01.038: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:01.909290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:02.909775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:03.046: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:03.910194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:04.910159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:05.077: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:05.910291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:06.910402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:07.088: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:07.911396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:08.911760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:09.141: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:09.911829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:10.912058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:11.150: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:11.912508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:12.912948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:13.159: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:13.913498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:14.913914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:15.168: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:15.913971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:16.914536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:17.175: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:17.914601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:18.915306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:19.183: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:19.915670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:20.916087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:21.192: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:21.916479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:22.916671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:23.200: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:23.916985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:24.917756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:25.207: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:25.918832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:26.919936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:27.215: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:27.920117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:28.920795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:29.220: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:29.921431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:30.922055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:31.230: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:31.923177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:32.923624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:33.240: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:33.923978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:34.924956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:35.249: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:35.925371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:36.925482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:37.260: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:37.926597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:38.927144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:39.268: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:39.927587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:40.927843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:41.280: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:41.928789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:42.929036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:43.288: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:43.929169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:44.929328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:45.297: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:45.929527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:46.929659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:47.303: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:47.930518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:48.930727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:49.312: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:49.931532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:50.932373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:51.321: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:51.933325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:52.934283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:53.328: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:53.934477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:54.934923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:55.337: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:55.935011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:56.935695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:57.344: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:57.936533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:11:58.937195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:11:59.353: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:11:59.938162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:00.938409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:01.363: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:01.939507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:02.939638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:03.372: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:03.940352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:04.940494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:05.381: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:05.940864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:06.941442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:07.387: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:07.942364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:08.943563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:09.393: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:09.944164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:10.944261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:11.403: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:11.944421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:12.944522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:13.416: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:13.944860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:14.945381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:15.424: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:15.946257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:16.946922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:17.430: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:17.947451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:18.947985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:19.436: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:19.948049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:20.948226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:21.445: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:21.948903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:22.949108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:23.452: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:23.949298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:24.949504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:25.460: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:25.949632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:26.950143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:27.466: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:27.950293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:28.950990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:29.473: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:29.951954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:30.952075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:31.482: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:31.952814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:32.953886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:33.488: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:33.954278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:34.954395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:35.495: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:35.955064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:36.955597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:37.502: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:37.955785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:38.956655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:39.509: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:39.957669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:40.957867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:41.519: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:41.958026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:42.958899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:43.526: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:43.959068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:44.959486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:45.533: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:45.959817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:46.959960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:47.541: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:47.960023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:48.960704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:49.548: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:49.960799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:50.967969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:51.558: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:51.964007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:52.964169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:53.565: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:53.965175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:54.965460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:55.572: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:55.965588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:56.968440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:57.580: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:57.968394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:12:58.968571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:12:59.586: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:12:59.969278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:00.969499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:01.598: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:01.970332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:02.971204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:03.606: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:03.971516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:04.971710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:05.615: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:05.972126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:06.972496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:07.623: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:07.973460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:08.973478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:09.635: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:09.974112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:10.974465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:11.646: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:11.975100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:12.975251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:13.653: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:13.975814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:14.976271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:15.660: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:15.978883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:16.978421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:17.670: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:17.978854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:18.979033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:19.677: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:19.979845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:20.980145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:21.685: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:21.981310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:22.982292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:23.692: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:23.982469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:24.982853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:25.700: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:25.983664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:26.984748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:27.706: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:27.985128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:28.985404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:29.715: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:29.985502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:30.985733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:31.723: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:31.985684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:32.986498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:33.730: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:33.987225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:34.987919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:35.739: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:35.988155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:36.988943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:37.747: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:37.989600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:38.989798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:39.754: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:39.990343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:40.990365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:41.763: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:41.991405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:42.992107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:43.770: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:43.992985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:44.993382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:45.778: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:45.994004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:46.994412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:47.786: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:47.994989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:48.995651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:49.792: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:49.996020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:50.996605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:51.801: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:51.997683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:52.998354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:53.809: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:53.998595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:54.999228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:55.817: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:56.000246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:57.001032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:57.825: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:13:58.001744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:13:59.001804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:13:59.833: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:14:00.001887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:01.002892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:01.841: INFO: Get pod test-webserver-f536b1b6-80e9-4a11-ac2c-834d045bbc13 in namespace container-probe-7985
  E0824 16:14:02.002958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:03.003860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:03.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 16:14:03.85
  STEP: Destroying namespace "container-probe-7985" for this suite. @ 08/24/23 16:14:03.877
• [243.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 08/24/23 16:14:03.906
  Aug 24 16:14:03.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename gc @ 08/24/23 16:14:03.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:14:03.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:14:03.953
  STEP: create the deployment @ 08/24/23 16:14:03.957
  W0824 16:14:03.969237      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/24/23 16:14:03.969
  E0824 16:14:04.003919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 08/24/23 16:14:04.485
  STEP: wait for all rs to be garbage collected @ 08/24/23 16:14:04.502
  STEP: expected 0 rs, got 1 rs @ 08/24/23 16:14:04.508
  STEP: expected 0 pods, got 2 pods @ 08/24/23 16:14:04.513
  E0824 16:14:05.004589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/24/23 16:14:05.045
  Aug 24 16:14:05.238: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 16:14:05.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2413" for this suite. @ 08/24/23 16:14:05.251
• [1.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 08/24/23 16:14:05.266
  Aug 24 16:14:05.266: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 16:14:05.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:14:05.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:14:05.306
  STEP: starting the proxy server @ 08/24/23 16:14:05.309
  Aug 24 16:14:05.310: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-2004 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 08/24/23 16:14:05.439
  Aug 24 16:14:05.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2004" for this suite. @ 08/24/23 16:14:05.464
• [0.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 08/24/23 16:14:05.474
  Aug 24 16:14:05.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 16:14:05.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:14:05.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:14:05.507
  STEP: creating service endpoint-test2 in namespace services-2259 @ 08/24/23 16:14:05.514
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2259 to expose endpoints map[] @ 08/24/23 16:14:05.535
  Aug 24 16:14:05.546: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0824 16:14:06.006018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:06.563: INFO: successfully validated that service endpoint-test2 in namespace services-2259 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2259 @ 08/24/23 16:14:06.564
  E0824 16:14:07.006405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:08.006756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2259 to expose endpoints map[pod1:[80]] @ 08/24/23 16:14:08.609
  Aug 24 16:14:08.626: INFO: successfully validated that service endpoint-test2 in namespace services-2259 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 08/24/23 16:14:08.626
  Aug 24 16:14:08.626: INFO: Creating new exec pod
  E0824 16:14:09.007624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:10.007698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:11.008033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:11.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-2259 exec execpodwg68t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0824 16:14:12.008482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:12.021: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 24 16:14:12.021: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:14:12.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-2259 exec execpodwg68t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.223 80'
  Aug 24 16:14:12.277: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.223 80\nConnection to 10.233.7.223 80 port [tcp/http] succeeded!\n"
  Aug 24 16:14:12.277: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2259 @ 08/24/23 16:14:12.277
  E0824 16:14:13.009383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:14.009856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:15.009955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:16.010467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2259 to expose endpoints map[pod1:[80] pod2:[80]] @ 08/24/23 16:14:16.309
  Aug 24 16:14:16.330: INFO: successfully validated that service endpoint-test2 in namespace services-2259 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 08/24/23 16:14:16.331
  E0824 16:14:17.010806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:17.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-2259 exec execpodwg68t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 24 16:14:17.623: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 24 16:14:17.624: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:14:17.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-2259 exec execpodwg68t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.223 80'
  Aug 24 16:14:17.891: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.223 80\nConnection to 10.233.7.223 80 port [tcp/http] succeeded!\n"
  Aug 24 16:14:17.892: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2259 @ 08/24/23 16:14:17.892
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2259 to expose endpoints map[pod2:[80]] @ 08/24/23 16:14:17.918
  E0824 16:14:18.010719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:18.976: INFO: successfully validated that service endpoint-test2 in namespace services-2259 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 08/24/23 16:14:18.976
  E0824 16:14:19.011783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:19.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-2259 exec execpodwg68t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0824 16:14:20.012178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:20.219: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 24 16:14:20.219: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:14:20.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-2259 exec execpodwg68t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.223 80'
  Aug 24 16:14:20.517: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.223 80\nConnection to 10.233.7.223 80 port [tcp/http] succeeded!\n"
  Aug 24 16:14:20.517: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2259 @ 08/24/23 16:14:20.517
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2259 to expose endpoints map[] @ 08/24/23 16:14:20.558
  Aug 24 16:14:20.585: INFO: successfully validated that service endpoint-test2 in namespace services-2259 exposes endpoints map[]
  Aug 24 16:14:20.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2259" for this suite. @ 08/24/23 16:14:20.627
• [15.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 08/24/23 16:14:20.645
  Aug 24 16:14:20.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:14:20.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:14:20.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:14:20.694
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 16:14:20.699
  E0824 16:14:21.013212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:22.013454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:23.013632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:24.014490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:14:24.739
  Aug 24 16:14:24.745: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-367b69b5-39c3-44d1-9861-247d0ffa0246 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 16:14:24.778
  Aug 24 16:14:24.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7659" for this suite. @ 08/24/23 16:14:24.817
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 08/24/23 16:14:24.835
  Aug 24 16:14:24.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 16:14:24.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:14:24.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:14:24.876
  STEP: Creating service test in namespace statefulset-464 @ 08/24/23 16:14:24.882
  STEP: Creating statefulset ss in namespace statefulset-464 @ 08/24/23 16:14:24.899
  Aug 24 16:14:24.915: INFO: Found 0 stateful pods, waiting for 1
  E0824 16:14:25.015508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:26.015726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:27.015895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:28.016882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:29.017739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:30.017988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:31.018586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:32.018736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:33.019048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:34.019188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:34.922: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 08/24/23 16:14:34.932
  STEP: updating a scale subresource @ 08/24/23 16:14:34.936
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/24/23 16:14:34.946
  STEP: Patch a scale subresource @ 08/24/23 16:14:34.95
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/24/23 16:14:34.963
  Aug 24 16:14:34.969: INFO: Deleting all statefulset in ns statefulset-464
  Aug 24 16:14:34.974: INFO: Scaling statefulset ss to 0
  E0824 16:14:35.019344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:36.019478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:37.019954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:38.020358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:39.020904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:40.021227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:41.022119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:42.024627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:43.022491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:44.022865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:45.015: INFO: Waiting for statefulset status.replicas updated to 0
  E0824 16:14:45.023604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:45.023: INFO: Deleting statefulset ss
  Aug 24 16:14:45.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-464" for this suite. @ 08/24/23 16:14:45.054
• [20.239 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 08/24/23 16:14:45.079
  Aug 24 16:14:45.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 16:14:45.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:14:45.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:14:45.124
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 16:14:45.138
  E0824 16:14:46.023962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:47.024210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:48.024270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:49.024475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/24/23 16:14:49.174
  E0824 16:14:50.024509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:51.025314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:52.025509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:53.026483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 08/24/23 16:14:53.212
  STEP: delete the pod with lifecycle hook @ 08/24/23 16:14:53.24
  E0824 16:14:54.026793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:55.027716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:55.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2646" for this suite. @ 08/24/23 16:14:55.277
• [10.211 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 08/24/23 16:14:55.293
  Aug 24 16:14:55.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 16:14:55.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:14:55.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:14:55.33
  STEP: Setting up server cert @ 08/24/23 16:14:55.367
  E0824 16:14:56.028574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 16:14:56.44
  STEP: Deploying the webhook pod @ 08/24/23 16:14:56.454
  STEP: Wait for the deployment to be ready @ 08/24/23 16:14:56.472
  Aug 24 16:14:56.510: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 16:14:57.028930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:14:58.029727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 16:14:58.527
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 16:14:58.546
  E0824 16:14:59.030661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:14:59.546: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/24/23 16:14:59.563
  STEP: create a pod that should be denied by the webhook @ 08/24/23 16:14:59.598
  STEP: create a pod that causes the webhook to hang @ 08/24/23 16:14:59.621
  E0824 16:15:00.031392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:01.031627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:02.036460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:03.034811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:04.034660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:05.034878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:06.035034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:07.035328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:08.035637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:09.035656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 08/24/23 16:15:09.634
  STEP: create a configmap that should be admitted by the webhook @ 08/24/23 16:15:09.676
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/24/23 16:15:09.694
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/24/23 16:15:09.708
  STEP: create a namespace that bypass the webhook @ 08/24/23 16:15:09.721
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 08/24/23 16:15:09.749
  Aug 24 16:15:09.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9517" for this suite. @ 08/24/23 16:15:09.872
  STEP: Destroying namespace "webhook-markers-6869" for this suite. @ 08/24/23 16:15:09.887
  STEP: Destroying namespace "exempted-namespace-3304" for this suite. @ 08/24/23 16:15:09.92
• [14.661 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 08/24/23 16:15:09.956
  Aug 24 16:15:09.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 16:15:09.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:10.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:10.027
  Aug 24 16:15:10.031: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  E0824 16:15:10.036316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:15:10.053: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 16:15:10.059: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-1 before test
  Aug 24 16:15:10.072: INFO: cilium-249jg from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 16:15:10.072: INFO: cilium-node-init-c95pq from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 16:15:10.072: INFO: kube-addon-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 16:15:10.072: INFO: kube-apiserver-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 16:15:10.072: INFO: kube-controller-manager-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 16:15:10.072: INFO: kube-proxy-5qdnk from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 16:15:10.072: INFO: kube-scheduler-eiyoo9ohd4ei-1 from kube-system started at 2023-08-24 14:24:13 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 16:15:10.072: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-rzlvs from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 16:15:10.072: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 16:15:10.072: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 16:15:10.072: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-2 before test
  Aug 24 16:15:10.090: INFO: cilium-dhltd from kube-system started at 2023-08-24 14:10:38 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.091: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 16:15:10.091: INFO: cilium-node-init-6p2dn from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.092: INFO: 	Container node-init ready: true, restart count 1
  Aug 24 16:15:10.092: INFO: cilium-operator-7d96878f5-db9bp from kube-system started at 2023-08-24 14:10:37 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.092: INFO: 	Container cilium-operator ready: true, restart count 7
  Aug 24 16:15:10.093: INFO: coredns-5dd5756b68-7j9vk from kube-system started at 2023-08-24 14:24:52 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.093: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 16:15:10.093: INFO: coredns-5dd5756b68-chvhm from kube-system started at 2023-08-24 14:25:06 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.094: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 16:15:10.094: INFO: kube-addon-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.094: INFO: 	Container kube-addon-manager ready: true, restart count 2
  Aug 24 16:15:10.095: INFO: kube-apiserver-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.095: INFO: 	Container kube-apiserver ready: true, restart count 1
  Aug 24 16:15:10.095: INFO: kube-controller-manager-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.096: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Aug 24 16:15:10.096: INFO: kube-proxy-92pnj from kube-system started at 2023-08-24 14:24:12 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.097: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 16:15:10.097: INFO: kube-scheduler-eiyoo9ohd4ei-2 from kube-system started at 2023-08-24 14:24:33 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.098: INFO: 	Container kube-scheduler ready: true, restart count 1
  Aug 24 16:15:10.098: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-7j6r9 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 16:15:10.099: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 16:15:10.099: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 16:15:10.100: INFO: 
  Logging pods the apiserver thinks is on node eiyoo9ohd4ei-3 before test
  Aug 24 16:15:10.117: INFO: cilium-kzxs7 from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.117: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 16:15:10.118: INFO: cilium-node-init-k898v from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.118: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 16:15:10.118: INFO: kube-proxy-7z2wb from kube-system started at 2023-08-24 14:25:10 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.118: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 16:15:10.118: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:43:41 +0000 UTC (1 container statuses recorded)
  Aug 24 16:15:10.119: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 16:15:10.119: INFO: sonobuoy-e2e-job-54beda60178f4a68 from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 16:15:10.119: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 16:15:10.119: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 16:15:10.119: INFO: sonobuoy-systemd-logs-daemon-set-5a2448e2fdcb43fd-g4xff from sonobuoy started at 2023-08-24 14:43:51 +0000 UTC (2 container statuses recorded)
  Aug 24 16:15:10.120: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 16:15:10.120: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 08/24/23 16:15:10.12
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.177e5ddc2d765665], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 08/24/23 16:15:10.199
  E0824 16:15:11.036703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:15:11.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-773" for this suite. @ 08/24/23 16:15:11.188
• [1.245 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 08/24/23 16:15:11.205
  Aug 24 16:15:11.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename containers @ 08/24/23 16:15:11.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:11.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:11.255
  E0824 16:15:12.037494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:13.037790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:15:13.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6029" for this suite. @ 08/24/23 16:15:13.308
• [2.114 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 08/24/23 16:15:13.32
  Aug 24 16:15:13.320: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 16:15:13.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:13.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:13.361
  Aug 24 16:15:13.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5747" for this suite. @ 08/24/23 16:15:13.467
• [0.156 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 08/24/23 16:15:13.475
  Aug 24 16:15:13.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 16:15:13.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:13.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:13.512
  STEP: Setting up server cert @ 08/24/23 16:15:13.556
  E0824 16:15:14.038639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 16:15:14.15
  STEP: Deploying the webhook pod @ 08/24/23 16:15:14.158
  STEP: Wait for the deployment to be ready @ 08/24/23 16:15:14.175
  Aug 24 16:15:14.189: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 16:15:15.038912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:16.039560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 16:15:16.208
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 16:15:16.225
  E0824 16:15:17.041019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:15:17.225: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 08/24/23 16:15:17.235
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 16:15:17.264
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 08/24/23 16:15:17.284
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 16:15:17.3
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 08/24/23 16:15:17.316
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 16:15:17.329
  Aug 24 16:15:17.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8379" for this suite. @ 08/24/23 16:15:17.516
  STEP: Destroying namespace "webhook-markers-1820" for this suite. @ 08/24/23 16:15:17.526
• [4.066 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 08/24/23 16:15:17.544
  Aug 24 16:15:17.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 16:15:17.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:17.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:17.577
  Aug 24 16:15:17.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5832" for this suite. @ 08/24/23 16:15:17.643
• [0.110 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 08/24/23 16:15:17.657
  Aug 24 16:15:17.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename subpath @ 08/24/23 16:15:17.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:17.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:17.69
  STEP: Setting up data @ 08/24/23 16:15:17.695
  STEP: Creating pod pod-subpath-test-downwardapi-ntqk @ 08/24/23 16:15:17.708
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 16:15:17.709
  E0824 16:15:18.041153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:19.042013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:20.042424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:21.042571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:22.043340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:23.043820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:24.045996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:25.045411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:26.046447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:27.046558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:28.046764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:29.046865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:30.047571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:31.047738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:32.048386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:33.048294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:34.049022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:35.049245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:36.049148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:37.049789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:38.050474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:39.050753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:40.051332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:41.051536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:15:41.829
  Aug 24 16:15:41.834: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-subpath-test-downwardapi-ntqk container test-container-subpath-downwardapi-ntqk: <nil>
  STEP: delete the pod @ 08/24/23 16:15:41.847
  STEP: Deleting pod pod-subpath-test-downwardapi-ntqk @ 08/24/23 16:15:41.873
  Aug 24 16:15:41.873: INFO: Deleting pod "pod-subpath-test-downwardapi-ntqk" in namespace "subpath-3842"
  Aug 24 16:15:41.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3842" for this suite. @ 08/24/23 16:15:41.886
• [24.240 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 08/24/23 16:15:41.899
  Aug 24 16:15:41.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 16:15:41.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:41.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:41.941
  STEP: creating service in namespace services-6048 @ 08/24/23 16:15:41.945
  STEP: creating service affinity-clusterip-transition in namespace services-6048 @ 08/24/23 16:15:41.945
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6048 @ 08/24/23 16:15:41.961
  I0824 16:15:41.972838      14 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-6048, replica count: 3
  E0824 16:15:42.053027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:43.053120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:44.053521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 16:15:45.024391      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 16:15:45.054: INFO: Creating new exec pod
  E0824 16:15:45.054714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:46.054701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:47.054800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:48.055379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:15:48.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-6048 exec execpod-affinitydrs7j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Aug 24 16:15:48.414: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Aug 24 16:15:48.414: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:15:48.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-6048 exec execpod-affinitydrs7j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.18.243 80'
  Aug 24 16:15:48.678: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.18.243 80\nConnection to 10.233.18.243 80 port [tcp/http] succeeded!\n"
  Aug 24 16:15:48.678: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:15:48.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-6048 exec execpod-affinitydrs7j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.18.243:80/ ; done'
  E0824 16:15:49.056036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:15:49.147: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n"
  Aug 24 16:15:49.147: INFO: stdout: "\naffinity-clusterip-transition-fq85r\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-fq85r\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-f7rjv\naffinity-clusterip-transition-fq85r\naffinity-clusterip-transition-f7rjv\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-f7rjv\naffinity-clusterip-transition-fq85r\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-fq85r\naffinity-clusterip-transition-f7rjv\naffinity-clusterip-transition-f7rjv\naffinity-clusterip-transition-fq85r\naffinity-clusterip-transition-fq85r"
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-fq85r
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-fq85r
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-f7rjv
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-fq85r
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-f7rjv
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-f7rjv
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-fq85r
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-fq85r
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-f7rjv
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-f7rjv
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-fq85r
  Aug 24 16:15:49.147: INFO: Received response from host: affinity-clusterip-transition-fq85r
  Aug 24 16:15:49.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-6048 exec execpod-affinitydrs7j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.18.243:80/ ; done'
  Aug 24 16:15:49.651: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.18.243:80/\n"
  Aug 24 16:15:49.651: INFO: stdout: "\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l\naffinity-clusterip-transition-hc56l"
  Aug 24 16:15:49.651: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.651: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Received response from host: affinity-clusterip-transition-hc56l
  Aug 24 16:15:49.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 16:15:49.659: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6048, will wait for the garbage collector to delete the pods @ 08/24/23 16:15:49.68
  Aug 24 16:15:49.758: INFO: Deleting ReplicationController affinity-clusterip-transition took: 11.950095ms
  Aug 24 16:15:49.858: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.190542ms
  E0824 16:15:50.056535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:51.056999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:52.057243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:53.057322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-6048" for this suite. @ 08/24/23 16:15:53.188
• [11.300 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 08/24/23 16:15:53.202
  Aug 24 16:15:53.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 16:15:53.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:53.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:53.233
  E0824 16:15:54.057735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:55.058184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:15:55.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8698" for this suite. @ 08/24/23 16:15:55.331
• [2.145 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 08/24/23 16:15:55.348
  Aug 24 16:15:55.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 16:15:55.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:55.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:55.384
  Aug 24 16:15:55.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7069" for this suite. @ 08/24/23 16:15:55.452
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 08/24/23 16:15:55.475
  Aug 24 16:15:55.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:15:55.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:15:55.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:15:55.521
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f2dcde39-527f-4096-9009-61020f6f246a @ 08/24/23 16:15:55.536
  STEP: Creating the pod @ 08/24/23 16:15:55.546
  E0824 16:15:56.058161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:57.058435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-f2dcde39-527f-4096-9009-61020f6f246a @ 08/24/23 16:15:57.599
  STEP: waiting to observe update in volume @ 08/24/23 16:15:57.619
  E0824 16:15:58.059270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:15:59.059958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:00.059945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:01.060704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:02.061641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:03.062993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:04.063751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:05.063971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:06.065011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:07.065879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:08.066498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:09.066611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:10.067573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:11.067736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:12.068006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:13.068009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:14.068829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:15.068996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:16.069075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:17.069451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:18.070173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:19.070332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:20.070509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:21.070824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:22.072185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:23.072591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:24.073294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:25.074017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:26.074013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:27.074390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:28.074833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:29.075488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:30.077957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:31.078629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:32.079437      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:33.079617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:34.079977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:35.080153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:36.080514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:37.081252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:38.081219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:39.081485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:40.082373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:41.082563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:42.083599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:43.083761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:44.084509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:45.085198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:46.086059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:47.086622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:48.086894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:49.087735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:50.088645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:51.089487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:52.089654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:53.089864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:54.090789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:55.090955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:56.091432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:57.091567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:58.092557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:16:59.093150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:00.093407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:17:00.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6563" for this suite. @ 08/24/23 16:17:00.172
• [64.709 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 08/24/23 16:17:00.187
  Aug 24 16:17:00.187: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:17:00.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:17:00.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:17:00.221
  STEP: Creating projection with secret that has name projected-secret-test-map-5493a3a2-4a40-4756-a299-2a20219eb343 @ 08/24/23 16:17:00.224
  STEP: Creating a pod to test consume secrets @ 08/24/23 16:17:00.23
  E0824 16:17:01.093656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:02.093777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:03.094051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:04.094314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:17:04.269
  Aug 24 16:17:04.275: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-secrets-59059679-9463-4352-909f-7288dc52176c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 16:17:04.289
  Aug 24 16:17:04.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1250" for this suite. @ 08/24/23 16:17:04.331
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 08/24/23 16:17:04.347
  Aug 24 16:17:04.347: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 16:17:04.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:17:04.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:17:04.411
  STEP: Create a Replicaset @ 08/24/23 16:17:04.423
  STEP: Verify that the required pods have come up. @ 08/24/23 16:17:04.435
  Aug 24 16:17:04.440: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0824 16:17:05.095698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:06.095914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:07.096695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:08.097847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:09.097802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:17:09.447: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 16:17:09.447
  STEP: Getting /status @ 08/24/23 16:17:09.447
  Aug 24 16:17:09.453: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 08/24/23 16:17:09.454
  Aug 24 16:17:09.469: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 08/24/23 16:17:09.469
  Aug 24 16:17:09.473: INFO: Observed &ReplicaSet event: ADDED
  Aug 24 16:17:09.473: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 16:17:09.474: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 16:17:09.474: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 16:17:09.474: INFO: Found replicaset test-rs in namespace replicaset-9791 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 16:17:09.474: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 08/24/23 16:17:09.474
  Aug 24 16:17:09.474: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 24 16:17:09.487: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 08/24/23 16:17:09.487
  Aug 24 16:17:09.492: INFO: Observed &ReplicaSet event: ADDED
  Aug 24 16:17:09.492: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 16:17:09.493: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 16:17:09.493: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 16:17:09.494: INFO: Observed replicaset test-rs in namespace replicaset-9791 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 16:17:09.494: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 16:17:09.494: INFO: Found replicaset test-rs in namespace replicaset-9791 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Aug 24 16:17:09.494: INFO: Replicaset test-rs has a patched status
  Aug 24 16:17:09.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9791" for this suite. @ 08/24/23 16:17:09.503
• [5.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 08/24/23 16:17:09.522
  Aug 24 16:17:09.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 16:17:09.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:17:09.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:17:09.563
  STEP: Setting up server cert @ 08/24/23 16:17:09.603
  E0824 16:17:10.098064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 16:17:10.688
  STEP: Deploying the webhook pod @ 08/24/23 16:17:10.704
  STEP: Wait for the deployment to be ready @ 08/24/23 16:17:10.728
  Aug 24 16:17:10.739: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 16:17:11.098664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:12.098805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 16:17:12.759
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 16:17:12.778
  E0824 16:17:13.099667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:17:13.780: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/24/23 16:17:13.794
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/24/23 16:17:13.83
  STEP: Creating a dummy validating-webhook-configuration object @ 08/24/23 16:17:13.858
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 08/24/23 16:17:13.873
  STEP: Creating a dummy mutating-webhook-configuration object @ 08/24/23 16:17:13.885
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 08/24/23 16:17:13.901
  Aug 24 16:17:13.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6901" for this suite. @ 08/24/23 16:17:14.039
  STEP: Destroying namespace "webhook-markers-4989" for this suite. @ 08/24/23 16:17:14.057
• [4.550 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 08/24/23 16:17:14.077
  Aug 24 16:17:14.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename subpath @ 08/24/23 16:17:14.08
  E0824 16:17:14.099700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:17:14.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:17:14.114
  STEP: Setting up data @ 08/24/23 16:17:14.12
  STEP: Creating pod pod-subpath-test-projected-dg8r @ 08/24/23 16:17:14.137
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 16:17:14.137
  E0824 16:17:15.100922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:16.101524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:17.101443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:18.102660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:19.103432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:20.104047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:21.103895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:22.104519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:23.105005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:24.105139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:25.105808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:26.105951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:27.106537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:28.106986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:29.107315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:30.107535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:31.107716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:32.107994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:33.108838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:34.109171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:35.109358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:36.109685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:37.115483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:38.116468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:17:38.276
  Aug 24 16:17:38.282: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-subpath-test-projected-dg8r container test-container-subpath-projected-dg8r: <nil>
  STEP: delete the pod @ 08/24/23 16:17:38.298
  STEP: Deleting pod pod-subpath-test-projected-dg8r @ 08/24/23 16:17:38.325
  Aug 24 16:17:38.326: INFO: Deleting pod "pod-subpath-test-projected-dg8r" in namespace "subpath-8809"
  Aug 24 16:17:38.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8809" for this suite. @ 08/24/23 16:17:38.339
• [24.275 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 08/24/23 16:17:38.353
  Aug 24 16:17:38.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:17:38.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:17:38.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:17:38.398
  STEP: Creating configMap with name projected-configmap-test-volume-map-5eac1482-56ff-4122-98c2-d3febd683957 @ 08/24/23 16:17:38.407
  STEP: Creating a pod to test consume configMaps @ 08/24/23 16:17:38.419
  E0824 16:17:39.117371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:40.117299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:41.118575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:42.117917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:17:42.459
  Aug 24 16:17:42.464: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-configmaps-d8274641-e296-498f-a89f-a1c6c5aa13d8 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 16:17:42.474
  Aug 24 16:17:42.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4225" for this suite. @ 08/24/23 16:17:42.509
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 08/24/23 16:17:42.528
  Aug 24 16:17:42.528: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 16:17:42.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:17:42.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:17:42.559
  STEP: Creating secret with name secret-test-map-2b3c3825-0159-4d8b-a636-576b815897d6 @ 08/24/23 16:17:42.564
  STEP: Creating a pod to test consume secrets @ 08/24/23 16:17:42.572
  E0824 16:17:43.119862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:44.120353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:45.120691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:46.121087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:17:46.631
  Aug 24 16:17:46.641: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-secrets-aa2855a0-9093-4f2d-9b33-1a073fcad9f2 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 16:17:46.653
  Aug 24 16:17:46.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3702" for this suite. @ 08/24/23 16:17:46.685
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 08/24/23 16:17:46.702
  Aug 24 16:17:46.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 16:17:46.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:17:46.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:17:46.739
  STEP: Creating a test headless service @ 08/24/23 16:17:46.745
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5798.svc.cluster.local;sleep 1; done
   @ 08/24/23 16:17:46.762
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5798.svc.cluster.local;sleep 1; done
   @ 08/24/23 16:17:46.763
  STEP: creating a pod to probe DNS @ 08/24/23 16:17:46.763
  STEP: submitting the pod to kubernetes @ 08/24/23 16:17:46.764
  E0824 16:17:47.121221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:48.121719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 16:17:48.798
  STEP: looking for the results for each expected name from probers @ 08/24/23 16:17:48.804
  Aug 24 16:17:48.812: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.817: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.823: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.830: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.838: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.844: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.850: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.857: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:48.857: INFO: Lookups using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5798.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5798.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_udp@dns-test-service-2.dns-5798.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5798.svc.cluster.local]

  Aug 24 16:17:48.868: INFO: Pod client logs for webserver: 
  Aug 24 16:17:48.878: INFO: Pod client logs for querier: 
  Aug 24 16:17:48.887: INFO: Pod client logs for jessie-querier: 
  E0824 16:17:49.122092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:50.122471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:51.122889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:52.122962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:53.123033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:17:53.896: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:53.900: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:53.919: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:53.925: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:53.935: INFO: Lookups using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local]

  Aug 24 16:17:53.946: INFO: Pod client logs for webserver: 
  Aug 24 16:17:53.959: INFO: Pod client logs for querier: 
  Aug 24 16:17:53.972: INFO: Pod client logs for jessie-querier: 
  E0824 16:17:54.124119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:55.124671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:56.125369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:57.126396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:17:58.126539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:17:58.896: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:58.904: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:58.926: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:58.934: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:17:58.945: INFO: Lookups using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local]

  Aug 24 16:17:58.956: INFO: Pod client logs for webserver: 
  Aug 24 16:17:58.967: INFO: Pod client logs for querier: 
  Aug 24 16:17:58.976: INFO: Pod client logs for jessie-querier: 
  E0824 16:17:59.127664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:00.127659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:01.127874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:02.128064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:03.128081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:03.896: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:03.903: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:03.919: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:03.924: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:03.935: INFO: Lookups using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local]

  Aug 24 16:18:03.945: INFO: Pod client logs for webserver: 
  Aug 24 16:18:03.956: INFO: Pod client logs for querier: 
  Aug 24 16:18:03.967: INFO: Pod client logs for jessie-querier: 
  E0824 16:18:04.128817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:05.131697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:06.132617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:07.133149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:08.134016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:08.896: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:08.905: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:08.927: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:08.934: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:08.949: INFO: Lookups using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local]

  Aug 24 16:18:08.962: INFO: Pod client logs for webserver: 
  Aug 24 16:18:08.973: INFO: Pod client logs for querier: 
  Aug 24 16:18:08.985: INFO: Pod client logs for jessie-querier: 
  E0824 16:18:09.135081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:10.135497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:11.136088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:12.136540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:13.137995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:13.894: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:13.902: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:13.919: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:13.924: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:13.933: INFO: Lookups using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local]

  Aug 24 16:18:13.942: INFO: Pod client logs for webserver: 
  Aug 24 16:18:13.950: INFO: Pod client logs for querier: 
  Aug 24 16:18:13.960: INFO: Pod client logs for jessie-querier: 
  E0824 16:18:14.138567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:15.138871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:16.139745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:17.139781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:18.140685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:18.935: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local from pod dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358: the server could not find the requested resource (get pods dns-test-ab80753c-009c-4fe4-98e4-3272f0017358)
  Aug 24 16:18:18.946: INFO: Lookups using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 failed for: [jessie_tcp@dns-querier-2.dns-test-service-2.dns-5798.svc.cluster.local]

  Aug 24 16:18:18.957: INFO: Pod client logs for webserver: 
  Aug 24 16:18:18.967: INFO: Pod client logs for querier: 
  Aug 24 16:18:18.980: INFO: Pod client logs for jessie-querier: 
  E0824 16:18:19.141756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:20.141963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:21.142817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:22.142930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:23.143325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:23.935: INFO: DNS probes using dns-5798/dns-test-ab80753c-009c-4fe4-98e4-3272f0017358 succeeded

  Aug 24 16:18:23.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 16:18:23.942
  STEP: deleting the test headless service @ 08/24/23 16:18:23.971
  STEP: Destroying namespace "dns-5798" for this suite. @ 08/24/23 16:18:24.022
• [37.338 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 08/24/23 16:18:24.045
  Aug 24 16:18:24.045: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:18:24.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:18:24.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:18:24.079
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 16:18:24.084
  E0824 16:18:24.143168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:25.143530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:26.143649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:27.143809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:18:28.117
  Aug 24 16:18:28.122: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-0d47ab57-c1b4-46ee-97aa-f30743632ab4 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 16:18:28.132
  E0824 16:18:28.144847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:28.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3666" for this suite. @ 08/24/23 16:18:28.163
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 08/24/23 16:18:28.179
  Aug 24 16:18:28.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 16:18:28.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:18:28.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:18:28.209
  E0824 16:18:29.145410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:30.145597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:31.145878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:32.146171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:33.146940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:34.147417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:35.147646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:36.148407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:36.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1171" for this suite. @ 08/24/23 16:18:36.283
• [8.115 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 08/24/23 16:18:36.295
  Aug 24 16:18:36.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:18:36.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:18:36.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:18:36.334
  STEP: Creating configMap with name projected-configmap-test-volume-map-78196a87-bc9c-4473-bc0f-f36154cb1126 @ 08/24/23 16:18:36.339
  STEP: Creating a pod to test consume configMaps @ 08/24/23 16:18:36.359
  E0824 16:18:37.148777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:38.148854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:39.149714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:40.149453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:18:40.416
  Aug 24 16:18:40.421: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-configmaps-2aeffe64-efc8-48c0-b4c0-7bcf832070a7 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 16:18:40.432
  Aug 24 16:18:40.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8725" for this suite. @ 08/24/23 16:18:40.468
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 08/24/23 16:18:40.483
  Aug 24 16:18:40.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 16:18:40.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:18:40.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:18:40.513
  Aug 24 16:18:40.550: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 08/24/23 16:18:40.56
  Aug 24 16:18:40.566: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:40.566: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 08/24/23 16:18:40.567
  Aug 24 16:18:40.605: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:40.606: INFO: Node eiyoo9ohd4ei-2 is running 0 daemon pod, expected 1
  E0824 16:18:41.149571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:41.617: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:41.617: INFO: Node eiyoo9ohd4ei-2 is running 0 daemon pod, expected 1
  E0824 16:18:42.150043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:42.616: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 16:18:42.616: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 08/24/23 16:18:42.631
  Aug 24 16:18:42.701: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:42.701: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 08/24/23 16:18:42.701
  Aug 24 16:18:42.723: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:42.723: INFO: Node eiyoo9ohd4ei-2 is running 0 daemon pod, expected 1
  E0824 16:18:43.151164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:43.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:43.742: INFO: Node eiyoo9ohd4ei-2 is running 0 daemon pod, expected 1
  E0824 16:18:44.151230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:44.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:44.730: INFO: Node eiyoo9ohd4ei-2 is running 0 daemon pod, expected 1
  E0824 16:18:45.151304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:45.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 16:18:45.730: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 16:18:45.746
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6825, will wait for the garbage collector to delete the pods @ 08/24/23 16:18:45.746
  Aug 24 16:18:45.814: INFO: Deleting DaemonSet.extensions daemon-set took: 13.15883ms
  Aug 24 16:18:45.915: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.476582ms
  E0824 16:18:46.152105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:18:47.152985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:47.722: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:47.722: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 16:18:47.726: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47256"},"items":null}

  Aug 24 16:18:47.730: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47256"},"items":null}

  Aug 24 16:18:47.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6825" for this suite. @ 08/24/23 16:18:47.787
• [7.318 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 08/24/23 16:18:47.801
  Aug 24 16:18:47.801: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 16:18:47.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:18:47.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:18:47.853
  Aug 24 16:18:47.907: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 16:18:47.918
  Aug 24 16:18:47.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:47.936: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 16:18:48.154054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:48.958: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:48.958: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 16:18:49.154874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:49.953: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 16:18:49.953: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 08/24/23 16:18:49.979
  STEP: Check that daemon pods images are updated. @ 08/24/23 16:18:50
  Aug 24 16:18:50.008: INFO: Wrong image for pod: daemon-set-cnxnf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 24 16:18:50.008: INFO: Wrong image for pod: daemon-set-knl2q. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 24 16:18:50.008: INFO: Wrong image for pod: daemon-set-pv98d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0824 16:18:50.155083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:51.027: INFO: Wrong image for pod: daemon-set-cnxnf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 24 16:18:51.028: INFO: Pod daemon-set-kmqvg is not available
  Aug 24 16:18:51.028: INFO: Wrong image for pod: daemon-set-pv98d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0824 16:18:51.155224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:52.031: INFO: Wrong image for pod: daemon-set-cnxnf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 24 16:18:52.031: INFO: Pod daemon-set-kmqvg is not available
  Aug 24 16:18:52.031: INFO: Wrong image for pod: daemon-set-pv98d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0824 16:18:52.155218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:53.032: INFO: Wrong image for pod: daemon-set-pv98d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0824 16:18:53.155684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:54.027: INFO: Wrong image for pod: daemon-set-pv98d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 24 16:18:54.027: INFO: Pod daemon-set-zqmxm is not available
  E0824 16:18:54.155859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:55.034: INFO: Pod daemon-set-6ndxr is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 08/24/23 16:18:55.045
  Aug 24 16:18:55.062: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 16:18:55.062: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 16:18:55.156633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:56.078: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 16:18:56.078: INFO: Node eiyoo9ohd4ei-1 is running 0 daemon pod, expected 1
  E0824 16:18:56.157592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:57.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 24 16:18:57.075: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 16:18:57.128
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1576, will wait for the garbage collector to delete the pods @ 08/24/23 16:18:57.128
  E0824 16:18:57.158461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:57.193: INFO: Deleting DaemonSet.extensions daemon-set took: 9.247659ms
  Aug 24 16:18:57.294: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.04547ms
  E0824 16:18:58.158712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:18:58.699: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 16:18:58.699: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 16:18:58.703: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47430"},"items":null}

  Aug 24 16:18:58.708: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47430"},"items":null}

  Aug 24 16:18:58.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1576" for this suite. @ 08/24/23 16:18:58.738
• [10.947 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 08/24/23 16:18:58.75
  Aug 24 16:18:58.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 16:18:58.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:18:58.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:18:58.789
  Aug 24 16:18:58.793: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 16:18:59.159053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:00.159454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 08/24/23 16:19:00.754
  Aug 24 16:19:00.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 create -f -'
  E0824 16:19:01.160401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:01.939: INFO: stderr: ""
  Aug 24 16:19:01.939: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 24 16:19:01.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 delete e2e-test-crd-publish-openapi-9496-crds test-foo'
  Aug 24 16:19:02.097: INFO: stderr: ""
  Aug 24 16:19:02.097: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Aug 24 16:19:02.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 apply -f -'
  E0824 16:19:02.160838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:02.445: INFO: stderr: ""
  Aug 24 16:19:02.445: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 24 16:19:02.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 delete e2e-test-crd-publish-openapi-9496-crds test-foo'
  Aug 24 16:19:02.593: INFO: stderr: ""
  Aug 24 16:19:02.593: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 08/24/23 16:19:02.593
  Aug 24 16:19:02.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 create -f -'
  E0824 16:19:03.161086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:03.620: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 08/24/23 16:19:03.62
  Aug 24 16:19:03.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 create -f -'
  Aug 24 16:19:03.992: INFO: rc: 1
  Aug 24 16:19:03.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 apply -f -'
  E0824 16:19:04.162955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:04.510: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 08/24/23 16:19:04.51
  Aug 24 16:19:04.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 create -f -'
  Aug 24 16:19:04.861: INFO: rc: 1
  Aug 24 16:19:04.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 --namespace=crd-publish-openapi-7168 apply -f -'
  E0824 16:19:05.163884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:05.216: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 08/24/23 16:19:05.217
  Aug 24 16:19:05.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 explain e2e-test-crd-publish-openapi-9496-crds'
  Aug 24 16:19:05.527: INFO: stderr: ""
  Aug 24 16:19:05.527: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9496-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 08/24/23 16:19:05.528
  Aug 24 16:19:05.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 explain e2e-test-crd-publish-openapi-9496-crds.metadata'
  Aug 24 16:19:05.861: INFO: stderr: ""
  Aug 24 16:19:05.861: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9496-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Aug 24 16:19:05.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 explain e2e-test-crd-publish-openapi-9496-crds.spec'
  E0824 16:19:06.164573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:06.197: INFO: stderr: ""
  Aug 24 16:19:06.197: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9496-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Aug 24 16:19:06.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 explain e2e-test-crd-publish-openapi-9496-crds.spec.bars'
  Aug 24 16:19:06.484: INFO: stderr: ""
  Aug 24 16:19:06.484: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9496-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 08/24/23 16:19:06.485
  Aug 24 16:19:06.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=crd-publish-openapi-7168 explain e2e-test-crd-publish-openapi-9496-crds.spec.bars2'
  Aug 24 16:19:06.841: INFO: rc: 1
  E0824 16:19:07.165745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:08.166001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:08.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7168" for this suite. @ 08/24/23 16:19:08.84
• [10.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 08/24/23 16:19:08.856
  Aug 24 16:19:08.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename job @ 08/24/23 16:19:08.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:19:08.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:19:08.887
  STEP: Creating a job @ 08/24/23 16:19:08.89
  STEP: Ensure pods equal to parallelism count is attached to the job @ 08/24/23 16:19:08.9
  E0824 16:19:09.166566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:10.167382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/24/23 16:19:10.913
  STEP: updating /status @ 08/24/23 16:19:10.927
  STEP: get /status @ 08/24/23 16:19:10.942
  Aug 24 16:19:10.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4144" for this suite. @ 08/24/23 16:19:10.956
• [2.112 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 08/24/23 16:19:10.971
  Aug 24 16:19:10.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename ingressclass @ 08/24/23 16:19:10.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:19:11.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:19:11.01
  STEP: getting /apis @ 08/24/23 16:19:11.016
  STEP: getting /apis/networking.k8s.io @ 08/24/23 16:19:11.025
  STEP: getting /apis/networking.k8s.iov1 @ 08/24/23 16:19:11.027
  STEP: creating @ 08/24/23 16:19:11.034
  STEP: getting @ 08/24/23 16:19:11.055
  STEP: listing @ 08/24/23 16:19:11.059
  STEP: watching @ 08/24/23 16:19:11.063
  Aug 24 16:19:11.064: INFO: starting watch
  STEP: patching @ 08/24/23 16:19:11.065
  STEP: updating @ 08/24/23 16:19:11.073
  Aug 24 16:19:11.082: INFO: waiting for watch events with expected annotations
  Aug 24 16:19:11.082: INFO: saw patched and updated annotations
  STEP: deleting @ 08/24/23 16:19:11.084
  STEP: deleting a collection @ 08/24/23 16:19:11.118
  Aug 24 16:19:11.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3239" for this suite. @ 08/24/23 16:19:11.154
• [0.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 08/24/23 16:19:11.167
  Aug 24 16:19:11.167: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 16:19:11.167490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename job @ 08/24/23 16:19:11.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:19:11.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:19:11.214
  STEP: Creating a job @ 08/24/23 16:19:11.223
  STEP: Ensuring active pods == parallelism @ 08/24/23 16:19:11.231
  E0824 16:19:12.168133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:13.168719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 08/24/23 16:19:13.239
  STEP: deleting Job.batch foo in namespace job-2409, will wait for the garbage collector to delete the pods @ 08/24/23 16:19:13.239
  Aug 24 16:19:13.304: INFO: Deleting Job.batch foo took: 10.399388ms
  Aug 24 16:19:13.405: INFO: Terminating Job.batch foo pods took: 100.962884ms
  E0824 16:19:14.169646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:15.170115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:16.171048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:17.171948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:18.173001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:19.174159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:20.174780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:21.174934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:22.175708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:23.176120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:24.177014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:25.178154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:26.179044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:27.179836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:28.180774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:29.181737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:30.182247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:31.182496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:32.183126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:33.184557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:34.184354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:35.185267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:36.185599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:37.186418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:38.187553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:39.188607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:40.189586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:41.190178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:42.190705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:43.191251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:44.191654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 08/24/23 16:19:45.007
  Aug 24 16:19:45.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2409" for this suite. @ 08/24/23 16:19:45.025
• [33.872 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 08/24/23 16:19:45.042
  Aug 24 16:19:45.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 16:19:45.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:19:45.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:19:45.086
  STEP: Creating configMap configmap-4118/configmap-test-087b168a-7cbf-404f-a1ce-79a15f8a65bd @ 08/24/23 16:19:45.096
  STEP: Creating a pod to test consume configMaps @ 08/24/23 16:19:45.107
  E0824 16:19:45.191805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:46.192014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:47.192502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:48.192755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:19:49.14
  Aug 24 16:19:49.144: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-configmaps-db3c851d-a215-4683-9236-7ddfe9e21a01 container env-test: <nil>
  STEP: delete the pod @ 08/24/23 16:19:49.179
  E0824 16:19:49.193795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:19:49.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4118" for this suite. @ 08/24/23 16:19:49.216
• [4.186 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 08/24/23 16:19:49.231
  Aug 24 16:19:49.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename init-container @ 08/24/23 16:19:49.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:19:49.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:19:49.259
  STEP: creating the pod @ 08/24/23 16:19:49.264
  Aug 24 16:19:49.265: INFO: PodSpec: initContainers in spec.initContainers
  E0824 16:19:50.194167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:51.195304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:52.196835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:53.196811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:54.197521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:55.197710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:56.198005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:57.198994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:58.199387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:19:59.199610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:00.200238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:01.200551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:02.200867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:03.201755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:04.202010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:05.202436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:06.203304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:07.203660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:08.204627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:09.204763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:10.205056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:11.205803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:12.206130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:13.206128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:14.206434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:15.206529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:16.207086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:17.207948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:18.207453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:19.207972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:20.208705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:21.209403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:22.209234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:23.209491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:24.209802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:25.210026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:26.210721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:27.210874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:28.211424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:20:29.089: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-046d88d0-d9da-4de8-8bd7-91fd2faa2b4f", GenerateName:"", Namespace:"init-container-1748", SelfLink:"", UID:"d4cfa1e5-e440-486d-b4d5-819c84668002", ResourceVersion:"47887", Generation:0, CreationTimestamp:time.Date(2023, time.August, 24, 16, 19, 49, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"265454358"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 24, 16, 19, 49, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006291b48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 24, 16, 20, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006291b78), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5rdfl", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000c89420), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5rdfl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5rdfl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5rdfl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0047bbd08), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"eiyoo9ohd4ei-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004ba78f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0047bbd90)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0047bbdb0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0047bbdb8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0047bbdbc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00626ada0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 16, 19, 49, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 16, 19, 49, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 16, 19, 49, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 16, 19, 49, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.161", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.66.110", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.110"}}, StartTime:time.Date(2023, time.August, 24, 16, 19, 49, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004ba79d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004ba7a40)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"d59c675982d8692814ec9e1486d4c645cd86ad825ef33975a5db196cf2801592", ContainerID:"cri-o://96cd7a2877dabaf46bf0ea0da665302b2e41105e3c24b678d973d5552c682b1c", Started:(*bool)(0xc0047bbe5f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000c894e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0047bbe65), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000c894c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0047bbe34), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Aug 24 16:20:29.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1748" for this suite. @ 08/24/23 16:20:29.106
• [39.911 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 08/24/23 16:20:29.148
  Aug 24 16:20:29.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename podtemplate @ 08/24/23 16:20:29.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:20:29.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:20:29.207
  STEP: Create a pod template @ 08/24/23 16:20:29.212
  E0824 16:20:29.212018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Replace a pod template @ 08/24/23 16:20:29.221
  Aug 24 16:20:29.236: INFO: Found updated podtemplate annotation: "true"

  Aug 24 16:20:29.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2325" for this suite. @ 08/24/23 16:20:29.246
• [0.112 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 08/24/23 16:20:29.261
  Aug 24 16:20:29.261: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename discovery @ 08/24/23 16:20:29.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:20:29.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:20:29.304
  STEP: Setting up server cert @ 08/24/23 16:20:29.311
  STEP: Requesting APIResourceList from "/api/v1" @ 08/24/23 16:20:29.892
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 08/24/23 16:20:29.896
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 08/24/23 16:20:29.897
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 08/24/23 16:20:29.899
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 08/24/23 16:20:29.901
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 08/24/23 16:20:29.902
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 08/24/23 16:20:29.904
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 08/24/23 16:20:29.905
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 08/24/23 16:20:29.907
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 08/24/23 16:20:29.908
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 08/24/23 16:20:29.91
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 08/24/23 16:20:29.912
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 08/24/23 16:20:29.913
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 08/24/23 16:20:29.915
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 08/24/23 16:20:29.917
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 08/24/23 16:20:29.92
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 08/24/23 16:20:29.922
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 08/24/23 16:20:29.924
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 08/24/23 16:20:29.926
  Aug 24 16:20:29.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1318" for this suite. @ 08/24/23 16:20:29.936
• [0.686 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 08/24/23 16:20:29.953
  Aug 24 16:20:29.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 16:20:29.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:20:29.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:20:29.982
  STEP: Performing setup for networking test in namespace pod-network-test-7603 @ 08/24/23 16:20:29.987
  STEP: creating a selector @ 08/24/23 16:20:29.987
  STEP: Creating the service pods in kubernetes @ 08/24/23 16:20:29.987
  Aug 24 16:20:29.987: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0824 16:20:30.212339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:31.213955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:32.212924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:33.213583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:34.214141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:35.214436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:36.214908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:37.215049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:38.215519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:39.216154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:40.216878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:41.217086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:42.217238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:43.218890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:44.217786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:45.218686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:46.219435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:47.220206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:48.221124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:49.221898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:50.222305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:51.223133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/24/23 16:20:52.18
  E0824 16:20:52.225983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:53.225588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:54.226064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:20:54.241: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 24 16:20:54.241: INFO: Going to poll 10.233.65.36 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 24 16:20:54.247: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.36:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7603 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 16:20:54.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 16:20:54.249: INFO: ExecWithOptions: Clientset creation
  Aug 24 16:20:54.249: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7603/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.36%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 24 16:20:54.421: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 24 16:20:54.421: INFO: Going to poll 10.233.64.253 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 24 16:20:54.427: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.253:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7603 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 16:20:54.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 16:20:54.430: INFO: ExecWithOptions: Clientset creation
  Aug 24 16:20:54.430: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7603/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.253%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 24 16:20:54.558: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 24 16:20:54.558: INFO: Going to poll 10.233.66.26 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 24 16:20:54.568: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.26:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7603 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 16:20:54.568: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  Aug 24 16:20:54.569: INFO: ExecWithOptions: Clientset creation
  Aug 24 16:20:54.569: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7603/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.26%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 24 16:20:54.729: INFO: Found all 1 expected endpoints: [netserver-2]
  Aug 24 16:20:54.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7603" for this suite. @ 08/24/23 16:20:54.74
• [24.799 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 08/24/23 16:20:54.756
  Aug 24 16:20:54.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 16:20:54.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:20:54.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:20:54.787
  E0824 16:20:55.226287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:56.226359      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:20:56.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5631" for this suite. @ 08/24/23 16:20:56.845
• [2.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 08/24/23 16:20:56.859
  Aug 24 16:20:56.859: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename crd-webhook @ 08/24/23 16:20:56.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:20:56.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:20:56.895
  STEP: Setting up server cert @ 08/24/23 16:20:56.899
  E0824 16:20:57.226423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/24/23 16:20:57.433
  STEP: Deploying the custom resource conversion webhook pod @ 08/24/23 16:20:57.451
  STEP: Wait for the deployment to be ready @ 08/24/23 16:20:57.473
  Aug 24 16:20:57.487: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0824 16:20:58.226913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:20:59.227792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 16:20:59.507
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 16:20:59.524
  E0824 16:21:00.231931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:00.525: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 24 16:21:00.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  E0824 16:21:01.231996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:02.232734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:03.232857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 08/24/23 16:21:03.473
  STEP: v2 custom resource should be converted @ 08/24/23 16:21:03.481
  Aug 24 16:21:03.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4768" for this suite. @ 08/24/23 16:21:04.133
• [7.289 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 08/24/23 16:21:04.158
  Aug 24 16:21:04.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/24/23 16:21:04.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:04.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:04.215
  E0824 16:21:04.233457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:05.234635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:06.234592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:06.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 08/24/23 16:21:06.282
  STEP: Cleaning up the configmap @ 08/24/23 16:21:06.293
  STEP: Cleaning up the pod @ 08/24/23 16:21:06.306
  STEP: Destroying namespace "emptydir-wrapper-5863" for this suite. @ 08/24/23 16:21:06.328
• [2.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 08/24/23 16:21:06.356
  Aug 24 16:21:06.356: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 16:21:06.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:06.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:06.396
  STEP: fetching services @ 08/24/23 16:21:06.4
  Aug 24 16:21:06.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-299" for this suite. @ 08/24/23 16:21:06.412
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 08/24/23 16:21:06.436
  Aug 24 16:21:06.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 16:21:06.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:06.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:06.472
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 08/24/23 16:21:06.477
  E0824 16:21:07.235838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:08.236864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 08/24/23 16:21:08.519
  STEP: Then the orphan pod is adopted @ 08/24/23 16:21:08.529
  E0824 16:21:09.236833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:09.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5158" for this suite. @ 08/24/23 16:21:09.561
• [3.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 08/24/23 16:21:09.588
  Aug 24 16:21:09.588: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 16:21:09.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:09.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:09.629
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4351 @ 08/24/23 16:21:09.635
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/24/23 16:21:09.657
  STEP: creating service externalsvc in namespace services-4351 @ 08/24/23 16:21:09.658
  STEP: creating replication controller externalsvc in namespace services-4351 @ 08/24/23 16:21:09.695
  I0824 16:21:09.708060      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4351, replica count: 2
  E0824 16:21:10.239672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:11.239750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:12.240050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 16:21:12.760635      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0824 16:21:13.240654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:14.242024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:15.242076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 16:21:15.761167      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 08/24/23 16:21:15.769
  Aug 24 16:21:15.800: INFO: Creating new exec pod
  E0824 16:21:16.242160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:17.243612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:17.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-4351 exec execpodhvm9s -- /bin/sh -x -c nslookup clusterip-service.services-4351.svc.cluster.local'
  Aug 24 16:21:18.162: INFO: stderr: "+ nslookup clusterip-service.services-4351.svc.cluster.local\n"
  Aug 24 16:21:18.162: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-4351.svc.cluster.local\tcanonical name = externalsvc.services-4351.svc.cluster.local.\nName:\texternalsvc.services-4351.svc.cluster.local\nAddress: 10.233.37.160\n\n"
  Aug 24 16:21:18.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-4351, will wait for the garbage collector to delete the pods @ 08/24/23 16:21:18.169
  Aug 24 16:21:18.235: INFO: Deleting ReplicationController externalsvc took: 10.158249ms
  E0824 16:21:18.243717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:18.335: INFO: Terminating ReplicationController externalsvc pods took: 100.517754ms
  E0824 16:21:19.244459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:20.245568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:21.245846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:21.879: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-4351" for this suite. @ 08/24/23 16:21:21.908
• [12.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 08/24/23 16:21:21.929
  Aug 24 16:21:21.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:21:21.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:21.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:21.981
  STEP: Creating the pod @ 08/24/23 16:21:21.988
  E0824 16:21:22.246247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:23.246443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:24.247421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:24.566: INFO: Successfully updated pod "annotationupdate8a755276-7219-4dd1-b2c8-646990270396"
  E0824 16:21:25.248443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:26.248643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:21:26.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7445" for this suite. @ 08/24/23 16:21:26.601
• [4.680 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 08/24/23 16:21:26.615
  Aug 24 16:21:26.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 16:21:26.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:26.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:26.643
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/24/23 16:21:26.648
  E0824 16:21:27.249575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:28.249686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:29.250870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:30.251153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:21:30.691
  Aug 24 16:21:30.697: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-e6e758a7-5a20-4442-b39b-0b9bf74737a2 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 16:21:30.712
  Aug 24 16:21:30.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6797" for this suite. @ 08/24/23 16:21:30.747
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 08/24/23 16:21:30.764
  Aug 24 16:21:30.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename secrets @ 08/24/23 16:21:30.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:30.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:30.792
  Aug 24 16:21:30.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9089" for this suite. @ 08/24/23 16:21:30.855
• [0.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 08/24/23 16:21:30.872
  Aug 24 16:21:30.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 16:21:30.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:21:30.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:21:30.898
  E0824 16:21:31.251223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:32.251619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:33.251690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:34.251957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:35.252407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 08/24/23 16:21:36.061
  E0824 16:21:36.252998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:37.253808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:38.254803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:39.255485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:40.255682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 08/24/23 16:21:41.076
  E0824 16:21:41.256945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:42.257524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:43.257720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:44.258397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:45.258572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 08/24/23 16:21:46.103
  E0824 16:21:46.259066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:47.259556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:48.259545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:49.260474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:50.261191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 08/24/23 16:21:51.117
  Aug 24 16:21:51.156: INFO: EndpointSlice for Service endpointslice-3906/example-named-port not found
  E0824 16:21:51.261304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:52.261632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:53.261817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:54.262123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:55.262352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:56.262711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:57.262895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:58.263774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:21:59.264737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:00.265644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:22:01.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3906" for this suite. @ 08/24/23 16:22:01.182
• [30.322 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 08/24/23 16:22:01.198
  Aug 24 16:22:01.198: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 16:22:01.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:01.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:01.239
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 16:22:01.248
  E0824 16:22:01.266527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:02.267310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:03.267767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:04.268654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:05.269108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:22:05.306
  Aug 24 16:22:05.312: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-6c32e5e4-e0e2-41e7-9915-9d4104f4615d container client-container: <nil>
  STEP: delete the pod @ 08/24/23 16:22:05.323
  Aug 24 16:22:05.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-274" for this suite. @ 08/24/23 16:22:05.368
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 08/24/23 16:22:05.388
  Aug 24 16:22:05.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 16:22:05.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:05.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:05.46
  Aug 24 16:22:05.465: INFO: Creating simple deployment test-new-deployment
  Aug 24 16:22:05.491: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0824 16:22:06.269146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:07.269736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 08/24/23 16:22:07.512
  STEP: updating a scale subresource @ 08/24/23 16:22:07.516
  STEP: verifying the deployment Spec.Replicas was modified @ 08/24/23 16:22:07.525
  STEP: Patch a scale subresource @ 08/24/23 16:22:07.531
  Aug 24 16:22:07.563: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c2ee552-18c3-403f-8517-dab0793f5c22",
      ResourceVersion: (string) (len=5) "48715",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 16:22:07.618: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5e52323-5e7d-47aa-8981-c9fceb2ff637",
      ResourceVersion: (string) (len=5) "48718",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "7c2ee552-18c3-403f-8517-dab0793f5c22",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 63 32 65 65 35  35 32 2d 31 38 63 33 2d  |\"7c2ee552-18c3-|
              00000120  34 30 33 66 2d 38 35 31  37 2d 64 61 62 30 37 39  |403f-8517-dab079|
              00000130  33 66 35 63 32 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3f5c22\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 16:22:07.640: INFO: Pod "test-new-deployment-557759b7c7-5pb9n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-5pb9n",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74ca1989-fed6-4408-a0bc-da4fb83fd158",
      ResourceVersion: (string) (len=5) "48719",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e5e52323-5e7d-47aa-8981-c9fceb2ff637",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  65 35 32 33 32 33 2d 35  |d\":\"e5e52323-5|
              00000090  65 37 64 2d 34 37 61 61  2d 38 39 38 31 2d 63 39  |e7d-47aa-8981-c9|
              000000a0  66 63 65 62 32 66 66 36  33 37 5c 22 7d 22 3a 7b  |fceb2ff637\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tlqpd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tlqpd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 16:22:07.654: INFO: Pod "test-new-deployment-557759b7c7-mnrfb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-mnrfb",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f733752c-6d64-4ba0-a4d8-7d4eed4da073",
      ResourceVersion: (string) (len=5) "48689",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e5e52323-5e7d-47aa-8981-c9fceb2ff637",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  65 35 32 33 32 33 2d 35  |d\":\"e5e52323-5|
              00000090  65 37 64 2d 34 37 61 61  2d 38 39 38 31 2d 63 39  |e7d-47aa-8981-c9|
              000000a0  66 63 65 62 32 66 66 36  33 37 5c 22 7d 22 3a 7b  |fceb2ff637\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 35 38 5c 22 7d 22  |10.233.66.58\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hqrx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hqrx4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828490926,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://791a273ec9ad5eea70e990b10a7ddd1f07eea91ecc26e0a8cbe23bf79fca3f5b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 16:22:07.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8445" for this suite. @ 08/24/23 16:22:07.678
• [2.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 08/24/23 16:22:07.719
  Aug 24 16:22:07.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 16:22:07.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:07.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:07.792
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 16:22:07.803
  Aug 24 16:22:07.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7165 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Aug 24 16:22:07.963: INFO: stderr: ""
  Aug 24 16:22:07.963: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/24/23 16:22:07.963
  Aug 24 16:22:07.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=kubectl-7165 delete pods e2e-test-httpd-pod'
  E0824 16:22:08.270504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:09.271744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:22:09.659: INFO: stderr: ""
  Aug 24 16:22:09.659: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 24 16:22:09.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7165" for this suite. @ 08/24/23 16:22:09.666
• [1.958 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 08/24/23 16:22:09.679
  Aug 24 16:22:09.679: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:22:09.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:09.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:09.707
  STEP: Creating configMap with name projected-configmap-test-volume-cca3ae6b-9c45-44af-9f7a-d8705c8d0504 @ 08/24/23 16:22:09.711
  STEP: Creating a pod to test consume configMaps @ 08/24/23 16:22:09.717
  E0824 16:22:10.272659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:11.272970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:12.273188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:13.273954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:22:13.756
  Aug 24 16:22:13.760: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-configmaps-333145a4-6d1e-4bf8-a50d-68ef420423b2 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 16:22:13.772
  Aug 24 16:22:13.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7305" for this suite. @ 08/24/23 16:22:13.806
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 08/24/23 16:22:13.821
  Aug 24 16:22:13.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename server-version @ 08/24/23 16:22:13.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:13.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:13.861
  STEP: Request ServerVersion @ 08/24/23 16:22:13.865
  STEP: Confirm major version @ 08/24/23 16:22:13.867
  Aug 24 16:22:13.867: INFO: Major version: 1
  STEP: Confirm minor version @ 08/24/23 16:22:13.867
  Aug 24 16:22:13.867: INFO: cleanMinorVersion: 28
  Aug 24 16:22:13.867: INFO: Minor version: 28
  Aug 24 16:22:13.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1024" for this suite. @ 08/24/23 16:22:13.873
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 08/24/23 16:22:13.886
  Aug 24 16:22:13.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 16:22:13.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:13.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:13.913
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3940.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-3940.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 08/24/23 16:22:13.917
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3940.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3940.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 08/24/23 16:22:13.917
  STEP: creating a pod to probe /etc/hosts @ 08/24/23 16:22:13.917
  STEP: submitting the pod to kubernetes @ 08/24/23 16:22:13.918
  E0824 16:22:14.274118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:15.274386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 16:22:15.944
  STEP: looking for the results for each expected name from probers @ 08/24/23 16:22:15.949
  Aug 24 16:22:15.983: INFO: DNS probes using dns-3940/dns-test-7b18ed72-9cb2-427a-8f91-b4b8c4ac1292 succeeded

  Aug 24 16:22:15.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 16:22:15.991
  STEP: Destroying namespace "dns-3940" for this suite. @ 08/24/23 16:22:16.016
• [2.145 seconds]
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 08/24/23 16:22:16.032
  Aug 24 16:22:16.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 16:22:16.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:16.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:16.082
  E0824 16:22:16.274576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:17.275645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:18.275615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:19.276146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:20.276780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:21.276801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:22:22.197
  Aug 24 16:22:22.203: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod client-envvars-17681577-a1c9-46ed-8c1c-709989ed19b8 container env3cont: <nil>
  STEP: delete the pod @ 08/24/23 16:22:22.216
  Aug 24 16:22:22.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7173" for this suite. @ 08/24/23 16:22:22.269
  E0824 16:22:22.277737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [6.251 seconds]
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 08/24/23 16:22:22.285
  Aug 24 16:22:22.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename configmap @ 08/24/23 16:22:22.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:22.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:22.318
  STEP: creating a ConfigMap @ 08/24/23 16:22:22.324
  STEP: fetching the ConfigMap @ 08/24/23 16:22:22.335
  STEP: patching the ConfigMap @ 08/24/23 16:22:22.341
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 08/24/23 16:22:22.352
  STEP: deleting the ConfigMap by collection with a label selector @ 08/24/23 16:22:22.359
  STEP: listing all ConfigMaps in test namespace @ 08/24/23 16:22:22.373
  Aug 24 16:22:22.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1695" for this suite. @ 08/24/23 16:22:22.39
• [0.118 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 08/24/23 16:22:22.405
  Aug 24 16:22:22.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename discovery @ 08/24/23 16:22:22.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:22.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:22.436
  STEP: Setting up server cert @ 08/24/23 16:22:22.443
  Aug 24 16:22:22.838: INFO: Checking APIGroup: apiregistration.k8s.io
  Aug 24 16:22:22.839: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Aug 24 16:22:22.839: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Aug 24 16:22:22.839: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Aug 24 16:22:22.839: INFO: Checking APIGroup: apps
  Aug 24 16:22:22.840: INFO: PreferredVersion.GroupVersion: apps/v1
  Aug 24 16:22:22.840: INFO: Versions found [{apps/v1 v1}]
  Aug 24 16:22:22.841: INFO: apps/v1 matches apps/v1
  Aug 24 16:22:22.841: INFO: Checking APIGroup: events.k8s.io
  Aug 24 16:22:22.842: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Aug 24 16:22:22.842: INFO: Versions found [{events.k8s.io/v1 v1}]
  Aug 24 16:22:22.842: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Aug 24 16:22:22.842: INFO: Checking APIGroup: authentication.k8s.io
  Aug 24 16:22:22.843: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Aug 24 16:22:22.843: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Aug 24 16:22:22.843: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Aug 24 16:22:22.843: INFO: Checking APIGroup: authorization.k8s.io
  Aug 24 16:22:22.845: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Aug 24 16:22:22.845: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Aug 24 16:22:22.845: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Aug 24 16:22:22.845: INFO: Checking APIGroup: autoscaling
  Aug 24 16:22:22.846: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Aug 24 16:22:22.847: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Aug 24 16:22:22.847: INFO: autoscaling/v2 matches autoscaling/v2
  Aug 24 16:22:22.847: INFO: Checking APIGroup: batch
  Aug 24 16:22:22.849: INFO: PreferredVersion.GroupVersion: batch/v1
  Aug 24 16:22:22.850: INFO: Versions found [{batch/v1 v1}]
  Aug 24 16:22:22.850: INFO: batch/v1 matches batch/v1
  Aug 24 16:22:22.851: INFO: Checking APIGroup: certificates.k8s.io
  Aug 24 16:22:22.853: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Aug 24 16:22:22.853: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Aug 24 16:22:22.854: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Aug 24 16:22:22.854: INFO: Checking APIGroup: networking.k8s.io
  Aug 24 16:22:22.856: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Aug 24 16:22:22.856: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Aug 24 16:22:22.857: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Aug 24 16:22:22.857: INFO: Checking APIGroup: policy
  Aug 24 16:22:22.859: INFO: PreferredVersion.GroupVersion: policy/v1
  Aug 24 16:22:22.859: INFO: Versions found [{policy/v1 v1}]
  Aug 24 16:22:22.859: INFO: policy/v1 matches policy/v1
  Aug 24 16:22:22.859: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Aug 24 16:22:22.860: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Aug 24 16:22:22.861: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Aug 24 16:22:22.861: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Aug 24 16:22:22.862: INFO: Checking APIGroup: storage.k8s.io
  Aug 24 16:22:22.864: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Aug 24 16:22:22.864: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Aug 24 16:22:22.864: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Aug 24 16:22:22.864: INFO: Checking APIGroup: admissionregistration.k8s.io
  Aug 24 16:22:22.865: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Aug 24 16:22:22.866: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Aug 24 16:22:22.866: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Aug 24 16:22:22.866: INFO: Checking APIGroup: apiextensions.k8s.io
  Aug 24 16:22:22.869: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Aug 24 16:22:22.869: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Aug 24 16:22:22.869: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Aug 24 16:22:22.869: INFO: Checking APIGroup: scheduling.k8s.io
  Aug 24 16:22:22.872: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Aug 24 16:22:22.872: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Aug 24 16:22:22.873: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Aug 24 16:22:22.873: INFO: Checking APIGroup: coordination.k8s.io
  Aug 24 16:22:22.875: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Aug 24 16:22:22.875: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Aug 24 16:22:22.875: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Aug 24 16:22:22.875: INFO: Checking APIGroup: node.k8s.io
  Aug 24 16:22:22.877: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Aug 24 16:22:22.878: INFO: Versions found [{node.k8s.io/v1 v1}]
  Aug 24 16:22:22.878: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Aug 24 16:22:22.878: INFO: Checking APIGroup: discovery.k8s.io
  Aug 24 16:22:22.881: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Aug 24 16:22:22.882: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Aug 24 16:22:22.882: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Aug 24 16:22:22.882: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Aug 24 16:22:22.886: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Aug 24 16:22:22.886: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Aug 24 16:22:22.886: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Aug 24 16:22:22.886: INFO: Checking APIGroup: cilium.io
  Aug 24 16:22:22.887: INFO: PreferredVersion.GroupVersion: cilium.io/v2
  Aug 24 16:22:22.888: INFO: Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  Aug 24 16:22:22.888: INFO: cilium.io/v2 matches cilium.io/v2
  Aug 24 16:22:22.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5472" for this suite. @ 08/24/23 16:22:22.896
• [0.503 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 08/24/23 16:22:22.911
  Aug 24 16:22:22.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 16:22:22.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:22.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:22.942
  STEP: Counting existing ResourceQuota @ 08/24/23 16:22:22.947
  E0824 16:22:23.278311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:24.279323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:25.279494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:26.279473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:27.280440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 16:22:27.964
  STEP: Ensuring resource quota status is calculated @ 08/24/23 16:22:27.997
  E0824 16:22:28.280745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:29.281377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 08/24/23 16:22:30.005
  STEP: Creating a NodePort Service @ 08/24/23 16:22:30.035
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 08/24/23 16:22:30.082
  STEP: Ensuring resource quota status captures service creation @ 08/24/23 16:22:30.134
  E0824 16:22:30.282190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:31.282455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 08/24/23 16:22:32.142
  STEP: Ensuring resource quota status released usage @ 08/24/23 16:22:32.226
  E0824 16:22:32.282781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:33.282901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:22:34.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-84" for this suite. @ 08/24/23 16:22:34.241
• [11.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 08/24/23 16:22:34.26
  Aug 24 16:22:34.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename deployment @ 08/24/23 16:22:34.264
  E0824 16:22:34.283449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:34.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:34.299
  Aug 24 16:22:34.303: INFO: Creating deployment "test-recreate-deployment"
  Aug 24 16:22:34.313: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Aug 24 16:22:34.327: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0824 16:22:35.283520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:36.283681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:22:36.346: INFO: Waiting deployment "test-recreate-deployment" to complete
  Aug 24 16:22:36.389: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Aug 24 16:22:36.406: INFO: Updating deployment test-recreate-deployment
  Aug 24 16:22:36.407: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Aug 24 16:22:36.560: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7329",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44322155-826d-4fb5-9abe-073d38c62a47",
      ResourceVersion: (string) (len=5) "49077",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 16:22:36.581: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7329",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c675a62d-efb1-4d89-b124-d8e76663c4e5",
      ResourceVersion: (string) (len=5) "49073",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "44322155-826d-4fb5-9abe-073d38c62a47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 34 33 32 32 31  35 35 2d 38 32 36 64 2d  |\"44322155-826d-|
              00000120  34 66 62 35 2d 39 61 62  65 2d 30 37 33 64 33 38  |4fb5-9abe-073d38|
              00000130  63 36 32 61 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c62a47\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 16:22:36.582: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Aug 24 16:22:36.583: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7329",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67d2ce4b-d2e7-4077-b7dc-53a4e8d12dff",
      ResourceVersion: (string) (len=5) "49065",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "44322155-826d-4fb5-9abe-073d38c62a47",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 34 33 32 32 31  35 35 2d 38 32 36 64 2d  |\"44322155-826d-|
              00000120  34 66 62 35 2d 39 61 62  65 2d 30 37 33 64 33 38  |4fb5-9abe-073d38|
              00000130  63 36 32 61 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c62a47\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 16:22:36.594: INFO: Pod "test-recreate-deployment-76fb77d45-sx8qh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-sx8qh",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7329",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96fedccf-d7c7-4662-a894-7cd7c645ca45",
      ResourceVersion: (string) (len=5) "49076",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "c675a62d-efb1-4d89-b124-d8e76663c4e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  37 35 61 36 32 64 2d 65  |d\":\"c675a62d-e|
              00000090  66 62 31 2d 34 64 38 39  2d 62 31 32 34 2d 64 38  |fb1-4d89-b124-d8|
              000000a0  65 37 36 36 36 33 63 34  65 35 5c 22 7d 22 3a 7b  |e76663c4e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cp975",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cp975",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eiyoo9ohd4ei-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.161",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828490956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 16:22:36.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7329" for this suite. @ 08/24/23 16:22:36.61
• [2.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 08/24/23 16:22:36.626
  Aug 24 16:22:36.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 16:22:36.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:36.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:36.654
  STEP: creating the pod @ 08/24/23 16:22:36.659
  STEP: submitting the pod to kubernetes @ 08/24/23 16:22:36.659
  W0824 16:22:36.673704      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0824 16:22:37.284365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:38.284930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/24/23 16:22:38.707
  STEP: updating the pod @ 08/24/23 16:22:38.713
  Aug 24 16:22:39.235: INFO: Successfully updated pod "pod-update-activedeadlineseconds-123119e7-9aa5-4d26-a6df-683ad354e5af"
  E0824 16:22:39.285937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:40.286617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:41.287454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:42.287615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:22:43.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-339" for this suite. @ 08/24/23 16:22:43.268
• [6.656 seconds]
------------------------------
SSSSSSSS  E0824 16:22:43.287483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 08/24/23 16:22:43.295
  Aug 24 16:22:43.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 16:22:43.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:43.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:43.327
  STEP: Creating a pod to test downward api env vars @ 08/24/23 16:22:43.332
  E0824 16:22:44.287486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:45.287870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:46.288474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:47.288934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:22:47.365
  Aug 24 16:22:47.372: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downward-api-6a513c3a-ff99-4637-af6c-ccc21645cc78 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 16:22:47.388
  Aug 24 16:22:47.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8870" for this suite. @ 08/24/23 16:22:47.422
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 08/24/23 16:22:47.447
  Aug 24 16:22:47.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 16:22:47.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:22:47.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:22:47.483
  STEP: Creating service test in namespace statefulset-7298 @ 08/24/23 16:22:47.488
  STEP: Creating a new StatefulSet @ 08/24/23 16:22:47.498
  Aug 24 16:22:47.528: INFO: Found 0 stateful pods, waiting for 3
  E0824 16:22:48.290001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:49.290746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:50.290869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:51.290999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:52.291403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:53.291697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:54.292621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:55.293624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:56.293800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:57.293921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:22:57.537: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 16:22:57.537: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 16:22:57.538: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/24/23 16:22:57.56
  Aug 24 16:22:57.585: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/24/23 16:22:57.586
  E0824 16:22:58.294732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:22:59.294931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:00.295072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:01.295572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:02.295669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:03.295970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:04.296125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:05.296279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:06.296611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:07.296735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 08/24/23 16:23:07.614
  STEP: Performing a canary update @ 08/24/23 16:23:07.614
  Aug 24 16:23:07.645: INFO: Updating stateful set ss2
  Aug 24 16:23:07.663: INFO: Waiting for Pod statefulset-7298/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0824 16:23:08.296775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:09.297364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:10.298114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:11.298435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:12.298735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:13.298738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:14.299005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:15.299561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:16.299783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:17.300432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 08/24/23 16:23:17.678
  Aug 24 16:23:17.811: INFO: Found 1 stateful pods, waiting for 3
  E0824 16:23:18.355410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:19.304098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:20.304401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:21.304409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:22.304618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:23.305455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:24.306148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:25.306526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:26.306676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:27.307085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:23:27.821: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 16:23:27.821: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 16:23:27.821: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 08/24/23 16:23:27.831
  Aug 24 16:23:27.857: INFO: Updating stateful set ss2
  Aug 24 16:23:27.904: INFO: Waiting for Pod statefulset-7298/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0824 16:23:28.308019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:29.308638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:30.309185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:31.309632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:32.309633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:33.309767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:34.310538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:35.310926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:36.311243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:37.311839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:23:37.946: INFO: Updating stateful set ss2
  Aug 24 16:23:37.972: INFO: Waiting for StatefulSet statefulset-7298/ss2 to complete update
  Aug 24 16:23:37.973: INFO: Waiting for Pod statefulset-7298/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0824 16:23:38.312607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:39.312945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:40.313695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:41.313888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:42.314477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:43.314777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:44.314951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:45.315011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:46.315324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:47.315619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:23:47.988: INFO: Deleting all statefulset in ns statefulset-7298
  Aug 24 16:23:47.993: INFO: Scaling statefulset ss2 to 0
  E0824 16:23:48.316503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:49.316792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:50.317557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:51.317766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:52.317798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:53.318733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:54.318963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:55.319573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:56.320408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:57.320912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:23:58.024: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 16:23:58.030: INFO: Deleting statefulset ss2
  Aug 24 16:23:58.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7298" for this suite. @ 08/24/23 16:23:58.063
• [70.637 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 08/24/23 16:23:58.09
  Aug 24 16:23:58.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 16:23:58.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:23:58.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:23:58.121
  STEP: Creating pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868 @ 08/24/23 16:23:58.126
  E0824 16:23:58.321751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:23:59.322288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 16:24:00.159
  Aug 24 16:24:00.165: INFO: Initial restart count of pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 is 0
  Aug 24 16:24:00.172: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:00.322199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:01.322841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:02.180: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:02.322625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:03.323017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:04.187: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:04.323582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:05.324672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:06.193: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:06.325699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:07.325983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:08.203: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:08.325807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:09.326244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:10.212: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:10.326490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:11.326980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:12.220: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:12.327176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:13.327402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:14.227: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:14.327779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:15.328012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:16.235: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:16.328504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:17.328660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:18.245: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  E0824 16:24:18.329049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:19.329207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:20.252: INFO: Get pod liveness-76f2f36f-037c-4af0-8b55-492767e31f91 in namespace container-probe-2868
  Aug 24 16:24:20.252: INFO: Restart count of pod container-probe-2868/liveness-76f2f36f-037c-4af0-8b55-492767e31f91 is now 1 (20.087298627s elapsed)
  Aug 24 16:24:20.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 16:24:20.261
  STEP: Destroying namespace "container-probe-2868" for this suite. @ 08/24/23 16:24:20.285
  E0824 16:24:20.329565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [22.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 08/24/23 16:24:20.343
  Aug 24 16:24:20.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename watch @ 08/24/23 16:24:20.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:24:20.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:24:20.437
  STEP: getting a starting resourceVersion @ 08/24/23 16:24:20.447
  STEP: starting a background goroutine to produce watch events @ 08/24/23 16:24:20.456
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 08/24/23 16:24:20.456
  E0824 16:24:21.329431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:22.329498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:23.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8230" for this suite. @ 08/24/23 16:24:23.219
• [2.931 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 08/24/23 16:24:23.279
  Aug 24 16:24:23.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename watch @ 08/24/23 16:24:23.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:24:23.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:24:23.307
  STEP: creating a new configmap @ 08/24/23 16:24:23.311
  STEP: modifying the configmap once @ 08/24/23 16:24:23.318
  E0824 16:24:23.330218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: modifying the configmap a second time @ 08/24/23 16:24:23.331
  STEP: deleting the configmap @ 08/24/23 16:24:23.348
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 08/24/23 16:24:23.358
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 08/24/23 16:24:23.36
  Aug 24 16:24:23.361: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5418  671b6a75-5ed1-4b47-9c09-fd775051ad4e 49859 0 2023-08-24 16:24:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-24 16:24:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 16:24:23.362: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5418  671b6a75-5ed1-4b47-9c09-fd775051ad4e 49860 0 2023-08-24 16:24:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-24 16:24:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 16:24:23.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5418" for this suite. @ 08/24/23 16:24:23.37
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 08/24/23 16:24:23.39
  Aug 24 16:24:23.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename dns @ 08/24/23 16:24:23.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:24:23.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:24:23.415
  STEP: Creating a test headless service @ 08/24/23 16:24:23.419
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7022 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7022;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7022 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7022;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7022.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7022.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7022.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7022.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7022.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7022.svc;check="$$(dig +notcp +noall +answer +search 154.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.154_udp@PTR;check="$$(dig +tcp +noall +answer +search 154.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.154_tcp@PTR;sleep 1; done
   @ 08/24/23 16:24:23.443
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7022 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7022;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7022 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7022;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7022.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7022.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7022.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7022.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7022.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7022.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7022.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7022.svc;check="$$(dig +notcp +noall +answer +search 154.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.154_udp@PTR;check="$$(dig +tcp +noall +answer +search 154.15.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.15.154_tcp@PTR;sleep 1; done
   @ 08/24/23 16:24:23.443
  STEP: creating a pod to probe DNS @ 08/24/23 16:24:23.444
  STEP: submitting the pod to kubernetes @ 08/24/23 16:24:23.444
  E0824 16:24:24.330875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:25.331550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 16:24:25.491
  STEP: looking for the results for each expected name from probers @ 08/24/23 16:24:25.499
  Aug 24 16:24:25.511: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.519: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.527: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.534: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.541: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.553: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.564: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.574: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.619: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.625: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.633: INFO: Unable to read jessie_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.639: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.646: INFO: Unable to read jessie_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.652: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.658: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.665: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:25.690: INFO: Lookups using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7022 wheezy_tcp@dns-test-service.dns-7022 wheezy_udp@dns-test-service.dns-7022.svc wheezy_tcp@dns-test-service.dns-7022.svc wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7022 jessie_tcp@dns-test-service.dns-7022 jessie_udp@dns-test-service.dns-7022.svc jessie_tcp@dns-test-service.dns-7022.svc jessie_udp@_http._tcp.dns-test-service.dns-7022.svc jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc]

  Aug 24 16:24:25.720: INFO: Pod client logs for webserver: 
  Aug 24 16:24:25.734: INFO: Pod client logs for querier: 
  Aug 24 16:24:25.747: INFO: Pod client logs for jessie-querier: 
  E0824 16:24:26.331863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:27.332679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:28.333059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:29.333544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:30.333713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:30.759: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.768: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.792: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.800: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.809: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.818: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.829: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.838: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.877: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.885: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.893: INFO: Unable to read jessie_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.900: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.907: INFO: Unable to read jessie_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.914: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.920: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.928: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:30.959: INFO: Lookups using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7022 wheezy_tcp@dns-test-service.dns-7022 wheezy_udp@dns-test-service.dns-7022.svc wheezy_tcp@dns-test-service.dns-7022.svc wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7022 jessie_tcp@dns-test-service.dns-7022 jessie_udp@dns-test-service.dns-7022.svc jessie_tcp@dns-test-service.dns-7022.svc jessie_udp@_http._tcp.dns-test-service.dns-7022.svc jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc]

  Aug 24 16:24:30.969: INFO: Pod client logs for webserver: 
  Aug 24 16:24:30.981: INFO: Pod client logs for querier: 
  Aug 24 16:24:30.996: INFO: Pod client logs for jessie-querier: 
  E0824 16:24:31.333841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:32.335038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:33.335310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:34.335642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:35.336612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:35.754: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.760: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.766: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.772: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.778: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.786: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.792: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.797: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.826: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.833: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.840: INFO: Unable to read jessie_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.845: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.852: INFO: Unable to read jessie_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.859: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.867: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.873: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:35.902: INFO: Lookups using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7022 wheezy_tcp@dns-test-service.dns-7022 wheezy_udp@dns-test-service.dns-7022.svc wheezy_tcp@dns-test-service.dns-7022.svc wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7022 jessie_tcp@dns-test-service.dns-7022 jessie_udp@dns-test-service.dns-7022.svc jessie_tcp@dns-test-service.dns-7022.svc jessie_udp@_http._tcp.dns-test-service.dns-7022.svc jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc]

  Aug 24 16:24:35.915: INFO: Pod client logs for webserver: 
  Aug 24 16:24:35.933: INFO: Pod client logs for querier: 
  Aug 24 16:24:35.949: INFO: Pod client logs for jessie-querier: 
  E0824 16:24:36.336751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:37.338257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:38.337211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:39.337658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:40.338522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:40.755: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.762: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.770: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.775: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.781: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.788: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.794: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.802: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.834: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.840: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.848: INFO: Unable to read jessie_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.852: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.857: INFO: Unable to read jessie_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.865: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.870: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.875: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:40.901: INFO: Lookups using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7022 wheezy_tcp@dns-test-service.dns-7022 wheezy_udp@dns-test-service.dns-7022.svc wheezy_tcp@dns-test-service.dns-7022.svc wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7022 jessie_tcp@dns-test-service.dns-7022 jessie_udp@dns-test-service.dns-7022.svc jessie_tcp@dns-test-service.dns-7022.svc jessie_udp@_http._tcp.dns-test-service.dns-7022.svc jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc]

  Aug 24 16:24:40.912: INFO: Pod client logs for webserver: 
  Aug 24 16:24:40.922: INFO: Pod client logs for querier: 
  Aug 24 16:24:40.933: INFO: Pod client logs for jessie-querier: 
  E0824 16:24:41.339961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:42.340003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:43.341022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:44.343067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:45.343473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:45.755: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.765: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.776: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.787: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.797: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.805: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.815: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.831: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.882: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.890: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.907: INFO: Unable to read jessie_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.918: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.926: INFO: Unable to read jessie_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.933: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.941: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.948: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:45.981: INFO: Lookups using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7022 wheezy_tcp@dns-test-service.dns-7022 wheezy_udp@dns-test-service.dns-7022.svc wheezy_tcp@dns-test-service.dns-7022.svc wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7022 jessie_tcp@dns-test-service.dns-7022 jessie_udp@dns-test-service.dns-7022.svc jessie_tcp@dns-test-service.dns-7022.svc jessie_udp@_http._tcp.dns-test-service.dns-7022.svc jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc]

  Aug 24 16:24:45.995: INFO: Pod client logs for webserver: 
  Aug 24 16:24:46.007: INFO: Pod client logs for querier: 
  Aug 24 16:24:46.020: INFO: Pod client logs for jessie-querier: 
  E0824 16:24:46.343980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:47.345260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:48.345730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:49.345635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:50.345683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:50.755: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.763: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.771: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.776: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.782: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.789: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.796: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.803: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.836: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.842: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.848: INFO: Unable to read jessie_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.854: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.861: INFO: Unable to read jessie_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.872: INFO: Unable to read jessie_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.884: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.890: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:50.928: INFO: Lookups using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7022 wheezy_tcp@dns-test-service.dns-7022 wheezy_udp@dns-test-service.dns-7022.svc wheezy_tcp@dns-test-service.dns-7022.svc wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7022 jessie_tcp@dns-test-service.dns-7022 jessie_udp@dns-test-service.dns-7022.svc jessie_tcp@dns-test-service.dns-7022.svc jessie_udp@_http._tcp.dns-test-service.dns-7022.svc jessie_tcp@_http._tcp.dns-test-service.dns-7022.svc]

  Aug 24 16:24:50.944: INFO: Pod client logs for webserver: 
  Aug 24 16:24:50.960: INFO: Pod client logs for querier: 
  Aug 24 16:24:50.972: INFO: Pod client logs for jessie-querier: 
  E0824 16:24:51.345738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:52.345948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:53.346230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:54.346779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:55.347480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:24:55.764: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.779: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.794: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.805: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022 from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.815: INFO: Unable to read wheezy_udp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.826: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.832: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.840: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc from pod dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc: the server could not find the requested resource (get pods dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc)
  Aug 24 16:24:55.953: INFO: Lookups using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7022 wheezy_tcp@dns-test-service.dns-7022 wheezy_udp@dns-test-service.dns-7022.svc wheezy_tcp@dns-test-service.dns-7022.svc wheezy_udp@_http._tcp.dns-test-service.dns-7022.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7022.svc]

  Aug 24 16:24:55.969: INFO: Pod client logs for webserver: 
  Aug 24 16:24:55.982: INFO: Pod client logs for querier: 
  Aug 24 16:24:55.995: INFO: Pod client logs for jessie-querier: 
  E0824 16:24:56.348516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:57.348256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:58.348472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:24:59.349111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:00.351573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:00.892: INFO: DNS probes using dns-7022/dns-test-a86c1f06-ab6d-4281-a5a6-4c47788482fc succeeded

  Aug 24 16:25:00.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 16:25:00.902
  STEP: deleting the test service @ 08/24/23 16:25:00.948
  STEP: deleting the test headless service @ 08/24/23 16:25:01.05
  STEP: Destroying namespace "dns-7022" for this suite. @ 08/24/23 16:25:01.099
• [37.721 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 08/24/23 16:25:01.111
  Aug 24 16:25:01.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 16:25:01.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:25:01.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:25:01.155
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/24/23 16:25:01.159
  E0824 16:25:01.352418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:02.352846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:03.353324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:04.359716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:25:05.206
  Aug 24 16:25:05.211: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-e4096f52-86ba-4696-8fe0-ed5073b2096a container test-container: <nil>
  STEP: delete the pod @ 08/24/23 16:25:05.222
  Aug 24 16:25:05.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4359" for this suite. @ 08/24/23 16:25:05.255
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 08/24/23 16:25:05.271
  Aug 24 16:25:05.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 16:25:05.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:25:05.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:25:05.297
  STEP: Creating pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732 @ 08/24/23 16:25:05.302
  E0824 16:25:05.360609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:06.360712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 16:25:07.34
  Aug 24 16:25:07.347: INFO: Initial restart count of pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 is 0
  Aug 24 16:25:07.354: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:07.361386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:08.361670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:09.361827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:09.362: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:10.362169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:11.362548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:11.371: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:12.362943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:13.363967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:13.377: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:14.364719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:15.364896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:15.386: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:16.365234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:17.365428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:17.419: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:18.365904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:19.366146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:19.427: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:20.366307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:21.366439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:21.444: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:22.367490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:23.368463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:23.451: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:24.368663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:25.371688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:25.457: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:26.371722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:27.372126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:27.467: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:28.372200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:29.373030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:29.473: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:30.373035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:31.373182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:31.482: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:32.374583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:33.374830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:33.492: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:34.374904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:35.375508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:35.505: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:36.375838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:37.376679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:37.512: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:38.377055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:39.377361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:39.520: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:40.378027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:41.378626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:41.529: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:42.378658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:43.378785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:43.537: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:44.378961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:45.379493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:45.544: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:46.379765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:47.380486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:47.551: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:48.380589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:49.380759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:49.559: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:50.381458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:51.381641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:51.568: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:52.382137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:53.382080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:53.575: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:54.382364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:55.382911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:55.584: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:56.383051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:57.383248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:57.593: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:25:58.383616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:25:59.383883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:25:59.599: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:00.384589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:01.384861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:01.607: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:02.384978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:03.385592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:03.613: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:04.386323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:05.386535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:05.619: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:06.386769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:07.387135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:07.626: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:08.387530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:09.388840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:09.633: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:10.388813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:11.389163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:11.645: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:12.389434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:13.390279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:13.656: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:14.391556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:15.391531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:15.665: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:16.391841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:17.392111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:17.671: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:18.392185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:19.392689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:19.677: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:20.393165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:21.393595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:21.687: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:22.393577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:23.393980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:23.696: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:24.394460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:25.395088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:25.706: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:26.395135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:27.395969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:27.712: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:28.396566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:29.397280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:29.719: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:30.397438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:31.397574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:31.730: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:32.397741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:33.398978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:33.737: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:34.399068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:35.399447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:35.747: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:36.399486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:37.399594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:37.753: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:38.400166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:39.400824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:39.760: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:40.401794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:41.402519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:41.768: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:42.402799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:43.402998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:43.775: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:44.403339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:45.403971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:45.782: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:46.404996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:47.406157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:47.791: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:48.406325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:49.406969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:49.807: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:50.407932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:51.408071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:51.816: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:52.408609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:53.410365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:53.824: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:54.410419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:55.410863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:55.833: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:56.411123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:57.411923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:57.841: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:26:58.412680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:26:59.412973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:26:59.851: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:00.413660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:01.414087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:01.861: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:02.414878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:03.414873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:03.867: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:04.415056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:05.415686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:05.875: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:06.416055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:07.416269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:07.883: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:08.416604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:09.416959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:09.891: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:10.417250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:11.417297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:11.900: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:12.418144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:13.418273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:13.906: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:14.419000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:15.420034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:15.913: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:16.420380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:17.421020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:17.920: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:18.422028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:19.422503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:19.928: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:20.422703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:21.423041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:21.938: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:22.423681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:23.424036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:23.946: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:24.424167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:25.424705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:25.955: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:26.425448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:27.425038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:27.963: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:28.425771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:29.426566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:29.969: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:30.427352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:31.427626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:31.979: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:32.428637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:33.435079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:33.987: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:34.434673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:35.434832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:35.995: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:36.435082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:37.436163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:38.002: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:38.437052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:39.438123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:40.009: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:40.438804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:41.439163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:42.016: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:42.439366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:43.440396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:44.024: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:44.441321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:45.441646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:46.031: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:46.442343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:47.442528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:48.037: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:48.443416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:49.443620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:50.044: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:50.443776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:51.444380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:52.052: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:52.445673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:53.445782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:54.060: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:54.446681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:55.447450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:56.066: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:56.447720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:57.447989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:27:58.072: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:27:58.448145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:27:59.448281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:00.079: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:00.448870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:01.449139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:02.088: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:02.449753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:03.450903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:04.093: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:04.451130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:05.452180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:06.101: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:06.452429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:07.453050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:08.109: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:08.453378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:09.454174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:10.115: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:10.455026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:11.455420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:12.125: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:12.455977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:13.456177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:14.131: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:14.456330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:15.456918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:16.139: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:16.457088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:17.457271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:18.147: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:18.457586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:19.457741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:20.152: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:20.457888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:21.458048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:22.163: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:22.458772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:23.458973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:24.169: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:24.459564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:25.459546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:26.175: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:26.460563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:27.461063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:28.182: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:28.462220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:29.462718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:30.189: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:30.462945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:31.463131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:32.198: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:32.464196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:33.464719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:34.207: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:34.465460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:35.465631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:36.226: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:36.466548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:37.466747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:38.232: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:38.467491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:39.467942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:40.240: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:40.468617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:41.469135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:42.247: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:42.470158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:43.471188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:44.253: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:44.472026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:45.473072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:46.261: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:46.473490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:47.473985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:48.268: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:48.474126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:49.474761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:50.276: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:50.475554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:51.475872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:52.285: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:52.476732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:53.476735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:54.290: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:54.477185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:55.477444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:56.303: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:56.477693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:57.477760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:28:58.309: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:28:58.477966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:28:59.478157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:29:00.315: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:29:00.478943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:01.479115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:29:02.323: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:29:02.479494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:03.480610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:29:04.329: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:29:04.481255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:05.482016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:29:06.334: INFO: Get pod busybox-9995e0b9-0e84-4db4-b4cc-c9ecbd1a2e88 in namespace container-probe-4732
  E0824 16:29:06.482201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:07.482429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:29:08.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 16:29:08.374
  STEP: Destroying namespace "container-probe-4732" for this suite. @ 08/24/23 16:29:08.419
• [243.163 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 08/24/23 16:29:08.435
  Aug 24 16:29:08.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename pods @ 08/24/23 16:29:08.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:08.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:08.47
  Aug 24 16:29:08.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: creating the pod @ 08/24/23 16:29:08.474
  STEP: submitting the pod to kubernetes @ 08/24/23 16:29:08.475
  E0824 16:29:08.483748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:09.483935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:10.484001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:29:10.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7283" for this suite. @ 08/24/23 16:29:10.555
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 08/24/23 16:29:10.569
  Aug 24 16:29:10.569: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename containers @ 08/24/23 16:29:10.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:10.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:10.603
  STEP: Creating a pod to test override arguments @ 08/24/23 16:29:10.609
  E0824 16:29:11.484381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:12.484401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:13.485297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:14.485505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:29:14.643
  Aug 24 16:29:14.648: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod client-containers-90fea6d7-9a6c-4dc7-9000-eee3dcb4ff4a container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 16:29:14.673
  Aug 24 16:29:14.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2420" for this suite. @ 08/24/23 16:29:14.707
• [4.150 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 08/24/23 16:29:14.721
  Aug 24 16:29:14.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename lease-test @ 08/24/23 16:29:14.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:14.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:14.748
  Aug 24 16:29:14.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5191" for this suite. @ 08/24/23 16:29:14.857
• [0.165 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 08/24/23 16:29:14.89
  Aug 24 16:29:14.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 16:29:14.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:14.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:14.931
  STEP: creating a Service @ 08/24/23 16:29:14.938
  STEP: watching for the Service to be added @ 08/24/23 16:29:14.962
  Aug 24 16:29:14.965: INFO: Found Service test-service-bl9pt in namespace services-4251 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Aug 24 16:29:14.965: INFO: Service test-service-bl9pt created
  STEP: Getting /status @ 08/24/23 16:29:14.966
  Aug 24 16:29:14.977: INFO: Service test-service-bl9pt has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 08/24/23 16:29:14.978
  STEP: watching for the Service to be patched @ 08/24/23 16:29:14.996
  Aug 24 16:29:15.003: INFO: observed Service test-service-bl9pt in namespace services-4251 with annotations: map[] & LoadBalancer: {[]}
  Aug 24 16:29:15.004: INFO: Found Service test-service-bl9pt in namespace services-4251 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Aug 24 16:29:15.004: INFO: Service test-service-bl9pt has service status patched
  STEP: updating the ServiceStatus @ 08/24/23 16:29:15.004
  Aug 24 16:29:15.067: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 08/24/23 16:29:15.068
  Aug 24 16:29:15.079: INFO: Observed Service test-service-bl9pt in namespace services-4251 with annotations: map[] & Conditions: {[]}
  Aug 24 16:29:15.079: INFO: Observed event: &Service{ObjectMeta:{test-service-bl9pt  services-4251  a377c816-3f91-4335-ace9-fcfc4d3b5271 50776 0 2023-08-24 16:29:14 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-08-24 16:29:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-08-24 16:29:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.61.18,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.61.18],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Aug 24 16:29:15.080: INFO: Found Service test-service-bl9pt in namespace services-4251 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 16:29:15.080: INFO: Service test-service-bl9pt has service status updated
  STEP: patching the service @ 08/24/23 16:29:15.08
  STEP: watching for the Service to be patched @ 08/24/23 16:29:15.219
  Aug 24 16:29:15.224: INFO: observed Service test-service-bl9pt in namespace services-4251 with labels: map[test-service-static:true]
  Aug 24 16:29:15.224: INFO: observed Service test-service-bl9pt in namespace services-4251 with labels: map[test-service-static:true]
  Aug 24 16:29:15.225: INFO: observed Service test-service-bl9pt in namespace services-4251 with labels: map[test-service-static:true]
  Aug 24 16:29:15.225: INFO: Found Service test-service-bl9pt in namespace services-4251 with labels: map[test-service:patched test-service-static:true]
  Aug 24 16:29:15.225: INFO: Service test-service-bl9pt patched
  STEP: deleting the service @ 08/24/23 16:29:15.226
  STEP: watching for the Service to be deleted @ 08/24/23 16:29:15.262
  Aug 24 16:29:15.265: INFO: Observed event: ADDED
  Aug 24 16:29:15.266: INFO: Observed event: MODIFIED
  Aug 24 16:29:15.266: INFO: Observed event: MODIFIED
  Aug 24 16:29:15.267: INFO: Observed event: MODIFIED
  Aug 24 16:29:15.267: INFO: Found Service test-service-bl9pt in namespace services-4251 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Aug 24 16:29:15.267: INFO: Service test-service-bl9pt deleted
  Aug 24 16:29:15.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4251" for this suite. @ 08/24/23 16:29:15.277
• [0.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 08/24/23 16:29:15.302
  Aug 24 16:29:15.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 16:29:15.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:15.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:15.334
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/24/23 16:29:15.337
  E0824 16:29:15.485984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:16.486166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:17.486722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:18.486782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:29:19.373
  Aug 24 16:29:19.384: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-565fe531-6bc0-40a8-9cd6-24e9deb9adf0 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 16:29:19.4
  Aug 24 16:29:19.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1943" for this suite. @ 08/24/23 16:29:19.435
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 08/24/23 16:29:19.456
  Aug 24 16:29:19.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:29:19.459
  E0824 16:29:19.487720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:19.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:19.496
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 16:29:19.501
  E0824 16:29:20.500857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:21.499470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:22.499928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:23.500458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:29:23.552
  Aug 24 16:29:23.558: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod downwardapi-volume-ba305609-25fb-40c3-ada3-5235e28c90c3 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 16:29:23.569
  Aug 24 16:29:23.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4872" for this suite. @ 08/24/23 16:29:23.595
• [4.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 08/24/23 16:29:23.62
  Aug 24 16:29:23.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 16:29:23.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:23.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:23.65
  Aug 24 16:29:23.672: INFO: created pod
  E0824 16:29:24.501241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:25.502616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:26.502221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:27.502491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:29:27.7
  E0824 16:29:28.502756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:29.503488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:30.503945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:31.504246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:32.504385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:33.504513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:34.504665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:35.504814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:36.505957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:37.506141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:38.506900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:39.507475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:40.508098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:41.508638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:42.508801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:43.510344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:44.510610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:45.511421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:46.512265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:47.513085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:48.513901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:49.514227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:50.514638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:51.514945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:52.515413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:53.515701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:54.516376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:55.516601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:56.517376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:57.517712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:29:57.701: INFO: polling logs
  Aug 24 16:29:57.726: INFO: Pod logs: 
  I0824 16:29:24.711751       1 log.go:194] OK: Got token
  I0824 16:29:24.713234       1 log.go:194] validating with in-cluster discovery
  I0824 16:29:24.714159       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0824 16:29:24.714280       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-792:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000042cc0), NotBefore:(*jwt.NumericDate)(0xc000042e28), IssuedAt:(*jwt.NumericDate)(0xc000042ce0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-792", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"82991749-f781-4440-9096-68cd90023b1f"}}}
  I0824 16:29:24.737460       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0824 16:29:24.755479       1 log.go:194] OK: Validated signature on JWT
  I0824 16:29:24.755680       1 log.go:194] OK: Got valid claims from token!
  I0824 16:29:24.755782       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-792:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001af5b0), NotBefore:(*jwt.NumericDate)(0xc0001af5d8), IssuedAt:(*jwt.NumericDate)(0xc0001af5b8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-792", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"82991749-f781-4440-9096-68cd90023b1f"}}}

  Aug 24 16:29:57.726: INFO: completed pod
  Aug 24 16:29:57.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-792" for this suite. @ 08/24/23 16:29:57.749
• [34.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 08/24/23 16:29:57.767
  Aug 24 16:29:57.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename services @ 08/24/23 16:29:57.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:29:57.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:29:57.802
  STEP: creating service in namespace services-5760 @ 08/24/23 16:29:57.807
  STEP: creating service affinity-nodeport in namespace services-5760 @ 08/24/23 16:29:57.808
  STEP: creating replication controller affinity-nodeport in namespace services-5760 @ 08/24/23 16:29:57.84
  I0824 16:29:57.868161      14 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-5760, replica count: 3
  E0824 16:29:58.523853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:29:59.524492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:00.524697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 16:30:00.920709      14 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 16:30:00.938: INFO: Creating new exec pod
  E0824 16:30:01.530846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:02.527887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:03.528036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:30:03.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-5760 exec execpod-affinity8lpkh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Aug 24 16:30:04.276: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Aug 24 16:30:04.276: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:30:04.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-5760 exec execpod-affinity8lpkh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.58.68 80'
  Aug 24 16:30:04.521: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.58.68 80\nConnection to 10.233.58.68 80 port [tcp/http] succeeded!\n"
  Aug 24 16:30:04.521: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:30:04.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-5760 exec execpod-affinity8lpkh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.240 32598'
  E0824 16:30:04.528685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:30:04.775: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.240 32598\nConnection to 192.168.121.240 32598 port [tcp/*] succeeded!\n"
  Aug 24 16:30:04.775: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:30:04.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-5760 exec execpod-affinity8lpkh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.161 32598'
  Aug 24 16:30:05.009: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.161 32598\nConnection to 192.168.121.161 32598 port [tcp/*] succeeded!\n"
  Aug 24 16:30:05.009: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 16:30:05.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2410285909 --namespace=services-5760 exec execpod-affinity8lpkh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.240:32598/ ; done'
  Aug 24 16:30:05.490: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.240:32598/\n"
  Aug 24 16:30:05.490: INFO: stdout: "\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr\naffinity-nodeport-lmddr"
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Received response from host: affinity-nodeport-lmddr
  Aug 24 16:30:05.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 16:30:05.501: INFO: Cleaning up the exec pod
  E0824 16:30:05.530948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5760, will wait for the garbage collector to delete the pods @ 08/24/23 16:30:05.539
  Aug 24 16:30:05.608: INFO: Deleting ReplicationController affinity-nodeport took: 11.002626ms
  Aug 24 16:30:05.709: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.296829ms
  E0824 16:30:06.531768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:07.532386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:08.532979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-5760" for this suite. @ 08/24/23 16:30:08.556
• [10.803 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 08/24/23 16:30:08.573
  Aug 24 16:30:08.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:30:08.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:30:08.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:30:08.607
  STEP: Creating configMap with name cm-test-opt-del-7a562714-ed0f-4047-84c4-ca7b4c4b02c9 @ 08/24/23 16:30:08.617
  STEP: Creating configMap with name cm-test-opt-upd-46057e43-7e8e-41f2-bbbb-698b87e5f46a @ 08/24/23 16:30:08.63
  STEP: Creating the pod @ 08/24/23 16:30:08.637
  E0824 16:30:09.533337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:10.533913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-7a562714-ed0f-4047-84c4-ca7b4c4b02c9 @ 08/24/23 16:30:10.708
  STEP: Updating configmap cm-test-opt-upd-46057e43-7e8e-41f2-bbbb-698b87e5f46a @ 08/24/23 16:30:10.718
  STEP: Creating configMap with name cm-test-opt-create-37f0d175-96d9-4663-a80e-2648d84fc115 @ 08/24/23 16:30:10.726
  STEP: waiting to observe update in volume @ 08/24/23 16:30:10.733
  E0824 16:30:11.534053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:12.534265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:13.534407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:14.534667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:15.534981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:16.535620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:17.535904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:18.536001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:19.537263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:20.537502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:21.538462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:22.539104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:23.539558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:24.540150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:25.540055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:26.540818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:27.540947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:28.542035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:29.542186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:30.542307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:31.542587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:32.543522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:33.544378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:34.545255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:35.545773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:36.546608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:37.546632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:38.546931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:39.547197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:40.547496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:41.547877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:42.547854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:43.548049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:44.548608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:45.548771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:46.548990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:47.550162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:48.550416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:49.550550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:50.551615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:51.551681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:52.551923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:53.552322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:54.552577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:55.553660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:56.556701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:57.553833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:58.554113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:30:59.555116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:00.555418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:01.556344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:02.556503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:03.556699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:04.557128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:05.557023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:06.557696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:07.558534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:08.559161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:09.559917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:10.560217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:11.560290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:12.560263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:13.561656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:14.561789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:15.562394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:16.562992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:17.563565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:18.563953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:19.565194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:20.565188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:21.565694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:22.566761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:23.566804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:24.567214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:25.568085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:26.568361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:27.569591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:28.569991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:29.570373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:30.570687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:31:31.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-768" for this suite. @ 08/24/23 16:31:31.498
• [82.936 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 08/24/23 16:31:31.519
  Aug 24 16:31:31.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename projected @ 08/24/23 16:31:31.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:31:31.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:31:31.561
  STEP: Creating projection with secret that has name projected-secret-test-7d82e4e2-a105-4934-a502-4d57ebc16b1b @ 08/24/23 16:31:31.568
  E0824 16:31:31.570920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume secrets @ 08/24/23 16:31:31.576
  E0824 16:31:32.571641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:33.571999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:34.572293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:35.573082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 16:31:35.616
  Aug 24 16:31:35.628: INFO: Trying to get logs from node eiyoo9ohd4ei-3 pod pod-projected-secrets-477be62d-71ec-44e0-92f3-fafab71216ea container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 16:31:35.643
  Aug 24 16:31:35.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9480" for this suite. @ 08/24/23 16:31:35.671
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 08/24/23 16:31:35.692
  Aug 24 16:31:35.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Building a namespace api object, basename webhook @ 08/24/23 16:31:35.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 16:31:35.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 16:31:35.726
  STEP: Setting up server cert @ 08/24/23 16:31:35.772
  E0824 16:31:36.573814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 16:31:36.885
  STEP: Deploying the webhook pod @ 08/24/23 16:31:36.898
  STEP: Wait for the deployment to be ready @ 08/24/23 16:31:36.922
  Aug 24 16:31:36.938: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 16:31:37.579851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:38.574584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 16:31:38.968
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 16:31:38.999
  E0824 16:31:39.575020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:31:40.002: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 16:31:40.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2410285909
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 08/24/23 16:31:40.537
  STEP: Creating a custom resource that should be denied by the webhook @ 08/24/23 16:31:40.57
  E0824 16:31:40.575125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:41.576210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 16:31:42.577146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 08/24/23 16:31:42.728
  STEP: Updating the custom resource with disallowed data should be denied @ 08/24/23 16:31:42.743
  STEP: Deleting the custom resource should be denied @ 08/24/23 16:31:42.767
  STEP: Remove the offending key and value from the custom resource data @ 08/24/23 16:31:42.78
  STEP: Deleting the updated custom resource should be successful @ 08/24/23 16:31:42.8
  Aug 24 16:31:42.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1983" for this suite. @ 08/24/23 16:31:43.489
  STEP: Destroying namespace "webhook-markers-5448" for this suite. @ 08/24/23 16:31:43.501
• [7.821 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Aug 24 16:31:43.515: INFO: Running AfterSuite actions on node 1
  Aug 24 16:31:43.515: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
  E0824 16:31:43.577877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.142 seconds]
------------------------------

Ran 380 of 7387 Specs in 6430.441 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h47m11.566715986s
Test Suite Passed
