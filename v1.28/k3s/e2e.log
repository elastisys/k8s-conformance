  I0911 01:45:23.987204      19 e2e.go:117] Starting e2e run "861f17c9-e2ef-4649-b541-9b74bec08298" on Ginkgo node 1
  Sep 11 01:45:24.051: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1694396723 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Sep 11 01:45:24.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 01:45:24.396: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep 11 01:45:24.532: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep 11 01:45:24.541: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'svclb-traefik-d4416a3e' (0 seconds elapsed)
  Sep 11 01:45:24.541: INFO: e2e test version: v1.28.1
  Sep 11 01:45:24.542: INFO: kube-apiserver version: v1.28.1+k3s1
  Sep 11 01:45:24.543: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 01:45:24.548: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.153 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/11/23 01:45:25.075
  Sep 11 01:45:25.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:45:25.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:45:25.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:45:25.197
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 01:45:25.204
  STEP: Saw pod success @ 09/11/23 01:45:52.238
  Sep 11 01:45:52.245: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-4025a2a4-230a-49f1-b5b8-dd739d92742a container client-container: <nil>
  STEP: delete the pod @ 09/11/23 01:45:52.263
  Sep 11 01:45:52.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3687" for this suite. @ 09/11/23 01:45:52.301
• [27.235 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/11/23 01:45:52.312
  Sep 11 01:45:52.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 01:45:52.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:45:52.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:45:52.347
  STEP: Setting up server cert @ 09/11/23 01:45:52.419
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 01:45:53.122
  STEP: Deploying the webhook pod @ 09/11/23 01:45:53.13
  STEP: Wait for the deployment to be ready @ 09/11/23 01:45:53.158
  Sep 11 01:45:53.182: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 01:45:55.195
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 01:45:55.211
  Sep 11 01:45:56.211: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/11/23 01:45:56.282
  STEP: create a pod that should be denied by the webhook @ 09/11/23 01:45:56.394
  STEP: create a pod that causes the webhook to hang @ 09/11/23 01:45:56.636
  STEP: create a configmap that should be denied by the webhook @ 09/11/23 01:46:06.647
  STEP: create a configmap that should be admitted by the webhook @ 09/11/23 01:46:06.673
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/11/23 01:46:06.753
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/11/23 01:46:06.781
  STEP: create a namespace that bypass the webhook @ 09/11/23 01:46:06.797
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/11/23 01:46:06.89
  Sep 11 01:46:06.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9882" for this suite. @ 09/11/23 01:46:07.046
  STEP: Destroying namespace "webhook-markers-9346" for this suite. @ 09/11/23 01:46:07.058
  STEP: Destroying namespace "exempted-namespace-4687" for this suite. @ 09/11/23 01:46:07.068
• [14.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/11/23 01:46:07.082
  Sep 11 01:46:07.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 01:46:07.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:46:07.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:46:07.109
  Sep 11 01:46:07.115: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 01:46:07.131: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 01:46:07.156: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-123 before test
  Sep 11 01:46:07.163: INFO: coredns-6799fbcd5-t5lmx from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 01:46:07.163: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 01:46:07.163: INFO: helm-install-traefik-25npw from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 01:46:07.163: INFO: 	Container helm ready: false, restart count 1
  Sep 11 01:46:07.163: INFO: helm-install-traefik-crd-n6vdt from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 01:46:07.163: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:46:07.163: INFO: local-path-provisioner-84db5d44d9-wmj2n from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 01:46:07.163: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Sep 11 01:46:07.163: INFO: metrics-server-67c658944b-4kxpp from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 01:46:07.164: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 01:46:07.164: INFO: svclb-traefik-d4416a3e-v4mbb from kube-system started at 2023-09-11 01:33:59 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.164: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 01:46:07.164: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 01:46:07.164: INFO: traefik-7bf7d7576d-zts4g from kube-system started at 2023-09-11 01:33:59 +0000 UTC (1 container statuses recorded)
  Sep 11 01:46:07.164: INFO: 	Container traefik ready: true, restart count 0
  Sep 11 01:46:07.164: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-rdpcs from sonobuoy started at 2023-09-11 01:45:14 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.164: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:46:07.164: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:46:07.164: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-171 before test
  Sep 11 01:46:07.170: INFO: svclb-traefik-d4416a3e-gjxxg from kube-system started at 2023-09-11 01:36:25 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.170: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 01:46:07.170: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 01:46:07.171: INFO: sonobuoy-e2e-job-3860deceeabb4fa2 from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.171: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 01:46:07.171: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:46:07.171: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-8mdgj from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.171: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:46:07.171: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:46:07.171: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-111 before test
  Sep 11 01:46:07.178: INFO: svclb-traefik-d4416a3e-ws4p8 from kube-system started at 2023-09-11 01:36:15 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.178: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 01:46:07.178: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 01:46:07.178: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mxbgr from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.178: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:46:07.178: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:46:07.179: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-243 before test
  Sep 11 01:46:07.184: INFO: svclb-traefik-d4416a3e-m87c8 from kube-system started at 2023-09-11 01:36:39 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.184: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 01:46:07.185: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 01:46:07.185: INFO: sonobuoy from sonobuoy started at 2023-09-11 01:45:10 +0000 UTC (1 container statuses recorded)
  Sep 11 01:46:07.185: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 01:46:07.185: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mnxvh from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 01:46:07.185: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:46:07.185: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/11/23 01:46:07.185
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/11/23 01:46:09.21
  STEP: Trying to apply a random label on the found node. @ 09/11/23 01:46:09.233
  STEP: verifying the node has the label kubernetes.io/e2e-9247baad-9bca-4065-b20e-253a83571523 95 @ 09/11/23 01:46:09.254
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/11/23 01:46:09.27
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.3.111 on the node which pod4 resides and expect not scheduled @ 09/11/23 01:46:11.301
  STEP: removing the label kubernetes.io/e2e-9247baad-9bca-4065-b20e-253a83571523 off the node ip-172-31-3-111 @ 09/11/23 01:51:11.315
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9247baad-9bca-4065-b20e-253a83571523 @ 09/11/23 01:51:11.335
  Sep 11 01:51:11.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9685" for this suite. @ 09/11/23 01:51:11.344
• [304.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/11/23 01:51:11.352
  Sep 11 01:51:11.352: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 01:51:11.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:51:11.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:51:11.395
  Sep 11 01:51:11.430: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 11 01:52:11.459: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/11/23 01:52:11.463
  Sep 11 01:52:11.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/11/23 01:52:11.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:52:11.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:52:11.492
  Sep 11 01:52:11.522: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep 11 01:52:11.528: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep 11 01:52:11.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 01:52:11.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7116" for this suite. @ 09/11/23 01:52:11.661
  STEP: Destroying namespace "sched-preemption-6581" for this suite. @ 09/11/23 01:52:11.67
• [60.327 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/11/23 01:52:11.681
  Sep 11 01:52:11.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 01:52:11.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:52:11.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:52:11.718
  STEP: Waiting for pod completion @ 09/11/23 01:52:11.735
  Sep 11 01:52:15.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5368" for this suite. @ 09/11/23 01:52:15.777
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/11/23 01:52:15.788
  Sep 11 01:52:15.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 01:52:15.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:52:15.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:52:15.815
  Sep 11 01:52:15.836: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 11 01:53:15.883: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/11/23 01:53:15.887
  Sep 11 01:53:15.952: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 11 01:53:15.991: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 11 01:53:16.116: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 11 01:53:16.155: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 11 01:53:16.257: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 11 01:53:16.269: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Sep 11 01:53:16.327: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Sep 11 01:53:16.353: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/11/23 01:53:16.353
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/11/23 01:53:20.41
  Sep 11 01:53:24.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2283" for this suite. @ 09/11/23 01:53:24.525
• [68.743 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 09/11/23 01:53:24.533
  Sep 11 01:53:24.533: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 01:53:24.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:53:24.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:53:24.558
  STEP: Given a ReplicationController is created @ 09/11/23 01:53:24.562
  STEP: When the matched label of one of its pods change @ 09/11/23 01:53:24.57
  Sep 11 01:53:24.575: INFO: Pod name pod-release: Found 0 pods out of 1
  Sep 11 01:53:29.581: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/11/23 01:53:29.602
  Sep 11 01:53:30.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-397" for this suite. @ 09/11/23 01:53:30.633
• [6.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/11/23 01:53:30.644
  Sep 11 01:53:30.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 01:53:30.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:53:30.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:53:30.681
  STEP: Creating secret with name secret-test-3bf80f30-d9d1-40af-8044-4fde4881e5d2 @ 09/11/23 01:53:30.694
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:53:30.737
  STEP: Saw pod success @ 09/11/23 01:53:50.824
  Sep 11 01:53:50.828: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-secrets-3405157a-ed43-4e42-ba9f-4dbafd0e51b7 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:53:50.843
  Sep 11 01:53:50.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4382" for this suite. @ 09/11/23 01:53:50.875
• [20.245 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/11/23 01:53:50.89
  Sep 11 01:53:50.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:53:50.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:53:50.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:53:50.917
  STEP: Creating configMap with name projected-configmap-test-volume-map-20d7a318-3a49-4313-a0e7-d4bc3f9530e2 @ 09/11/23 01:53:50.922
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:53:50.929
  STEP: Saw pod success @ 09/11/23 01:53:54.96
  Sep 11 01:53:54.963: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-configmaps-617c1329-6029-44d5-942c-26112f8b069c container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 01:53:54.984
  Sep 11 01:53:55.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2371" for this suite. @ 09/11/23 01:53:55.008
• [4.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/11/23 01:53:55.025
  Sep 11 01:53:55.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svc-latency @ 09/11/23 01:53:55.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:53:55.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:53:55.053
  Sep 11 01:53:55.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6475 @ 09/11/23 01:53:55.056
  I0911 01:53:55.063696      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6475, replica count: 1
  I0911 01:53:56.114902      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0911 01:53:57.115629      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 01:53:57.227: INFO: Created: latency-svc-cjsjc
  Sep 11 01:53:57.236: INFO: Got endpoints: latency-svc-cjsjc [20.072874ms]
  Sep 11 01:53:57.263: INFO: Created: latency-svc-w9b4c
  Sep 11 01:53:57.271: INFO: Got endpoints: latency-svc-w9b4c [34.713807ms]
  Sep 11 01:53:57.275: INFO: Created: latency-svc-tr9s6
  Sep 11 01:53:57.285: INFO: Got endpoints: latency-svc-tr9s6 [47.637496ms]
  Sep 11 01:53:57.289: INFO: Created: latency-svc-v7h66
  Sep 11 01:53:57.295: INFO: Got endpoints: latency-svc-v7h66 [57.459746ms]
  Sep 11 01:53:57.303: INFO: Created: latency-svc-hfb6j
  Sep 11 01:53:57.309: INFO: Got endpoints: latency-svc-hfb6j [70.585779ms]
  Sep 11 01:53:57.322: INFO: Created: latency-svc-brkqc
  Sep 11 01:53:57.323: INFO: Got endpoints: latency-svc-brkqc [86.087703ms]
  Sep 11 01:53:57.337: INFO: Created: latency-svc-wx952
  Sep 11 01:53:57.341: INFO: Got endpoints: latency-svc-wx952 [103.030015ms]
  Sep 11 01:53:57.346: INFO: Created: latency-svc-pg4vg
  Sep 11 01:53:57.351: INFO: Got endpoints: latency-svc-pg4vg [113.656755ms]
  Sep 11 01:53:57.364: INFO: Created: latency-svc-cgbcf
  Sep 11 01:53:57.372: INFO: Got endpoints: latency-svc-cgbcf [133.623198ms]
  Sep 11 01:53:57.380: INFO: Created: latency-svc-85pd9
  Sep 11 01:53:57.388: INFO: Got endpoints: latency-svc-85pd9 [149.883291ms]
  Sep 11 01:53:57.394: INFO: Created: latency-svc-9t8hd
  Sep 11 01:53:57.401: INFO: Got endpoints: latency-svc-9t8hd [162.460627ms]
  Sep 11 01:53:57.409: INFO: Created: latency-svc-cnvwh
  Sep 11 01:53:57.415: INFO: Got endpoints: latency-svc-cnvwh [176.267549ms]
  Sep 11 01:53:57.427: INFO: Created: latency-svc-bkz6k
  Sep 11 01:53:57.430: INFO: Got endpoints: latency-svc-bkz6k [190.576587ms]
  Sep 11 01:53:57.529: INFO: Created: latency-svc-kvdlr
  Sep 11 01:53:57.537: INFO: Created: latency-svc-2d9bk
  Sep 11 01:53:57.541: INFO: Got endpoints: latency-svc-kvdlr [125.377729ms]
  Sep 11 01:53:57.549: INFO: Created: latency-svc-bx8hx
  Sep 11 01:53:57.558: INFO: Created: latency-svc-hhtld
  Sep 11 01:53:57.558: INFO: Created: latency-svc-mzcss
  Sep 11 01:53:57.558: INFO: Created: latency-svc-qlsk4
  Sep 11 01:53:57.559: INFO: Created: latency-svc-gsp2s
  Sep 11 01:53:57.562: INFO: Got endpoints: latency-svc-mzcss [132.598614ms]
  Sep 11 01:53:57.563: INFO: Created: latency-svc-b7cbm
  Sep 11 01:53:57.564: INFO: Created: latency-svc-8xtx9
  Sep 11 01:53:57.564: INFO: Created: latency-svc-spcn9
  Sep 11 01:53:57.564: INFO: Created: latency-svc-d5klr
  Sep 11 01:53:57.564: INFO: Created: latency-svc-8hfj4
  Sep 11 01:53:57.565: INFO: Created: latency-svc-rstvw
  Sep 11 01:53:57.566: INFO: Created: latency-svc-n74tl
  Sep 11 01:53:57.567: INFO: Created: latency-svc-frg68
  Sep 11 01:53:57.570: INFO: Got endpoints: latency-svc-qlsk4 [331.037624ms]
  Sep 11 01:53:57.573: INFO: Got endpoints: latency-svc-hhtld [333.77069ms]
  Sep 11 01:53:57.573: INFO: Got endpoints: latency-svc-2d9bk [171.595216ms]
  Sep 11 01:53:57.573: INFO: Got endpoints: latency-svc-gsp2s [333.624448ms]
  Sep 11 01:53:57.588: INFO: Got endpoints: latency-svc-b7cbm [302.883683ms]
  Sep 11 01:53:57.588: INFO: Got endpoints: latency-svc-8xtx9 [316.598294ms]
  Sep 11 01:53:57.595: INFO: Got endpoints: latency-svc-spcn9 [299.722022ms]
  Sep 11 01:53:57.595: INFO: Got endpoints: latency-svc-d5klr [286.257795ms]
  Sep 11 01:53:57.602: INFO: Got endpoints: latency-svc-8hfj4 [278.806996ms]
  Sep 11 01:53:57.610: INFO: Got endpoints: latency-svc-rstvw [268.148467ms]
  Sep 11 01:53:57.614: INFO: Created: latency-svc-l6vq2
  Sep 11 01:53:57.617: INFO: Got endpoints: latency-svc-n74tl [266.1187ms]
  Sep 11 01:53:57.638: INFO: Got endpoints: latency-svc-bx8hx [250.12377ms]
  Sep 11 01:53:57.638: INFO: Got endpoints: latency-svc-l6vq2 [97.137457ms]
  Sep 11 01:53:57.638: INFO: Got endpoints: latency-svc-frg68 [265.714305ms]
  Sep 11 01:53:57.648: INFO: Created: latency-svc-6w256
  Sep 11 01:53:57.652: INFO: Got endpoints: latency-svc-6w256 [89.874633ms]
  Sep 11 01:53:57.662: INFO: Created: latency-svc-hlrd6
  Sep 11 01:53:57.668: INFO: Got endpoints: latency-svc-hlrd6 [94.541444ms]
  Sep 11 01:53:57.675: INFO: Created: latency-svc-rm9kr
  Sep 11 01:53:57.682: INFO: Got endpoints: latency-svc-rm9kr [108.097902ms]
  Sep 11 01:53:57.689: INFO: Created: latency-svc-pqd4p
  Sep 11 01:53:57.699: INFO: Got endpoints: latency-svc-pqd4p [128.266167ms]
  Sep 11 01:53:57.707: INFO: Created: latency-svc-slm8v
  Sep 11 01:53:57.710: INFO: Got endpoints: latency-svc-slm8v [137.083563ms]
  Sep 11 01:53:57.721: INFO: Created: latency-svc-tvvsm
  Sep 11 01:53:57.725: INFO: Got endpoints: latency-svc-tvvsm [136.87368ms]
  Sep 11 01:53:57.732: INFO: Created: latency-svc-7pxcq
  Sep 11 01:53:57.736: INFO: Got endpoints: latency-svc-7pxcq [148.192729ms]
  Sep 11 01:53:57.748: INFO: Created: latency-svc-rhv6z
  Sep 11 01:53:57.752: INFO: Got endpoints: latency-svc-rhv6z [157.281339ms]
  Sep 11 01:53:57.766: INFO: Created: latency-svc-dxmdj
  Sep 11 01:53:57.769: INFO: Got endpoints: latency-svc-dxmdj [174.516856ms]
  Sep 11 01:53:57.782: INFO: Created: latency-svc-xsgkq
  Sep 11 01:53:57.787: INFO: Got endpoints: latency-svc-xsgkq [184.566478ms]
  Sep 11 01:53:57.798: INFO: Created: latency-svc-dztx7
  Sep 11 01:53:57.802: INFO: Got endpoints: latency-svc-dztx7 [192.234879ms]
  Sep 11 01:53:57.810: INFO: Created: latency-svc-9rr99
  Sep 11 01:53:57.818: INFO: Got endpoints: latency-svc-9rr99 [200.519358ms]
  Sep 11 01:53:57.822: INFO: Created: latency-svc-26z9f
  Sep 11 01:53:57.835: INFO: Created: latency-svc-shhfq
  Sep 11 01:53:57.840: INFO: Got endpoints: latency-svc-26z9f [201.406839ms]
  Sep 11 01:53:57.852: INFO: Created: latency-svc-9bllw
  Sep 11 01:53:57.861: INFO: Created: latency-svc-8rvls
  Sep 11 01:53:57.868: INFO: Created: latency-svc-bx4br
  Sep 11 01:53:57.878: INFO: Created: latency-svc-87b6r
  Sep 11 01:53:57.885: INFO: Got endpoints: latency-svc-shhfq [246.028176ms]
  Sep 11 01:53:57.891: INFO: Created: latency-svc-nzhmt
  Sep 11 01:53:57.901: INFO: Created: latency-svc-bkwv7
  Sep 11 01:53:57.909: INFO: Created: latency-svc-ksdwt
  Sep 11 01:53:57.916: INFO: Created: latency-svc-c2s4b
  Sep 11 01:53:57.924: INFO: Created: latency-svc-p5k8x
  Sep 11 01:53:57.931: INFO: Created: latency-svc-msj94
  Sep 11 01:53:57.938: INFO: Got endpoints: latency-svc-9bllw [299.330547ms]
  Sep 11 01:53:57.945: INFO: Created: latency-svc-54ppt
  Sep 11 01:53:57.958: INFO: Created: latency-svc-kkt9v
  Sep 11 01:53:57.962: INFO: Created: latency-svc-bct58
  Sep 11 01:53:57.969: INFO: Created: latency-svc-8fbtq
  Sep 11 01:53:57.978: INFO: Created: latency-svc-g5422
  Sep 11 01:53:57.987: INFO: Got endpoints: latency-svc-8rvls [334.895205ms]
  Sep 11 01:53:57.992: INFO: Created: latency-svc-scxld
  Sep 11 01:53:58.004: INFO: Created: latency-svc-p5xtn
  Sep 11 01:53:58.034: INFO: Got endpoints: latency-svc-bx4br [365.306095ms]
  Sep 11 01:53:58.060: INFO: Created: latency-svc-tb6wj
  Sep 11 01:53:58.084: INFO: Got endpoints: latency-svc-87b6r [402.19264ms]
  Sep 11 01:53:58.094: INFO: Created: latency-svc-wqb6s
  Sep 11 01:53:58.136: INFO: Got endpoints: latency-svc-nzhmt [437.041669ms]
  Sep 11 01:53:58.150: INFO: Created: latency-svc-vk6vn
  Sep 11 01:53:58.184: INFO: Got endpoints: latency-svc-bkwv7 [474.113776ms]
  Sep 11 01:53:58.197: INFO: Created: latency-svc-npsp5
  Sep 11 01:53:58.236: INFO: Got endpoints: latency-svc-ksdwt [510.811039ms]
  Sep 11 01:53:58.250: INFO: Created: latency-svc-hcq8m
  Sep 11 01:53:58.285: INFO: Got endpoints: latency-svc-c2s4b [548.744398ms]
  Sep 11 01:53:58.299: INFO: Created: latency-svc-mg9wf
  Sep 11 01:53:58.336: INFO: Got endpoints: latency-svc-p5k8x [583.500385ms]
  Sep 11 01:53:58.349: INFO: Created: latency-svc-xws95
  Sep 11 01:53:58.386: INFO: Got endpoints: latency-svc-msj94 [616.201405ms]
  Sep 11 01:53:58.399: INFO: Created: latency-svc-xhx7s
  Sep 11 01:53:58.434: INFO: Got endpoints: latency-svc-54ppt [647.299615ms]
  Sep 11 01:53:58.447: INFO: Created: latency-svc-7fz4w
  Sep 11 01:53:58.484: INFO: Got endpoints: latency-svc-kkt9v [682.290014ms]
  Sep 11 01:53:58.495: INFO: Created: latency-svc-cg4gz
  Sep 11 01:53:58.534: INFO: Got endpoints: latency-svc-bct58 [715.755204ms]
  Sep 11 01:53:58.547: INFO: Created: latency-svc-6wvbf
  Sep 11 01:53:58.585: INFO: Got endpoints: latency-svc-8fbtq [745.389195ms]
  Sep 11 01:53:58.595: INFO: Created: latency-svc-9fspl
  Sep 11 01:53:58.635: INFO: Got endpoints: latency-svc-g5422 [750.35557ms]
  Sep 11 01:53:58.647: INFO: Created: latency-svc-fpn8g
  Sep 11 01:53:58.686: INFO: Got endpoints: latency-svc-scxld [748.531175ms]
  Sep 11 01:53:58.698: INFO: Created: latency-svc-8zf6h
  Sep 11 01:53:58.734: INFO: Got endpoints: latency-svc-p5xtn [746.677492ms]
  Sep 11 01:53:58.743: INFO: Created: latency-svc-8qxqf
  Sep 11 01:53:58.785: INFO: Got endpoints: latency-svc-tb6wj [751.842029ms]
  Sep 11 01:53:58.797: INFO: Created: latency-svc-5q528
  Sep 11 01:53:58.835: INFO: Got endpoints: latency-svc-wqb6s [750.823396ms]
  Sep 11 01:53:58.847: INFO: Created: latency-svc-x8f94
  Sep 11 01:53:58.884: INFO: Got endpoints: latency-svc-vk6vn [748.146061ms]
  Sep 11 01:53:58.896: INFO: Created: latency-svc-wpq7g
  Sep 11 01:53:58.934: INFO: Got endpoints: latency-svc-npsp5 [749.119884ms]
  Sep 11 01:53:58.946: INFO: Created: latency-svc-f4457
  Sep 11 01:53:58.986: INFO: Got endpoints: latency-svc-hcq8m [750.231238ms]
  Sep 11 01:53:58.997: INFO: Created: latency-svc-ghfsm
  Sep 11 01:53:59.035: INFO: Got endpoints: latency-svc-mg9wf [749.750742ms]
  Sep 11 01:53:59.048: INFO: Created: latency-svc-h545k
  Sep 11 01:53:59.085: INFO: Got endpoints: latency-svc-xws95 [748.342893ms]
  Sep 11 01:53:59.095: INFO: Created: latency-svc-h8g7p
  Sep 11 01:53:59.134: INFO: Got endpoints: latency-svc-xhx7s [748.610727ms]
  Sep 11 01:53:59.147: INFO: Created: latency-svc-p6pz5
  Sep 11 01:53:59.188: INFO: Got endpoints: latency-svc-7fz4w [753.972357ms]
  Sep 11 01:53:59.200: INFO: Created: latency-svc-77s84
  Sep 11 01:53:59.235: INFO: Got endpoints: latency-svc-cg4gz [750.485972ms]
  Sep 11 01:53:59.252: INFO: Created: latency-svc-h6gfl
  Sep 11 01:53:59.289: INFO: Got endpoints: latency-svc-6wvbf [755.115372ms]
  Sep 11 01:53:59.302: INFO: Created: latency-svc-p5gjm
  Sep 11 01:53:59.334: INFO: Got endpoints: latency-svc-9fspl [748.81611ms]
  Sep 11 01:53:59.347: INFO: Created: latency-svc-gsnpr
  Sep 11 01:53:59.384: INFO: Got endpoints: latency-svc-fpn8g [748.943972ms]
  Sep 11 01:53:59.396: INFO: Created: latency-svc-668bv
  Sep 11 01:53:59.437: INFO: Got endpoints: latency-svc-8zf6h [749.982475ms]
  Sep 11 01:53:59.448: INFO: Created: latency-svc-8cg9r
  Sep 11 01:53:59.487: INFO: Got endpoints: latency-svc-8qxqf [753.067456ms]
  Sep 11 01:53:59.498: INFO: Created: latency-svc-gxlp6
  Sep 11 01:53:59.537: INFO: Got endpoints: latency-svc-5q528 [751.08404ms]
  Sep 11 01:53:59.549: INFO: Created: latency-svc-nzlw5
  Sep 11 01:53:59.587: INFO: Got endpoints: latency-svc-x8f94 [752.010732ms]
  Sep 11 01:53:59.600: INFO: Created: latency-svc-gx9m5
  Sep 11 01:53:59.636: INFO: Got endpoints: latency-svc-wpq7g [751.455054ms]
  Sep 11 01:53:59.648: INFO: Created: latency-svc-r4b68
  Sep 11 01:53:59.686: INFO: Got endpoints: latency-svc-f4457 [751.993241ms]
  Sep 11 01:53:59.700: INFO: Created: latency-svc-wnkl5
  Sep 11 01:53:59.737: INFO: Got endpoints: latency-svc-ghfsm [750.440011ms]
  Sep 11 01:53:59.752: INFO: Created: latency-svc-5kmqz
  Sep 11 01:53:59.785: INFO: Got endpoints: latency-svc-h545k [749.826543ms]
  Sep 11 01:53:59.798: INFO: Created: latency-svc-l6knl
  Sep 11 01:53:59.834: INFO: Got endpoints: latency-svc-h8g7p [749.207154ms]
  Sep 11 01:53:59.848: INFO: Created: latency-svc-cdcjz
  Sep 11 01:53:59.886: INFO: Got endpoints: latency-svc-p6pz5 [751.171931ms]
  Sep 11 01:53:59.902: INFO: Created: latency-svc-t2p68
  Sep 11 01:53:59.935: INFO: Got endpoints: latency-svc-77s84 [746.969375ms]
  Sep 11 01:53:59.949: INFO: Created: latency-svc-w7c5q
  Sep 11 01:53:59.986: INFO: Got endpoints: latency-svc-h6gfl [750.817966ms]
  Sep 11 01:54:00.004: INFO: Created: latency-svc-tds8p
  Sep 11 01:54:00.036: INFO: Got endpoints: latency-svc-p5gjm [746.389178ms]
  Sep 11 01:54:00.054: INFO: Created: latency-svc-99l9z
  Sep 11 01:54:00.087: INFO: Got endpoints: latency-svc-gsnpr [752.307415ms]
  Sep 11 01:54:00.101: INFO: Created: latency-svc-sbs7m
  Sep 11 01:54:00.136: INFO: Got endpoints: latency-svc-668bv [751.509415ms]
  Sep 11 01:54:00.161: INFO: Created: latency-svc-57whr
  Sep 11 01:54:00.185: INFO: Got endpoints: latency-svc-8cg9r [747.801996ms]
  Sep 11 01:54:00.204: INFO: Created: latency-svc-lpwcw
  Sep 11 01:54:00.238: INFO: Got endpoints: latency-svc-gxlp6 [750.470472ms]
  Sep 11 01:54:00.257: INFO: Created: latency-svc-hn7tl
  Sep 11 01:54:00.283: INFO: Got endpoints: latency-svc-nzlw5 [746.150764ms]
  Sep 11 01:54:00.300: INFO: Created: latency-svc-4fl77
  Sep 11 01:54:00.334: INFO: Got endpoints: latency-svc-gx9m5 [747.054286ms]
  Sep 11 01:54:00.355: INFO: Created: latency-svc-z7zm9
  Sep 11 01:54:00.387: INFO: Got endpoints: latency-svc-r4b68 [750.746675ms]
  Sep 11 01:54:00.415: INFO: Created: latency-svc-kb4qx
  Sep 11 01:54:00.438: INFO: Got endpoints: latency-svc-wnkl5 [751.487875ms]
  Sep 11 01:54:00.454: INFO: Created: latency-svc-hmbxs
  Sep 11 01:54:00.486: INFO: Got endpoints: latency-svc-5kmqz [749.401588ms]
  Sep 11 01:54:00.505: INFO: Created: latency-svc-xmx4p
  Sep 11 01:54:00.535: INFO: Got endpoints: latency-svc-l6knl [749.343397ms]
  Sep 11 01:54:00.549: INFO: Created: latency-svc-skbh2
  Sep 11 01:54:00.587: INFO: Got endpoints: latency-svc-cdcjz [752.434657ms]
  Sep 11 01:54:00.603: INFO: Created: latency-svc-t5srg
  Sep 11 01:54:00.638: INFO: Got endpoints: latency-svc-t2p68 [751.692498ms]
  Sep 11 01:54:00.653: INFO: Created: latency-svc-h5g7f
  Sep 11 01:54:00.684: INFO: Got endpoints: latency-svc-w7c5q [748.695428ms]
  Sep 11 01:54:00.700: INFO: Created: latency-svc-fxbsn
  Sep 11 01:54:00.738: INFO: Got endpoints: latency-svc-tds8p [752.048822ms]
  Sep 11 01:54:00.756: INFO: Created: latency-svc-2zd2s
  Sep 11 01:54:00.785: INFO: Got endpoints: latency-svc-99l9z [749.032263ms]
  Sep 11 01:54:00.799: INFO: Created: latency-svc-ngh5p
  Sep 11 01:54:00.835: INFO: Got endpoints: latency-svc-sbs7m [748.328564ms]
  Sep 11 01:54:00.846: INFO: Created: latency-svc-hbvt9
  Sep 11 01:54:00.884: INFO: Got endpoints: latency-svc-57whr [747.851737ms]
  Sep 11 01:54:00.894: INFO: Created: latency-svc-dsq6h
  Sep 11 01:54:00.936: INFO: Got endpoints: latency-svc-lpwcw [751.369563ms]
  Sep 11 01:54:00.954: INFO: Created: latency-svc-xdhpz
  Sep 11 01:54:00.985: INFO: Got endpoints: latency-svc-hn7tl [746.53697ms]
  Sep 11 01:54:00.997: INFO: Created: latency-svc-vcchd
  Sep 11 01:54:01.036: INFO: Got endpoints: latency-svc-4fl77 [752.559609ms]
  Sep 11 01:54:01.046: INFO: Created: latency-svc-z5kdn
  Sep 11 01:54:01.084: INFO: Got endpoints: latency-svc-z7zm9 [749.571499ms]
  Sep 11 01:54:01.096: INFO: Created: latency-svc-g6vsx
  Sep 11 01:54:01.140: INFO: Got endpoints: latency-svc-kb4qx [752.65194ms]
  Sep 11 01:54:01.158: INFO: Created: latency-svc-27xcq
  Sep 11 01:54:01.184: INFO: Got endpoints: latency-svc-hmbxs [746.699142ms]
  Sep 11 01:54:01.197: INFO: Created: latency-svc-lmqg5
  Sep 11 01:54:01.236: INFO: Got endpoints: latency-svc-xmx4p [749.493359ms]
  Sep 11 01:54:01.257: INFO: Created: latency-svc-8fk7n
  Sep 11 01:54:01.286: INFO: Got endpoints: latency-svc-skbh2 [751.469634ms]
  Sep 11 01:54:01.298: INFO: Created: latency-svc-27jxv
  Sep 11 01:54:01.334: INFO: Got endpoints: latency-svc-t5srg [747.159708ms]
  Sep 11 01:54:01.345: INFO: Created: latency-svc-8mdsc
  Sep 11 01:54:01.387: INFO: Got endpoints: latency-svc-h5g7f [748.594886ms]
  Sep 11 01:54:01.400: INFO: Created: latency-svc-x7nfl
  Sep 11 01:54:01.435: INFO: Got endpoints: latency-svc-fxbsn [751.240501ms]
  Sep 11 01:54:01.448: INFO: Created: latency-svc-kvq2l
  Sep 11 01:54:01.484: INFO: Got endpoints: latency-svc-2zd2s [745.561757ms]
  Sep 11 01:54:01.498: INFO: Created: latency-svc-d7dgm
  Sep 11 01:54:01.535: INFO: Got endpoints: latency-svc-ngh5p [750.3157ms]
  Sep 11 01:54:01.549: INFO: Created: latency-svc-8fs6m
  Sep 11 01:54:01.586: INFO: Got endpoints: latency-svc-hbvt9 [751.055808ms]
  Sep 11 01:54:01.598: INFO: Created: latency-svc-mcq55
  Sep 11 01:54:01.636: INFO: Got endpoints: latency-svc-dsq6h [751.806339ms]
  Sep 11 01:54:01.676: INFO: Created: latency-svc-4k8dv
  Sep 11 01:54:01.687: INFO: Got endpoints: latency-svc-xdhpz [750.39971ms]
  Sep 11 01:54:01.699: INFO: Created: latency-svc-dnh9c
  Sep 11 01:54:01.734: INFO: Got endpoints: latency-svc-vcchd [749.395477ms]
  Sep 11 01:54:01.747: INFO: Created: latency-svc-j45bl
  Sep 11 01:54:01.786: INFO: Got endpoints: latency-svc-z5kdn [749.955535ms]
  Sep 11 01:54:01.798: INFO: Created: latency-svc-2l59q
  Sep 11 01:54:01.835: INFO: Got endpoints: latency-svc-g6vsx [751.068019ms]
  Sep 11 01:54:01.848: INFO: Created: latency-svc-fx6gx
  Sep 11 01:54:01.885: INFO: Got endpoints: latency-svc-27xcq [745.673458ms]
  Sep 11 01:54:01.897: INFO: Created: latency-svc-jpl5s
  Sep 11 01:54:01.935: INFO: Got endpoints: latency-svc-lmqg5 [749.910093ms]
  Sep 11 01:54:01.948: INFO: Created: latency-svc-vzznt
  Sep 11 01:54:01.986: INFO: Got endpoints: latency-svc-8fk7n [750.577653ms]
  Sep 11 01:54:01.998: INFO: Created: latency-svc-62k5w
  Sep 11 01:54:02.036: INFO: Got endpoints: latency-svc-27jxv [749.866563ms]
  Sep 11 01:54:02.048: INFO: Created: latency-svc-8lr7l
  Sep 11 01:54:02.085: INFO: Got endpoints: latency-svc-8mdsc [750.600004ms]
  Sep 11 01:54:02.100: INFO: Created: latency-svc-s4r9r
  Sep 11 01:54:02.136: INFO: Got endpoints: latency-svc-x7nfl [748.780639ms]
  Sep 11 01:54:02.149: INFO: Created: latency-svc-nbvqm
  Sep 11 01:54:02.185: INFO: Got endpoints: latency-svc-kvq2l [749.175154ms]
  Sep 11 01:54:02.199: INFO: Created: latency-svc-rnn2j
  Sep 11 01:54:02.234: INFO: Got endpoints: latency-svc-d7dgm [750.36569ms]
  Sep 11 01:54:02.252: INFO: Created: latency-svc-h6fgn
  Sep 11 01:54:02.286: INFO: Got endpoints: latency-svc-8fs6m [750.627014ms]
  Sep 11 01:54:02.311: INFO: Created: latency-svc-cgtt4
  Sep 11 01:54:02.340: INFO: Got endpoints: latency-svc-mcq55 [753.848206ms]
  Sep 11 01:54:02.366: INFO: Created: latency-svc-ckvpg
  Sep 11 01:54:02.398: INFO: Got endpoints: latency-svc-4k8dv [762.493539ms]
  Sep 11 01:54:02.421: INFO: Created: latency-svc-znj45
  Sep 11 01:54:02.436: INFO: Got endpoints: latency-svc-dnh9c [748.778839ms]
  Sep 11 01:54:02.465: INFO: Created: latency-svc-tl6p9
  Sep 11 01:54:02.486: INFO: Got endpoints: latency-svc-j45bl [751.489425ms]
  Sep 11 01:54:02.498: INFO: Created: latency-svc-dfc8z
  Sep 11 01:54:02.538: INFO: Got endpoints: latency-svc-2l59q [751.798579ms]
  Sep 11 01:54:02.551: INFO: Created: latency-svc-qwnp4
  Sep 11 01:54:02.585: INFO: Got endpoints: latency-svc-fx6gx [749.773252ms]
  Sep 11 01:54:02.596: INFO: Created: latency-svc-ggn79
  Sep 11 01:54:02.635: INFO: Got endpoints: latency-svc-jpl5s [749.56874ms]
  Sep 11 01:54:02.650: INFO: Created: latency-svc-h84nv
  Sep 11 01:54:02.684: INFO: Got endpoints: latency-svc-vzznt [749.860703ms]
  Sep 11 01:54:02.699: INFO: Created: latency-svc-wkfkt
  Sep 11 01:54:02.735: INFO: Got endpoints: latency-svc-62k5w [748.257412ms]
  Sep 11 01:54:02.750: INFO: Created: latency-svc-q5l6j
  Sep 11 01:54:02.784: INFO: Got endpoints: latency-svc-8lr7l [748.07269ms]
  Sep 11 01:54:02.796: INFO: Created: latency-svc-lpm7g
  Sep 11 01:54:02.834: INFO: Got endpoints: latency-svc-s4r9r [749.171745ms]
  Sep 11 01:54:02.847: INFO: Created: latency-svc-cgkw9
  Sep 11 01:54:02.886: INFO: Got endpoints: latency-svc-nbvqm [750.086586ms]
  Sep 11 01:54:02.900: INFO: Created: latency-svc-t9bpc
  Sep 11 01:54:02.938: INFO: Got endpoints: latency-svc-rnn2j [753.101846ms]
  Sep 11 01:54:02.953: INFO: Created: latency-svc-vjlft
  Sep 11 01:54:02.984: INFO: Got endpoints: latency-svc-h6fgn [749.170115ms]
  Sep 11 01:54:02.997: INFO: Created: latency-svc-rpdph
  Sep 11 01:54:03.040: INFO: Got endpoints: latency-svc-cgtt4 [754.035618ms]
  Sep 11 01:54:03.058: INFO: Created: latency-svc-8j9q8
  Sep 11 01:54:03.086: INFO: Got endpoints: latency-svc-ckvpg [745.418995ms]
  Sep 11 01:54:03.103: INFO: Created: latency-svc-n2mq8
  Sep 11 01:54:03.135: INFO: Got endpoints: latency-svc-znj45 [736.779912ms]
  Sep 11 01:54:03.154: INFO: Created: latency-svc-z7lpd
  Sep 11 01:54:03.185: INFO: Got endpoints: latency-svc-tl6p9 [749.826173ms]
  Sep 11 01:54:03.197: INFO: Created: latency-svc-l9w66
  Sep 11 01:54:03.236: INFO: Got endpoints: latency-svc-dfc8z [750.081846ms]
  Sep 11 01:54:03.253: INFO: Created: latency-svc-jmj8z
  Sep 11 01:54:03.285: INFO: Got endpoints: latency-svc-qwnp4 [747.715405ms]
  Sep 11 01:54:03.302: INFO: Created: latency-svc-qnjbv
  Sep 11 01:54:03.334: INFO: Got endpoints: latency-svc-ggn79 [749.709811ms]
  Sep 11 01:54:03.348: INFO: Created: latency-svc-n5ddm
  Sep 11 01:54:03.395: INFO: Got endpoints: latency-svc-h84nv [759.51017ms]
  Sep 11 01:54:03.412: INFO: Created: latency-svc-mqmgw
  Sep 11 01:54:03.435: INFO: Got endpoints: latency-svc-wkfkt [750.902138ms]
  Sep 11 01:54:03.449: INFO: Created: latency-svc-vn6tq
  Sep 11 01:54:03.486: INFO: Got endpoints: latency-svc-q5l6j [750.757855ms]
  Sep 11 01:54:03.500: INFO: Created: latency-svc-fz5w5
  Sep 11 01:54:03.534: INFO: Got endpoints: latency-svc-lpm7g [749.58745ms]
  Sep 11 01:54:03.548: INFO: Created: latency-svc-256ft
  Sep 11 01:54:03.584: INFO: Got endpoints: latency-svc-cgkw9 [750.34512ms]
  Sep 11 01:54:03.596: INFO: Created: latency-svc-7t85w
  Sep 11 01:54:03.636: INFO: Got endpoints: latency-svc-t9bpc [749.921924ms]
  Sep 11 01:54:03.649: INFO: Created: latency-svc-mkkrd
  Sep 11 01:54:03.684: INFO: Got endpoints: latency-svc-vjlft [745.132622ms]
  Sep 11 01:54:03.698: INFO: Created: latency-svc-p9n69
  Sep 11 01:54:03.737: INFO: Got endpoints: latency-svc-rpdph [752.993755ms]
  Sep 11 01:54:03.754: INFO: Created: latency-svc-csctl
  Sep 11 01:54:03.786: INFO: Got endpoints: latency-svc-8j9q8 [745.712549ms]
  Sep 11 01:54:03.797: INFO: Created: latency-svc-l29qp
  Sep 11 01:54:03.836: INFO: Got endpoints: latency-svc-n2mq8 [750.051565ms]
  Sep 11 01:54:03.847: INFO: Created: latency-svc-hrbjw
  Sep 11 01:54:03.893: INFO: Got endpoints: latency-svc-z7lpd [757.791148ms]
  Sep 11 01:54:03.912: INFO: Created: latency-svc-9g2hr
  Sep 11 01:54:03.957: INFO: Got endpoints: latency-svc-l9w66 [771.475597ms]
  Sep 11 01:54:03.994: INFO: Got endpoints: latency-svc-jmj8z [758.215743ms]
  Sep 11 01:54:03.998: INFO: Created: latency-svc-fn7ht
  Sep 11 01:54:04.030: INFO: Created: latency-svc-k96vs
  Sep 11 01:54:04.077: INFO: Got endpoints: latency-svc-qnjbv [791.952227ms]
  Sep 11 01:54:04.091: INFO: Got endpoints: latency-svc-n5ddm [755.976984ms]
  Sep 11 01:54:04.105: INFO: Created: latency-svc-xg686
  Sep 11 01:54:04.127: INFO: Created: latency-svc-fpgb6
  Sep 11 01:54:04.137: INFO: Got endpoints: latency-svc-mqmgw [742.272693ms]
  Sep 11 01:54:04.150: INFO: Created: latency-svc-vt64w
  Sep 11 01:54:04.184: INFO: Got endpoints: latency-svc-vn6tq [748.755928ms]
  Sep 11 01:54:04.196: INFO: Created: latency-svc-52kgh
  Sep 11 01:54:04.233: INFO: Got endpoints: latency-svc-fz5w5 [747.231868ms]
  Sep 11 01:54:04.252: INFO: Created: latency-svc-hs5gd
  Sep 11 01:54:04.284: INFO: Got endpoints: latency-svc-256ft [749.730822ms]
  Sep 11 01:54:04.296: INFO: Created: latency-svc-4ktj8
  Sep 11 01:54:04.336: INFO: Got endpoints: latency-svc-7t85w [751.496824ms]
  Sep 11 01:54:04.349: INFO: Created: latency-svc-xg5rc
  Sep 11 01:54:04.384: INFO: Got endpoints: latency-svc-mkkrd [747.777365ms]
  Sep 11 01:54:04.398: INFO: Created: latency-svc-x72bl
  Sep 11 01:54:04.435: INFO: Got endpoints: latency-svc-p9n69 [750.734015ms]
  Sep 11 01:54:04.449: INFO: Created: latency-svc-qgd98
  Sep 11 01:54:04.484: INFO: Got endpoints: latency-svc-csctl [746.371527ms]
  Sep 11 01:54:04.498: INFO: Created: latency-svc-4hm5s
  Sep 11 01:54:04.535: INFO: Got endpoints: latency-svc-l29qp [748.93341ms]
  Sep 11 01:54:04.550: INFO: Created: latency-svc-zh5vh
  Sep 11 01:54:04.585: INFO: Got endpoints: latency-svc-hrbjw [749.568429ms]
  Sep 11 01:54:04.597: INFO: Created: latency-svc-xk9ph
  Sep 11 01:54:04.635: INFO: Got endpoints: latency-svc-9g2hr [741.418501ms]
  Sep 11 01:54:04.649: INFO: Created: latency-svc-tz96n
  Sep 11 01:54:04.686: INFO: Got endpoints: latency-svc-fn7ht [729.114571ms]
  Sep 11 01:54:04.701: INFO: Created: latency-svc-bgfbk
  Sep 11 01:54:04.735: INFO: Got endpoints: latency-svc-k96vs [740.200466ms]
  Sep 11 01:54:04.747: INFO: Created: latency-svc-rgljv
  Sep 11 01:54:04.784: INFO: Got endpoints: latency-svc-xg686 [706.717046ms]
  Sep 11 01:54:04.798: INFO: Created: latency-svc-qhxr4
  Sep 11 01:54:04.836: INFO: Got endpoints: latency-svc-fpgb6 [744.931208ms]
  Sep 11 01:54:04.849: INFO: Created: latency-svc-nplms
  Sep 11 01:54:04.885: INFO: Got endpoints: latency-svc-vt64w [747.552743ms]
  Sep 11 01:54:04.897: INFO: Created: latency-svc-tlwkz
  Sep 11 01:54:04.936: INFO: Got endpoints: latency-svc-52kgh [751.505945ms]
  Sep 11 01:54:04.949: INFO: Created: latency-svc-5w9r7
  Sep 11 01:54:04.986: INFO: Got endpoints: latency-svc-hs5gd [752.371956ms]
  Sep 11 01:54:04.997: INFO: Created: latency-svc-xmf84
  Sep 11 01:54:05.034: INFO: Got endpoints: latency-svc-4ktj8 [750.056416ms]
  Sep 11 01:54:05.048: INFO: Created: latency-svc-96trh
  Sep 11 01:54:05.084: INFO: Got endpoints: latency-svc-xg5rc [747.765786ms]
  Sep 11 01:54:05.134: INFO: Got endpoints: latency-svc-x72bl [750.099816ms]
  Sep 11 01:54:05.184: INFO: Got endpoints: latency-svc-qgd98 [748.604866ms]
  Sep 11 01:54:05.235: INFO: Got endpoints: latency-svc-4hm5s [751.479194ms]
  Sep 11 01:54:05.285: INFO: Got endpoints: latency-svc-zh5vh [749.231905ms]
  Sep 11 01:54:05.335: INFO: Got endpoints: latency-svc-xk9ph [748.920811ms]
  Sep 11 01:54:05.386: INFO: Got endpoints: latency-svc-tz96n [751.452205ms]
  Sep 11 01:54:05.435: INFO: Got endpoints: latency-svc-bgfbk [748.625517ms]
  Sep 11 01:54:05.485: INFO: Got endpoints: latency-svc-rgljv [750.242498ms]
  Sep 11 01:54:05.536: INFO: Got endpoints: latency-svc-qhxr4 [751.651127ms]
  Sep 11 01:54:05.587: INFO: Got endpoints: latency-svc-nplms [751.220241ms]
  Sep 11 01:54:05.634: INFO: Got endpoints: latency-svc-tlwkz [749.251055ms]
  Sep 11 01:54:05.690: INFO: Got endpoints: latency-svc-5w9r7 [753.632052ms]
  Sep 11 01:54:05.735: INFO: Got endpoints: latency-svc-xmf84 [748.597236ms]
  Sep 11 01:54:05.786: INFO: Got endpoints: latency-svc-96trh [751.89103ms]
  Sep 11 01:54:05.786: INFO: Latencies: [34.713807ms 47.637496ms 57.459746ms 70.585779ms 86.087703ms 89.874633ms 94.541444ms 97.137457ms 103.030015ms 108.097902ms 113.656755ms 125.377729ms 128.266167ms 132.598614ms 133.623198ms 136.87368ms 137.083563ms 148.192729ms 149.883291ms 157.281339ms 162.460627ms 171.595216ms 174.516856ms 176.267549ms 184.566478ms 190.576587ms 192.234879ms 200.519358ms 201.406839ms 246.028176ms 250.12377ms 265.714305ms 266.1187ms 268.148467ms 278.806996ms 286.257795ms 299.330547ms 299.722022ms 302.883683ms 316.598294ms 331.037624ms 333.624448ms 333.77069ms 334.895205ms 365.306095ms 402.19264ms 437.041669ms 474.113776ms 510.811039ms 548.744398ms 583.500385ms 616.201405ms 647.299615ms 682.290014ms 706.717046ms 715.755204ms 729.114571ms 736.779912ms 740.200466ms 741.418501ms 742.272693ms 744.931208ms 745.132622ms 745.389195ms 745.418995ms 745.561757ms 745.673458ms 745.712549ms 746.150764ms 746.371527ms 746.389178ms 746.53697ms 746.677492ms 746.699142ms 746.969375ms 747.054286ms 747.159708ms 747.231868ms 747.552743ms 747.715405ms 747.765786ms 747.777365ms 747.801996ms 747.851737ms 748.07269ms 748.146061ms 748.257412ms 748.328564ms 748.342893ms 748.531175ms 748.594886ms 748.597236ms 748.604866ms 748.610727ms 748.625517ms 748.695428ms 748.755928ms 748.778839ms 748.780639ms 748.81611ms 748.920811ms 748.93341ms 748.943972ms 749.032263ms 749.119884ms 749.170115ms 749.171745ms 749.175154ms 749.207154ms 749.231905ms 749.251055ms 749.343397ms 749.395477ms 749.401588ms 749.493359ms 749.568429ms 749.56874ms 749.571499ms 749.58745ms 749.709811ms 749.730822ms 749.750742ms 749.773252ms 749.826173ms 749.826543ms 749.860703ms 749.866563ms 749.910093ms 749.921924ms 749.955535ms 749.982475ms 750.051565ms 750.056416ms 750.081846ms 750.086586ms 750.099816ms 750.231238ms 750.242498ms 750.3157ms 750.34512ms 750.35557ms 750.36569ms 750.39971ms 750.440011ms 750.470472ms 750.485972ms 750.577653ms 750.600004ms 750.627014ms 750.734015ms 750.746675ms 750.757855ms 750.817966ms 750.823396ms 750.902138ms 751.055808ms 751.068019ms 751.08404ms 751.171931ms 751.220241ms 751.240501ms 751.369563ms 751.452205ms 751.455054ms 751.469634ms 751.479194ms 751.487875ms 751.489425ms 751.496824ms 751.505945ms 751.509415ms 751.651127ms 751.692498ms 751.798579ms 751.806339ms 751.842029ms 751.89103ms 751.993241ms 752.010732ms 752.048822ms 752.307415ms 752.371956ms 752.434657ms 752.559609ms 752.65194ms 752.993755ms 753.067456ms 753.101846ms 753.632052ms 753.848206ms 753.972357ms 754.035618ms 755.115372ms 755.976984ms 757.791148ms 758.215743ms 759.51017ms 762.493539ms 771.475597ms 791.952227ms]
  Sep 11 01:54:05.787: INFO: 50 %ile: 748.920811ms
  Sep 11 01:54:05.787: INFO: 90 %ile: 752.307415ms
  Sep 11 01:54:05.787: INFO: 99 %ile: 771.475597ms
  Sep 11 01:54:05.787: INFO: Total sample count: 200
  Sep 11 01:54:05.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6475" for this suite. @ 09/11/23 01:54:05.794
• [10.775 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 09/11/23 01:54:05.802
  Sep 11 01:54:05.802: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:54:05.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:05.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:54:05.882
  STEP: validating cluster-info @ 09/11/23 01:54:05.886
  Sep 11 01:54:05.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-7980 cluster-info'
  Sep 11 01:54:05.997: INFO: stderr: ""
  Sep 11 01:54:05.997: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep 11 01:54:05.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7980" for this suite. @ 09/11/23 01:54:06.01
• [0.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/11/23 01:54:06.02
  Sep 11 01:54:06.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/11/23 01:54:06.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:06.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:54:06.045
  STEP: Creating 50 configmaps @ 09/11/23 01:54:06.049
  STEP: Creating RC which spawns configmap-volume pods @ 09/11/23 01:54:06.364
  Sep 11 01:54:06.383: INFO: Pod name wrapped-volume-race-c58531bf-8a71-4982-b1be-bca9a78dec89: Found 0 pods out of 5
  Sep 11 01:54:11.404: INFO: Pod name wrapped-volume-race-c58531bf-8a71-4982-b1be-bca9a78dec89: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/11/23 01:54:11.404
  STEP: Creating RC which spawns configmap-volume pods @ 09/11/23 01:54:11.482
  Sep 11 01:54:11.512: INFO: Pod name wrapped-volume-race-241fcd94-a1cd-4939-9f58-bc1a5f39c599: Found 0 pods out of 5
  Sep 11 01:54:16.523: INFO: Pod name wrapped-volume-race-241fcd94-a1cd-4939-9f58-bc1a5f39c599: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/11/23 01:54:16.523
  STEP: Creating RC which spawns configmap-volume pods @ 09/11/23 01:54:16.569
  Sep 11 01:54:16.618: INFO: Pod name wrapped-volume-race-def7424d-4371-465b-a918-648e849b935c: Found 1 pods out of 5
  Sep 11 01:54:21.638: INFO: Pod name wrapped-volume-race-def7424d-4371-465b-a918-648e849b935c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/11/23 01:54:21.639
  Sep 11 01:54:21.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-def7424d-4371-465b-a918-648e849b935c in namespace emptydir-wrapper-9289, will wait for the garbage collector to delete the pods @ 09/11/23 01:54:21.677
  Sep 11 01:54:21.739: INFO: Deleting ReplicationController wrapped-volume-race-def7424d-4371-465b-a918-648e849b935c took: 7.334537ms
  Sep 11 01:54:21.840: INFO: Terminating ReplicationController wrapped-volume-race-def7424d-4371-465b-a918-648e849b935c pods took: 101.239461ms
  STEP: deleting ReplicationController wrapped-volume-race-241fcd94-a1cd-4939-9f58-bc1a5f39c599 in namespace emptydir-wrapper-9289, will wait for the garbage collector to delete the pods @ 09/11/23 01:54:23.641
  Sep 11 01:54:23.703: INFO: Deleting ReplicationController wrapped-volume-race-241fcd94-a1cd-4939-9f58-bc1a5f39c599 took: 7.233735ms
  Sep 11 01:54:23.803: INFO: Terminating ReplicationController wrapped-volume-race-241fcd94-a1cd-4939-9f58-bc1a5f39c599 pods took: 100.546173ms
  STEP: deleting ReplicationController wrapped-volume-race-c58531bf-8a71-4982-b1be-bca9a78dec89 in namespace emptydir-wrapper-9289, will wait for the garbage collector to delete the pods @ 09/11/23 01:54:25.104
  Sep 11 01:54:25.168: INFO: Deleting ReplicationController wrapped-volume-race-c58531bf-8a71-4982-b1be-bca9a78dec89 took: 8.828936ms
  Sep 11 01:54:25.269: INFO: Terminating ReplicationController wrapped-volume-race-c58531bf-8a71-4982-b1be-bca9a78dec89 pods took: 100.922608ms
  STEP: Cleaning up the configMaps @ 09/11/23 01:54:26.97
  STEP: Destroying namespace "emptydir-wrapper-9289" for this suite. @ 09/11/23 01:54:27.299
• [21.287 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 09/11/23 01:54:27.307
  Sep 11 01:54:27.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 01:54:27.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:27.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:54:27.329
  STEP: Creating a test namespace @ 09/11/23 01:54:27.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:27.353
  STEP: Creating a service in the namespace @ 09/11/23 01:54:27.356
  STEP: Deleting the namespace @ 09/11/23 01:54:27.368
  STEP: Waiting for the namespace to be removed. @ 09/11/23 01:54:27.392
  STEP: Recreating the namespace @ 09/11/23 01:54:33.396
  STEP: Verifying there is no service in the namespace @ 09/11/23 01:54:33.412
  Sep 11 01:54:33.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7097" for this suite. @ 09/11/23 01:54:33.419
  STEP: Destroying namespace "nsdeletetest-7787" for this suite. @ 09/11/23 01:54:33.426
  Sep 11 01:54:33.431: INFO: Namespace nsdeletetest-7787 was already deleted
  STEP: Destroying namespace "nsdeletetest-1454" for this suite. @ 09/11/23 01:54:33.431
• [6.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 09/11/23 01:54:33.439
  Sep 11 01:54:33.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 01:54:33.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:33.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:54:33.459
  STEP: creating service in namespace services-1006 @ 09/11/23 01:54:33.461
  STEP: creating service affinity-nodeport in namespace services-1006 @ 09/11/23 01:54:33.461
  STEP: creating replication controller affinity-nodeport in namespace services-1006 @ 09/11/23 01:54:33.477
  I0911 01:54:33.487798      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1006, replica count: 3
  I0911 01:54:36.539031      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0911 01:54:39.540084      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 01:54:39.551: INFO: Creating new exec pod
  Sep 11 01:54:42.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1006 exec execpod-affinitymwlbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Sep 11 01:54:42.779: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep 11 01:54:42.779: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:54:42.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1006 exec execpod-affinitymwlbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.10.110 80'
  Sep 11 01:54:42.960: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.10.110 80\nConnection to 10.43.10.110 80 port [tcp/http] succeeded!\n"
  Sep 11 01:54:42.960: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:54:42.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1006 exec execpod-affinitymwlbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.123 31166'
  Sep 11 01:54:43.162: INFO: stderr: "+ nc -v -t -w 2 172.31.11.123 31166\n+ echo hostName\nConnection to 172.31.11.123 31166 port [tcp/*] succeeded!\n"
  Sep 11 01:54:43.162: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:54:43.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1006 exec execpod-affinitymwlbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.12.171 31166'
  Sep 11 01:54:43.340: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.12.171 31166\nConnection to 172.31.12.171 31166 port [tcp/*] succeeded!\n"
  Sep 11 01:54:43.340: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:54:43.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1006 exec execpod-affinitymwlbq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.123:31166/ ; done'
  Sep 11 01:54:43.616: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31166/\n"
  Sep 11 01:54:43.617: INFO: stdout: "\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p\naffinity-nodeport-csv8p"
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Received response from host: affinity-nodeport-csv8p
  Sep 11 01:54:43.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 01:54:43.621: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1006, will wait for the garbage collector to delete the pods @ 09/11/23 01:54:43.642
  Sep 11 01:54:43.720: INFO: Deleting ReplicationController affinity-nodeport took: 14.744034ms
  Sep 11 01:54:43.821: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.884077ms
  STEP: Destroying namespace "services-1006" for this suite. @ 09/11/23 01:54:46.948
• [13.515 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/11/23 01:54:46.955
  Sep 11 01:54:46.955: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/11/23 01:54:46.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:46.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:54:46.976
  STEP: mirroring a new custom Endpoint @ 09/11/23 01:54:46.991
  Sep 11 01:54:47.003: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/11/23 01:54:49.008
  Sep 11 01:54:49.024: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 09/11/23 01:54:51.028
  Sep 11 01:54:51.045: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Sep 11 01:54:53.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-552" for this suite. @ 09/11/23 01:54:53.055
• [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 09/11/23 01:54:53.063
  Sep 11 01:54:53.063: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 01:54:53.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:53.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:54:53.086
  Sep 11 01:54:55.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-804" for this suite. @ 09/11/23 01:54:55.204
• [2.151 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/11/23 01:54:55.215
  Sep 11 01:54:55.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/11/23 01:54:55.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:54:55.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:54:55.242
  STEP: creating a target pod @ 09/11/23 01:54:55.246
  STEP: adding an ephemeral container @ 09/11/23 01:54:59.283
  STEP: checking pod container endpoints @ 09/11/23 01:55:01.304
  Sep 11 01:55:01.304: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7665 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 01:55:01.304: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 01:55:01.305: INFO: ExecWithOptions: Clientset creation
  Sep 11 01:55:01.305: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-7665/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 11 01:55:01.381: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/11/23 01:55:01.395
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/11/23 01:55:01.4
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/11/23 01:55:01.423
  Sep 11 01:55:01.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7665" for this suite. @ 09/11/23 01:55:01.446
• [6.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 09/11/23 01:55:01.475
  Sep 11 01:55:01.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 01:55:01.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:01.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:01.568
  STEP: Creating a ResourceQuota @ 09/11/23 01:55:01.572
  STEP: Getting a ResourceQuota @ 09/11/23 01:55:01.577
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/11/23 01:55:01.599
  STEP: Patching the ResourceQuota @ 09/11/23 01:55:01.614
  STEP: Deleting a Collection of ResourceQuotas @ 09/11/23 01:55:01.622
  STEP: Verifying the deleted ResourceQuota @ 09/11/23 01:55:01.648
  Sep 11 01:55:01.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7520" for this suite. @ 09/11/23 01:55:01.671
• [0.212 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/11/23 01:55:01.687
  Sep 11 01:55:01.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 01:55:01.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:01.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:01.754
  STEP: creating a Pod with a static label @ 09/11/23 01:55:01.762
  STEP: watching for Pod to be ready @ 09/11/23 01:55:01.771
  Sep 11 01:55:01.782: INFO: observed Pod pod-test in namespace pods-8933 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep 11 01:55:01.785: INFO: observed Pod pod-test in namespace pods-8933 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:01 +0000 UTC  }]
  Sep 11 01:55:01.807: INFO: observed Pod pod-test in namespace pods-8933 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:01 +0000 UTC  }]
  Sep 11 01:55:02.819: INFO: Found Pod pod-test in namespace pods-8933 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:01 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:02 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:55:01 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/11/23 01:55:02.823
  STEP: getting the Pod and ensuring that it's patched @ 09/11/23 01:55:02.844
  STEP: replacing the Pod's status Ready condition to False @ 09/11/23 01:55:02.849
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/11/23 01:55:02.876
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/11/23 01:55:02.877
  STEP: watching for the Pod to be deleted @ 09/11/23 01:55:02.888
  Sep 11 01:55:02.890: INFO: observed event type MODIFIED
  Sep 11 01:55:04.836: INFO: observed event type MODIFIED
  Sep 11 01:55:04.956: INFO: observed event type MODIFIED
  Sep 11 01:55:05.833: INFO: observed event type MODIFIED
  Sep 11 01:55:05.856: INFO: observed event type MODIFIED
  Sep 11 01:55:05.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8933" for this suite. @ 09/11/23 01:55:05.879
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/11/23 01:55:05.903
  Sep 11 01:55:05.903: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 01:55:05.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:05.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:05.935
  STEP: Creating configMap with name configmap-test-volume-map-b7b5daa9-d152-4e32-a530-156a6f948fc5 @ 09/11/23 01:55:05.939
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:55:05.945
  STEP: Saw pod success @ 09/11/23 01:55:09.984
  Sep 11 01:55:09.988: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-configmaps-2e3b9605-a10c-40d7-b93e-61aac31e695a container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 01:55:09.995
  Sep 11 01:55:10.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5171" for this suite. @ 09/11/23 01:55:10.026
• [4.136 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/11/23 01:55:10.038
  Sep 11 01:55:10.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/11/23 01:55:10.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:10.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:10.066
  STEP: Creating two CSIDrivers @ 09/11/23 01:55:10.07
  STEP: Getting "inline-driver-5c3c1be7-4006-4224-a53f-eaab32539e94" & "inline-driver-35e77238-fa8c-4975-b390-a24bc2040d93" @ 09/11/23 01:55:10.098
  STEP: Patching the CSIDriver "inline-driver-35e77238-fa8c-4975-b390-a24bc2040d93" @ 09/11/23 01:55:10.122
  STEP: Updating the CSIDriver "inline-driver-35e77238-fa8c-4975-b390-a24bc2040d93" @ 09/11/23 01:55:10.14
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3386" @ 09/11/23 01:55:10.154
  STEP: Deleting CSIDriver "inline-driver-5c3c1be7-4006-4224-a53f-eaab32539e94" @ 09/11/23 01:55:10.159
  STEP: Confirm deletion of CSIDriver "inline-driver-5c3c1be7-4006-4224-a53f-eaab32539e94" @ 09/11/23 01:55:10.17
  STEP: Deleting CSIDriver "inline-driver-35e77238-fa8c-4975-b390-a24bc2040d93" via DeleteCollection @ 09/11/23 01:55:10.175
  STEP: Confirm deletion of CSIDriver "inline-driver-35e77238-fa8c-4975-b390-a24bc2040d93" @ 09/11/23 01:55:10.188
  Sep 11 01:55:10.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3386" for this suite. @ 09/11/23 01:55:10.196
• [0.166 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 09/11/23 01:55:10.206
  Sep 11 01:55:10.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 01:55:10.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:10.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:10.235
  Sep 11 01:55:14.274: INFO: Got logs for pod "busybox-privileged-false-e6bc1a52-6c7b-40c9-b729-5192cafff5f4": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep 11 01:55:14.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-311" for this suite. @ 09/11/23 01:55:14.284
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 09/11/23 01:55:14.296
  Sep 11 01:55:14.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename job @ 09/11/23 01:55:14.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:14.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:14.324
  STEP: Creating a job @ 09/11/23 01:55:14.328
  STEP: Ensuring active pods == parallelism @ 09/11/23 01:55:14.338
  STEP: Orphaning one of the Job's Pods @ 09/11/23 01:55:16.347
  Sep 11 01:55:16.874: INFO: Successfully updated pod "adopt-release-bk698"
  STEP: Checking that the Job readopts the Pod @ 09/11/23 01:55:16.874
  STEP: Removing the labels from the Job's Pod @ 09/11/23 01:55:18.884
  Sep 11 01:55:19.420: INFO: Successfully updated pod "adopt-release-bk698"
  STEP: Checking that the Job releases the Pod @ 09/11/23 01:55:19.42
  Sep 11 01:55:21.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4406" for this suite. @ 09/11/23 01:55:21.448
• [7.161 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 09/11/23 01:55:21.458
  Sep 11 01:55:21.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename gc @ 09/11/23 01:55:21.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:21.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:21.489
  STEP: create the rc @ 09/11/23 01:55:21.499
  W0911 01:55:21.507892      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/11/23 01:55:26.298
  STEP: wait for the rc to be deleted @ 09/11/23 01:55:26.702
  Sep 11 01:55:28.272: INFO: 80 pods remaining
  Sep 11 01:55:28.272: INFO: 80 pods has nil DeletionTimestamp
  Sep 11 01:55:28.272: INFO: 
  Sep 11 01:55:29.336: INFO: 79 pods remaining
  Sep 11 01:55:29.336: INFO: 76 pods has nil DeletionTimestamp
  Sep 11 01:55:29.337: INFO: 
  Sep 11 01:55:30.239: INFO: 57 pods remaining
  Sep 11 01:55:30.240: INFO: 52 pods has nil DeletionTimestamp
  Sep 11 01:55:30.240: INFO: 
  Sep 11 01:55:30.908: INFO: 39 pods remaining
  Sep 11 01:55:30.908: INFO: 39 pods has nil DeletionTimestamp
  Sep 11 01:55:30.908: INFO: 
  Sep 11 01:55:31.899: INFO: 33 pods remaining
  Sep 11 01:55:31.899: INFO: 30 pods has nil DeletionTimestamp
  Sep 11 01:55:31.899: INFO: 
  Sep 11 01:55:32.815: INFO: 17 pods remaining
  Sep 11 01:55:32.815: INFO: 17 pods has nil DeletionTimestamp
  Sep 11 01:55:32.815: INFO: 
  Sep 11 01:55:33.943: INFO: 6 pods remaining
  Sep 11 01:55:33.943: INFO: 0 pods has nil DeletionTimestamp
  Sep 11 01:55:33.944: INFO: 
  STEP: Gathering metrics @ 09/11/23 01:55:35.01
  W0911 01:55:35.054035      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 11 01:55:35.054: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 01:55:35.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8366" for this suite. @ 09/11/23 01:55:35.09
• [13.681 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/11/23 01:55:35.141
  Sep 11 01:55:35.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 01:55:35.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:35.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:35.288
  STEP: creating a Deployment @ 09/11/23 01:55:35.299
  STEP: waiting for Deployment to be created @ 09/11/23 01:55:35.319
  STEP: waiting for all Replicas to be Ready @ 09/11/23 01:55:35.323
  Sep 11 01:55:35.326: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:35.326: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:35.371: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:35.372: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:35.457: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:35.458: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:35.517: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:35.517: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 01:55:36.207: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 11 01:55:36.207: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 11 01:55:36.603: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/11/23 01:55:36.603
  Sep 11 01:55:36.617: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/11/23 01:55:36.617
  Sep 11 01:55:36.619: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 0
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.620: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.621: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.644: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.644: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.687: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.687: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:36.739: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:36.740: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:36.750: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:36.750: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:38.223: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:38.223: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:38.246: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  STEP: listing Deployments @ 09/11/23 01:55:38.246
  Sep 11 01:55:38.252: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/11/23 01:55:38.252
  Sep 11 01:55:38.265: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/11/23 01:55:38.265
  Sep 11 01:55:38.275: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:38.286: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:38.320: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:38.364: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:38.379: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:39.625: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:39.648: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:39.667: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:39.677: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 01:55:41.238: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/11/23 01:55:41.286
  STEP: fetching the DeploymentStatus @ 09/11/23 01:55:41.299
  Sep 11 01:55:41.316: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:41.316: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:41.316: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:41.317: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:41.317: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 1
  Sep 11 01:55:41.317: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:41.317: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:41.317: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:41.318: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 2
  Sep 11 01:55:41.318: INFO: observed Deployment test-deployment in namespace deployment-4534 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/11/23 01:55:41.318
  Sep 11 01:55:41.332: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.333: INFO: observed event type MODIFIED
  Sep 11 01:55:41.334: INFO: observed event type MODIFIED
  Sep 11 01:55:41.334: INFO: observed event type MODIFIED
  Sep 11 01:55:41.334: INFO: observed event type MODIFIED
  Sep 11 01:55:41.334: INFO: observed event type MODIFIED
  Sep 11 01:55:41.339: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep 11 01:55:41.348: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76cdaaf1-8624-4ade-963d-be968007fa73",
      ResourceVersion: (string) (len=5) "10952",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "9dfe00b4-3a2a-4367-b2e8-662b4f0c05f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 64 66 65  30 30 62 34 2d 33 61 32  |":\"9dfe00b4-3a2|
              00000130  61 2d 34 33 36 37 2d 62  32 65 38 2d 36 36 32 62  |a-4367-b2e8-662b|
              00000140  34 66 30 63 30 35 66 38  5c 22 7d 22 3a 7b 7d 7d  |4f0c05f8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 11 01:55:41.355: INFO: pod: "test-deployment-64fd565c98-npmpv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-npmpv",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fac3f441-7067-4803-83de-1989c980a763",
      ResourceVersion: (string) (len=5) "10946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "76cdaaf1-8624-4ade-963d-be968007fa73",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 36 63 64 61 61 66 31  |uid\":\"76cdaaf1|
              000000a0  2d 38 36 32 34 2d 34 61  64 65 2d 39 36 33 64 2d  |-8624-4ade-963d-|
              000000b0  62 65 39 36 38 30 30 37  66 61 37 33 5c 22 7d 22  |be968007fa73\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  34 31 5c 22 7d 22 3a 7b  |10.42.2.41\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jccq8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jccq8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.2.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829994137,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://d852911fbe4c22ff90f57bf8caf2a3944b7ea64c0f7cb2d090bf5461a8d64d7c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 11 01:55:41.363: INFO: pod: "test-deployment-64fd565c98-p9f72":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-p9f72",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60ccbe2b-1e25-46bd-809a-a228e39714b8",
      ResourceVersion: (string) (len=5) "10867",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "76cdaaf1-8624-4ade-963d-be968007fa73",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 36 63 64 61 61 66 31  |uid\":\"76cdaaf1|
              000000a0  2d 38 36 32 34 2d 34 61  64 65 2d 39 36 33 64 2d  |-8624-4ade-963d-|
              000000b0  62 65 39 36 38 30 30 37  66 61 37 33 5c 22 7d 22  |be968007fa73\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=479) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              00000130  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              00000140  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000160  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000170  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000180  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              00000190  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001a0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001b0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001c0  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              000001d0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nghgj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nghgj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829994139,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829994140,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://6af75decd358d8d1dc2dd80803b0f8b90c173b3568c6d2c0e0118de003adb795"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://6af75decd358d8d1dc2dd80803b0f8b90c173b3568c6d2c0e0118de003adb795",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 11 01:55:41.371: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58e6f47f-2b8f-4c5e-9852-a8f5c6365428",
      ResourceVersion: (string) (len=5) "10696",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994135,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "9dfe00b4-3a2a-4367-b2e8-662b4f0c05f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 64 66 65  30 30 62 34 2d 33 61 32  |":\"9dfe00b4-3a2|
              00000130  61 2d 34 33 36 37 2d 62  32 65 38 2d 36 36 32 62  |a-4367-b2e8-662b|
              00000140  34 66 30 63 30 35 66 38  5c 22 7d 22 3a 7b 7d 7d  |4f0c05f8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 11 01:55:41.381: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc8e83fa-8279-49e9-bf56-ecf1e9dfbf55",
      ResourceVersion: (string) (len=5) "10940",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "9dfe00b4-3a2a-4367-b2e8-662b4f0c05f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 64 66 65  30 30 62 34 2d 33 61 32  |":\"9dfe00b4-3a2|
              00000130  61 2d 34 33 36 37 2d 62  32 65 38 2d 36 36 32 62  |a-4367-b2e8-662b|
              00000140  34 66 30 63 30 35 66 38  5c 22 7d 22 3a 7b 7d 7d  |4f0c05f8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 11 01:55:41.396: INFO: pod: "test-deployment-79ff746c4-c989w":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-c989w",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f27fe99-9e23-4609-b0c5-04b901fa639d",
      ResourceVersion: (string) (len=5) "10968",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "cc8e83fa-8279-49e9-bf56-ecf1e9dfbf55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 63 38 65 38 33 66 61  |uid\":\"cc8e83fa|
              000000a0  2d 38 32 37 39 2d 34 39  65 39 2d 62 66 35 36 2d  |-8279-49e9-bf56-|
              000000b0  65 63 66 31 65 39 64 66  62 66 35 35 5c 22 7d 22  |ecf1e9dfbf55\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  35 30 5c 22 7d 22 3a 7b  |10.42.1.50\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gt6jz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gt6jz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.1.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829994139,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d79b055ae2922c0fc778c3dcc05cda4b27c47791241a63c91aa9cde89e5cf783",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 11 01:55:41.402: INFO: pod: "test-deployment-79ff746c4-tqsrx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-tqsrx",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-4534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d7fbbac-521c-4107-8a30-9acde18d58e7",
      ResourceVersion: (string) (len=5) "10967",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "cc8e83fa-8279-49e9-bf56-ecf1e9dfbf55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 63 38 65 38 33 66 61  |uid\":\"cc8e83fa|
              000000a0  2d 38 32 37 39 2d 34 39  65 39 2d 62 66 35 36 2d  |-8279-49e9-bf56-|
              000000b0  65 63 66 31 65 39 64 66  62 66 35 35 5c 22 7d 22  |ecf1e9dfbf55\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  35 39 5c 22 7d 22 3a 7b  |10.42.3.59\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nx9jh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nx9jh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829994139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829994139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829994140,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ad11bf8587b760153b7b745bd901490dbcaaa13768efc0376dad49151f1c7a85",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 11 01:55:41.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4534" for this suite. @ 09/11/23 01:55:41.431
• [6.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 09/11/23 01:55:41.455
  Sep 11 01:55:41.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename controllerrevisions @ 09/11/23 01:55:41.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:41.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:41.489
  STEP: Creating DaemonSet "e2e-7dnfx-daemon-set" @ 09/11/23 01:55:41.529
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 01:55:41.538
  Sep 11 01:55:41.554: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 0
  Sep 11 01:55:41.554: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 01:55:42.565: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 0
  Sep 11 01:55:42.565: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 01:55:44.442: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 2
  Sep 11 01:55:44.442: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 01:55:44.572: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 2
  Sep 11 01:55:44.573: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 01:55:45.569: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 2
  Sep 11 01:55:45.570: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 01:55:46.565: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 2
  Sep 11 01:55:46.565: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 01:55:47.572: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 3
  Sep 11 01:55:47.572: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 01:55:48.584: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 4
  Sep 11 01:55:48.584: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset e2e-7dnfx-daemon-set
  STEP: Confirm DaemonSet "e2e-7dnfx-daemon-set" successfully created with "daemonset-name=e2e-7dnfx-daemon-set" label @ 09/11/23 01:55:48.588
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-7dnfx-daemon-set" @ 09/11/23 01:55:48.604
  Sep 11 01:55:48.609: INFO: Located ControllerRevision: "e2e-7dnfx-daemon-set-c477c65c8"
  STEP: Patching ControllerRevision "e2e-7dnfx-daemon-set-c477c65c8" @ 09/11/23 01:55:48.625
  Sep 11 01:55:48.637: INFO: e2e-7dnfx-daemon-set-c477c65c8 has been patched
  STEP: Create a new ControllerRevision @ 09/11/23 01:55:48.637
  Sep 11 01:55:48.648: INFO: Created ControllerRevision: e2e-7dnfx-daemon-set-548d5494b4
  STEP: Confirm that there are two ControllerRevisions @ 09/11/23 01:55:48.648
  Sep 11 01:55:48.648: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 01:55:48.660: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-7dnfx-daemon-set-c477c65c8" @ 09/11/23 01:55:48.66
  STEP: Confirm that there is only one ControllerRevision @ 09/11/23 01:55:48.666
  Sep 11 01:55:48.666: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 01:55:48.676: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-7dnfx-daemon-set-548d5494b4" @ 09/11/23 01:55:48.68
  Sep 11 01:55:48.713: INFO: e2e-7dnfx-daemon-set-548d5494b4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/11/23 01:55:48.713
  W0911 01:55:48.724778      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/11/23 01:55:48.724
  Sep 11 01:55:48.724: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 01:55:49.731: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 01:55:49.764: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-7dnfx-daemon-set-548d5494b4=updated" @ 09/11/23 01:55:49.764
  STEP: Confirm that there is only one ControllerRevision @ 09/11/23 01:55:49.963
  Sep 11 01:55:49.963: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 01:55:49.966: INFO: Found 1 ControllerRevisions
  Sep 11 01:55:49.969: INFO: ControllerRevision "e2e-7dnfx-daemon-set-675d66c8b5" has revision 3
  STEP: Deleting DaemonSet "e2e-7dnfx-daemon-set" @ 09/11/23 01:55:49.972
  STEP: deleting DaemonSet.extensions e2e-7dnfx-daemon-set in namespace controllerrevisions-4744, will wait for the garbage collector to delete the pods @ 09/11/23 01:55:49.973
  Sep 11 01:55:50.181: INFO: Deleting DaemonSet.extensions e2e-7dnfx-daemon-set took: 154.772726ms
  Sep 11 01:55:50.282: INFO: Terminating DaemonSet.extensions e2e-7dnfx-daemon-set pods took: 101.009958ms
  Sep 11 01:55:58.687: INFO: Number of nodes with available pods controlled by daemonset e2e-7dnfx-daemon-set: 0
  Sep 11 01:55:58.687: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-7dnfx-daemon-set
  Sep 11 01:55:58.690: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11550"},"items":null}

  Sep 11 01:55:58.693: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11550"},"items":null}

  Sep 11 01:55:58.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4744" for this suite. @ 09/11/23 01:55:58.715
• [17.270 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 09/11/23 01:55:58.725
  Sep 11 01:55:58.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/11/23 01:55:58.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:55:58.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:55:58.752
  STEP: create the container to handle the HTTPGet hook request. @ 09/11/23 01:55:58.759
  STEP: create the pod with lifecycle hook @ 09/11/23 01:56:04.829
  STEP: check poststart hook @ 09/11/23 01:56:06.846
  STEP: delete the pod with lifecycle hook @ 09/11/23 01:56:06.859
  Sep 11 01:56:17.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8708" for this suite. @ 09/11/23 01:56:17.396
• [18.680 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/11/23 01:56:17.406
  Sep 11 01:56:17.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 01:56:17.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:56:17.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:56:17.44
  STEP: Setting up server cert @ 09/11/23 01:56:17.478
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 01:56:18.086
  STEP: Deploying the webhook pod @ 09/11/23 01:56:18.095
  STEP: Wait for the deployment to be ready @ 09/11/23 01:56:18.109
  Sep 11 01:56:18.120: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 01:56:20.135
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 01:56:20.15
  Sep 11 01:56:21.150: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/11/23 01:56:21.159
  STEP: create a namespace for the webhook @ 09/11/23 01:56:21.183
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/11/23 01:56:21.208
  Sep 11 01:56:21.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7257" for this suite. @ 09/11/23 01:56:21.296
  STEP: Destroying namespace "webhook-markers-9668" for this suite. @ 09/11/23 01:56:21.313
  STEP: Destroying namespace "fail-closed-namespace-2908" for this suite. @ 09/11/23 01:56:21.33
• [3.933 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/11/23 01:56:21.341
  Sep 11 01:56:21.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:56:21.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:56:21.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:56:21.368
  STEP: Creating the pod @ 09/11/23 01:56:21.372
  Sep 11 01:56:23.917: INFO: Successfully updated pod "annotationupdate6adfa544-2c6c-4fd6-b5b1-f3035026116b"
  Sep 11 01:56:25.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7968" for this suite. @ 09/11/23 01:56:25.947
• [4.616 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/11/23 01:56:25.959
  Sep 11 01:56:25.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 01:56:25.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:56:25.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:56:25.992
  STEP: Creating a pod to test env composition @ 09/11/23 01:56:25.999
  STEP: Saw pod success @ 09/11/23 01:56:30.04
  Sep 11 01:56:30.044: INFO: Trying to get logs from node ip-172-31-3-111 pod var-expansion-96401bfd-8ba6-4699-bc5b-b5079798b372 container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 01:56:30.055
  Sep 11 01:56:30.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5088" for this suite. @ 09/11/23 01:56:30.089
• [4.140 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 09/11/23 01:56:30.099
  Sep 11 01:56:30.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 01:56:30.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:56:30.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:56:30.139
  STEP: Creating projection with secret that has name secret-emptykey-test-37bff520-b6b7-4404-a724-f1dea234b168 @ 09/11/23 01:56:30.156
  Sep 11 01:56:30.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4695" for this suite. @ 09/11/23 01:56:30.191
• [0.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 09/11/23 01:56:30.211
  Sep 11 01:56:30.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 01:56:30.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:56:30.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:56:30.262
  STEP: Read namespace status @ 09/11/23 01:56:30.273
  Sep 11 01:56:30.284: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/11/23 01:56:30.284
  Sep 11 01:56:30.297: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/11/23 01:56:30.297
  Sep 11 01:56:30.339: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep 11 01:56:30.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7992" for this suite. @ 09/11/23 01:56:30.346
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/11/23 01:56:30.36
  Sep 11 01:56:30.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 01:56:30.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:56:30.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:56:30.412
  STEP: Creating pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150 @ 09/11/23 01:56:30.425
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 01:56:32.462
  Sep 11 01:56:32.466: INFO: Initial restart count of pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 is 0
  Sep 11 01:56:32.470: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:34.474: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:36.478: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:38.482: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:40.488: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:42.492: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:44.496: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:46.501: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:48.510: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:50.516: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:52.525: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:54.529: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:56.534: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:56:58.538: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:00.543: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:02.549: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:04.553: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:06.558: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:08.563: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:10.569: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:12.574: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:14.579: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:16.583: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:18.587: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:20.591: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:22.596: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:24.601: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:26.608: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:28.613: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:30.618: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:32.622: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:34.627: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:36.630: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:38.636: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:40.642: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:42.665: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:44.670: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:46.674: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:48.678: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:50.683: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:52.687: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:54.693: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:56.697: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:57:58.702: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:00.706: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:02.710: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:04.714: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:06.719: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:08.724: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:10.729: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:12.734: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:14.741: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:16.745: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:18.750: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:20.756: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:22.760: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:24.768: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:26.772: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:28.777: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:30.782: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:32.787: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:34.791: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:36.795: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:38.799: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:40.804: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:42.812: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:44.817: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:46.822: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:48.829: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:50.835: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:52.838: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:54.843: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:56.848: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:58:58.853: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:00.874: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:02.879: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:04.883: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:06.888: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:08.893: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:10.898: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:12.903: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:14.908: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:16.914: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:18.919: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:20.923: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:22.928: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:24.933: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:26.937: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:28.949: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:30.956: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:32.961: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:34.965: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:36.970: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:38.975: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:40.981: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:42.987: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:44.991: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:46.997: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:49.001: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:51.007: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:53.014: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:55.019: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:57.024: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 01:59:59.028: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:01.034: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:03.042: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:05.046: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:07.052: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:09.058: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:11.070: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:13.078: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:15.086: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:17.097: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:19.102: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:21.107: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:23.112: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:25.117: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:27.122: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:29.130: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:31.137: INFO: Get pod busybox-41f82696-352b-4c5d-974e-23b1397b1c12 in namespace container-probe-1150
  Sep 11 02:00:33.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:00:33.143
  STEP: Destroying namespace "container-probe-1150" for this suite. @ 09/11/23 02:00:33.164
• [242.823 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/11/23 02:00:33.183
  Sep 11 02:00:33.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename containers @ 09/11/23 02:00:33.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:00:33.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:00:33.27
  STEP: Creating a pod to test override all @ 09/11/23 02:00:33.274
  STEP: Saw pod success @ 09/11/23 02:00:37.316
  Sep 11 02:00:37.326: INFO: Trying to get logs from node ip-172-31-3-111 pod client-containers-dd5758af-966d-4ddb-961c-1e1ec122c46b container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:00:37.349
  Sep 11 02:00:37.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8933" for this suite. @ 09/11/23 02:00:37.375
• [4.201 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/11/23 02:00:37.384
  Sep 11 02:00:37.384: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 02:00:37.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:00:37.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:00:37.412
  STEP: Creating simple DaemonSet "daemon-set" @ 09/11/23 02:00:37.455
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 02:00:37.463
  Sep 11 02:00:37.479: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:00:37.479: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  Sep 11 02:00:38.487: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 11 02:00:38.488: INFO: Node ip-172-31-12-171 is running 0 daemon pod, expected 1
  Sep 11 02:00:39.492: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 02:00:39.492: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 09/11/23 02:00:39.496
  Sep 11 02:00:39.501: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/11/23 02:00:39.501
  Sep 11 02:00:39.512: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/11/23 02:00:39.512
  Sep 11 02:00:39.514: INFO: Observed &DaemonSet event: ADDED
  Sep 11 02:00:39.514: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.514: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.514: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.515: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.515: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.515: INFO: Found daemon set daemon-set in namespace daemonsets-2564 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 11 02:00:39.515: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/11/23 02:00:39.515
  STEP: watching for the daemon set status to be patched @ 09/11/23 02:00:39.524
  Sep 11 02:00:39.526: INFO: Observed &DaemonSet event: ADDED
  Sep 11 02:00:39.526: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.527: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.527: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.527: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.527: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.527: INFO: Observed daemon set daemon-set in namespace daemonsets-2564 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 11 02:00:39.527: INFO: Observed &DaemonSet event: MODIFIED
  Sep 11 02:00:39.527: INFO: Found daemon set daemon-set in namespace daemonsets-2564 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep 11 02:00:39.527: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 02:00:39.533
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2564, will wait for the garbage collector to delete the pods @ 09/11/23 02:00:39.533
  Sep 11 02:00:39.600: INFO: Deleting DaemonSet.extensions daemon-set took: 7.667851ms
  Sep 11 02:00:39.701: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.628451ms
  Sep 11 02:00:40.905: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:00:40.905: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 02:00:40.911: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12881"},"items":null}

  Sep 11 02:00:40.915: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12881"},"items":null}

  Sep 11 02:00:40.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2564" for this suite. @ 09/11/23 02:00:40.941
• [3.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/11/23 02:00:40.955
  Sep 11 02:00:40.955: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:00:40.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:00:40.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:00:40.978
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:00:40.981
  STEP: Saw pod success @ 09/11/23 02:00:45.018
  Sep 11 02:00:45.021: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-cf1769da-1f8f-4e6c-90df-9a3e0d849a94 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:00:45.029
  Sep 11 02:00:45.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2714" for this suite. @ 09/11/23 02:00:45.054
• [4.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/11/23 02:00:45.065
  Sep 11 02:00:45.065: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:00:45.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:00:45.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:00:45.096
  STEP: Creating configMap with name configmap-test-volume-map-ae412a82-5098-4281-b96c-9c9cd649f026 @ 09/11/23 02:00:45.1
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:00:45.107
  STEP: Saw pod success @ 09/11/23 02:00:49.14
  Sep 11 02:00:49.144: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-558a8228-b479-4170-8380-18e998036699 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:00:49.155
  Sep 11 02:00:49.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4152" for this suite. @ 09/11/23 02:00:49.189
• [4.133 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/11/23 02:00:49.199
  Sep 11 02:00:49.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 02:00:49.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:00:49.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:00:49.23
  STEP: Creating a test headless service @ 09/11/23 02:00:49.238
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7907.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7907.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7907.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7907.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 203.150.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.150.203_udp@PTR;check="$$(dig +tcp +noall +answer +search 203.150.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.150.203_tcp@PTR;sleep 1; done
   @ 09/11/23 02:00:49.278
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7907.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7907.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7907.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7907.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7907.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 203.150.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.150.203_udp@PTR;check="$$(dig +tcp +noall +answer +search 203.150.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.150.203_tcp@PTR;sleep 1; done
   @ 09/11/23 02:00:49.279
  STEP: creating a pod to probe DNS @ 09/11/23 02:00:49.279
  STEP: submitting the pod to kubernetes @ 09/11/23 02:00:49.279
  STEP: retrieving the pod @ 09/11/23 02:01:01.341
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:01:01.346
  Sep 11 02:01:01.360: INFO: Unable to read wheezy_udp@dns-test-service.dns-7907.svc.cluster.local from pod dns-7907/dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3: the server could not find the requested resource (get pods dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3)
  Sep 11 02:01:01.366: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7907.svc.cluster.local from pod dns-7907/dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3: the server could not find the requested resource (get pods dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3)
  Sep 11 02:01:01.372: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local from pod dns-7907/dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3: the server could not find the requested resource (get pods dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3)
  Sep 11 02:01:01.379: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local from pod dns-7907/dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3: the server could not find the requested resource (get pods dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3)
  Sep 11 02:01:01.466: INFO: Lookups using dns-7907/dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3 failed for: [wheezy_udp@dns-test-service.dns-7907.svc.cluster.local wheezy_tcp@dns-test-service.dns-7907.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7907.svc.cluster.local]

  Sep 11 02:01:01.484: INFO: Pod client logs for webserver: 
  Sep 11 02:01:01.495: INFO: Pod client logs for querier: 
  Sep 11 02:01:01.503: INFO: Pod client logs for jessie-querier: 
  Sep 11 02:01:06.618: INFO: DNS probes using dns-7907/dns-test-9f082dee-42f5-4d2c-9a6f-91d8b03dcee3 succeeded

  Sep 11 02:01:06.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:01:06.629
  STEP: deleting the test service @ 09/11/23 02:01:06.657
  STEP: deleting the test headless service @ 09/11/23 02:01:06.725
  STEP: Destroying namespace "dns-7907" for this suite. @ 09/11/23 02:01:06.749
• [17.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 09/11/23 02:01:06.767
  Sep 11 02:01:06.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename job @ 09/11/23 02:01:06.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:01:06.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:01:06.798
  STEP: Creating a job @ 09/11/23 02:01:06.802
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/11/23 02:01:06.811
  STEP: patching /status @ 09/11/23 02:01:10.817
  STEP: updating /status @ 09/11/23 02:01:10.844
  STEP: get /status @ 09/11/23 02:01:10.862
  Sep 11 02:01:10.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9529" for this suite. @ 09/11/23 02:01:10.893
• [4.145 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 09/11/23 02:01:10.913
  Sep 11 02:01:10.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 02:01:10.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:01:10.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:01:10.957
  STEP: Creating service test in namespace statefulset-9547 @ 09/11/23 02:01:10.969
  STEP: Creating statefulset ss in namespace statefulset-9547 @ 09/11/23 02:01:10.987
  Sep 11 02:01:11.046: INFO: Found 0 stateful pods, waiting for 1
  Sep 11 02:01:21.051: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/11/23 02:01:21.058
  STEP: updating a scale subresource @ 09/11/23 02:01:21.063
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/11/23 02:01:21.07
  STEP: Patch a scale subresource @ 09/11/23 02:01:21.075
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/11/23 02:01:21.087
  Sep 11 02:01:21.093: INFO: Deleting all statefulset in ns statefulset-9547
  Sep 11 02:01:21.099: INFO: Scaling statefulset ss to 0
  Sep 11 02:01:31.163: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 02:01:31.167: INFO: Deleting statefulset ss
  Sep 11 02:01:31.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9547" for this suite. @ 09/11/23 02:01:31.189
• [20.284 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/11/23 02:01:31.197
  Sep 11 02:01:31.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:01:31.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:01:31.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:01:31.269
  STEP: Setting up server cert @ 09/11/23 02:01:31.3
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:01:31.76
  STEP: Deploying the webhook pod @ 09/11/23 02:01:31.771
  STEP: Wait for the deployment to be ready @ 09/11/23 02:01:31.794
  Sep 11 02:01:31.820: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 02:01:33.834
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:01:33.846
  Sep 11 02:01:34.847: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/11/23 02:01:34.854
  Sep 11 02:01:34.878: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/11/23 02:01:34.994
  Sep 11 02:01:34.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:01:35.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2505" for this suite. @ 09/11/23 02:01:35.118
  STEP: Destroying namespace "webhook-markers-2224" for this suite. @ 09/11/23 02:01:35.136
• [3.948 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/11/23 02:01:35.145
  Sep 11 02:01:35.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename subpath @ 09/11/23 02:01:35.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:01:35.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:01:35.178
  STEP: Setting up data @ 09/11/23 02:01:35.185
  STEP: Creating pod pod-subpath-test-secret-l9mh @ 09/11/23 02:01:35.209
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 02:01:35.209
  STEP: Saw pod success @ 09/11/23 02:01:59.432
  Sep 11 02:01:59.436: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-subpath-test-secret-l9mh container test-container-subpath-secret-l9mh: <nil>
  STEP: delete the pod @ 09/11/23 02:01:59.456
  STEP: Deleting pod pod-subpath-test-secret-l9mh @ 09/11/23 02:01:59.481
  Sep 11 02:01:59.481: INFO: Deleting pod "pod-subpath-test-secret-l9mh" in namespace "subpath-4474"
  Sep 11 02:01:59.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4474" for this suite. @ 09/11/23 02:01:59.494
• [24.360 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 09/11/23 02:01:59.506
  Sep 11 02:01:59.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 02:01:59.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:01:59.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:01:59.536
  STEP: Creating replication controller my-hostname-basic-f02e8cd9-b852-41d4-98be-7bff7ece689b @ 09/11/23 02:01:59.54
  Sep 11 02:01:59.554: INFO: Pod name my-hostname-basic-f02e8cd9-b852-41d4-98be-7bff7ece689b: Found 0 pods out of 1
  Sep 11 02:02:04.564: INFO: Pod name my-hostname-basic-f02e8cd9-b852-41d4-98be-7bff7ece689b: Found 1 pods out of 1
  Sep 11 02:02:04.564: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-f02e8cd9-b852-41d4-98be-7bff7ece689b" are running
  Sep 11 02:02:04.569: INFO: Pod "my-hostname-basic-f02e8cd9-b852-41d4-98be-7bff7ece689b-t7d7c" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:01:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:02:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:02:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:01:59 +0000 UTC Reason: Message:}])
  Sep 11 02:02:04.570: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/11/23 02:02:04.57
  Sep 11 02:02:04.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1844" for this suite. @ 09/11/23 02:02:04.597
• [5.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 09/11/23 02:02:04.608
  Sep 11 02:02:04.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename gc @ 09/11/23 02:02:04.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:02:04.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:02:04.638
  STEP: create the rc1 @ 09/11/23 02:02:04.651
  STEP: create the rc2 @ 09/11/23 02:02:04.664
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/11/23 02:02:08.981
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/11/23 02:02:13.09
  STEP: wait for the rc to be deleted @ 09/11/23 02:02:13.167
  Sep 11 02:02:18.199: INFO: 62 pods remaining
  Sep 11 02:02:18.199: INFO: 62 pods has nil DeletionTimestamp
  Sep 11 02:02:18.199: INFO: 
  STEP: Gathering metrics @ 09/11/23 02:02:23.182
  W0911 02:02:23.189833      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 11 02:02:23.189: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 02:02:23.189: INFO: Deleting pod "simpletest-rc-to-be-deleted-27bnr" in namespace "gc-7289"
  Sep 11 02:02:23.216: INFO: Deleting pod "simpletest-rc-to-be-deleted-42znq" in namespace "gc-7289"
  Sep 11 02:02:23.243: INFO: Deleting pod "simpletest-rc-to-be-deleted-4425q" in namespace "gc-7289"
  Sep 11 02:02:23.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-4fhv7" in namespace "gc-7289"
  Sep 11 02:02:23.290: INFO: Deleting pod "simpletest-rc-to-be-deleted-4flqv" in namespace "gc-7289"
  Sep 11 02:02:23.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-4fzsb" in namespace "gc-7289"
  Sep 11 02:02:23.336: INFO: Deleting pod "simpletest-rc-to-be-deleted-4sb7c" in namespace "gc-7289"
  Sep 11 02:02:23.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-5pzc8" in namespace "gc-7289"
  Sep 11 02:02:23.388: INFO: Deleting pod "simpletest-rc-to-be-deleted-5r8t5" in namespace "gc-7289"
  Sep 11 02:02:23.428: INFO: Deleting pod "simpletest-rc-to-be-deleted-5tndt" in namespace "gc-7289"
  Sep 11 02:02:23.464: INFO: Deleting pod "simpletest-rc-to-be-deleted-5tqlc" in namespace "gc-7289"
  Sep 11 02:02:23.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-67m5k" in namespace "gc-7289"
  Sep 11 02:02:23.524: INFO: Deleting pod "simpletest-rc-to-be-deleted-67w55" in namespace "gc-7289"
  Sep 11 02:02:23.562: INFO: Deleting pod "simpletest-rc-to-be-deleted-69f58" in namespace "gc-7289"
  Sep 11 02:02:23.590: INFO: Deleting pod "simpletest-rc-to-be-deleted-6kgpp" in namespace "gc-7289"
  Sep 11 02:02:23.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-6n4ts" in namespace "gc-7289"
  Sep 11 02:02:23.680: INFO: Deleting pod "simpletest-rc-to-be-deleted-6sbr5" in namespace "gc-7289"
  Sep 11 02:02:23.738: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cbcw" in namespace "gc-7289"
  Sep 11 02:02:23.782: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lf26" in namespace "gc-7289"
  Sep 11 02:02:23.858: INFO: Deleting pod "simpletest-rc-to-be-deleted-7sprm" in namespace "gc-7289"
  Sep 11 02:02:23.930: INFO: Deleting pod "simpletest-rc-to-be-deleted-84n62" in namespace "gc-7289"
  Sep 11 02:02:24.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jmqs" in namespace "gc-7289"
  Sep 11 02:02:24.177: INFO: Deleting pod "simpletest-rc-to-be-deleted-8wmnr" in namespace "gc-7289"
  Sep 11 02:02:24.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-9596x" in namespace "gc-7289"
  Sep 11 02:02:24.277: INFO: Deleting pod "simpletest-rc-to-be-deleted-9d9ls" in namespace "gc-7289"
  Sep 11 02:02:24.323: INFO: Deleting pod "simpletest-rc-to-be-deleted-9dvn2" in namespace "gc-7289"
  Sep 11 02:02:24.364: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hbgt" in namespace "gc-7289"
  Sep 11 02:02:24.403: INFO: Deleting pod "simpletest-rc-to-be-deleted-9md7v" in namespace "gc-7289"
  Sep 11 02:02:24.496: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ptrn" in namespace "gc-7289"
  Sep 11 02:02:24.588: INFO: Deleting pod "simpletest-rc-to-be-deleted-9q8hf" in namespace "gc-7289"
  Sep 11 02:02:24.666: INFO: Deleting pod "simpletest-rc-to-be-deleted-9sc2q" in namespace "gc-7289"
  Sep 11 02:02:24.725: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdvs6" in namespace "gc-7289"
  Sep 11 02:02:24.854: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpzmz" in namespace "gc-7289"
  Sep 11 02:02:24.915: INFO: Deleting pod "simpletest-rc-to-be-deleted-bw6kr" in namespace "gc-7289"
  Sep 11 02:02:24.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-cdcwv" in namespace "gc-7289"
  Sep 11 02:02:25.043: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7v29" in namespace "gc-7289"
  Sep 11 02:02:25.124: INFO: Deleting pod "simpletest-rc-to-be-deleted-dj49x" in namespace "gc-7289"
  Sep 11 02:02:25.216: INFO: Deleting pod "simpletest-rc-to-be-deleted-fnwxp" in namespace "gc-7289"
  Sep 11 02:02:25.348: INFO: Deleting pod "simpletest-rc-to-be-deleted-fz9nq" in namespace "gc-7289"
  Sep 11 02:02:25.433: INFO: Deleting pod "simpletest-rc-to-be-deleted-gg4lm" in namespace "gc-7289"
  Sep 11 02:02:25.477: INFO: Deleting pod "simpletest-rc-to-be-deleted-gnrsf" in namespace "gc-7289"
  Sep 11 02:02:25.519: INFO: Deleting pod "simpletest-rc-to-be-deleted-h9nvq" in namespace "gc-7289"
  Sep 11 02:02:25.545: INFO: Deleting pod "simpletest-rc-to-be-deleted-hkgvq" in namespace "gc-7289"
  Sep 11 02:02:25.640: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnsxz" in namespace "gc-7289"
  Sep 11 02:02:25.704: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvbq6" in namespace "gc-7289"
  Sep 11 02:02:25.773: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvckn" in namespace "gc-7289"
  Sep 11 02:02:25.826: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvkhm" in namespace "gc-7289"
  Sep 11 02:02:25.880: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbtmh" in namespace "gc-7289"
  Sep 11 02:02:25.926: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfpj8" in namespace "gc-7289"
  Sep 11 02:02:25.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-jjcqt" in namespace "gc-7289"
  Sep 11 02:02:26.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7289" for this suite. @ 09/11/23 02:02:26.061
• [21.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/11/23 02:02:26.099
  Sep 11 02:02:26.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename proxy @ 09/11/23 02:02:26.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:02:26.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:02:26.198
  Sep 11 02:02:26.203: INFO: Creating pod...
  Sep 11 02:02:28.276: INFO: Creating service...
  Sep 11 02:02:28.288: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/pods/agnhost/proxy?method=DELETE
  Sep 11 02:02:28.307: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 02:02:28.307: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/pods/agnhost/proxy?method=OPTIONS
  Sep 11 02:02:28.313: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 02:02:28.313: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/pods/agnhost/proxy?method=PATCH
  Sep 11 02:02:28.319: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 02:02:28.319: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/pods/agnhost/proxy?method=POST
  Sep 11 02:02:28.325: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 02:02:28.325: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/pods/agnhost/proxy?method=PUT
  Sep 11 02:02:28.330: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 02:02:28.330: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep 11 02:02:28.341: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 02:02:28.341: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep 11 02:02:28.348: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 02:02:28.348: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep 11 02:02:28.355: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 02:02:28.356: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/services/e2e-proxy-test-service/proxy?method=POST
  Sep 11 02:02:28.363: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 02:02:28.363: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/services/e2e-proxy-test-service/proxy?method=PUT
  Sep 11 02:02:28.369: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 02:02:28.369: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/pods/agnhost/proxy?method=GET
  Sep 11 02:02:28.373: INFO: http.Client request:GET StatusCode:301
  Sep 11 02:02:28.373: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/services/e2e-proxy-test-service/proxy?method=GET
  Sep 11 02:02:28.378: INFO: http.Client request:GET StatusCode:301
  Sep 11 02:02:28.378: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/pods/agnhost/proxy?method=HEAD
  Sep 11 02:02:28.381: INFO: http.Client request:HEAD StatusCode:301
  Sep 11 02:02:28.381: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2491/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep 11 02:02:28.388: INFO: http.Client request:HEAD StatusCode:301
  Sep 11 02:02:28.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2491" for this suite. @ 09/11/23 02:02:28.396
• [2.305 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/11/23 02:02:28.405
  Sep 11 02:02:28.405: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 02:02:28.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:02:28.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:02:28.435
  Sep 11 02:02:32.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3519" for this suite. @ 09/11/23 02:02:32.472
• [4.075 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 09/11/23 02:02:32.481
  Sep 11 02:02:32.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 02:02:32.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:02:32.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:02:32.514
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/11/23 02:02:32.52
  STEP: Saw pod success @ 09/11/23 02:02:36.555
  Sep 11 02:02:36.560: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-4366c98e-ad87-426b-8da7-50ccda068628 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 02:02:36.569
  Sep 11 02:02:36.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2755" for this suite. @ 09/11/23 02:02:36.594
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 09/11/23 02:02:36.607
  Sep 11 02:02:36.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:02:36.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:02:36.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:02:36.639
  STEP: Creating a pod to test downward api env vars @ 09/11/23 02:02:36.646
  STEP: Saw pod success @ 09/11/23 02:02:40.682
  Sep 11 02:02:40.689: INFO: Trying to get logs from node ip-172-31-3-111 pod downward-api-1f120ea3-6357-4cc7-990c-577ec5f996dc container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 02:02:40.706
  Sep 11 02:02:40.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3648" for this suite. @ 09/11/23 02:02:40.775
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 09/11/23 02:02:40.8
  Sep 11 02:02:40.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 02:02:40.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:02:40.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:02:40.882
  STEP: referencing a single matching pod @ 09/11/23 02:02:46.195
  STEP: referencing matching pods with named port @ 09/11/23 02:02:51.213
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/11/23 02:02:56.222
  STEP: recreating EndpointSlices after they've been deleted @ 09/11/23 02:03:01.231
  Sep 11 02:03:01.261: INFO: EndpointSlice for Service endpointslice-3016/example-named-port not found
  Sep 11 02:03:11.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3016" for this suite. @ 09/11/23 02:03:11.297
• [30.510 seconds]
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/11/23 02:03:11.311
  Sep 11 02:03:11.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename certificates @ 09/11/23 02:03:11.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:11.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:11.35
  STEP: getting /apis @ 09/11/23 02:03:12.275
  STEP: getting /apis/certificates.k8s.io @ 09/11/23 02:03:12.281
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/11/23 02:03:12.283
  STEP: creating @ 09/11/23 02:03:12.285
  STEP: getting @ 09/11/23 02:03:12.317
  STEP: listing @ 09/11/23 02:03:12.328
  STEP: watching @ 09/11/23 02:03:12.332
  Sep 11 02:03:12.333: INFO: starting watch
  STEP: patching @ 09/11/23 02:03:12.335
  STEP: updating @ 09/11/23 02:03:12.345
  Sep 11 02:03:12.353: INFO: waiting for watch events with expected annotations
  Sep 11 02:03:12.353: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/11/23 02:03:12.354
  STEP: patching /approval @ 09/11/23 02:03:12.357
  STEP: updating /approval @ 09/11/23 02:03:12.366
  STEP: getting /status @ 09/11/23 02:03:12.375
  STEP: patching /status @ 09/11/23 02:03:12.386
  STEP: updating /status @ 09/11/23 02:03:12.395
  STEP: deleting @ 09/11/23 02:03:12.404
  STEP: deleting a collection @ 09/11/23 02:03:12.422
  Sep 11 02:03:12.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-661" for this suite. @ 09/11/23 02:03:12.449
• [1.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 09/11/23 02:03:12.462
  Sep 11 02:03:12.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 02:03:12.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:12.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:12.491
  STEP: Counting existing ResourceQuota @ 09/11/23 02:03:29.5
  STEP: Creating a ResourceQuota @ 09/11/23 02:03:34.504
  STEP: Ensuring resource quota status is calculated @ 09/11/23 02:03:34.518
  STEP: Creating a ConfigMap @ 09/11/23 02:03:36.551
  STEP: Ensuring resource quota status captures configMap creation @ 09/11/23 02:03:36.575
  STEP: Deleting a ConfigMap @ 09/11/23 02:03:38.58
  STEP: Ensuring resource quota status released usage @ 09/11/23 02:03:38.586
  Sep 11 02:03:40.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-977" for this suite. @ 09/11/23 02:03:40.596
• [28.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/11/23 02:03:40.616
  Sep 11 02:03:40.619: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 02:03:40.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:40.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:40.663
  Sep 11 02:03:44.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9456" for this suite. @ 09/11/23 02:03:44.757
• [4.157 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/11/23 02:03:44.773
  Sep 11 02:03:44.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 02:03:44.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:44.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:44.802
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/11/23 02:03:44.806
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/11/23 02:03:44.807
  STEP: creating a pod to probe DNS @ 09/11/23 02:03:44.807
  STEP: submitting the pod to kubernetes @ 09/11/23 02:03:44.807
  STEP: retrieving the pod @ 09/11/23 02:03:46.849
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:03:46.873
  Sep 11 02:03:46.912: INFO: DNS probes using dns-9603/dns-test-427ee1cd-9feb-485d-a40f-7e42d8c6f7f6 succeeded

  Sep 11 02:03:46.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:03:46.918
  STEP: Destroying namespace "dns-9603" for this suite. @ 09/11/23 02:03:46.935
• [2.170 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 09/11/23 02:03:46.944
  Sep 11 02:03:46.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 02:03:46.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:46.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:46.979
  STEP: Deleting RuntimeClass runtimeclass-5534-delete-me @ 09/11/23 02:03:46.996
  STEP: Waiting for the RuntimeClass to disappear @ 09/11/23 02:03:47.012
  Sep 11 02:03:47.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5534" for this suite. @ 09/11/23 02:03:47.045
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 09/11/23 02:03:47.062
  Sep 11 02:03:47.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/11/23 02:03:47.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:47.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:47.091
  STEP: create the container to handle the HTTPGet hook request. @ 09/11/23 02:03:47.1
  STEP: create the pod with lifecycle hook @ 09/11/23 02:03:49.125
  STEP: delete the pod with lifecycle hook @ 09/11/23 02:03:51.146
  STEP: check prestop hook @ 09/11/23 02:03:55.168
  Sep 11 02:03:55.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7269" for this suite. @ 09/11/23 02:03:55.192
• [8.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 09/11/23 02:03:55.203
  Sep 11 02:03:55.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 02:03:55.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:55.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:55.243
  STEP: creating a ReplicationController @ 09/11/23 02:03:55.258
  STEP: waiting for RC to be added @ 09/11/23 02:03:55.276
  STEP: waiting for available Replicas @ 09/11/23 02:03:55.277
  STEP: patching ReplicationController @ 09/11/23 02:03:56.843
  STEP: waiting for RC to be modified @ 09/11/23 02:03:56.853
  STEP: patching ReplicationController status @ 09/11/23 02:03:56.854
  STEP: waiting for RC to be modified @ 09/11/23 02:03:56.864
  STEP: waiting for available Replicas @ 09/11/23 02:03:56.864
  STEP: fetching ReplicationController status @ 09/11/23 02:03:56.869
  STEP: patching ReplicationController scale @ 09/11/23 02:03:56.876
  STEP: waiting for RC to be modified @ 09/11/23 02:03:56.887
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/11/23 02:03:56.887
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/11/23 02:03:58.222
  STEP: updating ReplicationController status @ 09/11/23 02:03:58.226
  STEP: waiting for RC to be modified @ 09/11/23 02:03:58.236
  STEP: listing all ReplicationControllers @ 09/11/23 02:03:58.236
  STEP: checking that ReplicationController has expected values @ 09/11/23 02:03:58.243
  STEP: deleting ReplicationControllers by collection @ 09/11/23 02:03:58.243
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/11/23 02:03:58.254
  Sep 11 02:03:58.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 02:03:58.319470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-753" for this suite. @ 09/11/23 02:03:58.327
• [3.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/11/23 02:03:58.344
  Sep 11 02:03:58.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:03:58.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:03:58.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:03:58.371
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:03:58.375
  E0911 02:03:59.320245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:00.320352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:04:00.399
  Sep 11 02:04:00.403: INFO: Trying to get logs from node ip-172-31-4-243 pod downwardapi-volume-48619899-a0df-47d7-a1f3-5aca3c389edb container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:04:00.418
  Sep 11 02:04:00.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9764" for this suite. @ 09/11/23 02:04:00.458
• [2.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 09/11/23 02:04:00.47
  Sep 11 02:04:00.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 02:04:00.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:04:00.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:04:00.514
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/11/23 02:04:00.523
  E0911 02:04:01.320577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:02.320959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:03.321315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:04.321639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:04:04.584
  Sep 11 02:04:04.588: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-ecc7d2dd-f524-4f81-b1e2-525d8dff373f container test-container: <nil>
  STEP: delete the pod @ 09/11/23 02:04:04.597
  Sep 11 02:04:04.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1865" for this suite. @ 09/11/23 02:04:04.63
• [4.169 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/11/23 02:04:04.639
  Sep 11 02:04:04.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:04:04.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:04:04.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:04:04.666
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:04:04.669
  E0911 02:04:05.321678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:06.321789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:07.322861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:08.323119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:04:08.695
  Sep 11 02:04:08.699: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-dabef34c-221b-47be-a9e1-3f534bc4ec65 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:04:08.708
  Sep 11 02:04:08.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7524" for this suite. @ 09/11/23 02:04:08.737
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/11/23 02:04:08.754
  Sep 11 02:04:08.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:04:08.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:04:08.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:04:08.805
  STEP: Setting up server cert @ 09/11/23 02:04:08.839
  E0911 02:04:09.323159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:04:09.534
  STEP: Deploying the webhook pod @ 09/11/23 02:04:09.55
  STEP: Wait for the deployment to be ready @ 09/11/23 02:04:09.57
  Sep 11 02:04:09.590: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:04:10.323282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:11.323465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:04:11.617
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:04:11.665
  E0911 02:04:12.323631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:04:12.666: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/11/23 02:04:12.754
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 02:04:12.848
  STEP: Deleting the collection of validation webhooks @ 09/11/23 02:04:12.931
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 02:04:13.006
  Sep 11 02:04:13.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3855" for this suite. @ 09/11/23 02:04:13.125
  STEP: Destroying namespace "webhook-markers-4779" for this suite. @ 09/11/23 02:04:13.146
• [4.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/11/23 02:04:13.163
  Sep 11 02:04:13.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:04:13.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:04:13.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:04:13.227
  STEP: Creating configMap with name projected-configmap-test-volume-map-85a69765-546e-4dcd-97f6-ba734446b1f0 @ 09/11/23 02:04:13.235
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:04:13.261
  E0911 02:04:13.324706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:14.325102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:15.325523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:16.325655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:04:17.302
  Sep 11 02:04:17.307: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-configmaps-33cc930e-326d-4cd6-bb7e-d077fbf51d6d container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:04:17.32
  E0911 02:04:17.326099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:04:17.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-510" for this suite. @ 09/11/23 02:04:17.346
• [4.201 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/11/23 02:04:17.364
  Sep 11 02:04:17.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 02:04:17.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:04:17.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:04:17.414
  E0911 02:04:18.326828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:19.327253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:04:19.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8090" for this suite. @ 09/11/23 02:04:19.464
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/11/23 02:04:19.471
  Sep 11 02:04:19.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:04:19.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:04:19.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:04:19.498
  STEP: Creating secret with name s-test-opt-del-7e19cf1a-d033-49cf-a30b-5fad9db13480 @ 09/11/23 02:04:19.508
  STEP: Creating secret with name s-test-opt-upd-d4c63598-eeca-4a6d-b7bb-f06efb9e5bd6 @ 09/11/23 02:04:19.519
  STEP: Creating the pod @ 09/11/23 02:04:19.531
  E0911 02:04:20.327341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:21.327710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-7e19cf1a-d033-49cf-a30b-5fad9db13480 @ 09/11/23 02:04:21.641
  STEP: Updating secret s-test-opt-upd-d4c63598-eeca-4a6d-b7bb-f06efb9e5bd6 @ 09/11/23 02:04:21.659
  STEP: Creating secret with name s-test-opt-create-2a7b20b8-aa44-4006-9d12-fc7b82f4c212 @ 09/11/23 02:04:21.673
  STEP: waiting to observe update in volume @ 09/11/23 02:04:21.691
  E0911 02:04:22.327837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:23.327945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:24.328088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:25.334964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:26.335222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:27.335342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:28.337027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:29.337714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:30.337997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:31.338383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:32.338895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:33.339171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:34.339779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:35.339894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:36.340052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:37.340159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:38.340281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:39.340455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:40.340609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:41.340734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:42.340933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:43.341017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:44.341511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:45.341652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:46.341752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:47.341971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:48.342732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:49.343133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:50.343788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:51.343922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:52.347970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:53.345127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:54.345704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:55.345820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:56.346010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:57.346070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:58.346337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:04:59.346894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:00.347556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:01.347696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:02.349782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:03.349894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:04.350021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:05.350135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:06.350279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:07.350705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:08.351511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:09.351609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:10.352311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:11.352755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:12.353349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:13.353645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:14.354535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:15.354738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:16.355433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:17.355570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:18.356211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:19.356439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:20.356599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:21.356989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:22.357121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:23.357219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:24.357437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:25.357654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:26.358756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:27.359113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:05:28.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-423" for this suite. @ 09/11/23 02:05:28.134
• [68.671 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 09/11/23 02:05:28.143
  Sep 11 02:05:28.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 02:05:28.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:05:28.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:05:28.218
  STEP: Counting existing ResourceQuota @ 09/11/23 02:05:28.225
  E0911 02:05:28.359463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:29.360432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:30.360786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:31.361420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:32.361523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 02:05:33.23
  STEP: Ensuring resource quota status is calculated @ 09/11/23 02:05:33.238
  E0911 02:05:33.362368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:34.362481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/11/23 02:05:35.243
  STEP: Ensuring resource quota status captures replicaset creation @ 09/11/23 02:05:35.258
  E0911 02:05:35.363111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:36.363258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/11/23 02:05:37.263
  STEP: Ensuring resource quota status released usage @ 09/11/23 02:05:37.276
  E0911 02:05:37.363294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:38.363385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:05:39.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7582" for this suite. @ 09/11/23 02:05:39.302
• [11.172 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 09/11/23 02:05:39.315
  Sep 11 02:05:39.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 02:05:39.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:05:39.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:05:39.349
  STEP: Creating resourceQuota "e2e-rq-status-2n8d8" @ 09/11/23 02:05:39.363
  E0911 02:05:39.363704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:05:39.384: INFO: Resource quota "e2e-rq-status-2n8d8" reports spec: hard cpu limit of 500m
  Sep 11 02:05:39.384: INFO: Resource quota "e2e-rq-status-2n8d8" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-2n8d8" /status @ 09/11/23 02:05:39.384
  STEP: Confirm /status for "e2e-rq-status-2n8d8" resourceQuota via watch @ 09/11/23 02:05:39.402
  Sep 11 02:05:39.405: INFO: observed resourceQuota "e2e-rq-status-2n8d8" in namespace "resourcequota-8173" with hard status: v1.ResourceList(nil)
  Sep 11 02:05:39.406: INFO: Found resourceQuota "e2e-rq-status-2n8d8" in namespace "resourcequota-8173" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 11 02:05:39.406: INFO: ResourceQuota "e2e-rq-status-2n8d8" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/11/23 02:05:39.413
  Sep 11 02:05:39.424: INFO: Resource quota "e2e-rq-status-2n8d8" reports spec: hard cpu limit of 1
  Sep 11 02:05:39.424: INFO: Resource quota "e2e-rq-status-2n8d8" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-2n8d8" /status @ 09/11/23 02:05:39.424
  STEP: Confirm /status for "e2e-rq-status-2n8d8" resourceQuota via watch @ 09/11/23 02:05:39.437
  Sep 11 02:05:39.441: INFO: observed resourceQuota "e2e-rq-status-2n8d8" in namespace "resourcequota-8173" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 11 02:05:39.441: INFO: Found resourceQuota "e2e-rq-status-2n8d8" in namespace "resourcequota-8173" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep 11 02:05:39.441: INFO: ResourceQuota "e2e-rq-status-2n8d8" /status was patched
  STEP: Get "e2e-rq-status-2n8d8" /status @ 09/11/23 02:05:39.441
  Sep 11 02:05:39.446: INFO: Resourcequota "e2e-rq-status-2n8d8" reports status: hard cpu of 1
  Sep 11 02:05:39.446: INFO: Resourcequota "e2e-rq-status-2n8d8" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-2n8d8" /status before checking Spec is unchanged @ 09/11/23 02:05:39.452
  Sep 11 02:05:39.461: INFO: Resourcequota "e2e-rq-status-2n8d8" reports status: hard cpu of 2
  Sep 11 02:05:39.462: INFO: Resourcequota "e2e-rq-status-2n8d8" reports status: hard memory of 2Gi
  Sep 11 02:05:39.468: INFO: Found resourceQuota "e2e-rq-status-2n8d8" in namespace "resourcequota-8173" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0911 02:05:40.363943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:41.364515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:42.364630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:43.364871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:44.364980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:45.365625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:46.365783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:47.365886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:48.366968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:49.368025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:50.368248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:51.368479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:52.368919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:53.368897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:54.369142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:55.369849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:56.370018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:57.370823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:58.370955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:05:59.371935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:00.372138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:01.372314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:02.372613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:03.372823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:04.373637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:05.374753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:06.374911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:07.375210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:08.375574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:09.375997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:10.376510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:11.377258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:12.377422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:13.377653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:14.377749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:15.377890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:16.378717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:17.378804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:18.378925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:19.379945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:20.380400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:21.380505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:22.380635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:23.380794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:24.381731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:25.381871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:26.381971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:27.382113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:28.382209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:29.382745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:30.383637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:31.384451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:32.384532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:33.384611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:34.384701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:35.385447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:36.385624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:37.386712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:38.387498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:39.388415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:06:39.481: INFO: ResourceQuota "e2e-rq-status-2n8d8" Spec was unchanged and /status reset
  Sep 11 02:06:39.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8173" for this suite. @ 09/11/23 02:06:39.488
• [60.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/11/23 02:06:39.497
  Sep 11 02:06:39.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:06:39.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:06:39.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:06:39.535
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:06:39.549
  E0911 02:06:40.389212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:41.389316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:42.389529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:43.389782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:06:43.6
  Sep 11 02:06:43.604: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-23936068-4c1f-497c-9451-2b0e9ff3cbf5 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:06:43.615
  Sep 11 02:06:43.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2142" for this suite. @ 09/11/23 02:06:43.643
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 09/11/23 02:06:43.655
  Sep 11 02:06:43.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 02:06:43.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:06:43.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:06:43.689
  STEP: creating service in namespace services-4270 @ 09/11/23 02:06:43.694
  STEP: creating service affinity-nodeport-transition in namespace services-4270 @ 09/11/23 02:06:43.694
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4270 @ 09/11/23 02:06:43.722
  I0911 02:06:43.730041      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-4270, replica count: 3
  E0911 02:06:44.390298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:45.392359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:46.392490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 02:06:46.782271      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 02:06:46.807: INFO: Creating new exec pod
  E0911 02:06:47.393196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:48.393642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:49.394530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:06:49.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4270 exec execpod-affinity6qkkz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep 11 02:06:50.025: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep 11 02:06:50.025: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:06:50.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4270 exec execpod-affinity6qkkz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.201.201 80'
  Sep 11 02:06:50.231: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.201.201 80\nConnection to 10.43.201.201 80 port [tcp/http] succeeded!\n"
  Sep 11 02:06:50.231: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:06:50.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4270 exec execpod-affinity6qkkz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.123 31393'
  Sep 11 02:06:50.389: INFO: stderr: "+ nc -v -t -w 2 172.31.11.123 31393\n+ echo hostName\nConnection to 172.31.11.123 31393 port [tcp/*] succeeded!\n"
  Sep 11 02:06:50.389: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:06:50.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4270 exec execpod-affinity6qkkz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.111 31393'
  E0911 02:06:50.395096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:06:50.639: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.111 31393\nConnection to 172.31.3.111 31393 port [tcp/*] succeeded!\n"
  Sep 11 02:06:50.639: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:06:50.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4270 exec execpod-affinity6qkkz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.123:31393/ ; done'
  Sep 11 02:06:50.910: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n"
  Sep 11 02:06:50.910: INFO: stdout: "\naffinity-nodeport-transition-6qt7d\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-r42rz\naffinity-nodeport-transition-6qt7d\naffinity-nodeport-transition-r42rz\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-r42rz\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-r42rz\naffinity-nodeport-transition-r42rz\naffinity-nodeport-transition-r42rz\naffinity-nodeport-transition-6qt7d\naffinity-nodeport-transition-6qt7d\naffinity-nodeport-transition-6qt7d\naffinity-nodeport-transition-g7zh9"
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-6qt7d
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-r42rz
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-6qt7d
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-r42rz
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-r42rz
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-r42rz
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-r42rz
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-r42rz
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-6qt7d
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-6qt7d
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-6qt7d
  Sep 11 02:06:50.910: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:50.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4270 exec execpod-affinity6qkkz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.123:31393/ ; done'
  Sep 11 02:06:51.188: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.123:31393/\n"
  Sep 11 02:06:51.188: INFO: stdout: "\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9\naffinity-nodeport-transition-g7zh9"
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Received response from host: affinity-nodeport-transition-g7zh9
  Sep 11 02:06:51.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 02:06:51.193: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4270, will wait for the garbage collector to delete the pods @ 09/11/23 02:06:51.21
  Sep 11 02:06:51.290: INFO: Deleting ReplicationController affinity-nodeport-transition took: 21.854566ms
  Sep 11 02:06:51.391: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.896813ms
  E0911 02:06:51.395188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:52.395684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:53.396034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:54.396449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4270" for this suite. @ 09/11/23 02:06:54.625
• [10.978 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/11/23 02:06:54.634
  Sep 11 02:06:54.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 02:06:54.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:06:54.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:06:54.662
  STEP: Creating secret with name secret-test-fdf351b1-bf9c-4f92-8ba4-ba964d3cf183 @ 09/11/23 02:06:54.667
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:06:54.676
  E0911 02:06:55.397028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:56.397476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:57.397597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:06:58.398727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:06:58.705
  Sep 11 02:06:58.708: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-secrets-483321ec-6f6f-43c1-88da-b82ae6d9db82 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:06:58.715
  Sep 11 02:06:58.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7414" for this suite. @ 09/11/23 02:06:58.739
• [4.114 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 09/11/23 02:06:58.749
  Sep 11 02:06:58.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/11/23 02:06:58.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:06:58.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:06:58.785
  Sep 11 02:06:58.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:06:59.399715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:00.400149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:01.400634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:02.401499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:03.401826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:04.402736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:05.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3730" for this suite. @ 09/11/23 02:07:05.121
• [6.379 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 09/11/23 02:07:05.129
  Sep 11 02:07:05.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:07:05.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:07:05.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:07:05.161
  STEP: Creating configMap configmap-9494/configmap-test-2a0fcaad-7f17-432b-8418-2f2370e51859 @ 09/11/23 02:07:05.167
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:07:05.175
  E0911 02:07:05.403908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:06.404961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:07.405825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:08.405949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:07:09.209
  Sep 11 02:07:09.213: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-75094763-e0c0-48cd-b647-1ff28e074c6c container env-test: <nil>
  STEP: delete the pod @ 09/11/23 02:07:09.223
  Sep 11 02:07:09.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9494" for this suite. @ 09/11/23 02:07:09.257
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/11/23 02:07:09.273
  Sep 11 02:07:09.273: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename tables @ 09/11/23 02:07:09.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:07:09.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:07:09.307
  Sep 11 02:07:09.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-543" for this suite. @ 09/11/23 02:07:09.326
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 09/11/23 02:07:09.338
  Sep 11 02:07:09.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 02:07:09.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:07:09.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:07:09.364
  STEP: Creating service test in namespace statefulset-2169 @ 09/11/23 02:07:09.369
  STEP: Creating stateful set ss in namespace statefulset-2169 @ 09/11/23 02:07:09.38
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2169 @ 09/11/23 02:07:09.395
  Sep 11 02:07:09.402: INFO: Found 0 stateful pods, waiting for 1
  E0911 02:07:09.406182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:10.406391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:11.406511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:12.412749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:13.412747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:14.413513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:15.413630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:16.415055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:17.415596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:18.415918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:19.408: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/11/23 02:07:19.408
  Sep 11 02:07:19.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-2169 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0911 02:07:19.416808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:19.597: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:07:19.597: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:07:19.597: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:07:19.601: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0911 02:07:20.417307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:21.418358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:22.418520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:23.418895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:24.419511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:25.419623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:26.420243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:27.420478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:28.420605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:29.420724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:29.607: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:07:29.607: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 02:07:29.630: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Sep 11 02:07:29.630: INFO: ss-0  ip-172-31-3-111  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:09 +0000 UTC  }]
  Sep 11 02:07:29.630: INFO: 
  Sep 11 02:07:29.630: INFO: StatefulSet ss has not reached scale 3, at 1
  E0911 02:07:30.421022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:30.644: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.989622253s
  E0911 02:07:31.421033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:31.652: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.97647511s
  E0911 02:07:32.421171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:32.657: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.96747717s
  E0911 02:07:33.421396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:33.662: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.963274954s
  E0911 02:07:34.421528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:34.667: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.957911513s
  E0911 02:07:35.421961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:35.674: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.953657045s
  E0911 02:07:36.422055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:36.679: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.94644386s
  E0911 02:07:37.423420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:37.684: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.941089878s
  E0911 02:07:38.424360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:38.689: INFO: Verifying statefulset ss doesn't scale past 3 for another 936.122652ms
  E0911 02:07:39.425111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2169 @ 09/11/23 02:07:39.689
  Sep 11 02:07:39.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-2169 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 02:07:40.017: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 02:07:40.017: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:07:40.017: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 02:07:40.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-2169 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 02:07:40.419: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 11 02:07:40.419: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:07:40.419: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 02:07:40.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-2169 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0911 02:07:40.425943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:40.621: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 11 02:07:40.621: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:07:40.621: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 02:07:40.627: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0911 02:07:41.426027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:42.426502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:43.426675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:44.430997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:45.431076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:46.431869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:47.431991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:48.432116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:49.432239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:50.432568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:07:50.632: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:07:50.632: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:07:50.632: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/11/23 02:07:50.632
  Sep 11 02:07:50.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-2169 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:07:50.811: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:07:50.811: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:07:50.811: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:07:50.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-2169 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:07:50.979: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:07:50.979: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:07:50.979: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:07:50.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-2169 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:07:51.146: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:07:51.146: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:07:51.146: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:07:51.146: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 02:07:51.150: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0911 02:07:51.433029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:52.433233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:53.433333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:54.433959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:55.433940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:56.434058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:57.434170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:58.434298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:07:59.434419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:00.434737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:01.161: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:08:01.161: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:08:01.161: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:08:01.179: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Sep 11 02:08:01.179: INFO: ss-0  ip-172-31-3-111   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:09 +0000 UTC  }]
  Sep 11 02:08:01.179: INFO: ss-1  ip-172-31-12-171  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:29 +0000 UTC  }]
  Sep 11 02:08:01.179: INFO: ss-2  ip-172-31-4-243   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:29 +0000 UTC  }]
  Sep 11 02:08:01.179: INFO: 
  Sep 11 02:08:01.179: INFO: StatefulSet ss has not reached scale 0, at 3
  E0911 02:08:01.440076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:02.190: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Sep 11 02:08:02.190: INFO: ss-0  ip-172-31-3-111   Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:09 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:51 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:51 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:09 +0000 UTC  }]
  Sep 11 02:08:02.190: INFO: ss-1  ip-172-31-12-171  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:29 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:50 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:50 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 02:07:29 +0000 UTC  }]
  Sep 11 02:08:02.190: INFO: 
  Sep 11 02:08:02.190: INFO: StatefulSet ss has not reached scale 0, at 2
  E0911 02:08:02.441026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:03.194: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.981756097s
  E0911 02:08:03.442038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:04.198: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.977329928s
  E0911 02:08:04.442105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:05.204: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.973534317s
  E0911 02:08:05.442207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:06.208: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.967535338s
  E0911 02:08:06.442271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:07.213: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.963611855s
  E0911 02:08:07.443253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:08.219: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.957468743s
  E0911 02:08:08.443636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:09.224: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.953073054s
  E0911 02:08:09.444663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:10.228: INFO: Verifying statefulset ss doesn't scale past 0 for another 948.133289ms
  E0911 02:08:10.444856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2169 @ 09/11/23 02:08:11.229
  Sep 11 02:08:11.234: INFO: Scaling statefulset ss to 0
  Sep 11 02:08:11.254: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 02:08:11.258: INFO: Deleting all statefulset in ns statefulset-2169
  Sep 11 02:08:11.265: INFO: Scaling statefulset ss to 0
  Sep 11 02:08:11.279: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 02:08:11.283: INFO: Deleting statefulset ss
  Sep 11 02:08:11.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2169" for this suite. @ 09/11/23 02:08:11.329
• [62.004 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/11/23 02:08:11.344
  Sep 11 02:08:11.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename disruption @ 09/11/23 02:08:11.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:11.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:11.403
  STEP: creating the pdb @ 09/11/23 02:08:11.416
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:08:11.43
  E0911 02:08:11.445160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:12.445572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/11/23 02:08:13.443
  E0911 02:08:13.447418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:08:13.458
  STEP: patching the pdb @ 09/11/23 02:08:13.469
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:08:13.492
  E0911 02:08:14.446609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:15.446799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/11/23 02:08:15.513
  Sep 11 02:08:15.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7066" for this suite. @ 09/11/23 02:08:15.525
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 09/11/23 02:08:15.545
  Sep 11 02:08:15.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 02:08:15.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:15.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:15.577
  STEP: creating Agnhost RC @ 09/11/23 02:08:15.617
  Sep 11 02:08:15.617: INFO: namespace kubectl-551
  Sep 11 02:08:15.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-551 create -f -'
  Sep 11 02:08:16.177: INFO: stderr: ""
  Sep 11 02:08:16.177: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/11/23 02:08:16.177
  E0911 02:08:16.447747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:17.182: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 02:08:17.182: INFO: Found 0 / 1
  E0911 02:08:17.447880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:18.182: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 02:08:18.182: INFO: Found 1 / 1
  Sep 11 02:08:18.182: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 11 02:08:18.200: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 02:08:18.200: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 02:08:18.200: INFO: wait on agnhost-primary startup in kubectl-551 
  Sep 11 02:08:18.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-551 logs agnhost-primary-5677k agnhost-primary'
  Sep 11 02:08:18.352: INFO: stderr: ""
  Sep 11 02:08:18.352: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/11/23 02:08:18.352
  Sep 11 02:08:18.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-551 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  E0911 02:08:18.448389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:18.527: INFO: stderr: ""
  Sep 11 02:08:18.527: INFO: stdout: "service/rm2 exposed\n"
  Sep 11 02:08:18.540: INFO: Service rm2 in namespace kubectl-551 found.
  E0911 02:08:19.449370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:20.449928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/11/23 02:08:20.551
  Sep 11 02:08:20.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-551 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep 11 02:08:20.691: INFO: stderr: ""
  Sep 11 02:08:20.691: INFO: stdout: "service/rm3 exposed\n"
  Sep 11 02:08:20.704: INFO: Service rm3 in namespace kubectl-551 found.
  E0911 02:08:21.450018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:22.450626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:22.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-551" for this suite. @ 09/11/23 02:08:22.72
• [7.183 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/11/23 02:08:22.728
  Sep 11 02:08:22.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename proxy @ 09/11/23 02:08:22.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:22.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:22.761
  Sep 11 02:08:22.767: INFO: Creating pod...
  E0911 02:08:23.450778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:24.451414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:24.799: INFO: Creating service...
  Sep 11 02:08:24.811: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/pods/agnhost/proxy/some/path/with/DELETE
  Sep 11 02:08:24.826: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 02:08:24.826: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/pods/agnhost/proxy/some/path/with/GET
  Sep 11 02:08:24.834: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 11 02:08:24.834: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/pods/agnhost/proxy/some/path/with/HEAD
  Sep 11 02:08:24.841: INFO: http.Client request:HEAD | StatusCode:200
  Sep 11 02:08:24.841: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep 11 02:08:24.845: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 02:08:24.845: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/pods/agnhost/proxy/some/path/with/PATCH
  Sep 11 02:08:24.850: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 02:08:24.850: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/pods/agnhost/proxy/some/path/with/POST
  Sep 11 02:08:24.855: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 02:08:24.855: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/pods/agnhost/proxy/some/path/with/PUT
  Sep 11 02:08:24.860: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 02:08:24.860: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/services/test-service/proxy/some/path/with/DELETE
  Sep 11 02:08:24.866: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 02:08:24.866: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/services/test-service/proxy/some/path/with/GET
  Sep 11 02:08:24.872: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 11 02:08:24.872: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/services/test-service/proxy/some/path/with/HEAD
  Sep 11 02:08:24.878: INFO: http.Client request:HEAD | StatusCode:200
  Sep 11 02:08:24.878: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/services/test-service/proxy/some/path/with/OPTIONS
  Sep 11 02:08:24.883: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 02:08:24.883: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/services/test-service/proxy/some/path/with/PATCH
  Sep 11 02:08:24.888: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 02:08:24.888: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/services/test-service/proxy/some/path/with/POST
  Sep 11 02:08:24.894: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 02:08:24.894: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1226/services/test-service/proxy/some/path/with/PUT
  Sep 11 02:08:24.901: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 02:08:24.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1226" for this suite. @ 09/11/23 02:08:24.91
• [2.193 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/11/23 02:08:24.921
  Sep 11 02:08:24.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 02:08:24.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:24.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:24.994
  Sep 11 02:08:25.025: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/11/23 02:08:25.033
  Sep 11 02:08:25.038: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:08:25.038: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/11/23 02:08:25.038
  Sep 11 02:08:25.068: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:08:25.068: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 02:08:25.451700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:26.073: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:08:26.073: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 02:08:26.451842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:27.074: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 11 02:08:27.074: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/11/23 02:08:27.078
  Sep 11 02:08:27.116: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 11 02:08:27.116: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0911 02:08:27.452011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:28.122: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:08:28.122: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/11/23 02:08:28.122
  Sep 11 02:08:28.138: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:08:28.138: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 02:08:28.452062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:29.143: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:08:29.143: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 02:08:29.453697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:30.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 11 02:08:30.145: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 02:08:30.163
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1392, will wait for the garbage collector to delete the pods @ 09/11/23 02:08:30.164
  Sep 11 02:08:30.234: INFO: Deleting DaemonSet.extensions daemon-set took: 14.277857ms
  Sep 11 02:08:30.338: INFO: Terminating DaemonSet.extensions daemon-set pods took: 103.239333ms
  E0911 02:08:30.453845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:31.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:08:31.443: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 02:08:31.445: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18105"},"items":null}

  Sep 11 02:08:31.449: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18105"},"items":null}

  E0911 02:08:31.454398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:31.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1392" for this suite. @ 09/11/23 02:08:31.486
• [6.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/11/23 02:08:31.503
  Sep 11 02:08:31.503: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 02:08:31.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:31.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:31.534
  STEP: creating the pod @ 09/11/23 02:08:31.552
  STEP: submitting the pod to kubernetes @ 09/11/23 02:08:31.553
  STEP: verifying QOS class is set on the pod @ 09/11/23 02:08:31.564
  Sep 11 02:08:31.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2687" for this suite. @ 09/11/23 02:08:31.576
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/11/23 02:08:31.586
  Sep 11 02:08:31.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename disruption @ 09/11/23 02:08:31.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:31.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:31.613
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:08:31.621
  E0911 02:08:32.454687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:33.455457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/11/23 02:08:33.668
  Sep 11 02:08:33.679: INFO: running pods: 0 < 3
  E0911 02:08:34.455750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:35.455815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:35.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5167" for this suite. @ 09/11/23 02:08:35.692
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 09/11/23 02:08:35.702
  Sep 11 02:08:35.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 02:08:35.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:35.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:35.726
  STEP: creating the pod @ 09/11/23 02:08:35.733
  Sep 11 02:08:35.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 create -f -'
  E0911 02:08:36.456753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:36.816: INFO: stderr: ""
  Sep 11 02:08:36.817: INFO: stdout: "pod/pause created\n"
  E0911 02:08:37.457605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:38.457783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/11/23 02:08:38.826
  Sep 11 02:08:38.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 label pods pause testing-label=testing-label-value'
  Sep 11 02:08:38.946: INFO: stderr: ""
  Sep 11 02:08:38.946: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/11/23 02:08:38.946
  Sep 11 02:08:38.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 get pod pause -L testing-label'
  Sep 11 02:08:39.061: INFO: stderr: ""
  Sep 11 02:08:39.061: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/11/23 02:08:39.061
  Sep 11 02:08:39.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 label pods pause testing-label-'
  Sep 11 02:08:39.192: INFO: stderr: ""
  Sep 11 02:08:39.192: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/11/23 02:08:39.192
  Sep 11 02:08:39.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 get pod pause -L testing-label'
  Sep 11 02:08:39.311: INFO: stderr: ""
  Sep 11 02:08:39.311: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/11/23 02:08:39.311
  Sep 11 02:08:39.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 delete --grace-period=0 --force -f -'
  Sep 11 02:08:39.420: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 02:08:39.420: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep 11 02:08:39.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 get rc,svc -l name=pause --no-headers'
  E0911 02:08:39.458293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:39.563: INFO: stderr: "No resources found in kubectl-9454 namespace.\n"
  Sep 11 02:08:39.563: INFO: stdout: ""
  Sep 11 02:08:39.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9454 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 11 02:08:39.690: INFO: stderr: ""
  Sep 11 02:08:39.690: INFO: stdout: ""
  Sep 11 02:08:39.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9454" for this suite. @ 09/11/23 02:08:39.694
• [3.999 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 09/11/23 02:08:39.702
  Sep 11 02:08:39.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-webhook @ 09/11/23 02:08:39.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:39.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:39.727
  STEP: Setting up server cert @ 09/11/23 02:08:39.731
  E0911 02:08:40.458600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/11/23 02:08:40.599
  STEP: Deploying the custom resource conversion webhook pod @ 09/11/23 02:08:40.608
  STEP: Wait for the deployment to be ready @ 09/11/23 02:08:40.622
  Sep 11 02:08:40.639: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0911 02:08:41.458934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:42.459181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:08:42.651
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:08:42.663
  E0911 02:08:43.459375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:08:43.663: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 11 02:08:43.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:08:44.460432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:45.460779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/11/23 02:08:46.244
  STEP: Create a v2 custom resource @ 09/11/23 02:08:46.279
  STEP: List CRs in v1 @ 09/11/23 02:08:46.326
  STEP: List CRs in v2 @ 09/11/23 02:08:46.339
  Sep 11 02:08:46.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 02:08:46.461245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-9852" for this suite. @ 09/11/23 02:08:46.967
• [7.282 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 09/11/23 02:08:46.987
  Sep 11 02:08:46.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 02:08:46.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:47.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:47.026
  Sep 11 02:08:47.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-727 version'
  Sep 11 02:08:47.115: INFO: stderr: ""
  Sep 11 02:08:47.116: INFO: stdout: "Client Version: v1.28.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.1+k3s1\n"
  Sep 11 02:08:47.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-727" for this suite. @ 09/11/23 02:08:47.121
• [0.141 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/11/23 02:08:47.128
  Sep 11 02:08:47.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:08:47.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:47.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:47.149
  STEP: Creating projection with secret that has name projected-secret-test-996af06f-e3d8-4597-89f7-1ba88c9fb39a @ 09/11/23 02:08:47.153
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:08:47.158
  E0911 02:08:47.461868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:48.461984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:49.462707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:50.462830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:08:51.192
  Sep 11 02:08:51.196: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-secrets-45d9d3c3-efea-40bc-b26b-3217e18acacb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:08:51.21
  Sep 11 02:08:51.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2426" for this suite. @ 09/11/23 02:08:51.243
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/11/23 02:08:51.26
  Sep 11 02:08:51.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename subpath @ 09/11/23 02:08:51.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:08:51.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:08:51.289
  STEP: Setting up data @ 09/11/23 02:08:51.293
  STEP: Creating pod pod-subpath-test-downwardapi-wrqt @ 09/11/23 02:08:51.307
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 02:08:51.307
  E0911 02:08:51.463327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:52.463496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:53.464459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:54.464675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:55.465595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:56.465694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:57.466706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:58.467778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:08:59.467895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:00.467975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:01.468975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:02.469579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:03.469684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:04.470233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:05.470889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:06.470998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:07.472048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:08.472205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:09.472700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:10.472905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:11.473925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:12.474053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:13.475093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:14.475992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:09:15.401
  Sep 11 02:09:15.406: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-subpath-test-downwardapi-wrqt container test-container-subpath-downwardapi-wrqt: <nil>
  STEP: delete the pod @ 09/11/23 02:09:15.416
  STEP: Deleting pod pod-subpath-test-downwardapi-wrqt @ 09/11/23 02:09:15.44
  Sep 11 02:09:15.440: INFO: Deleting pod "pod-subpath-test-downwardapi-wrqt" in namespace "subpath-2245"
  Sep 11 02:09:15.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2245" for this suite. @ 09/11/23 02:09:15.458
• [24.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/11/23 02:09:15.472
  Sep 11 02:09:15.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 02:09:15.474
  E0911 02:09:15.477006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:09:15.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:09:15.504
  STEP: Creating secret with name secret-test-20cd0bdd-4f13-4f71-acd6-7866d3f8d62a @ 09/11/23 02:09:15.51
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:09:15.519
  E0911 02:09:16.477254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:17.477950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:18.479267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:19.479010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:09:19.548
  Sep 11 02:09:19.552: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-secrets-da907d13-5cd6-405b-8ff5-26b239f7c0db container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:09:19.561
  Sep 11 02:09:19.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8963" for this suite. @ 09/11/23 02:09:19.589
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/11/23 02:09:19.598
  Sep 11 02:09:19.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:09:19.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:09:19.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:09:19.632
  STEP: Setting up server cert @ 09/11/23 02:09:19.669
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:09:20.465
  E0911 02:09:20.479070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 09/11/23 02:09:20.479
  STEP: Wait for the deployment to be ready @ 09/11/23 02:09:20.498
  Sep 11 02:09:20.508: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:09:21.479276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:22.479406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:09:22.527
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:09:22.543
  E0911 02:09:23.479641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:23.543: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 11 02:09:23.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5785-crds.webhook.example.com via the AdmissionRegistration API @ 09/11/23 02:09:24.082
  STEP: Creating a custom resource while v1 is storage version @ 09/11/23 02:09:24.106
  E0911 02:09:24.480628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:25.480864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/11/23 02:09:26.152
  STEP: Patching the custom resource while v2 is storage version @ 09/11/23 02:09:26.23
  Sep 11 02:09:26.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 02:09:26.481873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1906" for this suite. @ 09/11/23 02:09:26.949
  STEP: Destroying namespace "webhook-markers-8568" for this suite. @ 09/11/23 02:09:26.957
• [7.367 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 09/11/23 02:09:26.966
  Sep 11 02:09:26.966: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 02:09:26.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:09:27.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:09:27.035
  STEP: creating a secret @ 09/11/23 02:09:27.039
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/11/23 02:09:27.046
  STEP: patching the secret @ 09/11/23 02:09:27.051
  STEP: deleting the secret using a LabelSelector @ 09/11/23 02:09:27.061
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/11/23 02:09:27.07
  Sep 11 02:09:27.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8867" for this suite. @ 09/11/23 02:09:27.083
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 09/11/23 02:09:27.096
  Sep 11 02:09:27.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-webhook @ 09/11/23 02:09:27.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:09:27.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:09:27.118
  STEP: Setting up server cert @ 09/11/23 02:09:27.121
  E0911 02:09:27.482262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/11/23 02:09:27.681
  STEP: Deploying the custom resource conversion webhook pod @ 09/11/23 02:09:27.686
  STEP: Wait for the deployment to be ready @ 09/11/23 02:09:27.701
  Sep 11 02:09:27.712: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0911 02:09:28.482394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:29.482769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:09:29.731
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:09:29.748
  E0911 02:09:30.483271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:30.749: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 11 02:09:30.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:09:31.483425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:32.483553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/11/23 02:09:33.342
  STEP: v2 custom resource should be converted @ 09/11/23 02:09:33.35
  Sep 11 02:09:33.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 02:09:33.483612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-3403" for this suite. @ 09/11/23 02:09:33.927
• [6.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/11/23 02:09:33.946
  Sep 11 02:09:33.946: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 02:09:33.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:09:33.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:09:33.976
  STEP: Creating pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720 @ 09/11/23 02:09:33.985
  E0911 02:09:34.484231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:35.485570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 02:09:36.013
  Sep 11 02:09:36.018: INFO: Initial restart count of pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 is 0
  Sep 11 02:09:36.021: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:36.485436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:37.485658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:38.026: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:38.486682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:39.488299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:40.030: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:40.488394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:41.488562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:42.034: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:42.488635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:43.489246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:44.040: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:44.488933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:45.489397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:46.046: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:46.489647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:47.489703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:48.050: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:48.490655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:49.491244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:50.055: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:50.491386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:51.492927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:52.059: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:52.493087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:53.493586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:54.064: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:54.494361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:55.494437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:56.068: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:56.494567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:57.494935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:09:58.075: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:09:58.495470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:09:59.495986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:00.083: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:00.496622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:01.496858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:02.087: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:02.497219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:03.497598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:04.098: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:04.497624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:05.497899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:06.102: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:06.498729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:07.499403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:08.108: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:08.500427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:09.501073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:10.119: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:10.501764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:11.501881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:12.123: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:12.502716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:13.502826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:14.129: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:14.503708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:15.504091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:16.133: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:16.504240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:17.505183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:18.139: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:18.505108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:19.507825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:20.144: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:20.507913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:21.508024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:22.149: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:22.508839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:23.509244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:24.155: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  E0911 02:10:24.509899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:25.510003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:26.160: INFO: Get pod busybox-824207a2-15cc-476e-b23c-9d62e3540e83 in namespace container-probe-720
  Sep 11 02:10:26.160: INFO: Restart count of pod container-probe-720/busybox-824207a2-15cc-476e-b23c-9d62e3540e83 is now 1 (50.14147513s elapsed)
  Sep 11 02:10:26.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:10:26.167
  STEP: Destroying namespace "container-probe-720" for this suite. @ 09/11/23 02:10:26.185
• [52.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/11/23 02:10:26.197
  Sep 11 02:10:26.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:10:26.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:10:26.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:10:26.257
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:10:26.26
  E0911 02:10:26.510019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:27.510142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:28.510726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:29.510940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:10:30.287
  Sep 11 02:10:30.293: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-28fde832-0ee8-47bb-885f-21cb35672724 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:10:30.301
  Sep 11 02:10:30.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2188" for this suite. @ 09/11/23 02:10:30.333
• [4.147 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/11/23 02:10:30.345
  Sep 11 02:10:30.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 02:10:30.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:10:30.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:10:30.379
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1041 @ 09/11/23 02:10:30.386
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/11/23 02:10:30.404
  STEP: creating service externalsvc in namespace services-1041 @ 09/11/23 02:10:30.404
  STEP: creating replication controller externalsvc in namespace services-1041 @ 09/11/23 02:10:30.435
  I0911 02:10:30.458117      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1041, replica count: 2
  E0911 02:10:30.511116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:31.511379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:32.513069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 02:10:33.509934      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0911 02:10:33.513842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 09/11/23 02:10:33.514
  Sep 11 02:10:33.539: INFO: Creating new exec pod
  E0911 02:10:34.514306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:35.516214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:35.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1041 exec execpodzdqmg -- /bin/sh -x -c nslookup clusterip-service.services-1041.svc.cluster.local'
  Sep 11 02:10:35.934: INFO: stderr: "+ nslookup clusterip-service.services-1041.svc.cluster.local\n"
  Sep 11 02:10:35.934: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-1041.svc.cluster.local\tcanonical name = externalsvc.services-1041.svc.cluster.local.\nName:\texternalsvc.services-1041.svc.cluster.local\nAddress: 10.43.181.71\n\n"
  Sep 11 02:10:35.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-1041, will wait for the garbage collector to delete the pods @ 09/11/23 02:10:35.949
  Sep 11 02:10:36.021: INFO: Deleting ReplicationController externalsvc took: 12.455313ms
  Sep 11 02:10:36.122: INFO: Terminating ReplicationController externalsvc pods took: 100.788785ms
  E0911 02:10:36.516461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:37.516768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:38.517906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:39.158: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-1041" for this suite. @ 09/11/23 02:10:39.203
• [8.910 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 09/11/23 02:10:39.256
  Sep 11 02:10:39.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 02:10:39.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:10:39.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:10:39.32
  Sep 11 02:10:39.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1613" for this suite. @ 09/11/23 02:10:39.363
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/11/23 02:10:39.379
  Sep 11 02:10:39.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:10:39.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:10:39.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:10:39.443
  STEP: Setting up server cert @ 09/11/23 02:10:39.488
  E0911 02:10:39.518864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:10:40.317
  STEP: Deploying the webhook pod @ 09/11/23 02:10:40.327
  STEP: Wait for the deployment to be ready @ 09/11/23 02:10:40.342
  Sep 11 02:10:40.355: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:10:40.519817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:41.520059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:10:42.371
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:10:42.385
  E0911 02:10:42.520196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:43.385: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/11/23 02:10:43.4
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/11/23 02:10:43.403
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/11/23 02:10:43.403
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/11/23 02:10:43.403
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/11/23 02:10:43.406
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/11/23 02:10:43.406
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/11/23 02:10:43.409
  Sep 11 02:10:43.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 02:10:43.520233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-2408" for this suite. @ 09/11/23 02:10:43.561
  STEP: Destroying namespace "webhook-markers-4734" for this suite. @ 09/11/23 02:10:43.576
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/11/23 02:10:43.599
  Sep 11 02:10:43.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 02:10:43.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:10:43.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:10:43.647
  STEP: creating service multi-endpoint-test in namespace services-1709 @ 09/11/23 02:10:43.656
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1709 to expose endpoints map[] @ 09/11/23 02:10:43.685
  Sep 11 02:10:43.706: INFO: successfully validated that service multi-endpoint-test in namespace services-1709 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1709 @ 09/11/23 02:10:43.707
  E0911 02:10:44.520419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:45.520486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1709 to expose endpoints map[pod1:[100]] @ 09/11/23 02:10:45.739
  Sep 11 02:10:45.754: INFO: successfully validated that service multi-endpoint-test in namespace services-1709 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1709 @ 09/11/23 02:10:45.754
  E0911 02:10:46.520595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:47.521902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1709 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/11/23 02:10:47.774
  Sep 11 02:10:47.795: INFO: successfully validated that service multi-endpoint-test in namespace services-1709 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/11/23 02:10:47.795
  Sep 11 02:10:47.795: INFO: Creating new exec pod
  E0911 02:10:48.522269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:49.522756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:50.522954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:50.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1709 exec execpodq5hjj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep 11 02:10:51.006: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep 11 02:10:51.006: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:10:51.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1709 exec execpodq5hjj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.226.72 80'
  Sep 11 02:10:51.194: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.226.72 80\nConnection to 10.43.226.72 80 port [tcp/http] succeeded!\n"
  Sep 11 02:10:51.194: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:10:51.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1709 exec execpodq5hjj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep 11 02:10:51.371: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep 11 02:10:51.371: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:10:51.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1709 exec execpodq5hjj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.226.72 81'
  E0911 02:10:51.523607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:51.550: INFO: stderr: "+ nc -v -t -w 2 10.43.226.72 81\n+ echo hostName\nConnection to 10.43.226.72 81 port [tcp/*] succeeded!\n"
  Sep 11 02:10:51.550: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1709 @ 09/11/23 02:10:51.55
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1709 to expose endpoints map[pod2:[101]] @ 09/11/23 02:10:51.587
  Sep 11 02:10:51.630: INFO: successfully validated that service multi-endpoint-test in namespace services-1709 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1709 @ 09/11/23 02:10:51.63
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1709 to expose endpoints map[] @ 09/11/23 02:10:51.676
  Sep 11 02:10:51.696: INFO: successfully validated that service multi-endpoint-test in namespace services-1709 exposes endpoints map[]
  Sep 11 02:10:51.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1709" for this suite. @ 09/11/23 02:10:51.742
• [8.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 09/11/23 02:10:51.762
  Sep 11 02:10:51.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename gc @ 09/11/23 02:10:51.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:10:51.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:10:51.795
  Sep 11 02:10:51.899: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"e67afa88-6bc8-4192-b92c-d96a7a1311fc", Controller:(*bool)(0xc003dd733e), BlockOwnerDeletion:(*bool)(0xc003dd733f)}}
  Sep 11 02:10:51.913: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"3ddb1ffc-1892-47c7-9d8e-b566e5520de5", Controller:(*bool)(0xc003e37106), BlockOwnerDeletion:(*bool)(0xc003e37107)}}
  Sep 11 02:10:51.941: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"33b23cca-6c17-4300-b606-590742df53c7", Controller:(*bool)(0xc003dd75ce), BlockOwnerDeletion:(*bool)(0xc003dd75cf)}}
  E0911 02:10:52.523814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:53.524841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:54.525848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:55.525959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:56.526774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:10:56.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9843" for this suite. @ 09/11/23 02:10:56.981
• [5.233 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/11/23 02:10:56.996
  Sep 11 02:10:56.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 02:10:56.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:10:57.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:10:57.054
  STEP: Creating pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028 @ 09/11/23 02:10:57.061
  E0911 02:10:57.527147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:10:58.527708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 02:10:59.09
  Sep 11 02:10:59.094: INFO: Initial restart count of pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d is 0
  Sep 11 02:10:59.098: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:10:59.528611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:00.529120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:01.103: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:01.529527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:02.530945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:03.108: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:03.531190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:04.531293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:05.113: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:05.531852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:06.531983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:07.118: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:07.532732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:08.532844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:09.124: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:09.532986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:10.533231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:11.129: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:11.534075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:12.534510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:13.133: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:13.534407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:14.534809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:15.138: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:15.535190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:16.535301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:17.150: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:17.535682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:18.536568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:19.163: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:19.537174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:20.537354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:21.168: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:21.538478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:22.538979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:23.172: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:23.539473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:24.540406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:25.177: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:25.541143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:26.543195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:27.182: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:27.542067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:28.541818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:29.189: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:29.542284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:30.542312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:31.193: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:31.542634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:32.542617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:33.197: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:33.542752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:34.542865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:35.201: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:35.544365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:36.544383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:37.208: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:37.545272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:38.545355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:39.214: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:39.545602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:40.545669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:41.219: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:41.546113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:42.546260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:43.224: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:43.546578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:44.547123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:45.229: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:45.547916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:46.548018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:47.241: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:47.548266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:48.549188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:49.246: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:49.550222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:50.550327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:51.251: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:51.550751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:52.550873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:53.254: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:53.551278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:54.551537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:55.259: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:55.551648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:56.552468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:57.264: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:57.552842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:11:58.553225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:11:59.269: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:11:59.553776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:00.553912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:01.274: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:01.554488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:02.554781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:03.279: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:03.555025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:04.555055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:05.284: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:05.555897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:06.556282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:07.288: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:07.557284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:08.557363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:09.293: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:09.558221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:10.559372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:11.301: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:11.559091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:12.559217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:13.305: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:13.560283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:14.561160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:15.313: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:15.562101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:16.561667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:17.320: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:17.562260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:18.562511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:19.325: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:19.562655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:20.563084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:21.330: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:21.563205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:22.563338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:23.334: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:23.563919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:24.564384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:25.342: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:25.564901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:26.565170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:27.347: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:27.566044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:28.566060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:29.357: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:29.566825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:30.566862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:31.362: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:31.566979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:32.567183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:33.366: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:33.568082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:34.568985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:35.385: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:35.569600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:36.569640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:37.390: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:37.570289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:38.570451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:39.394: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:39.571046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:40.571358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:41.398: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:41.572044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:42.572690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:43.404: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:43.573792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:44.573701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:45.409: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:45.573784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:46.573932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:47.416: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:47.574701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:48.574870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:49.420: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:49.575407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:50.575628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:51.425: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:51.575752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:52.575895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:53.429: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:53.576274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:54.576875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:55.435: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:55.577937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:56.578110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:57.440: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:57.578957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:12:58.579451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:12:59.446: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:12:59.580490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:00.580572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:01.451: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:01.581331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:02.581498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:03.455: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:03.582407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:04.582546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:05.460: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:05.583646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:06.583933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:07.466: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:07.584175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:08.584254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:09.472: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:09.584360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:10.584470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:11.477: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:11.585704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:12.585781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:13.481: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:13.586762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:14.586948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:15.485: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:15.588015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:16.589008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:17.490: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:17.589905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:18.590529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:19.494: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:19.591064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:20.591273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:21.502: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:21.592123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:22.592342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:23.507: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:23.592872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:24.593512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:25.511: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:25.594240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:26.594343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:27.516: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:27.594636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:28.594788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:29.522: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:29.595416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:30.595592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:31.526: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:31.596284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:32.596677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:33.532: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:33.597657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:34.598695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:35.535: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:35.599344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:36.599488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:37.540: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:37.600030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:38.600042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:39.545: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:39.600410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:40.600552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:41.549: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:41.600888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:42.601051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:43.553: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:43.601608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:44.601727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:45.557: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:45.602486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:46.602547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:47.564: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:47.602972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:48.603146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:49.569: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:49.603509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:50.607168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:51.573: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:51.605644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:52.605738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:53.578: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:53.606773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:54.606893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:55.582: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:55.607102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:56.607419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:57.587: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:57.608377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:13:58.609051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:13:59.591: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:13:59.609536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:00.609657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:01.596: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:01.610506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:02.610639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:03.600: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:03.611490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:04.611741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:05.605: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:05.612033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:06.612533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:07.610: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:07.613527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:08.613904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:09.614: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:09.614589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:10.614908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:11.615577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:11.619: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:12.615609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:13.615909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:13.623: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:14.616654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:15.617405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:15.629: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:16.617674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:17.617785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:17.635: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:18.618299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:19.618597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:19.642: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:20.618718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:21.618953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:21.653: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:22.618996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:23.619143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:23.657: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:24.619270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:25.619375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:25.662: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:26.619890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:27.620020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:27.666: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:28.620547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:29.620857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:29.670: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:30.620812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:31.621147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:31.675: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:32.621202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:33.621392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:33.679: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:34.624390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:35.624453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:35.686: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:36.624555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:37.624631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:37.691: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:38.624743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:39.625142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:39.695: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:40.625934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:41.626024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:41.700: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:42.626133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:43.626359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:43.705: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:44.626541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:45.626808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:45.710: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:46.627233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:47.628007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:47.715: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:48.628106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:49.628252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:49.720: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:50.628663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:51.628765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:51.724: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:52.628969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:53.628979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:53.730: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:54.629106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:55.629226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:55.734: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:56.629310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:57.629629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:57.739: INFO: Get pod test-webserver-c4e8071b-1d51-41a3-9275-d587f40bfc8d in namespace container-probe-5028
  E0911 02:14:58.629720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:14:59.630000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:14:59.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:14:59.745
  STEP: Destroying namespace "container-probe-5028" for this suite. @ 09/11/23 02:14:59.763
• [242.780 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/11/23 02:14:59.779
  Sep 11 02:14:59.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename containers @ 09/11/23 02:14:59.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:14:59.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:14:59.813
  E0911 02:15:00.630686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:01.631260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:15:01.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-15" for this suite. @ 09/11/23 02:15:01.869
• [2.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/11/23 02:15:01.879
  Sep 11 02:15:01.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename disruption @ 09/11/23 02:15:01.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:01.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:01.954
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/11/23 02:15:01.963
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:15:01.98
  E0911 02:15:02.632018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:03.632329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/11/23 02:15:04.012
  STEP: Waiting for all pods to be running @ 09/11/23 02:15:04.012
  Sep 11 02:15:04.016: INFO: pods: 0 < 3
  E0911 02:15:04.632785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:05.632723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/11/23 02:15:06.02
  STEP: Updating the pdb to allow a pod to be evicted @ 09/11/23 02:15:06.031
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:15:06.041
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/11/23 02:15:06.047
  STEP: Waiting for all pods to be running @ 09/11/23 02:15:06.047
  STEP: Waiting for the pdb to observed all healthy pods @ 09/11/23 02:15:06.051
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/11/23 02:15:06.08
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:15:06.114
  E0911 02:15:06.633402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:07.633681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/11/23 02:15:08.129
  STEP: locating a running pod @ 09/11/23 02:15:08.134
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/11/23 02:15:08.148
  STEP: Waiting for the pdb to be deleted @ 09/11/23 02:15:08.161
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/11/23 02:15:08.164
  STEP: Waiting for all pods to be running @ 09/11/23 02:15:08.164
  Sep 11 02:15:08.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7769" for this suite. @ 09/11/23 02:15:08.196
• [6.340 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 09/11/23 02:15:08.221
  Sep 11 02:15:08.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 02:15:08.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:08.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:08.255
  STEP: getting /apis @ 09/11/23 02:15:08.258
  STEP: getting /apis/node.k8s.io @ 09/11/23 02:15:08.297
  STEP: getting /apis/node.k8s.io/v1 @ 09/11/23 02:15:08.31
  STEP: creating @ 09/11/23 02:15:08.325
  STEP: watching @ 09/11/23 02:15:08.448
  Sep 11 02:15:08.448: INFO: starting watch
  STEP: getting @ 09/11/23 02:15:08.463
  STEP: listing @ 09/11/23 02:15:08.485
  STEP: patching @ 09/11/23 02:15:08.491
  STEP: updating @ 09/11/23 02:15:08.52
  Sep 11 02:15:08.545: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/11/23 02:15:08.546
  STEP: deleting a collection @ 09/11/23 02:15:08.58
  Sep 11 02:15:08.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3971" for this suite. @ 09/11/23 02:15:08.604
• [0.391 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 09/11/23 02:15:08.612
  Sep 11 02:15:08.612: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 02:15:08.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:08.63
  E0911 02:15:08.634021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:08.634
  STEP: Creating a test namespace @ 09/11/23 02:15:08.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:08.654
  STEP: Creating a pod in the namespace @ 09/11/23 02:15:08.658
  STEP: Waiting for the pod to have running status @ 09/11/23 02:15:08.669
  E0911 02:15:09.634755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:10.634842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/11/23 02:15:10.679
  STEP: Waiting for the namespace to be removed. @ 09/11/23 02:15:10.686
  E0911 02:15:11.635015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:12.635477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:13.636330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:14.637253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:15.637610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:16.637731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:17.637854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:18.638088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:19.638728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:20.639632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:21.640729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/11/23 02:15:21.69
  STEP: Verifying there are no pods in the namespace @ 09/11/23 02:15:21.718
  Sep 11 02:15:21.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-616" for this suite. @ 09/11/23 02:15:21.738
  STEP: Destroying namespace "nsdeletetest-8495" for this suite. @ 09/11/23 02:15:21.758
  Sep 11 02:15:21.764: INFO: Namespace nsdeletetest-8495 was already deleted
  STEP: Destroying namespace "nsdeletetest-3476" for this suite. @ 09/11/23 02:15:21.764
• [13.161 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 09/11/23 02:15:21.776
  Sep 11 02:15:21.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/11/23 02:15:21.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:21.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:21.805
  STEP: fetching the /apis discovery document @ 09/11/23 02:15:21.81
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/11/23 02:15:21.812
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/11/23 02:15:21.812
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/11/23 02:15:21.812
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/11/23 02:15:21.813
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/11/23 02:15:21.813
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/11/23 02:15:21.815
  Sep 11 02:15:21.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5613" for this suite. @ 09/11/23 02:15:21.819
• [0.052 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 09/11/23 02:15:21.829
  Sep 11 02:15:21.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sysctl @ 09/11/23 02:15:21.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:21.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:21.853
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/11/23 02:15:21.858
  STEP: Watching for error events or started pod @ 09/11/23 02:15:21.868
  E0911 02:15:22.641520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:23.641752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/11/23 02:15:23.874
  E0911 02:15:24.642305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:25.642448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/11/23 02:15:25.886
  STEP: Getting logs from the pod @ 09/11/23 02:15:25.886
  STEP: Checking that the sysctl is actually updated @ 09/11/23 02:15:25.894
  Sep 11 02:15:25.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8220" for this suite. @ 09/11/23 02:15:25.899
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 09/11/23 02:15:25.91
  Sep 11 02:15:25.910: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename gc @ 09/11/23 02:15:25.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:25.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:25.941
  STEP: create the deployment @ 09/11/23 02:15:25.946
  W0911 02:15:25.954660      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/11/23 02:15:25.954
  STEP: delete the deployment @ 09/11/23 02:15:26.468
  STEP: wait for all rs to be garbage collected @ 09/11/23 02:15:26.473
  STEP: expected 0 rs, got 1 rs @ 09/11/23 02:15:26.48
  STEP: expected 0 pods, got 2 pods @ 09/11/23 02:15:26.483
  E0911 02:15:26.643339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/11/23 02:15:27.003
  W0911 02:15:27.015102      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 11 02:15:27.015: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 02:15:27.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-124" for this suite. @ 09/11/23 02:15:27.024
• [1.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/11/23 02:15:27.046
  Sep 11 02:15:27.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 02:15:27.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:27.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:27.087
  Sep 11 02:15:27.091: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:15:27.644549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:28.643639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0911 02:15:29.635465      19 warnings.go:70] unknown field "alpha"
  W0911 02:15:29.635604      19 warnings.go:70] unknown field "beta"
  W0911 02:15:29.635616      19 warnings.go:70] unknown field "delta"
  W0911 02:15:29.635623      19 warnings.go:70] unknown field "epsilon"
  W0911 02:15:29.635630      19 warnings.go:70] unknown field "gamma"
  E0911 02:15:29.643968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:15:30.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3295" for this suite. @ 09/11/23 02:15:30.204
• [3.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 09/11/23 02:15:30.216
  Sep 11 02:15:30.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:15:30.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:30.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:30.248
  STEP: Creating a pod to test downward api env vars @ 09/11/23 02:15:30.256
  E0911 02:15:30.644075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:31.644416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:32.645379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:33.646202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:15:34.3
  Sep 11 02:15:34.304: INFO: Trying to get logs from node ip-172-31-3-111 pod downward-api-063ab5ae-ac11-4f1c-a85c-e9d04019538f container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 02:15:34.314
  Sep 11 02:15:34.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6868" for this suite. @ 09/11/23 02:15:34.34
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/11/23 02:15:34.35
  Sep 11 02:15:34.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 02:15:34.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:34.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:34.378
  STEP: apply creating a deployment @ 09/11/23 02:15:34.383
  Sep 11 02:15:34.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7488" for this suite. @ 09/11/23 02:15:34.407
• [0.065 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 09/11/23 02:15:34.416
  Sep 11 02:15:34.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:15:34.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:34.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:34.445
  STEP: Creating configMap that has name configmap-test-emptyKey-62aa0234-90e5-45ad-91bc-be159010c336 @ 09/11/23 02:15:34.45
  Sep 11 02:15:34.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8930" for this suite. @ 09/11/23 02:15:34.457
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/11/23 02:15:34.47
  Sep 11 02:15:34.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 02:15:34.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:34.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:34.493
  STEP: Creating secret with name s-test-opt-del-789eec71-d5dd-4b50-86f6-4ff1b6b063de @ 09/11/23 02:15:34.5
  STEP: Creating secret with name s-test-opt-upd-cd8f707a-cb3b-451b-9911-53186a128c9f @ 09/11/23 02:15:34.505
  STEP: Creating the pod @ 09/11/23 02:15:34.513
  E0911 02:15:34.647153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:35.647625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-789eec71-d5dd-4b50-86f6-4ff1b6b063de @ 09/11/23 02:15:36.626
  E0911 02:15:36.648172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating secret s-test-opt-upd-cd8f707a-cb3b-451b-9911-53186a128c9f @ 09/11/23 02:15:36.677
  STEP: Creating secret with name s-test-opt-create-7e63bf5e-caea-44a2-98ab-628643868d60 @ 09/11/23 02:15:36.7
  STEP: waiting to observe update in volume @ 09/11/23 02:15:36.708
  E0911 02:15:37.648493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:38.648545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:39.648749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:40.649565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:15:40.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5020" for this suite. @ 09/11/23 02:15:40.758
• [6.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/11/23 02:15:40.767
  Sep 11 02:15:40.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename conformance-tests @ 09/11/23 02:15:40.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:40.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:40.793
  STEP: Getting node addresses @ 09/11/23 02:15:40.796
  Sep 11 02:15:40.796: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep 11 02:15:40.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3883" for this suite. @ 09/11/23 02:15:40.809
• [0.051 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/11/23 02:15:40.818
  Sep 11 02:15:40.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 02:15:40.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:40.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:40.839
  STEP: Creating a test headless service @ 09/11/23 02:15:40.842
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5236.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5236.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/11/23 02:15:40.848
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5236.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5236.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/11/23 02:15:40.848
  STEP: creating a pod to probe DNS @ 09/11/23 02:15:40.848
  STEP: submitting the pod to kubernetes @ 09/11/23 02:15:40.848
  E0911 02:15:41.649664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:42.649975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:43.650716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:44.651323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:45.652539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:46.652508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:47.652628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:48.652770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:49.652956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:50.653065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 02:15:50.911
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:15:50.915
  Sep 11 02:15:50.950: INFO: DNS probes using dns-5236/dns-test-eafed73e-cc8d-4ee0-b833-077c5af4c2aa succeeded

  Sep 11 02:15:50.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:15:50.96
  STEP: deleting the test headless service @ 09/11/23 02:15:50.993
  STEP: Destroying namespace "dns-5236" for this suite. @ 09/11/23 02:15:51.032
• [10.235 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/11/23 02:15:51.054
  Sep 11 02:15:51.054: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:15:51.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:51.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:51.113
  STEP: Setting up server cert @ 09/11/23 02:15:51.158
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:15:51.652
  E0911 02:15:51.653262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 09/11/23 02:15:51.662
  STEP: Wait for the deployment to be ready @ 09/11/23 02:15:51.678
  Sep 11 02:15:51.693: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:15:52.653690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:53.653814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:15:53.713
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:15:53.725
  E0911 02:15:54.654721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:15:54.725: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 11 02:15:54.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/11/23 02:15:55.246
  STEP: Creating a custom resource that should be denied by the webhook @ 09/11/23 02:15:55.277
  E0911 02:15:55.655210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:56.655443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/11/23 02:15:57.322
  STEP: Updating the custom resource with disallowed data should be denied @ 09/11/23 02:15:57.341
  STEP: Deleting the custom resource should be denied @ 09/11/23 02:15:57.363
  STEP: Remove the offending key and value from the custom resource data @ 09/11/23 02:15:57.384
  STEP: Deleting the updated custom resource should be successful @ 09/11/23 02:15:57.399
  Sep 11 02:15:57.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 02:15:57.656213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-4719" for this suite. @ 09/11/23 02:15:58.058
  STEP: Destroying namespace "webhook-markers-7217" for this suite. @ 09/11/23 02:15:58.067
• [7.022 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/11/23 02:15:58.077
  Sep 11 02:15:58.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 02:15:58.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:15:58.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:15:58.109
  STEP: Creating a test headless service @ 09/11/23 02:15:58.114
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3689 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3689;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3689 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3689;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3689.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3689.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3689.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3689.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3689.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3689.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3689.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3689.svc;check="$$(dig +notcp +noall +answer +search 177.60.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.60.177_udp@PTR;check="$$(dig +tcp +noall +answer +search 177.60.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.60.177_tcp@PTR;sleep 1; done
   @ 09/11/23 02:15:58.155
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3689 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3689;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3689 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3689;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3689.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3689.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3689.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3689.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3689.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3689.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3689.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3689.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3689.svc;check="$$(dig +notcp +noall +answer +search 177.60.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.60.177_udp@PTR;check="$$(dig +tcp +noall +answer +search 177.60.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.60.177_tcp@PTR;sleep 1; done
   @ 09/11/23 02:15:58.155
  STEP: creating a pod to probe DNS @ 09/11/23 02:15:58.155
  STEP: submitting the pod to kubernetes @ 09/11/23 02:15:58.155
  E0911 02:15:58.656878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:15:59.657275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 02:16:00.204
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:16:00.216
  Sep 11 02:16:00.259: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.272: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.280: INFO: Unable to read wheezy_udp@dns-test-service.dns-3689 from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.289: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3689 from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.300: INFO: Unable to read wheezy_udp@dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.312: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.319: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.327: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.363: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.368: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.372: INFO: Unable to read jessie_udp@dns-test-service.dns-3689 from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.378: INFO: Unable to read jessie_tcp@dns-test-service.dns-3689 from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.382: INFO: Unable to read jessie_udp@dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.387: INFO: Unable to read jessie_tcp@dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.395: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.402: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3689.svc from pod dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91: the server could not find the requested resource (get pods dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91)
  Sep 11 02:16:00.430: INFO: Lookups using dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3689 wheezy_tcp@dns-test-service.dns-3689 wheezy_udp@dns-test-service.dns-3689.svc wheezy_tcp@dns-test-service.dns-3689.svc wheezy_udp@_http._tcp.dns-test-service.dns-3689.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3689.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3689 jessie_tcp@dns-test-service.dns-3689 jessie_udp@dns-test-service.dns-3689.svc jessie_tcp@dns-test-service.dns-3689.svc jessie_udp@_http._tcp.dns-test-service.dns-3689.svc jessie_tcp@_http._tcp.dns-test-service.dns-3689.svc]

  Sep 11 02:16:00.446: INFO: Pod client logs for webserver: 
  Sep 11 02:16:00.454: INFO: Pod client logs for querier: 
  Sep 11 02:16:00.471: INFO: Pod client logs for jessie-querier: 
  E0911 02:16:00.657500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:01.657725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:02.657790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:03.658761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:04.658861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:05.610: INFO: DNS probes using dns-3689/dns-test-a53ac1bc-5f92-424d-97ad-80e2bab2ba91 succeeded

  Sep 11 02:16:05.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:16:05.616
  STEP: deleting the test service @ 09/11/23 02:16:05.656
  E0911 02:16:05.659847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 09/11/23 02:16:05.761
  STEP: Destroying namespace "dns-3689" for this suite. @ 09/11/23 02:16:05.799
• [7.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/11/23 02:16:05.825
  Sep 11 02:16:05.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 02:16:05.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:05.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:05.884
  STEP: creating the pod @ 09/11/23 02:16:05.888
  STEP: setting up watch @ 09/11/23 02:16:05.888
  STEP: submitting the pod to kubernetes @ 09/11/23 02:16:05.995
  STEP: verifying the pod is in kubernetes @ 09/11/23 02:16:06.018
  STEP: verifying pod creation was observed @ 09/11/23 02:16:06.032
  E0911 02:16:06.660635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:07.661511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/11/23 02:16:08.068
  STEP: verifying pod deletion was observed @ 09/11/23 02:16:08.091
  E0911 02:16:08.661602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:09.662106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:09.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9257" for this suite. @ 09/11/23 02:16:09.739
• [3.950 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 09/11/23 02:16:09.777
  Sep 11 02:16:09.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename server-version @ 09/11/23 02:16:09.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:09.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:09.824
  STEP: Request ServerVersion @ 09/11/23 02:16:09.838
  STEP: Confirm major version @ 09/11/23 02:16:09.85
  Sep 11 02:16:09.851: INFO: Major version: 1
  STEP: Confirm minor version @ 09/11/23 02:16:09.851
  Sep 11 02:16:09.851: INFO: cleanMinorVersion: 28
  Sep 11 02:16:09.851: INFO: Minor version: 28
  Sep 11 02:16:09.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1668" for this suite. @ 09/11/23 02:16:09.857
• [0.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/11/23 02:16:09.901
  Sep 11 02:16:09.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 02:16:09.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:09.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:09.976
  STEP: creating the pod @ 09/11/23 02:16:09.992
  STEP: submitting the pod to kubernetes @ 09/11/23 02:16:09.992
  E0911 02:16:10.662581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:11.663358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:12.663560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:13.664391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/11/23 02:16:14.072
  STEP: updating the pod @ 09/11/23 02:16:14.076
  Sep 11 02:16:14.590: INFO: Successfully updated pod "pod-update-510102b4-c373-4f5a-8653-2f6e447569a2"
  STEP: verifying the updated pod is in kubernetes @ 09/11/23 02:16:14.598
  Sep 11 02:16:14.606: INFO: Pod update OK
  Sep 11 02:16:14.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5974" for this suite. @ 09/11/23 02:16:14.618
• [4.753 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/11/23 02:16:14.656
  Sep 11 02:16:14.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:16:14.657
  E0911 02:16:14.664657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:14.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:14.7
  STEP: Creating configMap with name configmap-test-volume-1d470905-6bfa-43c8-9256-b59738be47a4 @ 09/11/23 02:16:14.704
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:16:14.721
  E0911 02:16:15.664836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:16.665521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:17.665893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:18.665986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:16:18.765
  Sep 11 02:16:18.772: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-b478103f-acbb-4b67-b4c6-0e7384b982fe container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:16:18.786
  Sep 11 02:16:18.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9591" for this suite. @ 09/11/23 02:16:18.838
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/11/23 02:16:18.859
  Sep 11 02:16:18.859: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:16:18.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:18.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:18.922
  STEP: Creating configMap with name projected-configmap-test-volume-b6a07aac-f4d7-4b12-aee5-c4e6f678898f @ 09/11/23 02:16:18.931
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:16:18.947
  E0911 02:16:19.666500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:20.666594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:21.666766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:22.666904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:16:22.998
  Sep 11 02:16:23.004: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-projected-configmaps-79204a31-139b-4df6-9ba5-1ac80c4c6530 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:16:23.018
  Sep 11 02:16:23.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2067" for this suite. @ 09/11/23 02:16:23.044
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/11/23 02:16:23.054
  Sep 11 02:16:23.054: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename events @ 09/11/23 02:16:23.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:23.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:23.094
  STEP: Create set of events @ 09/11/23 02:16:23.099
  STEP: get a list of Events with a label in the current namespace @ 09/11/23 02:16:23.121
  STEP: delete a list of events @ 09/11/23 02:16:23.125
  Sep 11 02:16:23.125: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/11/23 02:16:23.152
  Sep 11 02:16:23.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5469" for this suite. @ 09/11/23 02:16:23.162
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/11/23 02:16:23.175
  Sep 11 02:16:23.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:16:23.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:23.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:23.197
  STEP: Creating configMap with name configmap-test-volume-af4783fa-4d9d-48e2-8298-def09a8ba0cd @ 09/11/23 02:16:23.2
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:16:23.205
  E0911 02:16:23.667063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:24.668056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:25.668192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:26.668916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:16:27.236
  Sep 11 02:16:27.241: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-c20e6b4c-41a8-4793-aff3-46cb484eefef container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:16:27.249
  Sep 11 02:16:27.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-172" for this suite. @ 09/11/23 02:16:27.274
• [4.112 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/11/23 02:16:27.287
  Sep 11 02:16:27.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:16:27.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:27.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:27.318
  STEP: Setting up server cert @ 09/11/23 02:16:27.358
  E0911 02:16:27.668921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:16:28.013
  STEP: Deploying the webhook pod @ 09/11/23 02:16:28.024
  STEP: Wait for the deployment to be ready @ 09/11/23 02:16:28.04
  Sep 11 02:16:28.072: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 16, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 16, 28, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-7646f658cc\""}}, CollisionCount:(*int32)(nil)}
  E0911 02:16:28.669491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:29.669734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:16:30.086
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:16:30.123
  E0911 02:16:30.669909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:31.123: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/11/23 02:16:31.131
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/11/23 02:16:31.131
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/11/23 02:16:31.158
  E0911 02:16:31.670587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/11/23 02:16:32.171
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/11/23 02:16:32.171
  E0911 02:16:32.670735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/11/23 02:16:33.209
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/11/23 02:16:33.209
  E0911 02:16:33.670903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:34.671003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:35.671132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:36.671466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:37.671586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/11/23 02:16:38.266
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/11/23 02:16:38.266
  E0911 02:16:38.672689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:39.672818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:40.673041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:41.673533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:42.673678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:43.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5289" for this suite. @ 09/11/23 02:16:43.484
  STEP: Destroying namespace "webhook-markers-9781" for this suite. @ 09/11/23 02:16:43.503
• [16.226 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 09/11/23 02:16:43.514
  Sep 11 02:16:43.514: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 02:16:43.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:43.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:43.546
  STEP: starting the proxy server @ 09/11/23 02:16:43.55
  Sep 11 02:16:43.550: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-7754 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/11/23 02:16:43.632
  Sep 11 02:16:43.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7754" for this suite. @ 09/11/23 02:16:43.649
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/11/23 02:16:43.662
  Sep 11 02:16:43.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:16:43.663
  E0911 02:16:43.673798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:43.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:43.688
  STEP: Setting up server cert @ 09/11/23 02:16:43.722
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:16:44.545
  STEP: Deploying the webhook pod @ 09/11/23 02:16:44.551
  STEP: Wait for the deployment to be ready @ 09/11/23 02:16:44.565
  Sep 11 02:16:44.578: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:16:44.674376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:45.674530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:16:46.606
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:16:46.618
  E0911 02:16:46.674892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:47.618: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/11/23 02:16:47.626
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/11/23 02:16:47.666
  E0911 02:16:47.675635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that should not be mutated @ 09/11/23 02:16:47.676
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/11/23 02:16:47.697
  STEP: Creating a configMap that should be mutated @ 09/11/23 02:16:47.716
  Sep 11 02:16:47.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5990" for this suite. @ 09/11/23 02:16:47.836
  STEP: Destroying namespace "webhook-markers-2340" for this suite. @ 09/11/23 02:16:47.861
• [4.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/11/23 02:16:47.878
  Sep 11 02:16:47.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 02:16:47.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:47.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:47.946
  STEP: Creating simple DaemonSet "daemon-set" @ 09/11/23 02:16:47.984
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 02:16:47.995
  Sep 11 02:16:48.014: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:16:48.014: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 02:16:48.675987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:49.027: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:16:49.027: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 02:16:49.676709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:50.024: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 02:16:50.024: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/11/23 02:16:50.027
  Sep 11 02:16:50.055: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 02:16:50.055: INFO: Node ip-172-31-3-111 is running 0 daemon pod, expected 1
  E0911 02:16:50.677148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:51.065: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 02:16:51.065: INFO: Node ip-172-31-3-111 is running 0 daemon pod, expected 1
  E0911 02:16:51.677662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:52.068: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 02:16:52.068: INFO: Node ip-172-31-3-111 is running 0 daemon pod, expected 1
  E0911 02:16:52.678596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:53.069: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 02:16:53.069: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 02:16:53.075
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4253, will wait for the garbage collector to delete the pods @ 09/11/23 02:16:53.075
  Sep 11 02:16:53.180: INFO: Deleting DaemonSet.extensions daemon-set took: 49.190767ms
  Sep 11 02:16:53.282: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.256773ms
  E0911 02:16:53.678974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:54.679324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:16:54.887: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:16:54.887: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 02:16:54.891: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21654"},"items":null}

  Sep 11 02:16:54.894: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21654"},"items":null}

  Sep 11 02:16:54.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4253" for this suite. @ 09/11/23 02:16:54.93
• [7.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 09/11/23 02:16:54.944
  Sep 11 02:16:54.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 02:16:54.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:16:54.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:16:54.974
  STEP: Creating service test in namespace statefulset-9661 @ 09/11/23 02:16:54.978
  Sep 11 02:16:55.003: INFO: Found 0 stateful pods, waiting for 1
  E0911 02:16:55.679407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:56.679530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:57.679637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:58.679759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:16:59.679888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:00.680045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:01.680169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:02.680304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:03.680596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:04.680572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:05.014: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/11/23 02:17:05.026
  W0911 02:17:05.040969      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep 11 02:17:05.059: INFO: Found 1 stateful pods, waiting for 2
  E0911 02:17:05.681493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:06.681624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:07.681686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:08.681769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:09.682692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:10.682818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:11.683195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:12.683491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:13.683608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:14.683762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:15.069: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:17:15.069: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/11/23 02:17:15.086
  STEP: Delete all of the StatefulSets @ 09/11/23 02:17:15.105
  STEP: Verify that StatefulSets have been deleted @ 09/11/23 02:17:15.134
  Sep 11 02:17:15.143: INFO: Deleting all statefulset in ns statefulset-9661
  Sep 11 02:17:15.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9661" for this suite. @ 09/11/23 02:17:15.21
• [20.285 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/11/23 02:17:15.23
  Sep 11 02:17:15.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:17:15.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:17:15.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:17:15.284
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:17:15.3
  E0911 02:17:15.684831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:16.685155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:17.686071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:18.686218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:17:19.389
  Sep 11 02:17:19.392: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-13463149-c1f0-42fa-8b53-3e2f47f1958a container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:17:19.4
  Sep 11 02:17:19.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7786" for this suite. @ 09/11/23 02:17:19.429
• [4.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/11/23 02:17:19.443
  Sep 11 02:17:19.443: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 02:17:19.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:17:19.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:17:19.484
  STEP: Creating pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29 @ 09/11/23 02:17:19.488
  E0911 02:17:19.686421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:20.686727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 02:17:21.517
  Sep 11 02:17:21.522: INFO: Initial restart count of pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 is 0
  Sep 11 02:17:21.526: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:21.687124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:22.687633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:23.530: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:23.688319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:24.688962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:25.535: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:25.689609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:26.689615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:27.541: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:27.690186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:28.690757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:29.546: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:29.690781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:30.690928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:31.550: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:31.691965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:32.692099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:33.554: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:33.692950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:34.693657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:35.560: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:35.694636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:36.694734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:37.564: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:37.695429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:38.695578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:39.568: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:39.696383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:40.696662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:41.573: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:41.697352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:42.697725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:43.578: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:43.697784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:44.697992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:45.583: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:45.698833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:46.698970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:47.587: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:47.699402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:48.699521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:49.594: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:49.700365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:50.700446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:51.599: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:51.700629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:52.700749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:53.603: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:53.700937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:54.701532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:55.608: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:55.702656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:56.702748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:57.612: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:57.703745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:17:58.704109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:17:59.616: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:17:59.704575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:00.704707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:01.620: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:01.705613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:02.705660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:03.626: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:03.707151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:04.708089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:05.632: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:05.708123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:06.708376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:07.636: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:07.708636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:08.708751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:09.641: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:09.710189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:10.710298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:11.646: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:11.710346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:12.710717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:13.652: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:13.711684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:14.711817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:15.657: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:15.712471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:16.712778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:17.662: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:17.713552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:18.713665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:19.667: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:19.714288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:20.714352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:21.671: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:21.715158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:22.715270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:23.677: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:23.716379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:24.717044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:25.683: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:25.717941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:26.718122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:27.687: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:27.718760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:28.719622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:29.693: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:29.720023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:30.720163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:31.698: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:31.720864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:32.721522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:33.702: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:33.722190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:34.722779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:35.708: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:35.723800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:36.723911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:37.712: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:37.723994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:38.724084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:39.717: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:39.724515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:40.724679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:41.721: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:41.725133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:42.725484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:43.726475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:43.727: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:44.726806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:45.727224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:45.733: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:46.727370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:47.727443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:47.738: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:48.727568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:49.728089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:49.743: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:50.728834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:51.729038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:51.748: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:52.729490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:53.729657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:53.752: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:54.730571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:55.730779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:55.757: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:56.731644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:57.731760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:57.761: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:18:58.731913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:18:59.732688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:18:59.765: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:00.732908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:01.733013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:01.770: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:02.733195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:03.733411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:03.775: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:04.733705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:05.734689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:05.780: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:06.735470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:07.736123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:07.784: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:08.736812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:09.737097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:09.790: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:10.737743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:11.738723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:11.794: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:12.739117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:13.739334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:13.799: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:14.739563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:15.739859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:15.806: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:16.740589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:17.740791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:17.811: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:18.741359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:19.742093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:19.816: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:20.742255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:21.742364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:21.821: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:22.742478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:23.742642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:23.825: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:24.742913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:25.743303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:25.830: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:26.743951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:27.744322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:27.834: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:28.745113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:29.745418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:29.838: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:30.746507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:31.746630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:31.842: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:32.746741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:33.746877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:33.846: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:34.747732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:35.747938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:35.853: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:36.748047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:37.748336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:37.858: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:38.748493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:39.748836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:39.863: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:40.749734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:41.749945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:41.867: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:42.750695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:43.750994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:43.872: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:44.751701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:45.752056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:45.878: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:46.754024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:47.754155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:47.883: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:48.754263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:49.754381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:49.888: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:50.754541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:51.754829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:51.893: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:52.755066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:53.755566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:53.898: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:54.755927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:55.756157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:55.904: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:56.757245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:57.757294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:57.907: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:19:58.757424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:19:59.757616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:19:59.911: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:00.757758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:01.758689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:01.917: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:02.758946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:03.759129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:03.922: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:04.759263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:05.759382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:05.927: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:06.759517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:07.759736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:07.931: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:08.760125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:09.760965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:09.936: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:10.762032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:11.762167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:11.941: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:12.762491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:13.762742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:13.946: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:14.763757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:15.763875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:15.952: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:16.764043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:17.764195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:17.963: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:18.765232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:19.765946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:19.968: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:20.767421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:21.767698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:21.973: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:22.767799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:23.768278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:23.978: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:24.768376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:25.768520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:25.986: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:26.768734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:27.769804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:27.991: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:28.770058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:29.770522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:29.997: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:30.771078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:31.771427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:32.001: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:32.771616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:33.771765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:34.006: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:34.771869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:35.772101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:36.012: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:36.772239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:37.772947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:38.017: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:38.773995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:39.775444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:40.021: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:40.775489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:41.775687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:42.025: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:42.775904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:43.775871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:44.039: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:44.776489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:45.776517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:46.045: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:46.777411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:47.777625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:48.049: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:48.777717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:49.778084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:50.054: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:50.778379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:51.779469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:52.059: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:52.780354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:53.780981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:54.063: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:54.781306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:55.781523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:56.068: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:56.782392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:57.782681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:20:58.072: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:20:58.783358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:20:59.783730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:00.078: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:00.783972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:01.784421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:02.085: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:02.785037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:03.785262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:04.090: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:04.786127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:05.786688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:06.098: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:06.787468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:07.787739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:08.103: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:08.788851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:09.788960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:10.108: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:10.789403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:11.789703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:12.113: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:12.790188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:13.790290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:14.118: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:14.790841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:15.790940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:16.123: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:16.791487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:17.791614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:18.127: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:18.792733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:19.792840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:20.132: INFO: Get pod test-grpc-2bf20248-6307-44b8-9f33-51e2f47a8733 in namespace container-probe-29
  E0911 02:21:20.793232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:21.793506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:21:22.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:21:22.138
  STEP: Destroying namespace "container-probe-29" for this suite. @ 09/11/23 02:21:22.158
• [242.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/11/23 02:21:22.176
  Sep 11 02:21:22.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 02:21:22.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:21:22.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:21:22.214
  STEP: Creating a ForbidConcurrent cronjob @ 09/11/23 02:21:22.22
  STEP: Ensuring a job is scheduled @ 09/11/23 02:21:22.23
  E0911 02:21:22.794304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:23.794738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:24.794984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:25.795431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:26.795568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:27.795721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:28.796526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:29.796695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:30.796863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:31.797041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:32.797164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:33.797516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:34.797680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:35.797837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:36.798718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:37.798853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:38.799406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:39.799902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:40.800781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:41.800912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:42.801514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:43.801628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:44.802733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:45.802934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:46.803069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:47.804212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:48.804309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:49.804450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:50.804585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:51.804705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:52.805719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:53.806166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:54.806714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:55.807988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:56.808094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:57.808204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:58.808357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:21:59.808441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/11/23 02:22:00.237
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/11/23 02:22:00.256
  STEP: Ensuring no more jobs are scheduled @ 09/11/23 02:22:00.267
  E0911 02:22:00.809431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:01.809662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:02.810488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:03.810583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:04.811640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:05.812256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:06.813423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:07.814065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:08.814697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:09.815067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:10.815479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:11.815627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:12.817813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:13.818775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:14.819019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:15.819138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:16.819245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:17.819366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:18.820848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:19.819624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:20.819735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:21.820513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:22.821427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:23.821624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:24.821748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:25.821848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:26.822190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:27.822703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:28.822907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:29.823063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:30.823334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:31.823538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:32.824665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:33.825511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:34.825591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:35.825670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:36.825666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:37.825914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:38.826674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:39.826903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:40.827423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:41.827568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:42.828323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:43.828606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:44.828736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:45.828899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:46.829650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:47.829765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:48.829911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:49.830369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:50.830436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:51.830549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:52.831450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:53.831758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:54.832624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:55.833385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:56.833616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:57.833624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:58.834642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:22:59.834846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:00.835212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:01.835328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:02.835499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:03.835856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:04.836591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:05.836842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:06.837282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:07.837429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:08.837657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:09.839460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:10.840438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:11.840522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:12.840796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:13.840858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:14.841622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:15.841722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:16.842126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:17.842500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:18.842604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:19.842802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:20.843151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:21.843279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:22.844305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:23.844435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:24.844606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:25.844752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:26.845811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:27.846696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:28.846819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:29.846981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:30.847896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:31.848015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:32.848619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:33.848762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:34.849850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:35.849966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:36.850664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:37.850787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:38.851755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:39.851900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:40.852092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:41.852273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:42.856800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:43.857103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:44.857478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:45.857674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:46.858662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:47.858858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:48.859011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:49.859498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:50.860228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:51.860348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:52.860474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:53.860626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:54.861676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:55.861816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:56.862694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:57.863030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:58.863128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:23:59.863533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:00.864313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:01.864444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:02.864899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:03.865073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:04.865148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:05.865323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:06.865517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:07.865961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:08.865823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:09.865864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:10.866443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:11.866548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:12.866953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:13.867669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:14.867786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:15.867929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:16.868073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:17.868216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:18.868602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:19.869116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:20.869900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:21.870134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:22.870193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:23.870283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:24.870484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:25.870619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:26.871590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:27.875646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:28.875768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:29.876471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:30.876590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:31.876706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:32.876851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:33.876978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:34.877208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:35.877512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:36.877593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:37.877709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:38.878809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:39.879299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:40.879765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:41.880046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:42.880933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:43.881037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:44.882088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:45.882213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:46.882357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:47.882864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:48.882793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:49.883596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:50.883683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:51.883807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:52.884716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:53.884921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:54.885056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:55.885263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:56.886334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:57.886449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:58.886561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:24:59.886680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:00.887459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:01.887591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:02.887708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:03.887866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:04.887986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:05.888153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:06.888974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:07.889092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:08.889150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:09.889605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:10.889723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:11.889837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:12.889949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:13.890676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:14.890820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:15.890940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:16.891888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:17.891991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:18.892119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:19.892260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:20.893110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:21.893227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:22.893579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:23.894681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:24.894824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:25.895090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:26.895200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:27.895335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:28.895890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:29.896013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:30.896123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:31.896366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:32.896392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:33.896646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:34.896777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:35.896882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:36.897985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:37.898293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:38.898410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:39.898795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:40.899396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:41.899719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:42.900717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:43.900854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:44.901063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:45.901326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:46.901532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:47.903438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:48.904422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:49.904908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:50.905714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:51.905828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:52.906538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:53.906688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:54.906771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:55.906887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:56.907002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:57.907127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:58.908060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:25:59.909066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:00.909210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:01.909371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:02.909664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:03.909718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:04.909954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:05.910070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:06.910177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:07.910359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:08.910637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:09.910773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:10.911611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:11.914026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:12.914146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:13.914271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:14.914371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:15.914472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:16.914730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:17.915001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:18.915315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:19.915927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:20.916808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:21.917629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:22.917776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:23.918077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:24.918693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:25.918654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:26.918904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:27.918991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:28.919945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:29.920497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:30.920537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:31.920645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:32.923037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:33.923249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:34.923693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:35.923990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:36.924915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:37.925248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:38.925838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:39.925579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:40.926607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:41.926947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:42.927572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:43.927965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:44.928872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:45.929021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:46.930079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:47.930286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:48.930907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:49.931312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:50.931374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:51.931603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:52.932046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:53.931904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:54.932431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:55.932592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:56.932758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:57.932891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:58.932986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:26:59.933353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/11/23 02:27:00.276
  Sep 11 02:27:00.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3037" for this suite. @ 09/11/23 02:27:00.291
• [338.130 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/11/23 02:27:00.307
  Sep 11 02:27:00.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 02:27:00.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:27:00.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:27:00.353
  Sep 11 02:27:00.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8579" for this suite. @ 09/11/23 02:27:00.402
• [0.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 09/11/23 02:27:00.432
  Sep 11 02:27:00.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pod-network-test @ 09/11/23 02:27:00.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:27:00.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:27:00.456
  STEP: Performing setup for networking test in namespace pod-network-test-9029 @ 09/11/23 02:27:00.46
  STEP: creating a selector @ 09/11/23 02:27:00.46
  STEP: Creating the service pods in kubernetes @ 09/11/23 02:27:00.46
  Sep 11 02:27:00.460: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0911 02:27:00.933418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:01.933820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:02.934578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:03.935831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:04.936074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:05.937365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:06.938325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:07.938581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:08.939421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:09.939534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:10.940487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:11.940515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:12.941282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:13.941569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:14.942530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:15.942788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:16.942906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:17.943331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:18.944193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:19.944377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:20.944416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:21.944520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/11/23 02:27:22.658
  E0911 02:27:22.944918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:23.945312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:27:24.692: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 11 02:27:24.692: INFO: Going to poll 10.42.0.73 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 02:27:24.695: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.73:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9029 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:27:24.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:27:24.696: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:27:24.696: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9029/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.73%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 02:27:24.771: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 11 02:27:24.771: INFO: Going to poll 10.42.2.75 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 02:27:24.775: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.75:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9029 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:27:24.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:27:24.776: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:27:24.776: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9029/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.75%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 02:27:24.870: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 11 02:27:24.870: INFO: Going to poll 10.42.1.145 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 02:27:24.874: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.145:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9029 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:27:24.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:27:24.874: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:27:24.874: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9029/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.145%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 02:27:24.943: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 11 02:27:24.943: INFO: Going to poll 10.42.3.108 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  E0911 02:27:24.946638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:27:24.948: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.108:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9029 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:27:24.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:27:24.952: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:27:24.952: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9029/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.108%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 02:27:25.027: INFO: Found all 1 expected endpoints: [netserver-3]
  Sep 11 02:27:25.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9029" for this suite. @ 09/11/23 02:27:25.032
• [24.610 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/11/23 02:27:25.043
  Sep 11 02:27:25.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:27:25.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:27:25.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:27:25.079
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:27:25.083
  E0911 02:27:25.947008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:26.947290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:27.947980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:28.948143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:27:29.135
  Sep 11 02:27:29.140: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-480479a0-c963-411f-8b32-72e03f805f5a container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:27:29.159
  Sep 11 02:27:29.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1889" for this suite. @ 09/11/23 02:27:29.188
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/11/23 02:27:29.202
  Sep 11 02:27:29.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:27:29.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:27:29.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:27:29.237
  STEP: Creating configMap with name configmap-test-upd-e0cf397e-5422-4138-8455-115b8eb2194c @ 09/11/23 02:27:29.253
  STEP: Creating the pod @ 09/11/23 02:27:29.26
  E0911 02:27:29.948280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:30.948596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-e0cf397e-5422-4138-8455-115b8eb2194c @ 09/11/23 02:27:31.299
  STEP: waiting to observe update in volume @ 09/11/23 02:27:31.305
  E0911 02:27:31.948598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:32.948717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:33.949705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:34.950471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:35.950737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:36.950845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:37.950985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:38.951100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:39.951184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:40.951401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:41.952018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:42.952153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:43.952475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:44.953031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:45.954052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:46.954674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:47.954873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:48.955304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:49.955274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:50.955594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:51.956335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:52.956460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:53.956689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:54.957222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:55.957434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:56.957578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:57.957679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:58.957787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:27:59.958702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:00.958905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:01.959644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:02.959787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:03.959857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:04.960142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:05.960470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:06.961573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:07.961877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:08.961989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:09.962152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:10.962282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:11.962396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:12.962502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:13.962651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:14.963391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:15.963533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:16.963669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:17.963907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:18.964202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:19.964321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:20.964467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:21.964909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:22.965194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:23.965347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:24.965613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:25.966355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:26.966494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:27.967086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:28.968107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:29.968211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:30.968365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:31.969262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:32.969380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:33.970307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:34.970537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:35.970815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:36.970953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:37.971832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:38.972106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:39.972936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:40.973047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:41.973756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:42.974129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:43.974427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:44.974612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:45.975209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:46.975752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:47.976548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:48.978245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:49.979361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:50.979511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:51.979869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:52.980035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:53.981062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:54.981151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:55.982139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:56.982455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:57.983344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:28:58.983402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:28:59.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3416" for this suite. @ 09/11/23 02:28:59.788
• [90.595 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 09/11/23 02:28:59.798
  Sep 11 02:28:59.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 02:28:59.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:28:59.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:28:59.828
  STEP: Creating service test in namespace statefulset-5601 @ 09/11/23 02:28:59.831
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/11/23 02:28:59.84
  STEP: Creating stateful set ss in namespace statefulset-5601 @ 09/11/23 02:28:59.847
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5601 @ 09/11/23 02:28:59.856
  Sep 11 02:28:59.863: INFO: Found 0 stateful pods, waiting for 1
  E0911 02:28:59.983389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:00.983992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:01.984129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:02.984238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:03.984322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:04.985048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:05.985587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:06.985607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:07.985869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:08.985983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:09.867: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/11/23 02:29:09.868
  Sep 11 02:29:09.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0911 02:29:09.986682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:10.042: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:29:10.042: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:29:10.042: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:29:10.046: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0911 02:29:10.987006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:11.987262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:12.987474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:13.987952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:14.988448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:15.988678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:16.989904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:17.989027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:18.989618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:19.989784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:20.051: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:29:20.051: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 02:29:20.071: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999955s
  E0911 02:29:20.990641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:21.075: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995995582s
  E0911 02:29:21.991283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:22.081: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.991339576s
  E0911 02:29:22.992224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:23.085: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.986231245s
  E0911 02:29:23.992954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:24.092: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.981409407s
  E0911 02:29:24.993382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:25.098: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.975042698s
  E0911 02:29:25.993856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:26.103: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.968706437s
  E0911 02:29:26.994723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:27.107: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.963822609s
  E0911 02:29:27.995451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:28.111: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.960161768s
  E0911 02:29:28.995515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:29.117: INFO: Verifying statefulset ss doesn't scale past 1 for another 954.955477ms
  E0911 02:29:29.995611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5601 @ 09/11/23 02:29:30.118
  Sep 11 02:29:30.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 02:29:30.298: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 02:29:30.298: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:29:30.298: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 02:29:30.301: INFO: Found 1 stateful pods, waiting for 3
  E0911 02:29:30.995763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:31.995871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:32.996145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:33.996883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:34.996948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:35.997068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:36.997191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:37.997374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:38.997830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:39.997973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:40.307: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:29:40.307: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:29:40.307: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/11/23 02:29:40.307
  STEP: Scale down will halt with unhealthy stateful pod @ 09/11/23 02:29:40.307
  Sep 11 02:29:40.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:29:40.480: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:29:40.481: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:29:40.481: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:29:40.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:29:40.642: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:29:40.642: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:29:40.642: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:29:40.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:29:40.833: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:29:40.833: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:29:40.833: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 02:29:40.833: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 02:29:40.838: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0911 02:29:40.998580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:41.998650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:42.998757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:43.999475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:44.999565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:45.999794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:46.999810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:47.999925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:49.000681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:29:50.002177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:50.851: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:29:50.851: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:29:50.851: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 02:29:50.871: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999961s
  E0911 02:29:51.002282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:51.876: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993706444s
  E0911 02:29:52.002944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:52.881: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988891448s
  E0911 02:29:53.003897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:53.885: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984278614s
  E0911 02:29:54.004622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:54.891: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978965881s
  E0911 02:29:55.005216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:55.896: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.97382849s
  E0911 02:29:56.005481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:56.901: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.968622019s
  E0911 02:29:57.005674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:57.905: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.96441593s
  E0911 02:29:58.005998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:58.909: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.960018489s
  E0911 02:29:59.006979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:29:59.914: INFO: Verifying statefulset ss doesn't scale past 3 for another 955.078091ms
  E0911 02:30:00.007729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5601 @ 09/11/23 02:30:00.914
  Sep 11 02:30:00.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0911 02:30:01.008421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:30:01.073: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 02:30:01.073: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:30:01.073: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 02:30:01.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 02:30:01.236: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 02:30:01.236: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:30:01.236: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 02:30:01.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-5601 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 02:30:01.462: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 02:30:01.462: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:30:01.462: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 02:30:01.462: INFO: Scaling statefulset ss to 0
  E0911 02:30:02.008560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:03.008692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:04.009696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:05.010094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:06.010284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:07.010409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:08.010539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:09.011565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:10.011687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:11.011795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/11/23 02:30:11.485
  Sep 11 02:30:11.485: INFO: Deleting all statefulset in ns statefulset-5601
  Sep 11 02:30:11.490: INFO: Scaling statefulset ss to 0
  Sep 11 02:30:11.507: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 02:30:11.512: INFO: Deleting statefulset ss
  Sep 11 02:30:11.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5601" for this suite. @ 09/11/23 02:30:11.545
• [71.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 09/11/23 02:30:11.566
  Sep 11 02:30:11.566: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename podtemplate @ 09/11/23 02:30:11.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:30:11.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:30:11.667
  STEP: Create set of pod templates @ 09/11/23 02:30:11.676
  Sep 11 02:30:11.688: INFO: created test-podtemplate-1
  Sep 11 02:30:11.697: INFO: created test-podtemplate-2
  Sep 11 02:30:11.707: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/11/23 02:30:11.707
  STEP: delete collection of pod templates @ 09/11/23 02:30:11.717
  Sep 11 02:30:11.717: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/11/23 02:30:11.747
  Sep 11 02:30:11.747: INFO: requesting list of pod templates to confirm quantity
  Sep 11 02:30:11.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9122" for this suite. @ 09/11/23 02:30:11.762
• [0.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 09/11/23 02:30:11.776
  Sep 11 02:30:11.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 02:30:11.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:30:11.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:30:11.82
  STEP: Updating Namespace "namespaces-4846" @ 09/11/23 02:30:11.824
  Sep 11 02:30:11.838: INFO: Namespace "namespaces-4846" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"861f17c9-e2ef-4649-b541-9b74bec08298", "kubernetes.io/metadata.name":"namespaces-4846", "namespaces-4846":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep 11 02:30:11.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4846" for this suite. @ 09/11/23 02:30:11.844
• [0.077 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/11/23 02:30:11.853
  Sep 11 02:30:11.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 02:30:11.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:30:11.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:30:11.89
  STEP: Creating a suspended cronjob @ 09/11/23 02:30:11.897
  STEP: Ensuring no jobs are scheduled @ 09/11/23 02:30:11.905
  E0911 02:30:12.012444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:13.013153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:14.013823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:15.013941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:16.014091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:17.014253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:18.015387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:19.015748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:20.016521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:21.016854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:22.017089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:23.017378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:24.018060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:25.018497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:26.018950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:27.019041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:28.020034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:29.021018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:30.021113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:31.021441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:32.022504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:33.022977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:34.023146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:35.023382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:36.023622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:37.023776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:38.024527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:39.024535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:40.025139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:41.026099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:42.026434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:43.026553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:44.026893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:45.027259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:46.028478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:47.028850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:48.029574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:49.031157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:50.031207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:51.032479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:52.033080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:53.033214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:54.034288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:55.034428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:56.035452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:57.035659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:58.036498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:30:59.036781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:00.036910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:01.037059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:02.037889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:03.038690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:04.038763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:05.038884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:06.041041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:07.039827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:08.039925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:09.040909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:10.041625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:11.041815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:12.042376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:13.042797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:14.043256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:15.043345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:16.043507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:17.043759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:18.044559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:19.045703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:20.046473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:21.047422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:22.048300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:23.048447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:24.048586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:25.048770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:26.049482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:27.049777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:28.049893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:29.050813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:30.051019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:31.051224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:32.051896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:33.052078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:34.052710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:35.052846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:36.053007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:37.053189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:38.053749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:39.054326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:40.055138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:41.055614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:42.056624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:43.056709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:44.057629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:45.058040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:46.058875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:47.059489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:48.060480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:49.061674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:50.062024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:51.062066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:52.062434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:53.062573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:54.062642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:55.062800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:56.063399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:57.064104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:58.064706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:31:59.065651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:00.065834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:01.066136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:02.066611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:03.066608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:04.067460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:05.067550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:06.068628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:07.069045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:08.069759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:09.070573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:10.071661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:11.071986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:12.072180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:13.072717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:14.073197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:15.073528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:16.074481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:17.074644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:18.074976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:19.075717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:20.076588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:21.076842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:22.077865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:23.078895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:24.078999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:25.079536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:26.079646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:27.079772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:28.080888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:29.081778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:30.082063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:31.082194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:32.082630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:33.082797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:34.083507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:35.083646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:36.083812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:37.083956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:38.084644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:39.085962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:40.086788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:41.087019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:42.087297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:43.087442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:44.089018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:45.089532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:46.090233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:47.090772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:48.091076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:49.091728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:50.091669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:51.091512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:52.092226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:53.092537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:54.093087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:55.093229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:56.094742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:57.094952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:58.095105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:32:59.095582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:00.096372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:01.096505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:02.097238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:03.097960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:04.098560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:05.098752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:06.099699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:07.104973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:08.105588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:09.106064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:10.106236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:11.106379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:12.107336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:13.107360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:14.108024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:15.108460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:16.109293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:17.109673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:18.110690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:19.111175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:20.111475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:21.111811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:22.112856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:23.112998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:24.113620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:25.113651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:26.114229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:27.115158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:28.115954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:29.116651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:30.117808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:31.118698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:32.119613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:33.119826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:34.119916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:35.120040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:36.120999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:37.121173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:38.121219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:39.121680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:40.122283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:41.122428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:42.123412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:43.123636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:44.124674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:45.124773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:46.125427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:47.125640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:48.126717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:49.127617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:50.128752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:51.128820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:52.129805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:53.130284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:54.130359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:55.130486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:56.131421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:57.131988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:58.133098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:33:59.133656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:00.134002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:01.134713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:02.135385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:03.135768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:04.136226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:05.136391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:06.137154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:07.137655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:08.138740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:09.139661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:10.140107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:11.140238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:12.141056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:13.141198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:14.141556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:15.141656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:16.142628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:17.142739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:18.143751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:19.144237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:20.144271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:21.144368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:22.144897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:23.145113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:24.145902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:25.146770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:26.148535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:27.148628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:28.149379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:29.149699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:30.150727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:31.151108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:32.151897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:33.152013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:34.152594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:35.153702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:36.154630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:37.154916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:38.154954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:39.155017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:40.155151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:41.155265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:42.156305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:43.156459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:44.156572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:45.156758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:46.157012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:47.157043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:48.157810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:49.157922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:50.159026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:51.159999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:52.160778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:53.160891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:54.161900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:55.162891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:56.163586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:57.163802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:58.164779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:34:59.165315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:00.166151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:01.166267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:02.166695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:03.166794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:04.166926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:05.167390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:06.168310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:07.168311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:08.169137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:09.169657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:10.170614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:11.170765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/11/23 02:35:11.913
  STEP: Removing cronjob @ 09/11/23 02:35:11.917
  Sep 11 02:35:11.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8083" for this suite. @ 09/11/23 02:35:11.938
• [300.098 seconds]
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/11/23 02:35:11.951
  Sep 11 02:35:11.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:35:11.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:11.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:11.995
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:35:12.002
  E0911 02:35:12.171499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:13.171804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:14.172734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:15.172663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:35:16.055
  Sep 11 02:35:16.064: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-8a4919fb-dee6-4e15-94cf-527e500827e7 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:35:16.092
  Sep 11 02:35:16.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8891" for this suite. @ 09/11/23 02:35:16.132
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 09/11/23 02:35:16.146
  Sep 11 02:35:16.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 02:35:16.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:16.172
  E0911 02:35:16.173716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:16.176
  STEP: Creating service test in namespace statefulset-9116 @ 09/11/23 02:35:16.181
  STEP: Looking for a node to schedule stateful set and pod @ 09/11/23 02:35:16.19
  STEP: Creating pod with conflicting port in namespace statefulset-9116 @ 09/11/23 02:35:16.212
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9116 @ 09/11/23 02:35:16.237
  E0911 02:35:17.174963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:18.175279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-9116 @ 09/11/23 02:35:18.249
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9116 @ 09/11/23 02:35:18.258
  Sep 11 02:35:18.274: INFO: Observed stateful pod in namespace: statefulset-9116, name: ss-0, uid: 5b867c31-f450-4e44-bd77-5112f03a3aae, status phase: Pending. Waiting for statefulset controller to delete.
  Sep 11 02:35:18.296: INFO: Observed stateful pod in namespace: statefulset-9116, name: ss-0, uid: 5b867c31-f450-4e44-bd77-5112f03a3aae, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 11 02:35:18.331: INFO: Observed stateful pod in namespace: statefulset-9116, name: ss-0, uid: 5b867c31-f450-4e44-bd77-5112f03a3aae, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 11 02:35:18.342: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9116
  STEP: Removing pod with conflicting port in namespace statefulset-9116 @ 09/11/23 02:35:18.343
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9116 and will be in running state @ 09/11/23 02:35:18.389
  E0911 02:35:19.176158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:20.176979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:20.407: INFO: Deleting all statefulset in ns statefulset-9116
  Sep 11 02:35:20.416: INFO: Scaling statefulset ss to 0
  E0911 02:35:21.178061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:22.178007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:23.178148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:24.178675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:25.179028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:26.179720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:27.179867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:28.180073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:29.180708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:30.181108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:30.439: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 02:35:30.443: INFO: Deleting statefulset ss
  Sep 11 02:35:30.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9116" for this suite. @ 09/11/23 02:35:30.48
• [14.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/11/23 02:35:30.491
  Sep 11 02:35:30.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 02:35:30.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:30.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:30.545
  STEP: Creating a test headless service @ 09/11/23 02:35:30.551
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5040.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5040.svc.cluster.local;sleep 1; done
   @ 09/11/23 02:35:30.565
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5040.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5040.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5040.svc.cluster.local;sleep 1; done
   @ 09/11/23 02:35:30.565
  STEP: creating a pod to probe DNS @ 09/11/23 02:35:30.565
  STEP: submitting the pod to kubernetes @ 09/11/23 02:35:30.565
  E0911 02:35:31.181186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:32.182067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 02:35:32.597
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:35:32.603
  Sep 11 02:35:32.614: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.620: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.624: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.629: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.636: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.641: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.647: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.651: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5040.svc.cluster.local from pod dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b: the server could not find the requested resource (get pods dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b)
  Sep 11 02:35:32.651: INFO: Lookups using dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5040.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5040.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5040.svc.cluster.local jessie_udp@dns-test-service-2.dns-5040.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5040.svc.cluster.local]

  Sep 11 02:35:32.658: INFO: Pod client logs for webserver: 
  Sep 11 02:35:32.665: INFO: Pod client logs for querier: 
  Sep 11 02:35:32.672: INFO: Pod client logs for jessie-querier: 
  E0911 02:35:33.182197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:34.182675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:35.183109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:36.183896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:37.184679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:37.712: INFO: DNS probes using dns-5040/dns-test-853f089f-4773-4a73-a68e-9fc3b9f4835b succeeded

  Sep 11 02:35:37.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:35:37.718
  STEP: deleting the test headless service @ 09/11/23 02:35:37.746
  STEP: Destroying namespace "dns-5040" for this suite. @ 09/11/23 02:35:37.778
• [7.306 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/11/23 02:35:37.802
  Sep 11 02:35:37.802: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 02:35:37.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:37.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:37.83
  STEP: apply creating a deployment @ 09/11/23 02:35:37.833
  Sep 11 02:35:37.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3234" for this suite. @ 09/11/23 02:35:37.856
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/11/23 02:35:37.866
  Sep 11 02:35:37.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 02:35:37.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:37.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:37.897
  STEP: set up a multi version CRD @ 09/11/23 02:35:37.907
  Sep 11 02:35:37.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:35:38.185215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:39.186169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:40.186320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:41.193111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/11/23 02:35:42.104
  STEP: check the new version name is served @ 09/11/23 02:35:42.117
  E0911 02:35:42.194165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:43.194669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/11/23 02:35:43.67
  E0911 02:35:44.194685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/11/23 02:35:44.368
  E0911 02:35:45.195459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:46.195920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:47.195877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:47.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7219" for this suite. @ 09/11/23 02:35:47.756
• [9.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/11/23 02:35:47.767
  Sep 11 02:35:47.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:35:47.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:47.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:47.793
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:35:47.798
  E0911 02:35:48.196765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:49.197709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:50.197839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:51.198017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:35:51.823
  Sep 11 02:35:51.826: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-f733e43a-7cf5-4ff3-bceb-5b9b2479b674 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:35:51.833
  Sep 11 02:35:51.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4247" for this suite. @ 09/11/23 02:35:51.86
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/11/23 02:35:51.87
  Sep 11 02:35:51.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 02:35:51.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:51.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:51.894
  Sep 11 02:35:51.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:35:52.198565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:53.199387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/11/23 02:35:53.557
  Sep 11 02:35:53.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 create -f -'
  E0911 02:35:54.199484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:54.335: INFO: stderr: ""
  Sep 11 02:35:54.335: INFO: stdout: "e2e-test-crd-publish-openapi-3610-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 11 02:35:54.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 delete e2e-test-crd-publish-openapi-3610-crds test-foo'
  Sep 11 02:35:54.435: INFO: stderr: ""
  Sep 11 02:35:54.435: INFO: stdout: "e2e-test-crd-publish-openapi-3610-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep 11 02:35:54.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 apply -f -'
  Sep 11 02:35:54.619: INFO: stderr: ""
  Sep 11 02:35:54.619: INFO: stdout: "e2e-test-crd-publish-openapi-3610-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 11 02:35:54.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 delete e2e-test-crd-publish-openapi-3610-crds test-foo'
  Sep 11 02:35:54.704: INFO: stderr: ""
  Sep 11 02:35:54.704: INFO: stdout: "e2e-test-crd-publish-openapi-3610-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/11/23 02:35:54.704
  Sep 11 02:35:54.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 create -f -'
  E0911 02:35:55.200415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:55.412: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/11/23 02:35:55.412
  Sep 11 02:35:55.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 create -f -'
  Sep 11 02:35:55.583: INFO: rc: 1
  Sep 11 02:35:55.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 apply -f -'
  E0911 02:35:56.201304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:56.259: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/11/23 02:35:56.26
  Sep 11 02:35:56.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 create -f -'
  Sep 11 02:35:56.440: INFO: rc: 1
  Sep 11 02:35:56.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 --namespace=crd-publish-openapi-2090 apply -f -'
  Sep 11 02:35:56.630: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/11/23 02:35:56.63
  Sep 11 02:35:56.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 explain e2e-test-crd-publish-openapi-3610-crds'
  Sep 11 02:35:56.796: INFO: stderr: ""
  Sep 11 02:35:56.796: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3610-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/11/23 02:35:56.796
  Sep 11 02:35:56.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 explain e2e-test-crd-publish-openapi-3610-crds.metadata'
  Sep 11 02:35:56.997: INFO: stderr: ""
  Sep 11 02:35:56.997: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3610-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep 11 02:35:56.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 explain e2e-test-crd-publish-openapi-3610-crds.spec'
  E0911 02:35:57.202046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:57.228: INFO: stderr: ""
  Sep 11 02:35:57.228: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3610-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep 11 02:35:57.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 explain e2e-test-crd-publish-openapi-3610-crds.spec.bars'
  Sep 11 02:35:57.423: INFO: stderr: ""
  Sep 11 02:35:57.423: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3610-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/11/23 02:35:57.423
  Sep 11 02:35:57.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-2090 explain e2e-test-crd-publish-openapi-3610-crds.spec.bars2'
  Sep 11 02:35:57.617: INFO: rc: 1
  E0911 02:35:58.203134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:35:59.204369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:35:59.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2090" for this suite. @ 09/11/23 02:35:59.239
• [7.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 09/11/23 02:35:59.251
  Sep 11 02:35:59.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 02:35:59.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:35:59.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:35:59.277
  STEP: Creating service test in namespace statefulset-693 @ 09/11/23 02:35:59.28
  STEP: Creating a new StatefulSet @ 09/11/23 02:35:59.286
  Sep 11 02:35:59.305: INFO: Found 0 stateful pods, waiting for 3
  E0911 02:36:00.204599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:01.204915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:02.205792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:03.206919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:04.207570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:05.208357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:06.209418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:07.209678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:08.209974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:09.210613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:36:09.311: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:36:09.311: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:36:09.311: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:36:09.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-693 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:36:09.488: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:36:09.488: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:36:09.488: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0911 02:36:10.210762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:11.210903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:12.211150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:13.211255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:14.211919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:15.212120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:16.212377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:17.212615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:18.212920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:19.213368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/11/23 02:36:19.504
  Sep 11 02:36:19.531: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/11/23 02:36:19.533
  E0911 02:36:20.217799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:21.217859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:22.218083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:23.218315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:24.219176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:25.219477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:26.220139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:27.220898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:28.221111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:29.221601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/11/23 02:36:29.563
  Sep 11 02:36:29.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-693 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 02:36:29.914: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 02:36:29.914: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:36:29.914: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0911 02:36:30.221656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:31.221721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:32.221847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:33.222308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:34.222717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:35.223221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:36.223329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:37.223452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:38.223566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:39.223677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:40.224438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:41.224580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:42.225382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:43.225771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:44.226695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:45.226913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:46.227252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:47.227161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:48.227428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:49.227553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/11/23 02:36:49.937
  Sep 11 02:36:49.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-693 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 02:36:50.106: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 02:36:50.107: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 02:36:50.107: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0911 02:36:50.228524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:51.228652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:52.228771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:53.229007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:54.229732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:55.229824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:56.230768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:57.231053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:58.231586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:36:59.231838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:37:00.141: INFO: Updating stateful set ss2
  E0911 02:37:00.232710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:01.233337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:02.233509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:03.233656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:04.234704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:05.234892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:06.235081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:07.235237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:08.235357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:09.235795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:10.236050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/11/23 02:37:10.7
  Sep 11 02:37:10.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=statefulset-693 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 02:37:10.865: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 02:37:10.865: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 02:37:10.865: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0911 02:37:11.236656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:12.236970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:13.237151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:14.237644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:15.237784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:16.237938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:17.238001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:18.238105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:19.238662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:20.238783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:37:20.893: INFO: Waiting for StatefulSet statefulset-693/ss2 to complete update
  Sep 11 02:37:20.893: INFO: Waiting for Pod statefulset-693/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  E0911 02:37:21.238864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:22.238985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:23.239105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:24.240067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:25.240185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:26.240321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:27.240462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:28.240636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:29.240810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:30.240906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:37:30.902: INFO: Deleting all statefulset in ns statefulset-693
  Sep 11 02:37:30.906: INFO: Scaling statefulset ss2 to 0
  E0911 02:37:31.241184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:32.241425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:33.241804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:34.242737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:35.242992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:36.243659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:37.244100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:38.244218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:39.244733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:40.244901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:37:40.925: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 02:37:40.929: INFO: Deleting statefulset ss2
  Sep 11 02:37:40.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-693" for this suite. @ 09/11/23 02:37:40.947
  E0911 02:37:41.245497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [102.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/11/23 02:37:41.389
  Sep 11 02:37:41.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:37:41.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:37:41.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:37:41.435
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:37:41.444
  E0911 02:37:42.246463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:43.246843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:44.247406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:45.247680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:37:45.477
  Sep 11 02:37:45.480: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-375efdf8-ddd0-4a81-9037-f716f76e4a3f container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:37:45.495
  Sep 11 02:37:45.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-588" for this suite. @ 09/11/23 02:37:45.522
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/11/23 02:37:45.533
  Sep 11 02:37:45.533: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 02:37:45.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:37:45.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:37:45.558
  STEP: Creating a test externalName service @ 09/11/23 02:37:45.563
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1409.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1409.svc.cluster.local; sleep 1; done
   @ 09/11/23 02:37:45.569
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1409.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1409.svc.cluster.local; sleep 1; done
   @ 09/11/23 02:37:45.569
  STEP: creating a pod to probe DNS @ 09/11/23 02:37:45.569
  STEP: submitting the pod to kubernetes @ 09/11/23 02:37:45.569
  E0911 02:37:46.249693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:47.249754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 02:37:47.588
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:37:47.591
  Sep 11 02:37:47.604: INFO: DNS probes using dns-test-98e391c4-fa2c-4508-90bd-91e8f08887f9 succeeded

  STEP: changing the externalName to bar.example.com @ 09/11/23 02:37:47.604
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1409.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1409.svc.cluster.local; sleep 1; done
   @ 09/11/23 02:37:47.613
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1409.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1409.svc.cluster.local; sleep 1; done
   @ 09/11/23 02:37:47.613
  STEP: creating a second pod to probe DNS @ 09/11/23 02:37:47.613
  STEP: submitting the pod to kubernetes @ 09/11/23 02:37:47.613
  E0911 02:37:48.250521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:49.251100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:50.251610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:51.251730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 02:37:51.633
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:37:51.636
  Sep 11 02:37:51.643: INFO: File wheezy_udp@dns-test-service-3.dns-1409.svc.cluster.local from pod  dns-1409/dns-test-39ecda0a-d09e-4053-8778-ef297265ecb2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 02:37:51.646: INFO: File jessie_udp@dns-test-service-3.dns-1409.svc.cluster.local from pod  dns-1409/dns-test-39ecda0a-d09e-4053-8778-ef297265ecb2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 02:37:51.646: INFO: Lookups using dns-1409/dns-test-39ecda0a-d09e-4053-8778-ef297265ecb2 failed for: [wheezy_udp@dns-test-service-3.dns-1409.svc.cluster.local jessie_udp@dns-test-service-3.dns-1409.svc.cluster.local]

  Sep 11 02:37:51.661: INFO: Pod client logs for webserver: 
  Sep 11 02:37:51.667: INFO: Pod client logs for querier: 
  Sep 11 02:37:51.673: INFO: Pod client logs for jessie-querier: 
  E0911 02:37:52.251879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:53.252194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:54.252941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:55.253054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:56.253197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:37:56.681: INFO: DNS probes using dns-test-39ecda0a-d09e-4053-8778-ef297265ecb2 succeeded

  STEP: changing the service to type=ClusterIP @ 09/11/23 02:37:56.681
  W0911 02:37:56.703499      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1409.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1409.svc.cluster.local; sleep 1; done
   @ 09/11/23 02:37:56.703
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1409.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1409.svc.cluster.local; sleep 1; done
   @ 09/11/23 02:37:56.703
  STEP: creating a third pod to probe DNS @ 09/11/23 02:37:56.703
  STEP: submitting the pod to kubernetes @ 09/11/23 02:37:56.718
  E0911 02:37:57.254059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:58.254136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:37:59.254274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:00.254754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:01.255325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:02.255441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:03.255558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:04.255623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 02:38:04.756
  STEP: looking for the results for each expected name from probers @ 09/11/23 02:38:04.76
  Sep 11 02:38:04.774: INFO: DNS probes using dns-test-0a89054d-1c08-4903-ace7-d1e80405aed6 succeeded

  Sep 11 02:38:04.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:38:04.779
  STEP: deleting the pod @ 09/11/23 02:38:04.796
  STEP: deleting the pod @ 09/11/23 02:38:04.825
  STEP: deleting the test externalName service @ 09/11/23 02:38:04.89
  STEP: Destroying namespace "dns-1409" for this suite. @ 09/11/23 02:38:04.918
• [19.395 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/11/23 02:38:04.93
  Sep 11 02:38:04.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:38:04.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:38:04.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:38:04.962
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:38:04.966
  E0911 02:38:05.256272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:06.256747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:07.257558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:08.257900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:38:08.994
  Sep 11 02:38:08.998: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-9d42f65c-5714-407b-8348-8da335a52a31 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:38:09.009
  Sep 11 02:38:09.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7488" for this suite. @ 09/11/23 02:38:09.031
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 09/11/23 02:38:09.042
  Sep 11 02:38:09.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 02:38:09.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:38:09.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:38:09.065
  STEP: creating all guestbook components @ 09/11/23 02:38:09.068
  Sep 11 02:38:09.068: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep 11 02:38:09.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 create -f -'
  E0911 02:38:09.260016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:10.192: INFO: stderr: ""
  Sep 11 02:38:10.192: INFO: stdout: "service/agnhost-replica created\n"
  Sep 11 02:38:10.192: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep 11 02:38:10.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 create -f -'
  E0911 02:38:10.263468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:10.937: INFO: stderr: ""
  Sep 11 02:38:10.937: INFO: stdout: "service/agnhost-primary created\n"
  Sep 11 02:38:10.937: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep 11 02:38:10.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 create -f -'
  E0911 02:38:11.263529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:11.566: INFO: stderr: ""
  Sep 11 02:38:11.567: INFO: stdout: "service/frontend created\n"
  Sep 11 02:38:11.567: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep 11 02:38:11.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 create -f -'
  Sep 11 02:38:11.795: INFO: stderr: ""
  Sep 11 02:38:11.795: INFO: stdout: "deployment.apps/frontend created\n"
  Sep 11 02:38:11.795: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 11 02:38:11.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 create -f -'
  Sep 11 02:38:12.084: INFO: stderr: ""
  Sep 11 02:38:12.084: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep 11 02:38:12.084: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 11 02:38:12.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 create -f -'
  E0911 02:38:12.268302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:12.359: INFO: stderr: ""
  Sep 11 02:38:12.359: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/11/23 02:38:12.359
  Sep 11 02:38:12.359: INFO: Waiting for all frontend pods to be Running.
  E0911 02:38:13.268815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:14.269349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:15.269530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:16.269836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:17.269967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:17.411: INFO: Waiting for frontend to serve content.
  Sep 11 02:38:17.427: INFO: Trying to add a new entry to the guestbook.
  Sep 11 02:38:17.454: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/11/23 02:38:17.463
  Sep 11 02:38:17.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 delete --grace-period=0 --force -f -'
  Sep 11 02:38:17.614: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 02:38:17.614: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 02:38:17.614
  Sep 11 02:38:17.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 delete --grace-period=0 --force -f -'
  Sep 11 02:38:17.761: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 02:38:17.761: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 02:38:17.761
  Sep 11 02:38:17.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 delete --grace-period=0 --force -f -'
  Sep 11 02:38:17.906: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 02:38:17.906: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 02:38:17.906
  Sep 11 02:38:17.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 delete --grace-period=0 --force -f -'
  Sep 11 02:38:18.030: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 02:38:18.030: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 02:38:18.03
  Sep 11 02:38:18.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 delete --grace-period=0 --force -f -'
  Sep 11 02:38:18.191: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 02:38:18.191: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 02:38:18.191
  Sep 11 02:38:18.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-1290 delete --grace-period=0 --force -f -'
  E0911 02:38:18.271086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:18.420: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 02:38:18.420: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep 11 02:38:18.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1290" for this suite. @ 09/11/23 02:38:18.516
• [9.494 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 09/11/23 02:38:18.537
  Sep 11 02:38:18.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 02:38:18.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:38:18.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:38:18.635
  Sep 11 02:38:18.640: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/11/23 02:38:18.666
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/11/23 02:38:18.678
  E0911 02:38:19.271543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/11/23 02:38:19.688
  Sep 11 02:38:19.697: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/11/23 02:38:19.697
  E0911 02:38:20.271703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:20.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4605" for this suite. @ 09/11/23 02:38:20.711
• [2.182 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/11/23 02:38:20.719
  Sep 11 02:38:20.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 02:38:20.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:38:20.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:38:20.742
  Sep 11 02:38:20.746: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 02:38:20.755: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 02:38:20.760: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-123 before test
  Sep 11 02:38:20.766: INFO: coredns-6799fbcd5-t5lmx from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: helm-install-traefik-25npw from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container helm ready: false, restart count 1
  Sep 11 02:38:20.766: INFO: helm-install-traefik-crd-n6vdt from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container helm ready: false, restart count 0
  Sep 11 02:38:20.766: INFO: local-path-provisioner-84db5d44d9-wmj2n from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: metrics-server-67c658944b-4kxpp from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: svclb-traefik-d4416a3e-v4mbb from kube-system started at 2023-09-11 01:33:59 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: traefik-7bf7d7576d-zts4g from kube-system started at 2023-09-11 01:33:59 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container traefik ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-rdpcs from sonobuoy started at 2023-09-11 01:45:14 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.766: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 02:38:20.766: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-171 before test
  Sep 11 02:38:20.773: INFO: svclb-traefik-d4416a3e-gjxxg from kube-system started at 2023-09-11 01:36:25 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.773: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 02:38:20.773: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 02:38:20.773: INFO: condition-test-gg4h8 from replication-controller-4605 started at 2023-09-11 02:38:18 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.773: INFO: 	Container httpd ready: true, restart count 0
  Sep 11 02:38:20.773: INFO: sonobuoy-e2e-job-3860deceeabb4fa2 from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.773: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 02:38:20.773: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 02:38:20.773: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-8mdgj from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.773: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 02:38:20.773: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 02:38:20.773: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-111 before test
  Sep 11 02:38:20.779: INFO: svclb-traefik-d4416a3e-ws4p8 from kube-system started at 2023-09-11 01:36:15 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.779: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 02:38:20.779: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 02:38:20.779: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mxbgr from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.779: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 02:38:20.779: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 02:38:20.779: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-243 before test
  Sep 11 02:38:20.785: INFO: svclb-traefik-d4416a3e-m87c8 from kube-system started at 2023-09-11 01:36:39 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.785: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 02:38:20.785: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 02:38:20.785: INFO: condition-test-q5292 from replication-controller-4605 started at 2023-09-11 02:38:18 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.785: INFO: 	Container httpd ready: true, restart count 0
  Sep 11 02:38:20.785: INFO: sonobuoy from sonobuoy started at 2023-09-11 01:45:10 +0000 UTC (1 container statuses recorded)
  Sep 11 02:38:20.785: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 02:38:20.785: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mnxvh from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 02:38:20.785: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 02:38:20.785: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/11/23 02:38:20.785
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1783b7bb82f3e208], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling..] @ 09/11/23 02:38:20.814
  E0911 02:38:21.272397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:21.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-225" for this suite. @ 09/11/23 02:38:21.813
• [1.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 09/11/23 02:38:21.824
  Sep 11 02:38:21.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 02:38:21.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:38:21.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:38:21.849
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/11/23 02:38:21.852
  E0911 02:38:22.273241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:23.273336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:24.274409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:25.274764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:38:25.876
  Sep 11 02:38:25.884: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-32e7e571-bd77-4dc1-a4c9-784895d3de91 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 02:38:25.897
  Sep 11 02:38:25.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1691" for this suite. @ 09/11/23 02:38:25.936
• [4.128 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/11/23 02:38:25.952
  Sep 11 02:38:25.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 02:38:25.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:38:26.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:38:26.013
  STEP: Creating pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162 @ 09/11/23 02:38:26.021
  E0911 02:38:26.275679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:27.275923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 02:38:28.068
  Sep 11 02:38:28.071: INFO: Initial restart count of pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 is 0
  Sep 11 02:38:28.074: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:28.275964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:29.276472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:30.079: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:30.276567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:31.279568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:32.082: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:32.280350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:33.280381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:34.087: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:34.280923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:35.281481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:36.091: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:36.282032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:37.282728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:38.096: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:38.283757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:39.283834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:40.100: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:40.283958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:41.284044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:42.104: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:42.284640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:43.284756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:44.110: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:44.285597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:45.286704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:46.114: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:46.287369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:47.287758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:48.119: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:48.288482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:49.288990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:50.123: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:50.290080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:51.290780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:52.127: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:52.290900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:53.291025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:54.133: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:54.291639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:55.291746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:56.137: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:56.292743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:57.292871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:38:58.143: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:38:58.293261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:38:59.293950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:00.148: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:00.294561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:01.294688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:02.152: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:02.295568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:03.295630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:04.163: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:04.296539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:05.296838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:06.167: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:06.297735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:07.297873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:08.172: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:08.298914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:09.299634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:10.176: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:10.300276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:11.300436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:12.181: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:12.300511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:13.300626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:14.190: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:14.301567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:15.301663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:16.194: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:16.302732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:17.302849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:18.199: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:18.302914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:19.303072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:20.203: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:20.303472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:21.303577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:22.208: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:22.304548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:23.304657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:24.211: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:24.305604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:25.305677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:26.215: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:26.306142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:27.306176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:28.221: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:28.306694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:29.306820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:30.225: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  E0911 02:39:30.307879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:31.308381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:39:32.229: INFO: Get pod test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 in namespace container-probe-1162
  Sep 11 02:39:32.229: INFO: Restart count of pod container-probe-1162/test-grpc-da0c3862-782a-4fd1-b03d-706febbb39d7 is now 1 (1m4.158187646s elapsed)
  Sep 11 02:39:32.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:39:32.234
  STEP: Destroying namespace "container-probe-1162" for this suite. @ 09/11/23 02:39:32.244
• [66.302 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/11/23 02:39:32.256
  Sep 11 02:39:32.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/11/23 02:39:32.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:39:32.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:39:32.283
  STEP: creating a target pod @ 09/11/23 02:39:32.287
  E0911 02:39:32.309217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:33.309647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/11/23 02:39:34.307
  E0911 02:39:34.310201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:35.310365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:36.310580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/11/23 02:39:36.326
  Sep 11 02:39:36.326: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2869 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:39:36.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:39:36.327: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:39:36.327: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-2869/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 11 02:39:36.415: INFO: Exec stderr: ""
  Sep 11 02:39:36.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2869" for this suite. @ 09/11/23 02:39:36.426
• [4.177 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/11/23 02:39:36.433
  Sep 11 02:39:36.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename subpath @ 09/11/23 02:39:36.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:39:36.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:39:36.455
  STEP: Setting up data @ 09/11/23 02:39:36.46
  STEP: Creating pod pod-subpath-test-projected-r64j @ 09/11/23 02:39:36.472
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 02:39:36.472
  E0911 02:39:37.310755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:38.311043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:39.311371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:40.311463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:41.312086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:42.312177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:43.312932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:44.313044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:45.313433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:46.313765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:47.313772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:48.313878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:49.314728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:50.314898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:51.315095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:52.315241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:53.316284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:54.317198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:55.317341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:56.317636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:57.317744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:39:58.317867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:39:58.539
  Sep 11 02:39:58.545: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-subpath-test-projected-r64j container test-container-subpath-projected-r64j: <nil>
  STEP: delete the pod @ 09/11/23 02:39:58.555
  STEP: Deleting pod pod-subpath-test-projected-r64j @ 09/11/23 02:39:58.574
  Sep 11 02:39:58.574: INFO: Deleting pod "pod-subpath-test-projected-r64j" in namespace "subpath-8112"
  Sep 11 02:39:58.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8112" for this suite. @ 09/11/23 02:39:58.584
• [22.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 09/11/23 02:39:58.594
  Sep 11 02:39:58.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 02:39:58.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:39:58.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:39:58.616
  STEP: Counting existing ResourceQuota @ 09/11/23 02:39:58.619
  E0911 02:39:59.318720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:00.318741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:01.319607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:02.320156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:03.321188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 02:40:03.623
  STEP: Ensuring resource quota status is calculated @ 09/11/23 02:40:03.629
  E0911 02:40:04.321791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:05.321973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/11/23 02:40:05.634
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/11/23 02:40:05.651
  E0911 02:40:06.322100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:07.322855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/11/23 02:40:07.766
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/11/23 02:40:07.769
  STEP: Ensuring a pod cannot update its resource requirements @ 09/11/23 02:40:07.772
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/11/23 02:40:07.776
  E0911 02:40:08.322776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:09.322809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 02:40:09.782
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 02:40:09.796
  E0911 02:40:10.323897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:11.324008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:40:11.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5485" for this suite. @ 09/11/23 02:40:11.805
• [13.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/11/23 02:40:11.821
  Sep 11 02:40:11.821: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:40:11.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:11.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:11.851
  STEP: Setting up server cert @ 09/11/23 02:40:11.885
  E0911 02:40:12.324239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:40:12.424
  STEP: Deploying the webhook pod @ 09/11/23 02:40:12.441
  STEP: Wait for the deployment to be ready @ 09/11/23 02:40:12.462
  Sep 11 02:40:12.474: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:40:13.324710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:14.325076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:40:14.486
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:40:14.497
  E0911 02:40:15.325644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:40:15.498: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/11/23 02:40:15.505
  STEP: create a pod that should be updated by the webhook @ 09/11/23 02:40:15.527
  Sep 11 02:40:15.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2373" for this suite. @ 09/11/23 02:40:15.643
  STEP: Destroying namespace "webhook-markers-7751" for this suite. @ 09/11/23 02:40:15.654
• [3.841 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/11/23 02:40:15.664
  Sep 11 02:40:15.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:40:15.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:15.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:15.69
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 02:40:15.693
  E0911 02:40:16.325918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:17.325818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:18.325992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:19.326722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:40:19.717
  Sep 11 02:40:19.720: INFO: Trying to get logs from node ip-172-31-4-243 pod downwardapi-volume-143d983a-b924-4918-9ab1-7f9174390195 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 02:40:19.725
  Sep 11 02:40:19.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7879" for this suite. @ 09/11/23 02:40:19.752
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 09/11/23 02:40:19.761
  Sep 11 02:40:19.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 02:40:19.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:19.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:19.791
  Sep 11 02:40:19.793: INFO: Creating ReplicaSet my-hostname-basic-d0bf2b9a-7ce7-44d6-9eb5-fefdad573df2
  Sep 11 02:40:19.805: INFO: Pod name my-hostname-basic-d0bf2b9a-7ce7-44d6-9eb5-fefdad573df2: Found 0 pods out of 1
  E0911 02:40:20.326774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:21.326927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:22.326998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:23.327126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:24.327804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:40:24.820: INFO: Pod name my-hostname-basic-d0bf2b9a-7ce7-44d6-9eb5-fefdad573df2: Found 1 pods out of 1
  Sep 11 02:40:24.820: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-d0bf2b9a-7ce7-44d6-9eb5-fefdad573df2" is running
  Sep 11 02:40:24.830: INFO: Pod "my-hostname-basic-d0bf2b9a-7ce7-44d6-9eb5-fefdad573df2-b2p4d" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:40:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:40:21 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:40:21 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 02:40:19 +0000 UTC Reason: Message:}])
  Sep 11 02:40:24.830: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/11/23 02:40:24.83
  Sep 11 02:40:24.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8405" for this suite. @ 09/11/23 02:40:24.858
• [5.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/11/23 02:40:24.871
  Sep 11 02:40:24.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:40:24.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:24.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:24.901
  STEP: Setting up server cert @ 09/11/23 02:40:24.944
  E0911 02:40:25.327939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:40:25.391
  STEP: Deploying the webhook pod @ 09/11/23 02:40:25.397
  STEP: Wait for the deployment to be ready @ 09/11/23 02:40:25.411
  Sep 11 02:40:25.438: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:40:26.328088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:27.328193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:40:27.447
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:40:27.457
  E0911 02:40:28.328381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:40:28.457: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/11/23 02:40:28.464
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 02:40:28.491
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/11/23 02:40:28.509
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 02:40:28.523
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/11/23 02:40:28.535
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 02:40:28.544
  Sep 11 02:40:28.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5371" for this suite. @ 09/11/23 02:40:28.626
  STEP: Destroying namespace "webhook-markers-7788" for this suite. @ 09/11/23 02:40:28.644
• [3.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/11/23 02:40:28.661
  Sep 11 02:40:28.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 02:40:28.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:28.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:28.685
  Sep 11 02:40:28.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: creating the pod @ 09/11/23 02:40:28.69
  STEP: submitting the pod to kubernetes @ 09/11/23 02:40:28.69
  E0911 02:40:29.328541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:30.329168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:40:30.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4195" for this suite. @ 09/11/23 02:40:30.733
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 09/11/23 02:40:30.743
  Sep 11 02:40:30.743: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 02:40:30.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:30.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:30.766
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/11/23 02:40:30.769
  E0911 02:40:31.329294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:32.329529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:33.329643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:34.330153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:40:34.791
  Sep 11 02:40:34.794: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-4be495d0-b158-4762-b47b-23c4e61b941a container test-container: <nil>
  STEP: delete the pod @ 09/11/23 02:40:34.801
  Sep 11 02:40:34.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6968" for this suite. @ 09/11/23 02:40:34.823
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 09/11/23 02:40:34.834
  Sep 11 02:40:34.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename job @ 09/11/23 02:40:34.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:34.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:34.857
  STEP: Creating Indexed job @ 09/11/23 02:40:34.86
  STEP: Ensuring job reaches completions @ 09/11/23 02:40:34.867
  E0911 02:40:35.330245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:36.330782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:37.331680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:38.331900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:39.333000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:40.333543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:41.333647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:42.333679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/11/23 02:40:42.871
  Sep 11 02:40:42.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2713" for this suite. @ 09/11/23 02:40:42.88
• [8.053 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/11/23 02:40:42.886
  Sep 11 02:40:42.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:40:42.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:42.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:42.909
  STEP: Setting up server cert @ 09/11/23 02:40:42.94
  E0911 02:40:43.334652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:40:43.58
  STEP: Deploying the webhook pod @ 09/11/23 02:40:43.587
  STEP: Wait for the deployment to be ready @ 09/11/23 02:40:43.601
  Sep 11 02:40:43.614: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:40:44.335441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:45.335575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:40:45.624
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:40:45.635
  E0911 02:40:46.335931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:40:46.636: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/11/23 02:40:46.643
  STEP: create a pod @ 09/11/23 02:40:46.665
  E0911 02:40:47.335961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:48.337024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/11/23 02:40:48.682
  Sep 11 02:40:48.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=webhook-7266 attach --namespace=webhook-7266 to-be-attached-pod -i -c=container1'
  Sep 11 02:40:48.803: INFO: rc: 1
  Sep 11 02:40:48.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7266" for this suite. @ 09/11/23 02:40:48.876
  STEP: Destroying namespace "webhook-markers-9341" for this suite. @ 09/11/23 02:40:48.887
• [6.008 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/11/23 02:40:48.895
  Sep 11 02:40:48.895: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:40:48.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:48.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:48.917
  STEP: Creating projection with secret that has name projected-secret-test-5eec7bed-572f-4f06-b165-3ee03488639b @ 09/11/23 02:40:48.92
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:40:48.925
  E0911 02:40:49.337915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:50.338044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:51.338753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:52.338915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:40:52.947
  Sep 11 02:40:52.950: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-secrets-9a683ea9-d925-4282-8839-fceba240f6c9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:40:52.956
  Sep 11 02:40:52.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6714" for this suite. @ 09/11/23 02:40:52.974
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 09/11/23 02:40:52.985
  Sep 11 02:40:52.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pod-network-test @ 09/11/23 02:40:52.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:40:53.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:40:53.016
  STEP: Performing setup for networking test in namespace pod-network-test-5341 @ 09/11/23 02:40:53.019
  STEP: creating a selector @ 09/11/23 02:40:53.02
  STEP: Creating the service pods in kubernetes @ 09/11/23 02:40:53.02
  Sep 11 02:40:53.020: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0911 02:40:53.339210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:54.340442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:55.340717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:56.341121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:57.341657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:58.341711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:40:59.342733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:00.343121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:01.343215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:02.343305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:03.344268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:04.344897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:05.345754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:06.345953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:07.346361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:08.346529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:09.347457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:10.347614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:11.348469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:12.348588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:13.348982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:14.349776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/11/23 02:41:15.138
  E0911 02:41:15.349926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:16.350063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:17.166: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 11 02:41:17.166: INFO: Breadth first check of 10.42.0.74 on host 172.31.11.123...
  Sep 11 02:41:17.168: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.174:9080/dial?request=hostname&protocol=http&host=10.42.0.74&port=8083&tries=1'] Namespace:pod-network-test-5341 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:41:17.168: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:41:17.169: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:41:17.169: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5341/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.74%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 02:41:17.242: INFO: Waiting for responses: map[]
  Sep 11 02:41:17.242: INFO: reached 10.42.0.74 after 0/1 tries
  Sep 11 02:41:17.242: INFO: Breadth first check of 10.42.2.85 on host 172.31.12.171...
  Sep 11 02:41:17.246: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.174:9080/dial?request=hostname&protocol=http&host=10.42.2.85&port=8083&tries=1'] Namespace:pod-network-test-5341 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:41:17.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:41:17.247: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:41:17.247: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5341/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.85%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 02:41:17.313: INFO: Waiting for responses: map[]
  Sep 11 02:41:17.313: INFO: reached 10.42.2.85 after 0/1 tries
  Sep 11 02:41:17.313: INFO: Breadth first check of 10.42.1.173 on host 172.31.3.111...
  Sep 11 02:41:17.316: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.174:9080/dial?request=hostname&protocol=http&host=10.42.1.173&port=8083&tries=1'] Namespace:pod-network-test-5341 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:41:17.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:41:17.317: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:41:17.317: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5341/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.173%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0911 02:41:17.350970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:17.397: INFO: Waiting for responses: map[]
  Sep 11 02:41:17.397: INFO: reached 10.42.1.173 after 0/1 tries
  Sep 11 02:41:17.397: INFO: Breadth first check of 10.42.3.123 on host 172.31.4.243...
  Sep 11 02:41:17.401: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.174:9080/dial?request=hostname&protocol=http&host=10.42.3.123&port=8083&tries=1'] Namespace:pod-network-test-5341 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:41:17.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:41:17.401: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:41:17.402: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5341/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.123%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 02:41:17.483: INFO: Waiting for responses: map[]
  Sep 11 02:41:17.483: INFO: reached 10.42.3.123 after 0/1 tries
  Sep 11 02:41:17.483: INFO: Going to retry 0 out of 4 pods....
  Sep 11 02:41:17.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5341" for this suite. @ 09/11/23 02:41:17.488
• [24.508 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 09/11/23 02:41:17.496
  Sep 11 02:41:17.496: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:41:17.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:17.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:17.524
  STEP: creating a ConfigMap @ 09/11/23 02:41:17.528
  STEP: fetching the ConfigMap @ 09/11/23 02:41:17.533
  STEP: patching the ConfigMap @ 09/11/23 02:41:17.54
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/11/23 02:41:17.549
  STEP: deleting the ConfigMap by collection with a label selector @ 09/11/23 02:41:17.554
  STEP: listing all ConfigMaps in test namespace @ 09/11/23 02:41:17.564
  Sep 11 02:41:17.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6047" for this suite. @ 09/11/23 02:41:17.572
• [0.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/11/23 02:41:17.58
  Sep 11 02:41:17.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 02:41:17.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:17.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:17.603
  Sep 11 02:41:17.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7166" for this suite. @ 09/11/23 02:41:17.615
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 09/11/23 02:41:17.625
  Sep 11 02:41:17.625: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 02:41:17.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:17.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:17.65
  STEP: Creating a ResourceQuota @ 09/11/23 02:41:17.653
  STEP: Getting a ResourceQuota @ 09/11/23 02:41:17.658
  STEP: Updating a ResourceQuota @ 09/11/23 02:41:17.662
  STEP: Verifying a ResourceQuota was modified @ 09/11/23 02:41:17.671
  STEP: Deleting a ResourceQuota @ 09/11/23 02:41:17.677
  STEP: Verifying the deleted ResourceQuota @ 09/11/23 02:41:17.683
  Sep 11 02:41:17.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2900" for this suite. @ 09/11/23 02:41:17.69
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 09/11/23 02:41:17.704
  Sep 11 02:41:17.704: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename discovery @ 09/11/23 02:41:17.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:17.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:17.726
  STEP: Setting up server cert @ 09/11/23 02:41:17.73
  E0911 02:41:18.351391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:18.752: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep 11 02:41:18.753: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep 11 02:41:18.753: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep 11 02:41:18.753: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep 11 02:41:18.753: INFO: Checking APIGroup: apps
  Sep 11 02:41:18.754: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep 11 02:41:18.754: INFO: Versions found [{apps/v1 v1}]
  Sep 11 02:41:18.754: INFO: apps/v1 matches apps/v1
  Sep 11 02:41:18.754: INFO: Checking APIGroup: events.k8s.io
  Sep 11 02:41:18.755: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep 11 02:41:18.755: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep 11 02:41:18.755: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep 11 02:41:18.755: INFO: Checking APIGroup: authentication.k8s.io
  Sep 11 02:41:18.757: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep 11 02:41:18.757: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep 11 02:41:18.757: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep 11 02:41:18.757: INFO: Checking APIGroup: authorization.k8s.io
  Sep 11 02:41:18.758: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep 11 02:41:18.758: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep 11 02:41:18.758: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep 11 02:41:18.758: INFO: Checking APIGroup: autoscaling
  Sep 11 02:41:18.759: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep 11 02:41:18.759: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep 11 02:41:18.759: INFO: autoscaling/v2 matches autoscaling/v2
  Sep 11 02:41:18.759: INFO: Checking APIGroup: batch
  Sep 11 02:41:18.760: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep 11 02:41:18.760: INFO: Versions found [{batch/v1 v1}]
  Sep 11 02:41:18.761: INFO: batch/v1 matches batch/v1
  Sep 11 02:41:18.761: INFO: Checking APIGroup: certificates.k8s.io
  Sep 11 02:41:18.762: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep 11 02:41:18.762: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep 11 02:41:18.762: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep 11 02:41:18.762: INFO: Checking APIGroup: networking.k8s.io
  Sep 11 02:41:18.763: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep 11 02:41:18.763: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep 11 02:41:18.763: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep 11 02:41:18.763: INFO: Checking APIGroup: policy
  Sep 11 02:41:18.764: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep 11 02:41:18.764: INFO: Versions found [{policy/v1 v1}]
  Sep 11 02:41:18.764: INFO: policy/v1 matches policy/v1
  Sep 11 02:41:18.764: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep 11 02:41:18.766: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep 11 02:41:18.766: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep 11 02:41:18.766: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep 11 02:41:18.766: INFO: Checking APIGroup: storage.k8s.io
  Sep 11 02:41:18.767: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep 11 02:41:18.767: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep 11 02:41:18.767: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep 11 02:41:18.767: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep 11 02:41:18.768: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep 11 02:41:18.768: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep 11 02:41:18.768: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep 11 02:41:18.768: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep 11 02:41:18.769: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep 11 02:41:18.769: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep 11 02:41:18.769: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep 11 02:41:18.769: INFO: Checking APIGroup: scheduling.k8s.io
  Sep 11 02:41:18.771: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep 11 02:41:18.771: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep 11 02:41:18.771: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep 11 02:41:18.771: INFO: Checking APIGroup: coordination.k8s.io
  Sep 11 02:41:18.772: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep 11 02:41:18.772: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep 11 02:41:18.772: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep 11 02:41:18.772: INFO: Checking APIGroup: node.k8s.io
  Sep 11 02:41:18.773: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep 11 02:41:18.773: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep 11 02:41:18.773: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep 11 02:41:18.773: INFO: Checking APIGroup: discovery.k8s.io
  Sep 11 02:41:18.774: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep 11 02:41:18.774: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep 11 02:41:18.774: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep 11 02:41:18.774: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep 11 02:41:18.776: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Sep 11 02:41:18.776: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Sep 11 02:41:18.776: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Sep 11 02:41:18.776: INFO: Checking APIGroup: helm.cattle.io
  Sep 11 02:41:18.778: INFO: PreferredVersion.GroupVersion: helm.cattle.io/v1
  Sep 11 02:41:18.778: INFO: Versions found [{helm.cattle.io/v1 v1}]
  Sep 11 02:41:18.778: INFO: helm.cattle.io/v1 matches helm.cattle.io/v1
  Sep 11 02:41:18.778: INFO: Checking APIGroup: k3s.cattle.io
  Sep 11 02:41:18.780: INFO: PreferredVersion.GroupVersion: k3s.cattle.io/v1
  Sep 11 02:41:18.780: INFO: Versions found [{k3s.cattle.io/v1 v1}]
  Sep 11 02:41:18.780: INFO: k3s.cattle.io/v1 matches k3s.cattle.io/v1
  Sep 11 02:41:18.780: INFO: Checking APIGroup: traefik.containo.us
  Sep 11 02:41:18.781: INFO: PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  Sep 11 02:41:18.782: INFO: Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  Sep 11 02:41:18.782: INFO: traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  Sep 11 02:41:18.782: INFO: Checking APIGroup: metrics.k8s.io
  Sep 11 02:41:18.783: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Sep 11 02:41:18.783: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Sep 11 02:41:18.783: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Sep 11 02:41:18.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2713" for this suite. @ 09/11/23 02:41:18.806
• [1.122 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/11/23 02:41:18.826
  Sep 11 02:41:18.826: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 02:41:18.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:18.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:18.864
  STEP: creating service nodeport-test with type=NodePort in namespace services-2777 @ 09/11/23 02:41:18.88
  STEP: creating replication controller nodeport-test in namespace services-2777 @ 09/11/23 02:41:18.92
  I0911 02:41:18.957389      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-2777, replica count: 2
  E0911 02:41:19.351706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:20.352242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:21.352353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 02:41:22.008862      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 02:41:22.008: INFO: Creating new exec pod
  E0911 02:41:22.353286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:23.354185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:24.354605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:25.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-2777 exec execpodlbdd7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 11 02:41:25.219: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 11 02:41:25.220: INFO: stdout: "nodeport-test-wdk56"
  Sep 11 02:41:25.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-2777 exec execpodlbdd7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.91.152 80'
  E0911 02:41:25.354696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:25.374: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.91.152 80\nConnection to 10.43.91.152 80 port [tcp/http] succeeded!\n"
  Sep 11 02:41:25.374: INFO: stdout: "nodeport-test-wdk56"
  Sep 11 02:41:25.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-2777 exec execpodlbdd7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.12.171 30166'
  Sep 11 02:41:25.558: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.12.171 30166\nConnection to 172.31.12.171 30166 port [tcp/*] succeeded!\n"
  Sep 11 02:41:25.559: INFO: stdout: "nodeport-test-mm49n"
  Sep 11 02:41:25.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-2777 exec execpodlbdd7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.123 30166'
  Sep 11 02:41:25.856: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.11.123 30166\nConnection to 172.31.11.123 30166 port [tcp/*] succeeded!\n"
  Sep 11 02:41:25.856: INFO: stdout: "nodeport-test-wdk56"
  Sep 11 02:41:25.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2777" for this suite. @ 09/11/23 02:41:25.875
• [7.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/11/23 02:41:25.911
  Sep 11 02:41:25.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 02:41:25.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:25.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:25.971
  Sep 11 02:41:26.045: INFO: Create a RollingUpdate DaemonSet
  Sep 11 02:41:26.053: INFO: Check that daemon pods launch on every node of the cluster
  Sep 11 02:41:26.070: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:41:26.070: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 02:41:26.354851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:27.080: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 11 02:41:27.080: INFO: Node ip-172-31-12-171 is running 0 daemon pod, expected 1
  E0911 02:41:27.355511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:28.080: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 02:41:28.080: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  Sep 11 02:41:28.080: INFO: Update the DaemonSet to trigger a rollout
  Sep 11 02:41:28.090: INFO: Updating DaemonSet daemon-set
  E0911 02:41:28.355860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:29.110: INFO: Roll back the DaemonSet before rollout is complete
  Sep 11 02:41:29.121: INFO: Updating DaemonSet daemon-set
  Sep 11 02:41:29.121: INFO: Make sure DaemonSet rollback is complete
  Sep 11 02:41:29.127: INFO: Wrong image for pod: daemon-set-k6w2r. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep 11 02:41:29.127: INFO: Pod daemon-set-k6w2r is not available
  E0911 02:41:29.356035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:30.356492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:31.357518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:32.357640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:33.142: INFO: Pod daemon-set-9m4th is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 02:41:33.161
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5887, will wait for the garbage collector to delete the pods @ 09/11/23 02:41:33.161
  Sep 11 02:41:33.229: INFO: Deleting DaemonSet.extensions daemon-set took: 8.808394ms
  Sep 11 02:41:33.331: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.552818ms
  E0911 02:41:33.358596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:34.358993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:35.235: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 02:41:35.235: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 02:41:35.238: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29520"},"items":null}

  Sep 11 02:41:35.241: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29520"},"items":null}

  Sep 11 02:41:35.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5887" for this suite. @ 09/11/23 02:41:35.263
• [9.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/11/23 02:41:35.272
  Sep 11 02:41:35.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 02:41:35.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:35.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:35.295
  Sep 11 02:41:35.299: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep 11 02:41:35.310: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0911 02:41:35.359250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:36.359360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:37.359423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:38.359548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:39.359691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:40.316: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 02:41:40.316
  Sep 11 02:41:40.316: INFO: Creating deployment "test-rolling-update-deployment"
  Sep 11 02:41:40.323: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep 11 02:41:40.331: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0911 02:41:40.360007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:41.360565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:42.339: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep 11 02:41:42.342: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep 11 02:41:42.359: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88cd00a3-bbec-4a55-a51a-da1f4cdebd3f",
      ResourceVersion: (string) (len=5) "29632",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829996900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0911 02:41:42.361219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:42.370: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46e8df5b-1ae4-428d-b71a-3f919b1008ca",
      ResourceVersion: (string) (len=5) "29621",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829996900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "88cd00a3-bbec-4a55-a51a-da1f4cdebd3f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 63 64 30 30  61 33 2d 62 62 65 63 2d  |\"88cd00a3-bbec-|
              00000120  34 61 35 35 2d 61 35 31  61 2d 64 61 31 66 34 63  |4a55-a51a-da1f4c|
              00000130  64 65 62 64 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |debd3f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 02:41:42.371: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep 11 02:41:42.371: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58153214-4692-4097-8a1f-fc5fa9706183",
      ResourceVersion: (string) (len=5) "29630",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829996895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "88cd00a3-bbec-4a55-a51a-da1f4cdebd3f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 38 63 64 30 30 61  |"uid\":\"88cd00a|
              000000b0  33 2d 62 62 65 63 2d 34  61 35 35 2d 61 35 31 61  |3-bbec-4a55-a51a|
              000000c0  2d 64 61 31 66 34 63 64  65 62 64 33 66 5c 22 7d  |-da1f4cdebd3f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 02:41:42.378: INFO: Pod "test-rolling-update-deployment-7f5c55c64-r699v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-r699v",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-9147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "faff19eb-4c71-412b-b1d2-be532eefe4bb",
      ResourceVersion: (string) (len=5) "29620",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829996900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "46e8df5b-1ae4-428d-b71a-3f919b1008ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  65 38 64 66 35 62 2d 31  |d\":\"46e8df5b-1|
              00000090  61 65 34 2d 34 32 38 64  2d 62 37 31 61 2d 33 66  |ae4-428d-b71a-3f|
              000000a0  39 31 39 62 31 30 30 38  63 61 5c 22 7d 22 3a 7b  |919b1008ca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  31 32 36 5c 22 7d 22 3a  |10.42.3.126\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-57m78",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-57m78",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829996900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829996900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829996900,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://846a13717bf46ff779ca705c45fa5bdc3e03dece828a3a23f05209e8927d550c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 02:41:42.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9147" for this suite. @ 09/11/23 02:41:42.393
• [7.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/11/23 02:41:42.409
  Sep 11 02:41:42.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:41:42.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:42.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:42.448
  STEP: Creating configMap with name projected-configmap-test-volume-136d6ada-e942-4c96-a9fd-2d260023c34e @ 09/11/23 02:41:42.457
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:41:42.462
  E0911 02:41:43.361755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:44.362633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:41:44.479
  Sep 11 02:41:44.483: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-configmaps-5bfca4f8-515f-408b-8106-aae31643f819 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:41:44.491
  Sep 11 02:41:44.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5086" for this suite. @ 09/11/23 02:41:44.51
• [2.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 09/11/23 02:41:44.518
  Sep 11 02:41:44.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 02:41:44.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:44.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:44.54
  STEP: creating service in namespace services-3 @ 09/11/23 02:41:44.544
  STEP: creating service affinity-clusterip-transition in namespace services-3 @ 09/11/23 02:41:44.544
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3 @ 09/11/23 02:41:44.557
  I0911 02:41:44.567258      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3, replica count: 3
  E0911 02:41:45.362937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:46.363614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:47.363927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 02:41:47.618719      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 02:41:47.631: INFO: Creating new exec pod
  E0911 02:41:48.364036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:49.364209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:50.365333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:50.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3 exec execpod-affinityffnn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep 11 02:41:50.846: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep 11 02:41:50.846: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:41:50.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3 exec execpod-affinityffnn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.136 80'
  Sep 11 02:41:51.022: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.43.96.136 80\nConnection to 10.43.96.136 80 port [tcp/http] succeeded!\n"
  Sep 11 02:41:51.022: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 02:41:51.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3 exec execpod-affinityffnn5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.96.136:80/ ; done'
  Sep 11 02:41:51.288: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n"
  Sep 11 02:41:51.288: INFO: stdout: "\naffinity-clusterip-transition-k6z7q\naffinity-clusterip-transition-xxx6l\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-xxx6l\naffinity-clusterip-transition-k6z7q\naffinity-clusterip-transition-k6z7q\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-k6z7q\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-xxx6l\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-xxx6l\naffinity-clusterip-transition-xxx6l\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-xxx6l\naffinity-clusterip-transition-xxx6l"
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-k6z7q
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-xxx6l
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-xxx6l
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-k6z7q
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-k6z7q
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-k6z7q
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-xxx6l
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-xxx6l
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-xxx6l
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-xxx6l
  Sep 11 02:41:51.288: INFO: Received response from host: affinity-clusterip-transition-xxx6l
  Sep 11 02:41:51.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3 exec execpod-affinityffnn5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.96.136:80/ ; done'
  E0911 02:41:51.365856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:51.558: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.96.136:80/\n"
  Sep 11 02:41:51.558: INFO: stdout: "\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr\naffinity-clusterip-transition-qz9kr"
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Received response from host: affinity-clusterip-transition-qz9kr
  Sep 11 02:41:51.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 02:41:51.562: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3, will wait for the garbage collector to delete the pods @ 09/11/23 02:41:51.575
  Sep 11 02:41:51.637: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.839426ms
  Sep 11 02:41:51.737: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.819065ms
  E0911 02:41:52.365892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:53.366039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:54.366340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-3" for this suite. @ 09/11/23 02:41:54.763
• [10.253 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/11/23 02:41:54.772
  Sep 11 02:41:54.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 02:41:54.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:41:54.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:41:54.795
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/11/23 02:41:54.797
  Sep 11 02:41:54.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:41:55.367362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:56.367856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:41:56.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:41:57.368878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:58.369026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:41:59.369092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:00.369628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:01.370110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:02.370512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:03.370839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:42:03.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5684" for this suite. @ 09/11/23 02:42:03.628
• [8.867 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 09/11/23 02:42:03.667
  Sep 11 02:42:03.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 02:42:03.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:42:03.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:42:03.761
  STEP: creating a Service @ 09/11/23 02:42:03.787
  STEP: watching for the Service to be added @ 09/11/23 02:42:03.804
  Sep 11 02:42:03.819: INFO: Found Service test-service-ndkn9 in namespace services-7410 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Sep 11 02:42:03.819: INFO: Service test-service-ndkn9 created
  STEP: Getting /status @ 09/11/23 02:42:03.819
  Sep 11 02:42:03.829: INFO: Service test-service-ndkn9 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/11/23 02:42:03.829
  STEP: watching for the Service to be patched @ 09/11/23 02:42:03.84
  Sep 11 02:42:03.843: INFO: observed Service test-service-ndkn9 in namespace services-7410 with annotations: map[] & LoadBalancer: {[]}
  Sep 11 02:42:03.843: INFO: Found Service test-service-ndkn9 in namespace services-7410 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Sep 11 02:42:03.843: INFO: Service test-service-ndkn9 has service status patched
  STEP: updating the ServiceStatus @ 09/11/23 02:42:03.844
  Sep 11 02:42:03.880: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/11/23 02:42:03.88
  Sep 11 02:42:03.888: INFO: Observed Service test-service-ndkn9 in namespace services-7410 with annotations: map[] & Conditions: {[]}
  Sep 11 02:42:03.888: INFO: Observed event: &Service{ObjectMeta:{test-service-ndkn9  services-7410  d2aedc5e-5de9-45e9-a756-18cfb406da82 29901 0 2023-09-11 02:42:03 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-09-11 02:42:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-09-11 02:42:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.31.168,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.31.168],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep 11 02:42:03.889: INFO: Found Service test-service-ndkn9 in namespace services-7410 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 11 02:42:03.889: INFO: Service test-service-ndkn9 has service status updated
  STEP: patching the service @ 09/11/23 02:42:03.889
  STEP: watching for the Service to be patched @ 09/11/23 02:42:03.922
  Sep 11 02:42:03.925: INFO: observed Service test-service-ndkn9 in namespace services-7410 with labels: map[test-service-static:true]
  Sep 11 02:42:03.925: INFO: observed Service test-service-ndkn9 in namespace services-7410 with labels: map[test-service-static:true]
  Sep 11 02:42:03.925: INFO: observed Service test-service-ndkn9 in namespace services-7410 with labels: map[test-service-static:true]
  Sep 11 02:42:03.925: INFO: Found Service test-service-ndkn9 in namespace services-7410 with labels: map[test-service:patched test-service-static:true]
  Sep 11 02:42:03.926: INFO: Service test-service-ndkn9 patched
  STEP: deleting the service @ 09/11/23 02:42:03.941
  STEP: watching for the Service to be deleted @ 09/11/23 02:42:03.966
  Sep 11 02:42:03.968: INFO: Observed event: ADDED
  Sep 11 02:42:03.968: INFO: Observed event: MODIFIED
  Sep 11 02:42:03.969: INFO: Observed event: MODIFIED
  Sep 11 02:42:03.969: INFO: Observed event: MODIFIED
  Sep 11 02:42:03.969: INFO: Found Service test-service-ndkn9 in namespace services-7410 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep 11 02:42:03.969: INFO: Service test-service-ndkn9 deleted
  Sep 11 02:42:03.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7410" for this suite. @ 09/11/23 02:42:03.981
• [0.330 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/11/23 02:42:03.997
  Sep 11 02:42:03.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 02:42:03.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:42:04.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:42:04.049
  STEP: Setting up server cert @ 09/11/23 02:42:04.107
  E0911 02:42:04.371239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 02:42:04.429
  STEP: Deploying the webhook pod @ 09/11/23 02:42:04.437
  STEP: Wait for the deployment to be ready @ 09/11/23 02:42:04.45
  Sep 11 02:42:04.467: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 02:42:05.371476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:06.371605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 02:42:06.481
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 02:42:06.493
  E0911 02:42:07.372173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:42:07.493: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/11/23 02:42:07.5
  STEP: create a configmap that should be updated by the webhook @ 09/11/23 02:42:07.543
  Sep 11 02:42:07.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2806" for this suite. @ 09/11/23 02:42:07.621
  STEP: Destroying namespace "webhook-markers-9264" for this suite. @ 09/11/23 02:42:07.631
• [3.643 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/11/23 02:42:07.643
  Sep 11 02:42:07.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 02:42:07.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:42:07.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:42:07.679
  E0911 02:42:08.373120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:09.374167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:10.374243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:11.375177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:12.375781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:13.375859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:42:13.753
  Sep 11 02:42:13.756: INFO: Trying to get logs from node ip-172-31-3-111 pod client-envvars-c463ef93-0e31-43d8-a0b4-5dc6233ad947 container env3cont: <nil>
  STEP: delete the pod @ 09/11/23 02:42:13.772
  Sep 11 02:42:13.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8302" for this suite. @ 09/11/23 02:42:13.804
• [6.167 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/11/23 02:42:13.812
  Sep 11 02:42:13.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 02:42:13.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:42:13.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:42:13.84
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/11/23 02:42:13.857
  E0911 02:42:14.376809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:15.376983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:16.377348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:17.378382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:18.378766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:19.379425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:20.380166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:21.381082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:22.381247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:23.381502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:24.381606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:25.381860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:26.382792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:27.382953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:28.383108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/11/23 02:42:28.942
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/11/23 02:42:28.946
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/11/23 02:42:28.955
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 09/11/23 02:42:28.955
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/11/23 02:42:28.985
  E0911 02:42:29.383639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:30.384668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:31.385669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/11/23 02:42:32.005
  E0911 02:42:32.386073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/11/23 02:42:33.013
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/11/23 02:42:33.026
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 09/11/23 02:42:33.026
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/11/23 02:42:33.059
  E0911 02:42:33.386733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/11/23 02:42:34.076
  E0911 02:42:34.387151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:35.387620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/11/23 02:42:36.088
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/11/23 02:42:36.095
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 09/11/23 02:42:36.095
  Sep 11 02:42:36.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5696" for this suite. @ 09/11/23 02:42:36.13
• [22.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/11/23 02:42:36.143
  Sep 11 02:42:36.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:42:36.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:42:36.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:42:36.174
  STEP: Creating configMap with name projected-configmap-test-volume-1290ccea-8945-411c-a1c6-a1ea19c3b07a @ 09/11/23 02:42:36.181
  STEP: Creating a pod to test consume configMaps @ 09/11/23 02:42:36.186
  E0911 02:42:36.387791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:37.388197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:38.389059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:39.389579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:42:40.211
  Sep 11 02:42:40.214: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-configmaps-a572716d-d0c6-4179-b149-b7d2edf3e0c0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:42:40.221
  Sep 11 02:42:40.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2752" for this suite. @ 09/11/23 02:42:40.239
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 09/11/23 02:42:40.251
  Sep 11 02:42:40.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pod-network-test @ 09/11/23 02:42:40.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:42:40.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:42:40.289
  STEP: Performing setup for networking test in namespace pod-network-test-9011 @ 09/11/23 02:42:40.295
  STEP: creating a selector @ 09/11/23 02:42:40.295
  STEP: Creating the service pods in kubernetes @ 09/11/23 02:42:40.295
  Sep 11 02:42:40.295: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0911 02:42:40.389682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:41.391193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:42.391174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:43.391427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:44.392247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:45.392348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:46.393326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:47.393438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:48.394788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:49.394862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:50.395440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:51.395555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:52.396430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:53.396526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:54.397003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:55.397215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:56.397562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:57.398043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:58.398063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:42:59.398914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:00.399619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:01.399838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:02.399981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/11/23 02:43:02.46
  E0911 02:43:03.400016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:04.400814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:43:04.495: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 11 02:43:04.495: INFO: Going to poll 10.42.0.76 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 02:43:04.498: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.76 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9011 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:43:04.498: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:43:04.499: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:43:04.499: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.76+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0911 02:43:05.401828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:43:05.575: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 11 02:43:05.575: INFO: Going to poll 10.42.2.89 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 02:43:05.580: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.89 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9011 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:43:05.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:43:05.581: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:43:05.581: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.89+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0911 02:43:06.402378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:43:06.654: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 11 02:43:06.654: INFO: Going to poll 10.42.1.189 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 02:43:06.659: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.189 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9011 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:43:06.659: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:43:06.660: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:43:06.660: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.189+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0911 02:43:07.402450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:43:07.756: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 11 02:43:07.756: INFO: Going to poll 10.42.3.129 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 02:43:07.760: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.129 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9011 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:43:07.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:43:07.762: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:43:07.762: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.129+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0911 02:43:08.403409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:43:08.842: INFO: Found all 1 expected endpoints: [netserver-3]
  Sep 11 02:43:08.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9011" for this suite. @ 09/11/23 02:43:08.847
• [28.603 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 09/11/23 02:43:08.855
  Sep 11 02:43:08.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/11/23 02:43:08.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:43:08.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:43:08.891
  Sep 11 02:43:08.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:43:09.404466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:43:09.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7378" for this suite. @ 09/11/23 02:43:09.465
• [0.620 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/11/23 02:43:09.476
  Sep 11 02:43:09.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename containers @ 09/11/23 02:43:09.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:43:09.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:43:09.505
  STEP: Creating a pod to test override arguments @ 09/11/23 02:43:09.51
  E0911 02:43:10.405278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:11.405803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:12.406728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:13.406859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:43:13.537
  Sep 11 02:43:13.540: INFO: Trying to get logs from node ip-172-31-4-243 pod client-containers-e249c1d1-aed8-4a31-8d0e-7d44c733e25f container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:43:13.558
  Sep 11 02:43:13.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3259" for this suite. @ 09/11/23 02:43:13.6
• [4.143 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/11/23 02:43:13.62
  Sep 11 02:43:13.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 02:43:13.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:43:13.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:43:13.662
  STEP: Creating a ReplaceConcurrent cronjob @ 09/11/23 02:43:13.671
  STEP: Ensuring a job is scheduled @ 09/11/23 02:43:13.69
  E0911 02:43:14.407620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:15.407838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:16.408196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:17.408339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:18.408583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:19.408584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:20.409515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:21.409705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:22.410364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:23.410497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:24.410808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:25.410957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:26.411437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:27.411549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:28.411708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:29.411750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:30.412313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:31.413143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:32.413242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:33.413406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:34.414217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:35.415091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:36.415493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:37.415628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:38.415723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:39.415988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:40.416760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:41.416941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:42.417023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:43.418109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:44.418173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:45.418906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:46.419020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:47.419080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:48.419210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:49.419322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:50.419621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:51.419964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:52.420201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:53.420228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:54.420526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:55.420951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:56.421560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:57.421725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:58.422120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:43:59.422718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:00.423444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:01.423567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/11/23 02:44:01.694
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/11/23 02:44:01.698
  STEP: Ensuring the job is replaced with a new one @ 09/11/23 02:44:01.701
  E0911 02:44:02.424296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:03.424738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:04.424896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:05.425655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:06.426257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:07.426458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:08.427538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:09.427763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:10.428695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:11.428899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:12.429662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:13.430759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:14.430923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:15.431227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:16.432131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:17.432368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:18.432655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:19.432942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:20.433376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:21.433635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:22.433700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:23.434701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:24.435472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:25.436311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:26.436851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:27.437034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:28.437218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:29.437888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:30.437915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:31.438088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:32.438818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:33.438981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:34.439503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:35.439644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:36.440582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:37.440738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:38.440860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:39.440969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:40.441080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:41.441231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:42.441405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:43.441671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:44.441718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:45.441835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:46.442086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:47.442834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:48.443133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:49.443699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:50.444218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:51.444672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:52.445731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:53.446837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:54.447698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:55.447818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:56.447985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:57.448128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:58.449185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:44:59.449295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:00.449649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:01.450765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/11/23 02:45:01.706
  Sep 11 02:45:01.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8537" for this suite. @ 09/11/23 02:45:01.728
• [108.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 09/11/23 02:45:01.759
  Sep 11 02:45:01.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 02:45:01.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:45:01.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:45:01.831
  STEP: Creating ServiceAccount "e2e-sa-kgdc5"  @ 09/11/23 02:45:01.836
  Sep 11 02:45:01.844: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-kgdc5"  @ 09/11/23 02:45:01.844
  Sep 11 02:45:01.862: INFO: AutomountServiceAccountToken: true
  Sep 11 02:45:01.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7258" for this suite. @ 09/11/23 02:45:01.869
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/11/23 02:45:01.883
  Sep 11 02:45:01.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 02:45:01.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:45:01.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:45:01.92
  Sep 11 02:45:01.927: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:45:02.451514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:03.451926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:04.452709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:45:05.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5744" for this suite. @ 09/11/23 02:45:05.072
• [3.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/11/23 02:45:05.107
  Sep 11 02:45:05.107: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 02:45:05.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:45:05.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:45:05.142
  STEP: Creating service test in namespace statefulset-6259 @ 09/11/23 02:45:05.147
  STEP: Creating a new StatefulSet @ 09/11/23 02:45:05.154
  Sep 11 02:45:05.185: INFO: Found 0 stateful pods, waiting for 3
  E0911 02:45:05.453369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:06.453652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:07.454064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:08.454020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:09.454755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:10.454892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:11.455007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:12.455160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:13.455640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:14.456013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:45:15.194: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:45:15.194: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:45:15.194: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/11/23 02:45:15.206
  Sep 11 02:45:15.230: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/11/23 02:45:15.23
  E0911 02:45:15.456936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:16.457169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:17.457371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:18.457935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:19.458136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:20.458091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:21.458192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:22.458329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:23.458436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:24.458565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/11/23 02:45:25.247
  STEP: Performing a canary update @ 09/11/23 02:45:25.248
  Sep 11 02:45:25.266: INFO: Updating stateful set ss2
  Sep 11 02:45:25.276: INFO: Waiting for Pod statefulset-6259/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0911 02:45:25.459206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:26.459490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:27.459952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:28.460000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:29.460953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:30.461315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:31.461673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:32.462768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:33.463118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:34.463383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/11/23 02:45:35.289
  Sep 11 02:45:35.398: INFO: Found 1 stateful pods, waiting for 3
  E0911 02:45:35.463858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:36.464197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:37.464262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:38.464530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:39.464599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:40.464937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:41.465089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:42.465243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:43.465644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:44.465734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:45:45.404: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:45:45.404: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 02:45:45.404: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/11/23 02:45:45.412
  Sep 11 02:45:45.432: INFO: Updating stateful set ss2
  Sep 11 02:45:45.440: INFO: Waiting for Pod statefulset-6259/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0911 02:45:45.466296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:46.466654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:47.466678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:48.466909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:49.467507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:50.468548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:51.468635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:52.468784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:53.468911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:54.469950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:45:55.467: INFO: Updating stateful set ss2
  E0911 02:45:55.470580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:45:55.477: INFO: Waiting for StatefulSet statefulset-6259/ss2 to complete update
  Sep 11 02:45:55.477: INFO: Waiting for Pod statefulset-6259/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0911 02:45:56.470732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:57.470854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:58.470969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:45:59.472028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:00.472165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:01.472321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:02.472458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:03.472605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:04.472730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:05.473623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:05.488: INFO: Deleting all statefulset in ns statefulset-6259
  Sep 11 02:46:05.491: INFO: Scaling statefulset ss2 to 0
  E0911 02:46:06.473691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:07.473838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:08.473884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:09.474688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:10.474807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:11.474940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:12.475107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:13.475261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:14.475403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:15.475578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:15.518: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 02:46:15.523: INFO: Deleting statefulset ss2
  Sep 11 02:46:15.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6259" for this suite. @ 09/11/23 02:46:15.544
• [70.444 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/11/23 02:46:15.553
  Sep 11 02:46:15.553: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename watch @ 09/11/23 02:46:15.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:46:15.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:46:15.596
  STEP: creating a watch on configmaps with a certain label @ 09/11/23 02:46:15.601
  STEP: creating a new configmap @ 09/11/23 02:46:15.603
  STEP: modifying the configmap once @ 09/11/23 02:46:15.609
  STEP: changing the label value of the configmap @ 09/11/23 02:46:15.619
  STEP: Expecting to observe a delete notification for the watched object @ 09/11/23 02:46:15.63
  Sep 11 02:46:15.630: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3563  ec652a58-9479-4c1f-9f61-635a38552e29 31533 0 2023-09-11 02:46:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 02:46:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 02:46:15.630: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3563  ec652a58-9479-4c1f-9f61-635a38552e29 31534 0 2023-09-11 02:46:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 02:46:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 02:46:15.631: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3563  ec652a58-9479-4c1f-9f61-635a38552e29 31535 0 2023-09-11 02:46:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 02:46:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/11/23 02:46:15.631
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/11/23 02:46:15.663
  E0911 02:46:16.476214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:17.476434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:18.476740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:19.476804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:20.477035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:21.477385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:22.477647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:23.477695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:24.477818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:25.477959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/11/23 02:46:25.663
  STEP: modifying the configmap a third time @ 09/11/23 02:46:25.674
  STEP: deleting the configmap @ 09/11/23 02:46:25.685
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/11/23 02:46:25.691
  Sep 11 02:46:25.691: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3563  ec652a58-9479-4c1f-9f61-635a38552e29 31627 0 2023-09-11 02:46:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 02:46:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 02:46:25.691: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3563  ec652a58-9479-4c1f-9f61-635a38552e29 31628 0 2023-09-11 02:46:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 02:46:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 02:46:25.691: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3563  ec652a58-9479-4c1f-9f61-635a38552e29 31629 0 2023-09-11 02:46:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 02:46:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 02:46:25.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3563" for this suite. @ 09/11/23 02:46:25.697
• [10.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/11/23 02:46:25.707
  Sep 11 02:46:25.707: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 02:46:25.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:46:25.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:46:25.736
  STEP: Creating pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711 @ 09/11/23 02:46:25.742
  E0911 02:46:26.478914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:27.479022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 02:46:27.767
  Sep 11 02:46:27.777: INFO: Initial restart count of pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e is 0
  Sep 11 02:46:27.787: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:28.479843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:29.480334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:29.794: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:30.480820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:31.481273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:31.798: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:32.481378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:33.481676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:33.803: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:34.481761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:35.482082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:35.808: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:36.482156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:37.482283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:37.813: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:38.482793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:39.483278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:39.818: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:40.483346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:41.483458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:41.824: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:42.483984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:43.484090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:43.828: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:44.485002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:45.485354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:45.833: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  E0911 02:46:46.485873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:47.486082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:47.838: INFO: Get pod liveness-9f9b180f-6805-47db-8459-0ea0e117900e in namespace container-probe-8711
  Sep 11 02:46:47.838: INFO: Restart count of pod container-probe-8711/liveness-9f9b180f-6805-47db-8459-0ea0e117900e is now 1 (20.06025596s elapsed)
  Sep 11 02:46:47.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:46:47.843
  STEP: Destroying namespace "container-probe-8711" for this suite. @ 09/11/23 02:46:47.854
• [22.158 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/11/23 02:46:47.865
  Sep 11 02:46:47.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:46:47.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:46:47.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:46:47.906
  STEP: Creating projection with secret that has name projected-secret-test-map-6b2d62a3-b883-4dbb-9bed-88a80b7f25f4 @ 09/11/23 02:46:47.912
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:46:47.921
  E0911 02:46:48.486120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:49.486705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:50.487498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:51.487846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:46:51.951
  Sep 11 02:46:51.954: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-secrets-9757673f-10d6-46fe-9dcc-a00b4c30fd3c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:46:51.969
  Sep 11 02:46:51.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3112" for this suite. @ 09/11/23 02:46:51.99
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/11/23 02:46:52.004
  Sep 11 02:46:52.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 02:46:52.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:46:52.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:46:52.033
  Sep 11 02:46:52.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:46:52.488647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:53.489529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/11/23 02:46:54.245
  Sep 11 02:46:54.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-5406 --namespace=crd-publish-openapi-5406 create -f -'
  E0911 02:46:54.490291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:55.293: INFO: stderr: ""
  Sep 11 02:46:55.293: INFO: stdout: "e2e-test-crd-publish-openapi-5679-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 11 02:46:55.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-5406 --namespace=crd-publish-openapi-5406 delete e2e-test-crd-publish-openapi-5679-crds test-cr'
  Sep 11 02:46:55.434: INFO: stderr: ""
  Sep 11 02:46:55.434: INFO: stdout: "e2e-test-crd-publish-openapi-5679-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep 11 02:46:55.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-5406 --namespace=crd-publish-openapi-5406 apply -f -'
  E0911 02:46:55.490591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:56.203: INFO: stderr: ""
  Sep 11 02:46:56.203: INFO: stdout: "e2e-test-crd-publish-openapi-5679-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 11 02:46:56.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-5406 --namespace=crd-publish-openapi-5406 delete e2e-test-crd-publish-openapi-5679-crds test-cr'
  Sep 11 02:46:56.287: INFO: stderr: ""
  Sep 11 02:46:56.287: INFO: stdout: "e2e-test-crd-publish-openapi-5679-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/11/23 02:46:56.287
  Sep 11 02:46:56.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-5406 explain e2e-test-crd-publish-openapi-5679-crds'
  Sep 11 02:46:56.467: INFO: stderr: ""
  Sep 11 02:46:56.467: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5679-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0911 02:46:56.491148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:57.491365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:46:58.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5406" for this suite. @ 09/11/23 02:46:58.108
• [6.124 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/11/23 02:46:58.122
  Sep 11 02:46:58.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename containers @ 09/11/23 02:46:58.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:46:58.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:46:58.174
  STEP: Creating a pod to test override command @ 09/11/23 02:46:58.191
  E0911 02:46:58.492225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:46:59.492310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:00.493152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:01.493305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:47:02.228
  Sep 11 02:47:02.231: INFO: Trying to get logs from node ip-172-31-3-111 pod client-containers-7f8d58d2-d893-488d-84fb-b20688bdc37a container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 02:47:02.239
  Sep 11 02:47:02.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2138" for this suite. @ 09/11/23 02:47:02.262
• [4.147 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 09/11/23 02:47:02.27
  Sep 11 02:47:02.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 02:47:02.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:47:02.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:47:02.31
  E0911 02:47:02.493383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:03.493683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:04.494234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:05.494394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:47:06.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2094" for this suite. @ 09/11/23 02:47:06.344
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/11/23 02:47:06.359
  Sep 11 02:47:06.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 02:47:06.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:47:06.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:47:06.426
  STEP: Creating secret with name secret-test-map-12521d3d-bf3d-4ac0-98fa-674fd5e768a8 @ 09/11/23 02:47:06.431
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:47:06.448
  E0911 02:47:06.499714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:07.499849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:08.500255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:09.500814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:47:10.488
  Sep 11 02:47:10.492: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-secrets-6ca162f7-4967-486f-abf8-317090a6c1d5 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:47:10.5
  E0911 02:47:10.500865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:47:10.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4629" for this suite. @ 09/11/23 02:47:10.525
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 09/11/23 02:47:10.541
  Sep 11 02:47:10.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 02:47:10.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:47:10.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:47:10.575
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/11/23 02:47:10.581
  E0911 02:47:11.501090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:12.501685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:13.502268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:14.502647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:47:14.607
  Sep 11 02:47:14.612: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-50c944e6-56d2-454b-8614-e4618088be6f container test-container: <nil>
  STEP: delete the pod @ 09/11/23 02:47:14.619
  Sep 11 02:47:14.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7089" for this suite. @ 09/11/23 02:47:14.643
• [4.111 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/11/23 02:47:14.654
  Sep 11 02:47:14.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 02:47:14.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:47:14.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:47:14.696
  Sep 11 02:47:14.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 02:47:15.503647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:16.504668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/11/23 02:47:16.522
  Sep 11 02:47:16.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6626 --namespace=crd-publish-openapi-6626 create -f -'
  Sep 11 02:47:17.142: INFO: stderr: ""
  Sep 11 02:47:17.142: INFO: stdout: "e2e-test-crd-publish-openapi-9844-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 11 02:47:17.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6626 --namespace=crd-publish-openapi-6626 delete e2e-test-crd-publish-openapi-9844-crds test-cr'
  Sep 11 02:47:17.229: INFO: stderr: ""
  Sep 11 02:47:17.229: INFO: stdout: "e2e-test-crd-publish-openapi-9844-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep 11 02:47:17.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6626 --namespace=crd-publish-openapi-6626 apply -f -'
  E0911 02:47:17.504732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:47:17.736: INFO: stderr: ""
  Sep 11 02:47:17.736: INFO: stdout: "e2e-test-crd-publish-openapi-9844-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 11 02:47:17.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6626 --namespace=crd-publish-openapi-6626 delete e2e-test-crd-publish-openapi-9844-crds test-cr'
  Sep 11 02:47:17.820: INFO: stderr: ""
  Sep 11 02:47:17.820: INFO: stdout: "e2e-test-crd-publish-openapi-9844-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/11/23 02:47:17.82
  Sep 11 02:47:17.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6626 explain e2e-test-crd-publish-openapi-9844-crds'
  Sep 11 02:47:18.011: INFO: stderr: ""
  Sep 11 02:47:18.011: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9844-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0911 02:47:18.504975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:19.505423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:47:19.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6626" for this suite. @ 09/11/23 02:47:19.907
• [5.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/11/23 02:47:19.926
  Sep 11 02:47:19.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/11/23 02:47:19.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:47:19.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:47:19.979
  Sep 11 02:47:19.986: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 02:47:20.506312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:21.506502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:22.507628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:23.507969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:24.508865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:25.509266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:26.509496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:27.509639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:28.510765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:29.511190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:30.512052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:31.512372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:32.512366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:33.512567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:34.512918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:35.513242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:36.513713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:37.513840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:38.514754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:39.515223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:40.515882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:41.516306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:42.516889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:43.517007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:44.518081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:45.518198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:46.518829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:47.519700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:48.520783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:49.520940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:50.521068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:51.521340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:52.521424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:53.521692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:54.522526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:55.522719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:56.523329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:57.523388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:58.523519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:47:59.523817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:00.524609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:01.525132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:02.525397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:03.525686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:04.525772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:05.527192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:06.527919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:07.528176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:08.528709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:09.529446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:10.529793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:11.530701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:12.531792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:13.532054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:14.532527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:15.533105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:16.534016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:17.534741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:18.535864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:19.536295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:48:20.018: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 02:48:20.022: INFO: Starting informer...
  STEP: Starting pods... @ 09/11/23 02:48:20.022
  Sep 11 02:48:20.251: INFO: Pod1 is running on ip-172-31-3-111. Tainting Node
  E0911 02:48:20.537025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:21.537793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:48:22.486: INFO: Pod2 is running on ip-172-31-3-111. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/11/23 02:48:22.487
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 02:48:22.502
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/11/23 02:48:22.511
  E0911 02:48:22.538656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:23.538767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:24.538872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:25.539029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:26.539172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:27.539584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:48:28.148: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0911 02:48:28.539989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:29.540041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:30.540117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:31.540214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:32.540352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:33.540454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:34.541558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:35.541650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:36.542712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:37.543218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:38.543876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:39.543956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:40.544372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:41.544923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:42.545733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:43.546704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:44.546943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:45.547866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:46.548045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:47.548705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:48:48.193: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Sep 11 02:48:48.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 02:48:48.219
  STEP: Destroying namespace "taint-multiple-pods-5112" for this suite. @ 09/11/23 02:48:48.226
• [88.309 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 09/11/23 02:48:48.236
  Sep 11 02:48:48.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 02:48:48.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:48:48.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:48:48.277
  E0911 02:48:48.549569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:49.549663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:48:50.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-741" for this suite. @ 09/11/23 02:48:50.323
• [2.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 09/11/23 02:48:50.329
  Sep 11 02:48:50.329: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 02:48:50.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:48:50.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:48:50.352
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/11/23 02:48:50.395
  E0911 02:48:50.550656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:51.551193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:48:52.415
  Sep 11 02:48:52.420: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-e84b090a-2694-422e-859b-e69be180f499 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 02:48:52.435
  Sep 11 02:48:52.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7898" for this suite. @ 09/11/23 02:48:52.523
  E0911 02:48:52.552028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 09/11/23 02:48:52.561
  Sep 11 02:48:52.561: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 02:48:52.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:48:52.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:48:52.651
  E0911 02:48:53.552182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:54.552950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:55.553918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:56.553362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:48:56.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8338" for this suite. @ 09/11/23 02:48:56.716
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/11/23 02:48:56.728
  Sep 11 02:48:56.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 02:48:56.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:48:56.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:48:56.753
  E0911 02:48:57.553667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:48:58.554712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:48:58.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 02:48:58.782: INFO: Deleting pod "var-expansion-a8c4079d-18e3-4e30-b5cf-876c8b872826" in namespace "var-expansion-7569"
  Sep 11 02:48:58.789: INFO: Wait up to 5m0s for pod "var-expansion-a8c4079d-18e3-4e30-b5cf-876c8b872826" to be fully deleted
  E0911 02:48:59.554871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:00.555628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-7569" for this suite. @ 09/11/23 02:49:00.797
• [4.078 seconds]
------------------------------
S
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/11/23 02:49:00.806
  Sep 11 02:49:00.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename subjectreview @ 09/11/23 02:49:00.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:49:00.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:49:00.837
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4224" @ 09/11/23 02:49:00.843
  Sep 11 02:49:00.850: INFO: saUsername: "system:serviceaccount:subjectreview-4224:e2e"
  Sep 11 02:49:00.850: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4224"}
  Sep 11 02:49:00.850: INFO: saUID: "ad33930b-c49d-4a89-9c12-ccb9f72af0f1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4224:e2e" @ 09/11/23 02:49:00.85
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4224:e2e" @ 09/11/23 02:49:00.851
  Sep 11 02:49:00.853: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4224:e2e" api 'list' configmaps in "subjectreview-4224" namespace @ 09/11/23 02:49:00.853
  Sep 11 02:49:00.855: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4224:e2e" @ 09/11/23 02:49:00.855
  Sep 11 02:49:00.859: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Sep 11 02:49:00.860: INFO: LocalSubjectAccessReview has been verified
  Sep 11 02:49:00.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4224" for this suite. @ 09/11/23 02:49:00.868
• [0.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 09/11/23 02:49:00.879
  Sep 11 02:49:00.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 02:49:00.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:49:00.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:49:00.905
  Sep 11 02:49:00.933: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0911 02:49:01.555755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:02.555853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:03.556589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:04.557276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:05.557356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:49:05.938: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 02:49:05.938
  STEP: Scaling up "test-rs" replicaset  @ 09/11/23 02:49:05.938
  Sep 11 02:49:05.952: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/11/23 02:49:05.952
  Sep 11 02:49:05.962: INFO: observed ReplicaSet test-rs in namespace replicaset-2869 with ReadyReplicas 1, AvailableReplicas 1
  Sep 11 02:49:05.988: INFO: observed ReplicaSet test-rs in namespace replicaset-2869 with ReadyReplicas 1, AvailableReplicas 1
  Sep 11 02:49:06.021: INFO: observed ReplicaSet test-rs in namespace replicaset-2869 with ReadyReplicas 1, AvailableReplicas 1
  Sep 11 02:49:06.137: INFO: observed ReplicaSet test-rs in namespace replicaset-2869 with ReadyReplicas 1, AvailableReplicas 1
  E0911 02:49:06.557693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:49:07.298: INFO: observed ReplicaSet test-rs in namespace replicaset-2869 with ReadyReplicas 2, AvailableReplicas 2
  E0911 02:49:07.558635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:08.558941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:49:08.680: INFO: observed Replicaset test-rs in namespace replicaset-2869 with ReadyReplicas 3 found true
  Sep 11 02:49:08.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2869" for this suite. @ 09/11/23 02:49:08.687
• [7.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/11/23 02:49:08.699
  Sep 11 02:49:08.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 02:49:08.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:49:08.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:49:08.725
  STEP: Creating a cronjob @ 09/11/23 02:49:08.729
  STEP: Ensuring more than one job is running at a time @ 09/11/23 02:49:08.74
  E0911 02:49:09.559033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:10.559183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:11.559331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:12.559476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:13.559697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:14.560106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:15.560793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:16.560903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:17.561279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:18.561280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:19.562147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:20.562215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:21.563050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:22.563736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:23.563969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:24.564093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:25.564298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:26.564293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:27.564760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:28.564869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:29.566104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:30.566211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:31.568733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:32.567190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:33.567381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:34.568053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:35.568298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:36.568475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:37.569513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:38.569780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:39.569876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:40.570721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:41.570953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:42.571567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:43.571959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:44.572124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:45.572490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:46.573217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:47.573647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:48.573947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:49.574084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:50.574196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:51.576688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:52.576975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:53.577214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:54.577999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:55.578687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:56.578847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:57.579172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:58.579359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:49:59.579995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:00.580107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:01.580269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:02.580352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:03.580613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:04.580768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:05.580887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:06.581051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:07.581575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:08.582187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:09.582691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:10.582925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:11.583360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:12.583895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:13.584755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:14.585669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:15.586692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:16.586867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:17.587554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:18.587706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:19.588059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:20.588235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:21.589143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:22.589268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:23.589308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:24.589443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:25.590507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:26.590898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:27.591666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:28.591941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:29.593009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:30.593600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:31.593678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:32.593872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:33.594008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:34.594723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:35.594866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:36.595049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:37.595199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:38.595372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:39.595441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:40.595681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:41.595873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:42.596285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:43.597272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:44.598219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:45.598958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:46.600114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:47.600913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:48.600946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:49.601843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:50.602680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:51.602850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:52.602973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:53.604028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:54.604279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:55.604493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:56.605387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:57.605572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:58.605657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:50:59.606775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:00.607131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/11/23 02:51:00.744
  STEP: Removing cronjob @ 09/11/23 02:51:00.75
  Sep 11 02:51:00.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6744" for this suite. @ 09/11/23 02:51:00.763
• [112.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 09/11/23 02:51:00.776
  Sep 11 02:51:00.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename ingress @ 09/11/23 02:51:00.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:51:00.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:51:00.865
  STEP: getting /apis @ 09/11/23 02:51:00.87
  STEP: getting /apis/networking.k8s.io @ 09/11/23 02:51:00.879
  STEP: getting /apis/networking.k8s.iov1 @ 09/11/23 02:51:00.883
  STEP: creating @ 09/11/23 02:51:00.886
  STEP: getting @ 09/11/23 02:51:00.92
  STEP: listing @ 09/11/23 02:51:00.923
  STEP: watching @ 09/11/23 02:51:00.929
  Sep 11 02:51:00.929: INFO: starting watch
  STEP: cluster-wide listing @ 09/11/23 02:51:00.931
  STEP: cluster-wide watching @ 09/11/23 02:51:00.935
  Sep 11 02:51:00.935: INFO: starting watch
  STEP: patching @ 09/11/23 02:51:00.937
  STEP: updating @ 09/11/23 02:51:00.947
  Sep 11 02:51:00.958: INFO: waiting for watch events with expected annotations
  Sep 11 02:51:00.958: INFO: missing expected annotations, waiting: map[string]string(nil)
  Sep 11 02:51:00.959: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/11/23 02:51:00.959
  STEP: updating /status @ 09/11/23 02:51:00.966
  STEP: get /status @ 09/11/23 02:51:01.005
  STEP: deleting @ 09/11/23 02:51:01.01
  STEP: deleting a collection @ 09/11/23 02:51:01.046
  Sep 11 02:51:01.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6455" for this suite. @ 09/11/23 02:51:01.082
• [0.314 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/11/23 02:51:01.091
  Sep 11 02:51:01.091: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 02:51:01.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:51:01.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:51:01.115
  STEP: Creating configMap with name configmap-test-upd-6605eea8-20e5-4218-b92e-bb71330fca20 @ 09/11/23 02:51:01.124
  STEP: Creating the pod @ 09/11/23 02:51:01.129
  E0911 02:51:01.607926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:02.608069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/11/23 02:51:03.146
  STEP: Waiting for pod with binary data @ 09/11/23 02:51:03.158
  Sep 11 02:51:03.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2914" for this suite. @ 09/11/23 02:51:03.171
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 09/11/23 02:51:03.182
  Sep 11 02:51:03.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 02:51:03.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:51:03.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:51:03.211
  STEP: Create a ReplicaSet @ 09/11/23 02:51:03.216
  STEP: Verify that the required pods have come up @ 09/11/23 02:51:03.224
  Sep 11 02:51:03.236: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0911 02:51:03.609083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:04.609615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:05.610697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:06.611281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:07.611533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:51:08.243: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/11/23 02:51:08.243
  Sep 11 02:51:08.247: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/11/23 02:51:08.247
  STEP: DeleteCollection of the ReplicaSets @ 09/11/23 02:51:08.252
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/11/23 02:51:08.266
  Sep 11 02:51:08.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6220" for this suite. @ 09/11/23 02:51:08.281
• [5.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/11/23 02:51:08.323
  Sep 11 02:51:08.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 02:51:08.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:51:08.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:51:08.385
  STEP: creating a Deployment @ 09/11/23 02:51:08.399
  Sep 11 02:51:08.399: INFO: Creating simple deployment test-deployment-2qbp6
  Sep 11 02:51:08.435: INFO: new replicaset for deployment "test-deployment-2qbp6" is yet to be created
  E0911 02:51:08.613972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:09.613911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/11/23 02:51:10.448
  Sep 11 02:51:10.453: INFO: Deployment test-deployment-2qbp6 has Conditions: [{Available True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2qbp6-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/11/23 02:51:10.453
  Sep 11 02:51:10.463: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 51, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 51, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 51, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 51, 8, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-2qbp6-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/11/23 02:51:10.463
  Sep 11 02:51:10.466: INFO: Observed &Deployment event: ADDED
  Sep 11 02:51:10.466: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2qbp6-5d576bd769"}
  Sep 11 02:51:10.466: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.466: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2qbp6-5d576bd769"}
  Sep 11 02:51:10.467: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 11 02:51:10.467: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.467: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 11 02:51:10.467: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-2qbp6-5d576bd769" is progressing.}
  Sep 11 02:51:10.467: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.468: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 11 02:51:10.468: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2qbp6-5d576bd769" has successfully progressed.}
  Sep 11 02:51:10.468: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.468: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 11 02:51:10.468: INFO: Observed Deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2qbp6-5d576bd769" has successfully progressed.}
  Sep 11 02:51:10.468: INFO: Found Deployment test-deployment-2qbp6 in namespace deployment-9643 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 02:51:10.468: INFO: Deployment test-deployment-2qbp6 has an updated status
  STEP: patching the Statefulset Status @ 09/11/23 02:51:10.468
  Sep 11 02:51:10.468: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 11 02:51:10.476: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/11/23 02:51:10.477
  Sep 11 02:51:10.480: INFO: Observed &Deployment event: ADDED
  Sep 11 02:51:10.480: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2qbp6-5d576bd769"}
  Sep 11 02:51:10.480: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.480: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2qbp6-5d576bd769"}
  Sep 11 02:51:10.481: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 11 02:51:10.481: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.481: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 11 02:51:10.481: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:08 +0000 UTC 2023-09-11 02:51:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-2qbp6-5d576bd769" is progressing.}
  Sep 11 02:51:10.481: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.482: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 11 02:51:10.482: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2qbp6-5d576bd769" has successfully progressed.}
  Sep 11 02:51:10.482: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.482: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 11 02:51:10.483: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-11 02:51:09 +0000 UTC 2023-09-11 02:51:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2qbp6-5d576bd769" has successfully progressed.}
  Sep 11 02:51:10.483: INFO: Observed deployment test-deployment-2qbp6 in namespace deployment-9643 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 02:51:10.483: INFO: Observed &Deployment event: MODIFIED
  Sep 11 02:51:10.484: INFO: Found deployment test-deployment-2qbp6 in namespace deployment-9643 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep 11 02:51:10.484: INFO: Deployment test-deployment-2qbp6 has a patched status
  Sep 11 02:51:10.490: INFO: Deployment "test-deployment-2qbp6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-2qbp6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9643",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1db2490-3f7a-4272-a0ca-ef316c921945",
      ResourceVersion: (string) (len=5) "33268",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 02:51:10.495: INFO: New ReplicaSet "test-deployment-2qbp6-5d576bd769" of Deployment "test-deployment-2qbp6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-2qbp6-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9643",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e20fefb-b664-4302-ad28-facb54f79026",
      ResourceVersion: (string) (len=5) "33262",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-2qbp6",
          UID: (types.UID) (len=36) "c1db2490-3f7a-4272-a0ca-ef316c921945",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 63 31 64  |k:{\"uid\":\"c1d|
              00000120  62 32 34 39 30 2d 33 66  37 61 2d 34 32 37 32 2d  |b2490-3f7a-4272-|
              00000130  61 30 63 61 2d 65 66 33  31 36 63 39 32 31 39 34  |a0ca-ef316c92194|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 02:51:10.503: INFO: Pod "test-deployment-2qbp6-5d576bd769-hfm4z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-2qbp6-5d576bd769-hfm4z",
      GenerateName: (string) (len=33) "test-deployment-2qbp6-5d576bd769-",
      Namespace: (string) (len=15) "deployment-9643",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "731a6197-bf3e-421d-a8d7-285b5524bc54",
      ResourceVersion: (string) (len=5) "33261",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-2qbp6-5d576bd769",
          UID: (types.UID) (len=36) "1e20fefb-b664-4302-ad28-facb54f79026",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 65 32 30 66 65 66  62 2d 62 36 36 34 2d 34  |"1e20fefb-b664-4|
              000000a0  33 30 32 2d 61 64 32 38  2d 66 61 63 62 35 34 66  |302-ad28-facb54f|
              000000b0  37 39 30 32 36 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |79026\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  31 33 38 5c 22 7d 22 3a  |10.42.3.138\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bphgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bphgd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829997469,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://370a06cbdcc2daedfde5c913043355eea84f14dc8313d2357f7f744fb68019cc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 02:51:10.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9643" for this suite. @ 09/11/23 02:51:10.514
• [2.199 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/11/23 02:51:10.522
  Sep 11 02:51:10.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename taint-single-pod @ 09/11/23 02:51:10.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:51:10.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:51:10.549
  Sep 11 02:51:10.554: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 02:51:10.614493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:11.614589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:12.615014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:13.615198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:14.615596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:15.615915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:16.616896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:17.617245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:18.617997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:19.618937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:20.619048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:21.619285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:22.620080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:23.620174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:24.620744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:25.620776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:26.621606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:27.621724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:28.622772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:29.623159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:30.624170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:31.624267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:32.624529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:33.625317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:34.625807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:35.626810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:36.626800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:37.627047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:38.628142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:39.628309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:40.628564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:41.628663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:42.629152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:43.629705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:44.630265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:45.630467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:46.631310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:47.630766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:48.631211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:49.631621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:50.631904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:51.632190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:52.632630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:53.633623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:54.633954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:55.634894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:56.635126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:57.635415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:58.635657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:51:59.636352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:00.637054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:01.637580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:02.637881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:03.638710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:04.639473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:05.639586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:06.639926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:07.640186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:08.641435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:09.642228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:52:10.582: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 02:52:10.586: INFO: Starting informer...
  STEP: Starting pod... @ 09/11/23 02:52:10.586
  E0911 02:52:10.643126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:52:10.807: INFO: Pod is running on ip-172-31-3-111. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/11/23 02:52:10.807
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 02:52:10.824
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/11/23 02:52:10.839
  Sep 11 02:52:10.840: INFO: Pod wasn't evicted. Proceeding
  Sep 11 02:52:10.840: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 02:52:10.87
  STEP: Waiting some time to make sure that toleration time passed. @ 09/11/23 02:52:10.889
  E0911 02:52:11.643280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:12.643392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:13.643691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:14.643817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:15.643923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:16.644300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:17.644478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:18.644618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:19.644734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:20.644845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:21.645049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:22.645757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:23.646808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:24.646914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:25.646989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:26.647177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:27.647192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:28.647326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:29.647432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:30.647569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:31.647659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:32.648223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:33.648024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:34.648137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:35.648274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:36.648400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:37.648638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:38.648835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:39.648967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:40.649100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:41.649414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:42.649647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:43.650673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:44.650830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:45.651904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:46.651963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:47.652579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:48.652812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:49.653161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:50.653630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:51.653766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:52.653893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:53.654003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:54.654141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:55.654299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:56.654429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:57.654565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:58.654890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:52:59.655218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:00.655342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:01.655541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:02.655688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:03.655922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:04.656521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:05.656749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:06.656983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:07.657273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:08.657399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:09.657618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:10.657833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:11.657888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:12.658013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:13.658261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:14.659236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:15.659407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:16.659532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:17.659762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:18.660804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:19.661108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:20.661563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:21.661640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:22.661961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:23.662699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:24.662932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:25.663237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:53:25.890: INFO: Pod wasn't evicted. Test successful
  Sep 11 02:53:25.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5349" for this suite. @ 09/11/23 02:53:25.896
• [135.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/11/23 02:53:25.906
  Sep 11 02:53:25.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename hostport @ 09/11/23 02:53:25.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:53:25.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:53:25.939
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/11/23 02:53:25.949
  E0911 02:53:26.663882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:27.664006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.3.111 on the node which pod1 resides and expect scheduled @ 09/11/23 02:53:27.97
  E0911 02:53:28.664793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:29.665209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.3.111 but use UDP protocol on the node which pod2 resides @ 09/11/23 02:53:29.982
  E0911 02:53:30.665622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:31.665891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:32.666097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:33.666234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/11/23 02:53:34.017
  Sep 11 02:53:34.017: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.3.111 http://127.0.0.1:54323/hostname] Namespace:hostport-2194 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:53:34.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:53:34.018: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:53:34.018: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-2194/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.3.111+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.111, port: 54323 @ 09/11/23 02:53:34.088
  Sep 11 02:53:34.088: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.3.111:54323/hostname] Namespace:hostport-2194 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:53:34.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:53:34.090: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:53:34.090: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-2194/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.3.111%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.111, port: 54323 UDP @ 09/11/23 02:53:34.172
  Sep 11 02:53:34.172: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.3.111 54323] Namespace:hostport-2194 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:53:34.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:53:34.173: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:53:34.173: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-2194/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.3.111+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0911 02:53:34.666747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:35.669162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:36.668877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:37.668957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:38.670041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:53:39.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2194" for this suite. @ 09/11/23 02:53:39.251
• [13.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/11/23 02:53:39.261
  Sep 11 02:53:39.261: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 02:53:39.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:53:39.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:53:39.291
  STEP: Creating configMap with name cm-test-opt-del-d74c3351-fb13-4ab8-863c-4d0c22200b72 @ 09/11/23 02:53:39.302
  STEP: Creating configMap with name cm-test-opt-upd-2ae63e4e-1d43-464e-9ae3-b45f2acf1d6e @ 09/11/23 02:53:39.31
  STEP: Creating the pod @ 09/11/23 02:53:39.324
  E0911 02:53:39.670893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:40.671230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d74c3351-fb13-4ab8-863c-4d0c22200b72 @ 09/11/23 02:53:41.381
  STEP: Updating configmap cm-test-opt-upd-2ae63e4e-1d43-464e-9ae3-b45f2acf1d6e @ 09/11/23 02:53:41.387
  STEP: Creating configMap with name cm-test-opt-create-3b22964c-d976-4c5b-93e1-d25cf9f8065a @ 09/11/23 02:53:41.394
  STEP: waiting to observe update in volume @ 09/11/23 02:53:41.4
  E0911 02:53:41.671905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:42.672030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:43.672844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:44.672964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:45.673673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:46.674165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:47.674481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:48.674948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:49.675981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:50.676502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:51.677215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:52.677747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:53.678041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:54.678559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:55.678691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:56.678832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:57.679471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:58.679737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:53:59.679940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:00.680258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:01.680238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:02.680335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:03.680878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:04.681570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:05.682434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:06.683698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:07.684258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:08.684350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:09.684482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:10.684566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:11.684698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:12.684852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:13.685409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:14.685604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:15.686304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:16.686390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:17.687504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:18.687701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:19.688448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:20.688560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:21.689322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:22.689667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:23.690104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:24.690241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:25.690903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:26.691432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:27.691491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:28.691549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:29.692075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:30.692205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:31.692481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:32.692614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:33.693143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:34.693646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:35.694182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:36.694291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:37.694605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:38.694870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:39.695662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:40.696287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:41.696600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:42.696733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:43.697231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:44.697664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:45.698679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:46.698804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:47.699072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:48.699130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:49.699242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:50.699989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:51.700220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:54:51.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3961" for this suite. @ 09/11/23 02:54:51.732
• [72.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/11/23 02:54:51.74
  Sep 11 02:54:51.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 02:54:51.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:54:51.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:54:51.77
  STEP: creating the pod @ 09/11/23 02:54:51.775
  STEP: waiting for pod running @ 09/11/23 02:54:51.792
  E0911 02:54:52.700667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:53.700983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/11/23 02:54:53.805
  Sep 11 02:54:53.808: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8432 PodName:var-expansion-df351d9b-59bb-4942-ae1b-953b87f84e97 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:54:53.809: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:54:53.809: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:54:53.809: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-8432/pods/var-expansion-df351d9b-59bb-4942-ae1b-953b87f84e97/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/11/23 02:54:53.88
  Sep 11 02:54:53.884: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8432 PodName:var-expansion-df351d9b-59bb-4942-ae1b-953b87f84e97 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 02:54:53.884: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 02:54:53.885: INFO: ExecWithOptions: Clientset creation
  Sep 11 02:54:53.885: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-8432/pods/var-expansion-df351d9b-59bb-4942-ae1b-953b87f84e97/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/11/23 02:54:53.97
  Sep 11 02:54:54.484: INFO: Successfully updated pod "var-expansion-df351d9b-59bb-4942-ae1b-953b87f84e97"
  STEP: waiting for annotated pod running @ 09/11/23 02:54:54.484
  STEP: deleting the pod gracefully @ 09/11/23 02:54:54.488
  Sep 11 02:54:54.488: INFO: Deleting pod "var-expansion-df351d9b-59bb-4942-ae1b-953b87f84e97" in namespace "var-expansion-8432"
  Sep 11 02:54:54.499: INFO: Wait up to 5m0s for pod "var-expansion-df351d9b-59bb-4942-ae1b-953b87f84e97" to be fully deleted
  E0911 02:54:54.701180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:55.701510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:56.701854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:57.702227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:58.702603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:54:59.702897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:00.703994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:01.704151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:02.704673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:03.704805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:04.705893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:05.706705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:06.707763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:07.707887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:08.708364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:09.708981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:10.709660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:11.710015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:12.710097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:13.710235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:14.710342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:15.710428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:16.710732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:17.710912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:18.711651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:19.711728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:20.712727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:21.712844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:22.713899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:23.715322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:24.716555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:25.716681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:26.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8432" for this suite. @ 09/11/23 02:55:26.587
• [34.853 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 09/11/23 02:55:26.595
  Sep 11 02:55:26.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:55:26.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:55:26.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:55:26.617
  STEP: Creating a pod to test downward api env vars @ 09/11/23 02:55:26.621
  E0911 02:55:26.717029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:27.717154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:28.717546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:29.717774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:55:30.643
  Sep 11 02:55:30.647: INFO: Trying to get logs from node ip-172-31-3-111 pod downward-api-76b7b470-adac-488a-ba36-e57f310df8fd container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 02:55:30.665
  Sep 11 02:55:30.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6595" for this suite. @ 09/11/23 02:55:30.692
• [4.106 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 09/11/23 02:55:30.702
  Sep 11 02:55:30.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sysctl @ 09/11/23 02:55:30.703
  E0911 02:55:30.718527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:55:30.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:55:30.726
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/11/23 02:55:30.731
  Sep 11 02:55:30.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6641" for this suite. @ 09/11/23 02:55:30.744
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/11/23 02:55:30.756
  Sep 11 02:55:30.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 02:55:30.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:55:30.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:55:30.832
  STEP: Creating pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271 @ 09/11/23 02:55:30.837
  E0911 02:55:31.719026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:32.719401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 02:55:32.853
  Sep 11 02:55:32.857: INFO: Initial restart count of pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 is 0
  Sep 11 02:55:32.861: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:33.719436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:34.719555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:34.865: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:35.719696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:36.719791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:36.869: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:37.719865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:38.719950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:38.873: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:39.719997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:40.720108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:40.878: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:41.720835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:42.720947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:42.883: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:43.721101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:44.721696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:44.888: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:45.722726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:46.723055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:46.893: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:47.723179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:48.723373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:48.898: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:49.723466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:50.723680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:50.904: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:51.724622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:52.724972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:52.907: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  Sep 11 02:55:52.908: INFO: Restart count of pod container-probe-6271/liveness-18aa0229-9563-4891-a05e-202d46e42a31 is now 1 (20.050923997s elapsed)
  E0911 02:55:53.725615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:54.725721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:54.912: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:55.726124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:56.726718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:56.916: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:57.727413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:55:58.728294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:55:58.921: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:55:59.728648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:00.728898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:00.934: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:01.729729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:02.730883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:02.939: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:03.731065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:04.731348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:04.945: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:05.731772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:06.731926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:06.952: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:07.731981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:08.732136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:08.957: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:09.732268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:10.732460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:10.962: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:11.732557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:12.732874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:12.967: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  Sep 11 02:56:12.967: INFO: Restart count of pod container-probe-6271/liveness-18aa0229-9563-4891-a05e-202d46e42a31 is now 2 (40.110132038s elapsed)
  E0911 02:56:13.733016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:14.733657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:14.973: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:15.733709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:16.733822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:16.978: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:17.734011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:18.734716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:18.982: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:19.734820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:20.734950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:20.987: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:21.735143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:22.735439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:22.992: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:23.736225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:24.736505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:24.996: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:25.736732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:26.736821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:27.001: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:27.737692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:28.738016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:29.009: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:29.738906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:30.739052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:31.014: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:31.739156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:32.739701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:33.019: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  Sep 11 02:56:33.020: INFO: Restart count of pod container-probe-6271/liveness-18aa0229-9563-4891-a05e-202d46e42a31 is now 3 (1m0.162918432s elapsed)
  E0911 02:56:33.740228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:34.740343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:35.034: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:35.741010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:36.741409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:37.039: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:37.741570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:38.741715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:39.043: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:39.742713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:40.742923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:41.048: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:41.743931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:42.744055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:43.053: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:43.744967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:44.745993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:45.058: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:45.746651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:46.747007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:47.064: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:47.746985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:48.747114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:49.068: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:49.747137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:50.747562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:51.074: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:51.747955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:52.748137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:53.077: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  Sep 11 02:56:53.078: INFO: Restart count of pod container-probe-6271/liveness-18aa0229-9563-4891-a05e-202d46e42a31 is now 4 (1m20.22088819s elapsed)
  E0911 02:56:53.748702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:54.749129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:55.081: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:55.749623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:56.749983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:57.086: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:57.750518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:56:58.750998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:56:59.090: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:56:59.751999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:00.752400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:01.095: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:01.752586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:02.752730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:03.100: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:03.752850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:04.753211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:05.105: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:05.754036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:06.754285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:07.109: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:07.755295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:08.755497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:09.113: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:09.756436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:10.756997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:11.118: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:11.757668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:12.757757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:13.124: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:13.758815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:14.758909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:15.128: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:15.759034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:16.759113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:17.133: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:17.759725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:18.760071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:19.138: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:19.760138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:20.760281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:21.143: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:21.760758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:22.760882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:23.148: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:23.760983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:24.761112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:25.154: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:25.762011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:26.762161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:27.159: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:27.762727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:28.762833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:29.162: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:29.763558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:30.763778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:31.168: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:31.764371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:32.764948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:33.174: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:33.765275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:34.766015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:35.179: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:35.766137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:36.766752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:37.185: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:37.767233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:38.767547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:39.189: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:39.768413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:40.768764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:41.195: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:41.769650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:42.769821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:43.198: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:43.769884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:44.770866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:45.202: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:45.771516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:46.771630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:47.209: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:47.771737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:48.771924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:49.213: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:49.772269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:50.772504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:51.218: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  E0911 02:57:51.772712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:52.773757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:53.222: INFO: Get pod liveness-18aa0229-9563-4891-a05e-202d46e42a31 in namespace container-probe-6271
  Sep 11 02:57:53.222: INFO: Restart count of pod container-probe-6271/liveness-18aa0229-9563-4891-a05e-202d46e42a31 is now 5 (2m20.365090999s elapsed)
  Sep 11 02:57:53.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 02:57:53.226
  STEP: Destroying namespace "container-probe-6271" for this suite. @ 09/11/23 02:57:53.241
• [142.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 09/11/23 02:57:53.249
  Sep 11 02:57:53.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 02:57:53.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:57:53.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:57:53.279
  E0911 02:57:53.773976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:54.774997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:55.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5482" for this suite. @ 09/11/23 02:57:55.321
• [2.079 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/11/23 02:57:55.328
  Sep 11 02:57:55.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename init-container @ 09/11/23 02:57:55.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:57:55.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:57:55.355
  STEP: creating the pod @ 09/11/23 02:57:55.361
  Sep 11 02:57:55.361: INFO: PodSpec: initContainers in spec.initContainers
  E0911 02:57:55.775337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:56.775499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:57.775780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:57:58.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2188" for this suite. @ 09/11/23 02:57:58.363
• [3.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/11/23 02:57:58.378
  Sep 11 02:57:58.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename disruption @ 09/11/23 02:57:58.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:57:58.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:57:58.423
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:57:58.439
  E0911 02:57:58.776652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:57:59.777590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/11/23 02:58:00.451
  STEP: Waiting for all pods to be running @ 09/11/23 02:58:00.465
  Sep 11 02:58:00.473: INFO: running pods: 0 < 1
  E0911 02:58:00.777696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:01.778726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/11/23 02:58:02.477
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:58:02.49
  STEP: Patching PodDisruptionBudget status @ 09/11/23 02:58:02.499
  STEP: Waiting for the pdb to be processed @ 09/11/23 02:58:02.51
  Sep 11 02:58:02.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4185" for this suite. @ 09/11/23 02:58:02.52
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 09/11/23 02:58:02.531
  Sep 11 02:58:02.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 02:58:02.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:02.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:02.556
  STEP: Creating secret with name secret-test-04bfa5ca-a715-4c5b-bb79-d79ce536133e @ 09/11/23 02:58:02.561
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:58:02.569
  E0911 02:58:02.779238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:03.779585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:04.780463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:05.780590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:58:06.593
  Sep 11 02:58:06.596: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-secrets-b0e52058-6119-4a62-92d0-94fae3794733 container secret-env-test: <nil>
  STEP: delete the pod @ 09/11/23 02:58:06.608
  Sep 11 02:58:06.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2963" for this suite. @ 09/11/23 02:58:06.63
• [4.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/11/23 02:58:06.638
  Sep 11 02:58:06.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename watch @ 09/11/23 02:58:06.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:06.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:06.659
  STEP: getting a starting resourceVersion @ 09/11/23 02:58:06.663
  STEP: starting a background goroutine to produce watch events @ 09/11/23 02:58:06.669
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/11/23 02:58:06.669
  E0911 02:58:06.780890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:07.781742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:08.781855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:09.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3293" for this suite. @ 09/11/23 02:58:09.496
• [2.913 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/11/23 02:58:09.556
  Sep 11 02:58:09.556: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename subpath @ 09/11/23 02:58:09.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:09.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:09.587
  STEP: Setting up data @ 09/11/23 02:58:09.593
  STEP: Creating pod pod-subpath-test-configmap-5s7j @ 09/11/23 02:58:09.608
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 02:58:09.608
  E0911 02:58:09.781907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:10.782051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:11.782724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:12.783669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:13.783844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:14.784459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:15.785044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:16.785721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:17.786736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:18.787327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:19.788120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:20.788273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:21.789062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:22.789870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:23.790071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:24.790122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:25.790745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:26.790881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:27.791703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:28.792141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:29.792245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:30.792262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:58:31.676
  Sep 11 02:58:31.680: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-subpath-test-configmap-5s7j container test-container-subpath-configmap-5s7j: <nil>
  STEP: delete the pod @ 09/11/23 02:58:31.686
  STEP: Deleting pod pod-subpath-test-configmap-5s7j @ 09/11/23 02:58:31.706
  Sep 11 02:58:31.706: INFO: Deleting pod "pod-subpath-test-configmap-5s7j" in namespace "subpath-3702"
  Sep 11 02:58:31.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3702" for this suite. @ 09/11/23 02:58:31.717
• [22.168 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/11/23 02:58:31.727
  Sep 11 02:58:31.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 02:58:31.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:31.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:31.753
  Sep 11 02:58:31.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: creating the pod @ 09/11/23 02:58:31.759
  STEP: submitting the pod to kubernetes @ 09/11/23 02:58:31.759
  E0911 02:58:31.793149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:32.793310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:33.793921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:33.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3556" for this suite. @ 09/11/23 02:58:33.873
• [2.154 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 09/11/23 02:58:33.881
  Sep 11 02:58:33.881: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:58:33.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:33.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:33.91
  STEP: Creating a pod to test downward api env vars @ 09/11/23 02:58:33.916
  E0911 02:58:34.794044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:35.794739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:36.794760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:37.795660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:58:37.941
  Sep 11 02:58:37.945: INFO: Trying to get logs from node ip-172-31-3-111 pod downward-api-7f37480f-235e-42e7-b4c4-7b7eb70d006e container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 02:58:37.95
  Sep 11 02:58:37.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3918" for this suite. @ 09/11/23 02:58:37.971
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/11/23 02:58:37.981
  Sep 11 02:58:37.981: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 02:58:37.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:38.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:38.016
  STEP: Creating secret with name secret-test-798b28d0-ae95-4897-bc03-81adddf8c16b @ 09/11/23 02:58:38.05
  STEP: Creating a pod to test consume secrets @ 09/11/23 02:58:38.055
  E0911 02:58:38.796407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:39.797019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:40.797123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:41.797228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:58:42.076
  Sep 11 02:58:42.079: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-secrets-6148b379-3e06-469b-ad01-6b1fddd9d9cc container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 02:58:42.087
  Sep 11 02:58:42.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5897" for this suite. @ 09/11/23 02:58:42.11
  STEP: Destroying namespace "secret-namespace-8674" for this suite. @ 09/11/23 02:58:42.118
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/11/23 02:58:42.131
  Sep 11 02:58:42.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename init-container @ 09/11/23 02:58:42.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:42.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:42.163
  STEP: creating the pod @ 09/11/23 02:58:42.167
  Sep 11 02:58:42.167: INFO: PodSpec: initContainers in spec.initContainers
  E0911 02:58:42.797671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:43.798609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:44.799421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:45.800447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:46.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5796" for this suite. @ 09/11/23 02:58:46.562
• [4.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/11/23 02:58:46.584
  Sep 11 02:58:46.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 02:58:46.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:58:46.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:58:46.614
  Sep 11 02:58:46.654: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0911 02:58:46.800971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:47.801131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:48.801217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:49.801622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:50.801805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:51.663: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 02:58:51.663
  Sep 11 02:58:51.663: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0911 02:58:51.802752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:52.802798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:53.668: INFO: Creating deployment "test-rollover-deployment"
  Sep 11 02:58:53.680: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0911 02:58:53.803671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:54.804639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:55.688: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep 11 02:58:55.697: INFO: Ensure that both replica sets have 1 created replica
  Sep 11 02:58:55.707: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep 11 02:58:55.722: INFO: Updating deployment test-rollover-deployment
  Sep 11 02:58:55.722: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0911 02:58:55.805180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:56.805263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:57.731: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep 11 02:58:57.738: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep 11 02:58:57.745: INFO: all replica sets need to contain the pod-template-hash label
  Sep 11 02:58:57.745: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 02:58:57.805628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:58:58.805653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:58:59.755: INFO: all replica sets need to contain the pod-template-hash label
  Sep 11 02:58:59.755: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 02:58:59.811567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:00.811767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:59:01.752: INFO: all replica sets need to contain the pod-template-hash label
  Sep 11 02:59:01.752: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 02:59:01.812649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:02.813696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:59:03.752: INFO: all replica sets need to contain the pod-template-hash label
  Sep 11 02:59:03.752: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 02:59:03.814046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:04.814496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:59:05.755: INFO: all replica sets need to contain the pod-template-hash label
  Sep 11 02:59:05.755: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 2, 58, 56, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 2, 58, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 02:59:05.815321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:06.815592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:59:07.756: INFO: 
  Sep 11 02:59:07.757: INFO: Ensure that both old replica sets have no replicas
  Sep 11 02:59:07.770: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fc795d5-64cd-42e8-b395-90f18b55d166",
      ResourceVersion: (string) (len=5) "35728",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997933,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 02:59:07.784: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d38ea491-a551-41e6-b916-b1c1cf1c4ea9",
      ResourceVersion: (string) (len=5) "35718",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6fc795d5-64cd-42e8-b395-90f18b55d166",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 66 63 37 39 35  64 35 2d 36 34 63 64 2d  |\"6fc795d5-64cd-|
              00000120  34 32 65 38 2d 62 33 39  35 2d 39 30 66 31 38 62  |42e8-b395-90f18b|
              00000130  35 35 64 31 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |55d166\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 02:59:07.786: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep 11 02:59:07.787: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83b1677b-d6c6-4737-8d2f-7ba94fb68556",
      ResourceVersion: (string) (len=5) "35727",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6fc795d5-64cd-42e8-b395-90f18b55d166",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 66 63 37 39 35 64 35  2d 36 34 63 64 2d 34 32  |6fc795d5-64cd-42|
              000000c0  65 38 2d 62 33 39 35 2d  39 30 66 31 38 62 35 35  |e8-b395-90f18b55|
              000000d0  64 31 36 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |d166\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997946,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 02:59:07.789: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9957154f-331d-4bd8-8e78-3ff398e1d58f",
      ResourceVersion: (string) (len=5) "35670",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997933,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6fc795d5-64cd-42e8-b395-90f18b55d166",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 66 63 37 39 35  64 35 2d 36 34 63 64 2d  |\"6fc795d5-64cd-|
              00000120  34 32 65 38 2d 62 33 39  35 2d 39 30 66 31 38 62  |42e8-b395-90f18b|
              00000130  35 35 64 31 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |55d166\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 02:59:07.795: INFO: Pod "test-rollover-deployment-5d484bf7f9-wjcrm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-wjcrm",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-5902",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32ff3c88-657d-4ef0-803a-5e619cc17228",
      ResourceVersion: (string) (len=5) "35680",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "d38ea491-a551-41e6-b916-b1c1cf1c4ea9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 33  38 65 61 34 39 31 2d 61  |d\":\"d38ea491-a|
              00000090  35 35 31 2d 34 31 65 36  2d 62 39 31 36 2d 62 31  |551-41e6-b916-b1|
              000000a0  63 31 63 66 31 63 34 65  61 39 5c 22 7d 22 3a 7b  |c1cf1c4ea9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  31 34 32 5c 22 7d 22 3a  |10.42.3.142\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4wxq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4wxq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829997935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829997935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829997936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://a810b7ff373270721ba7f111a5dd7f90420cbd4571cd639cf4b36ca77bc08529",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 02:59:07.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5902" for this suite. @ 09/11/23 02:59:07.804
• [21.228 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 09/11/23 02:59:07.812
  Sep 11 02:59:07.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 02:59:07.814
  E0911 02:59:07.817090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:59:07.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:59:07.848
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/11/23 02:59:07.854
  E0911 02:59:08.817314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:09.817622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:10.817664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:11.818721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 02:59:11.885
  Sep 11 02:59:11.889: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-c96bdf06-5277-437e-ac79-5dfaad8abcde container test-container: <nil>
  STEP: delete the pod @ 09/11/23 02:59:11.899
  Sep 11 02:59:11.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2667" for this suite. @ 09/11/23 02:59:11.926
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/11/23 02:59:11.936
  Sep 11 02:59:11.936: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 02:59:11.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:59:11.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:59:11.976
  STEP: Creating the pod @ 09/11/23 02:59:11.984
  E0911 02:59:12.818793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:13.819645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:59:14.531: INFO: Successfully updated pod "labelsupdate9bf21546-47fd-4b30-adfc-db379ba5d224"
  E0911 02:59:14.819790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:15.820014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:16.820697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:17.820678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 02:59:18.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9037" for this suite. @ 09/11/23 02:59:18.563
• [6.634 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 09/11/23 02:59:18.571
  Sep 11 02:59:18.571: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename gc @ 09/11/23 02:59:18.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 02:59:18.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 02:59:18.608
  STEP: create the rc @ 09/11/23 02:59:18.621
  W0911 02:59:18.632178      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0911 02:59:18.822290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:19.823044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:20.828800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:21.828990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:22.829810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:23.829861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/11/23 02:59:24.731
  E0911 02:59:24.830901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 09/11/23 02:59:24.841
  E0911 02:59:25.831280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:26.831654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:27.832037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:28.832111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:29.832242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/11/23 02:59:29.848
  E0911 02:59:30.832411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:31.832555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:32.835448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:33.836166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:34.836740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:35.836847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:36.837139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:37.837271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:38.837389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:39.837766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:40.837854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:41.838112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:42.838291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:43.838333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:44.838838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:45.838965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:46.839119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:47.839248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:48.839366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:49.839688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:50.839700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:51.839943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:52.840256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:53.840433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:54.840502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:55.840758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:56.840796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:57.840921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:58.841056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 02:59:59.841186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/11/23 02:59:59.863
  W0911 02:59:59.868648      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 11 02:59:59.868: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 02:59:59.868: INFO: Deleting pod "simpletest.rc-2786h" in namespace "gc-8688"
  Sep 11 02:59:59.880: INFO: Deleting pod "simpletest.rc-2b5tq" in namespace "gc-8688"
  Sep 11 02:59:59.899: INFO: Deleting pod "simpletest.rc-2hq2v" in namespace "gc-8688"
  Sep 11 02:59:59.924: INFO: Deleting pod "simpletest.rc-2kkck" in namespace "gc-8688"
  Sep 11 02:59:59.961: INFO: Deleting pod "simpletest.rc-2l89z" in namespace "gc-8688"
  Sep 11 03:00:00.053: INFO: Deleting pod "simpletest.rc-2n5d5" in namespace "gc-8688"
  Sep 11 03:00:00.083: INFO: Deleting pod "simpletest.rc-2t9tw" in namespace "gc-8688"
  Sep 11 03:00:00.106: INFO: Deleting pod "simpletest.rc-2z4tm" in namespace "gc-8688"
  Sep 11 03:00:00.122: INFO: Deleting pod "simpletest.rc-4hbxx" in namespace "gc-8688"
  Sep 11 03:00:00.160: INFO: Deleting pod "simpletest.rc-4m7rc" in namespace "gc-8688"
  Sep 11 03:00:00.196: INFO: Deleting pod "simpletest.rc-5c4x8" in namespace "gc-8688"
  Sep 11 03:00:00.219: INFO: Deleting pod "simpletest.rc-5c724" in namespace "gc-8688"
  Sep 11 03:00:00.277: INFO: Deleting pod "simpletest.rc-5gtxv" in namespace "gc-8688"
  Sep 11 03:00:00.306: INFO: Deleting pod "simpletest.rc-674c2" in namespace "gc-8688"
  Sep 11 03:00:00.334: INFO: Deleting pod "simpletest.rc-6jz9n" in namespace "gc-8688"
  Sep 11 03:00:00.669: INFO: Deleting pod "simpletest.rc-6lxrn" in namespace "gc-8688"
  Sep 11 03:00:00.711: INFO: Deleting pod "simpletest.rc-6nq85" in namespace "gc-8688"
  E0911 03:00:00.841699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:00:00.873: INFO: Deleting pod "simpletest.rc-6t68c" in namespace "gc-8688"
  Sep 11 03:00:00.953: INFO: Deleting pod "simpletest.rc-74gwn" in namespace "gc-8688"
  Sep 11 03:00:01.002: INFO: Deleting pod "simpletest.rc-7j26f" in namespace "gc-8688"
  Sep 11 03:00:01.050: INFO: Deleting pod "simpletest.rc-7mzbh" in namespace "gc-8688"
  Sep 11 03:00:01.089: INFO: Deleting pod "simpletest.rc-826m2" in namespace "gc-8688"
  Sep 11 03:00:01.184: INFO: Deleting pod "simpletest.rc-8fn9m" in namespace "gc-8688"
  Sep 11 03:00:01.256: INFO: Deleting pod "simpletest.rc-8lkmx" in namespace "gc-8688"
  Sep 11 03:00:01.325: INFO: Deleting pod "simpletest.rc-8mr6k" in namespace "gc-8688"
  Sep 11 03:00:01.364: INFO: Deleting pod "simpletest.rc-9cgg2" in namespace "gc-8688"
  Sep 11 03:00:01.424: INFO: Deleting pod "simpletest.rc-9h9ls" in namespace "gc-8688"
  Sep 11 03:00:01.455: INFO: Deleting pod "simpletest.rc-b2brb" in namespace "gc-8688"
  Sep 11 03:00:01.546: INFO: Deleting pod "simpletest.rc-b8r7z" in namespace "gc-8688"
  Sep 11 03:00:01.599: INFO: Deleting pod "simpletest.rc-b9699" in namespace "gc-8688"
  Sep 11 03:00:01.642: INFO: Deleting pod "simpletest.rc-bbwpf" in namespace "gc-8688"
  Sep 11 03:00:01.696: INFO: Deleting pod "simpletest.rc-bg6ch" in namespace "gc-8688"
  Sep 11 03:00:01.741: INFO: Deleting pod "simpletest.rc-bp9qm" in namespace "gc-8688"
  Sep 11 03:00:01.795: INFO: Deleting pod "simpletest.rc-bxlpw" in namespace "gc-8688"
  E0911 03:00:01.842772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:00:01.873: INFO: Deleting pod "simpletest.rc-cg2jt" in namespace "gc-8688"
  Sep 11 03:00:01.960: INFO: Deleting pod "simpletest.rc-d5jz6" in namespace "gc-8688"
  Sep 11 03:00:02.030: INFO: Deleting pod "simpletest.rc-dllsp" in namespace "gc-8688"
  Sep 11 03:00:02.073: INFO: Deleting pod "simpletest.rc-f6s5w" in namespace "gc-8688"
  Sep 11 03:00:02.161: INFO: Deleting pod "simpletest.rc-fb6vl" in namespace "gc-8688"
  Sep 11 03:00:02.224: INFO: Deleting pod "simpletest.rc-fjscw" in namespace "gc-8688"
  Sep 11 03:00:02.272: INFO: Deleting pod "simpletest.rc-ggtvr" in namespace "gc-8688"
  Sep 11 03:00:02.303: INFO: Deleting pod "simpletest.rc-gtmj6" in namespace "gc-8688"
  Sep 11 03:00:02.361: INFO: Deleting pod "simpletest.rc-gxsqz" in namespace "gc-8688"
  Sep 11 03:00:02.393: INFO: Deleting pod "simpletest.rc-h6v2b" in namespace "gc-8688"
  Sep 11 03:00:02.434: INFO: Deleting pod "simpletest.rc-hsgpk" in namespace "gc-8688"
  Sep 11 03:00:02.492: INFO: Deleting pod "simpletest.rc-hznxq" in namespace "gc-8688"
  Sep 11 03:00:02.681: INFO: Deleting pod "simpletest.rc-j22gk" in namespace "gc-8688"
  Sep 11 03:00:02.831: INFO: Deleting pod "simpletest.rc-j5xxd" in namespace "gc-8688"
  E0911 03:00:02.843513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:00:02.935: INFO: Deleting pod "simpletest.rc-jcffg" in namespace "gc-8688"
  Sep 11 03:00:03.034: INFO: Deleting pod "simpletest.rc-jlndf" in namespace "gc-8688"
  Sep 11 03:00:03.209: INFO: Deleting pod "simpletest.rc-jvcvm" in namespace "gc-8688"
  Sep 11 03:00:03.262: INFO: Deleting pod "simpletest.rc-kscmf" in namespace "gc-8688"
  Sep 11 03:00:03.302: INFO: Deleting pod "simpletest.rc-kthpw" in namespace "gc-8688"
  Sep 11 03:00:03.374: INFO: Deleting pod "simpletest.rc-l4zs6" in namespace "gc-8688"
  Sep 11 03:00:03.452: INFO: Deleting pod "simpletest.rc-lw74j" in namespace "gc-8688"
  Sep 11 03:00:03.496: INFO: Deleting pod "simpletest.rc-lwwbn" in namespace "gc-8688"
  Sep 11 03:00:03.565: INFO: Deleting pod "simpletest.rc-lzdmw" in namespace "gc-8688"
  Sep 11 03:00:03.597: INFO: Deleting pod "simpletest.rc-m8l2m" in namespace "gc-8688"
  Sep 11 03:00:03.654: INFO: Deleting pod "simpletest.rc-mdfzr" in namespace "gc-8688"
  Sep 11 03:00:03.711: INFO: Deleting pod "simpletest.rc-mdgwr" in namespace "gc-8688"
  Sep 11 03:00:03.750: INFO: Deleting pod "simpletest.rc-mnsz9" in namespace "gc-8688"
  Sep 11 03:00:03.804: INFO: Deleting pod "simpletest.rc-mxssh" in namespace "gc-8688"
  E0911 03:00:03.843631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:00:03.845: INFO: Deleting pod "simpletest.rc-ndsjz" in namespace "gc-8688"
  Sep 11 03:00:03.877: INFO: Deleting pod "simpletest.rc-pht6p" in namespace "gc-8688"
  Sep 11 03:00:03.917: INFO: Deleting pod "simpletest.rc-prsn7" in namespace "gc-8688"
  Sep 11 03:00:03.970: INFO: Deleting pod "simpletest.rc-ptvdf" in namespace "gc-8688"
  Sep 11 03:00:04.056: INFO: Deleting pod "simpletest.rc-pv4g5" in namespace "gc-8688"
  Sep 11 03:00:04.095: INFO: Deleting pod "simpletest.rc-q2628" in namespace "gc-8688"
  Sep 11 03:00:04.139: INFO: Deleting pod "simpletest.rc-qjq7q" in namespace "gc-8688"
  Sep 11 03:00:04.193: INFO: Deleting pod "simpletest.rc-qln7v" in namespace "gc-8688"
  Sep 11 03:00:04.290: INFO: Deleting pod "simpletest.rc-qnd8v" in namespace "gc-8688"
  Sep 11 03:00:04.316: INFO: Deleting pod "simpletest.rc-qp6s8" in namespace "gc-8688"
  Sep 11 03:00:04.357: INFO: Deleting pod "simpletest.rc-qw8rz" in namespace "gc-8688"
  Sep 11 03:00:04.384: INFO: Deleting pod "simpletest.rc-qwjnb" in namespace "gc-8688"
  Sep 11 03:00:04.417: INFO: Deleting pod "simpletest.rc-r4fb7" in namespace "gc-8688"
  Sep 11 03:00:04.449: INFO: Deleting pod "simpletest.rc-r79zd" in namespace "gc-8688"
  Sep 11 03:00:04.474: INFO: Deleting pod "simpletest.rc-r8klc" in namespace "gc-8688"
  Sep 11 03:00:04.515: INFO: Deleting pod "simpletest.rc-rrgbf" in namespace "gc-8688"
  Sep 11 03:00:04.537: INFO: Deleting pod "simpletest.rc-s8752" in namespace "gc-8688"
  Sep 11 03:00:04.569: INFO: Deleting pod "simpletest.rc-sdkp5" in namespace "gc-8688"
  Sep 11 03:00:04.656: INFO: Deleting pod "simpletest.rc-sjnx8" in namespace "gc-8688"
  Sep 11 03:00:04.755: INFO: Deleting pod "simpletest.rc-snk78" in namespace "gc-8688"
  Sep 11 03:00:04.835: INFO: Deleting pod "simpletest.rc-t9cqd" in namespace "gc-8688"
  E0911 03:00:04.844590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:00:04.896: INFO: Deleting pod "simpletest.rc-twgjl" in namespace "gc-8688"
  Sep 11 03:00:04.955: INFO: Deleting pod "simpletest.rc-tx9g6" in namespace "gc-8688"
  Sep 11 03:00:04.996: INFO: Deleting pod "simpletest.rc-v5v6k" in namespace "gc-8688"
  Sep 11 03:00:05.083: INFO: Deleting pod "simpletest.rc-v6zjf" in namespace "gc-8688"
  Sep 11 03:00:05.164: INFO: Deleting pod "simpletest.rc-vr5nf" in namespace "gc-8688"
  Sep 11 03:00:05.268: INFO: Deleting pod "simpletest.rc-vs47r" in namespace "gc-8688"
  Sep 11 03:00:05.324: INFO: Deleting pod "simpletest.rc-vvzdb" in namespace "gc-8688"
  Sep 11 03:00:05.376: INFO: Deleting pod "simpletest.rc-w6vbt" in namespace "gc-8688"
  Sep 11 03:00:05.429: INFO: Deleting pod "simpletest.rc-wdvdt" in namespace "gc-8688"
  Sep 11 03:00:05.510: INFO: Deleting pod "simpletest.rc-wtr6f" in namespace "gc-8688"
  Sep 11 03:00:05.581: INFO: Deleting pod "simpletest.rc-xcrp5" in namespace "gc-8688"
  Sep 11 03:00:05.652: INFO: Deleting pod "simpletest.rc-xw9kx" in namespace "gc-8688"
  Sep 11 03:00:05.728: INFO: Deleting pod "simpletest.rc-z4fxp" in namespace "gc-8688"
  Sep 11 03:00:05.825: INFO: Deleting pod "simpletest.rc-zfvc6" in namespace "gc-8688"
  E0911 03:00:05.845005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:00:05.901: INFO: Deleting pod "simpletest.rc-zjt7f" in namespace "gc-8688"
  Sep 11 03:00:05.947: INFO: Deleting pod "simpletest.rc-zn4zs" in namespace "gc-8688"
  Sep 11 03:00:05.977: INFO: Deleting pod "simpletest.rc-zncbs" in namespace "gc-8688"
  Sep 11 03:00:06.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8688" for this suite. @ 09/11/23 03:00:06.037
• [47.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/11/23 03:00:06.118
  Sep 11 03:00:06.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 03:00:06.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:00:06.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:00:06.228
  STEP: Creating configMap with name configmap-test-volume-299f1053-fcf6-4765-ad6f-71b03bd4dfff @ 09/11/23 03:00:06.237
  STEP: Creating a pod to test consume configMaps @ 09/11/23 03:00:06.253
  E0911 03:00:06.845758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:07.845683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:00:08.281
  Sep 11 03:00:08.286: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-1fe2fba4-5c71-4905-9b7a-421c70daf869 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 03:00:08.294
  Sep 11 03:00:08.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6795" for this suite. @ 09/11/23 03:00:08.335
• [2.225 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 09/11/23 03:00:08.344
  Sep 11 03:00:08.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename job @ 09/11/23 03:00:08.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:00:08.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:00:08.369
  STEP: Creating a suspended job @ 09/11/23 03:00:08.379
  STEP: Patching the Job @ 09/11/23 03:00:08.385
  STEP: Watching for Job to be patched @ 09/11/23 03:00:08.411
  Sep 11 03:00:08.414: INFO: Event ADDED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf] and annotations: map[]
  Sep 11 03:00:08.414: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf] and annotations: map[]
  Sep 11 03:00:08.415: INFO: Event MODIFIED found for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[]
  STEP: Updating the job @ 09/11/23 03:00:08.415
  STEP: Watching for Job to be updated @ 09/11/23 03:00:08.44
  Sep 11 03:00:08.445: INFO: Event MODIFIED found for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:08.446: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/11/23 03:00:08.446
  Sep 11 03:00:08.450: INFO: Job: e2e-mvdvf as labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched]
  STEP: Waiting for job to complete @ 09/11/23 03:00:08.45
  E0911 03:00:08.846483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:09.846508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:10.847117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:11.847506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:12.847597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:13.847681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:14.848469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:15.848568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:16.849525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:17.849783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/11/23 03:00:18.455
  STEP: Watching for Job to be deleted @ 09/11/23 03:00:18.464
  Sep 11 03:00:18.467: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:18.467: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:18.468: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:18.468: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:18.468: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:18.468: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:18.468: INFO: Event MODIFIED observed for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  Sep 11 03:00:18.468: INFO: Event DELETED found for Job e2e-mvdvf in namespace job-3370 with labels: map[e2e-job-label:e2e-mvdvf e2e-mvdvf:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/11/23 03:00:18.468
  Sep 11 03:00:18.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3370" for this suite. @ 09/11/23 03:00:18.48
• [10.152 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 09/11/23 03:00:18.497
  Sep 11 03:00:18.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 03:00:18.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:00:18.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:00:18.548
  STEP: creating a ServiceAccount @ 09/11/23 03:00:18.553
  STEP: watching for the ServiceAccount to be added @ 09/11/23 03:00:18.566
  STEP: patching the ServiceAccount @ 09/11/23 03:00:18.571
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/11/23 03:00:18.581
  STEP: deleting the ServiceAccount @ 09/11/23 03:00:18.588
  Sep 11 03:00:18.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8514" for this suite. @ 09/11/23 03:00:18.614
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/11/23 03:00:18.627
  Sep 11 03:00:18.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 03:00:18.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:00:18.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:00:18.699
  E0911 03:00:18.850775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:19.851243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:20.851895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:21.852403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:22.853042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:23.853777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:24.853823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:25.854374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:26.854545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:27.854741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:28.855105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:29.855631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:30.856000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:31.856567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:32.857449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:33.857636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:34.858022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:35.858197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:36.859091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:37.859768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:38.860022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:39.860276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:40.860680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:41.861005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:42.861612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:43.862781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:44.863065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:45.863933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:46.864802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:47.865486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:48.866194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:49.867001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:50.867091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:51.867294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:52.867420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:53.867975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:54.868142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:55.869060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:56.869218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:57.869664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:58.869892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:00:59.870709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:00.871242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:01.872346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:02.873033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:03.873197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:04.873312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:05.873711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:06.874557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:07.875089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:08.877756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:09.881489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:10.878076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:11.879505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:12.879457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:13.879501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:14.879608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:15.879824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:16.880258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:17.880279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:18.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5269" for this suite. @ 09/11/23 03:01:18.722
• [60.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 09/11/23 03:01:18.73
  Sep 11 03:01:18.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 03:01:18.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:18.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:18.767
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/11/23 03:01:18.772
  E0911 03:01:18.881164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:19.881326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/11/23 03:01:20.798
  STEP: Then the orphan pod is adopted @ 09/11/23 03:01:20.804
  E0911 03:01:20.882314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/11/23 03:01:21.819
  Sep 11 03:01:21.827: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/11/23 03:01:21.851
  E0911 03:01:21.883404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:22.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 03:01:22.883503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-443" for this suite. @ 09/11/23 03:01:22.884
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/11/23 03:01:22.897
  Sep 11 03:01:22.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 03:01:22.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:22.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:22.932
  STEP: creating pod @ 09/11/23 03:01:22.937
  E0911 03:01:23.884181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:24.884905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:24.969: INFO: Pod pod-hostip-310b7fb4-c4b4-44cc-8529-beaf71972a66 has hostIP: 172.31.4.243
  Sep 11 03:01:24.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4994" for this suite. @ 09/11/23 03:01:24.974
• [2.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 09/11/23 03:01:24.982
  Sep 11 03:01:24.982: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 03:01:24.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:25.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:25.007
  Sep 11 03:01:25.015: INFO: Got root ca configmap in namespace "svcaccounts-5889"
  Sep 11 03:01:25.022: INFO: Deleted root ca configmap in namespace "svcaccounts-5889"
  STEP: waiting for a new root ca configmap created @ 09/11/23 03:01:25.522
  Sep 11 03:01:25.528: INFO: Recreated root ca configmap in namespace "svcaccounts-5889"
  Sep 11 03:01:25.535: INFO: Updated root ca configmap in namespace "svcaccounts-5889"
  E0911 03:01:25.885288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 09/11/23 03:01:26.035
  Sep 11 03:01:26.040: INFO: Reconciled root ca configmap in namespace "svcaccounts-5889"
  Sep 11 03:01:26.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5889" for this suite. @ 09/11/23 03:01:26.047
• [1.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/11/23 03:01:26.056
  Sep 11 03:01:26.056: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 03:01:26.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:26.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:26.105
  Sep 11 03:01:26.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:01:26.885926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:27.887022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/11/23 03:01:28.456
  Sep 11 03:01:28.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 create -f -'
  E0911 03:01:28.887692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:29.128: INFO: stderr: ""
  Sep 11 03:01:29.128: INFO: stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 11 03:01:29.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 delete e2e-test-crd-publish-openapi-5118-crds test-cr'
  Sep 11 03:01:29.235: INFO: stderr: ""
  Sep 11 03:01:29.235: INFO: stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep 11 03:01:29.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 apply -f -'
  Sep 11 03:01:29.875: INFO: stderr: ""
  Sep 11 03:01:29.875: INFO: stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 11 03:01:29.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6601 --namespace=crd-publish-openapi-6601 delete e2e-test-crd-publish-openapi-5118-crds test-cr'
  E0911 03:01:29.888351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:29.979: INFO: stderr: ""
  Sep 11 03:01:29.979: INFO: stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/11/23 03:01:29.979
  Sep 11 03:01:29.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=crd-publish-openapi-6601 explain e2e-test-crd-publish-openapi-5118-crds'
  Sep 11 03:01:30.229: INFO: stderr: ""
  Sep 11 03:01:30.229: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5118-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0911 03:01:30.889335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:31.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 03:01:31.889521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-6601" for this suite. @ 09/11/23 03:01:31.997
• [5.948 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 09/11/23 03:01:32.005
  Sep 11 03:01:32.005: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:01:32.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:32.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:32.03
  STEP: validating api versions @ 09/11/23 03:01:32.034
  Sep 11 03:01:32.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-5355 api-versions'
  Sep 11 03:01:32.128: INFO: stderr: ""
  Sep 11 03:01:32.128: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\nv1\n"
  Sep 11 03:01:32.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5355" for this suite. @ 09/11/23 03:01:32.135
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 09/11/23 03:01:32.143
  Sep 11 03:01:32.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename podtemplate @ 09/11/23 03:01:32.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:32.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:32.163
  Sep 11 03:01:32.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6396" for this suite. @ 09/11/23 03:01:32.205
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 09/11/23 03:01:32.214
  Sep 11 03:01:32.214: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename security-context @ 09/11/23 03:01:32.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:32.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:32.235
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/11/23 03:01:32.239
  E0911 03:01:32.889800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:33.890883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:34.890884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:35.890995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:01:36.259
  Sep 11 03:01:36.262: INFO: Trying to get logs from node ip-172-31-3-111 pod security-context-0b7bb70b-ebdf-4c60-96cb-c69ffafdb769 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:01:36.276
  Sep 11 03:01:36.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1962" for this suite. @ 09/11/23 03:01:36.295
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 09/11/23 03:01:36.307
  Sep 11 03:01:36.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename aggregator @ 09/11/23 03:01:36.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:01:36.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:01:36.339
  Sep 11 03:01:36.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Registering the sample API server. @ 09/11/23 03:01:36.347
  E0911 03:01:36.892034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:37.892227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:37.943: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep 11 03:01:37.982: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0911 03:01:38.892713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:39.892782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:40.033: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:40.893621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:41.893735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:42.039: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:42.894711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:43.894888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:44.039: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:44.894981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:45.895079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:46.038: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:46.896174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:47.896785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:48.039: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:48.896813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:49.897262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:50.062: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:50.897592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:51.897641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:52.038: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:52.897796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:53.898744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:54.039: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:54.899418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:55.899920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:56.038: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:56.900097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:57.900210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:01:58.037: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:01:58.900811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:01:59.900900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:02:00.039: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 3, 1, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 3, 1, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 03:02:00.901261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:01.901986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:02:02.157: INFO: Waited 113.593857ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/11/23 03:02:02.258
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/11/23 03:02:02.261
  STEP: List APIServices @ 09/11/23 03:02:02.271
  Sep 11 03:02:02.278: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/11/23 03:02:02.278
  Sep 11 03:02:02.296: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/11/23 03:02:02.296
  Sep 11 03:02:02.310: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.September, 11, 3, 2, 2, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/11/23 03:02:02.31
  Sep 11 03:02:02.314: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-09-11 03:02:02 +0000 UTC Passed all checks passed}
  Sep 11 03:02:02.314: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 03:02:02.314: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/11/23 03:02:02.314
  Sep 11 03:02:02.329: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-796276630" @ 09/11/23 03:02:02.329
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/11/23 03:02:02.354
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/11/23 03:02:02.398
  STEP: Patch APIService Status @ 09/11/23 03:02:02.401
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/11/23 03:02:02.411
  Sep 11 03:02:02.421: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-09-11 03:02:02 +0000 UTC Passed all checks passed}
  Sep 11 03:02:02.421: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 03:02:02.421: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep 11 03:02:02.421: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 09/11/23 03:02:02.421
  STEP: Confirm that the generated APIService has been deleted @ 09/11/23 03:02:02.429
  Sep 11 03:02:02.429: INFO: Requesting list of APIServices to confirm quantity
  Sep 11 03:02:02.436: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Sep 11 03:02:02.437: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Sep 11 03:02:02.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9836" for this suite. @ 09/11/23 03:02:02.625
• [26.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/11/23 03:02:02.638
  Sep 11 03:02:02.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename watch @ 09/11/23 03:02:02.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:02.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:02.665
  STEP: creating a watch on configmaps with label A @ 09/11/23 03:02:02.667
  STEP: creating a watch on configmaps with label B @ 09/11/23 03:02:02.668
  STEP: creating a watch on configmaps with label A or B @ 09/11/23 03:02:02.673
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/11/23 03:02:02.675
  Sep 11 03:02:02.679: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38608 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:02:02.680: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38608 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/11/23 03:02:02.68
  Sep 11 03:02:02.690: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38609 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:02:02.691: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38609 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/11/23 03:02:02.691
  Sep 11 03:02:02.700: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38610 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:02:02.700: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38610 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/11/23 03:02:02.7
  Sep 11 03:02:02.707: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38611 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:02:02.707: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6694  82317407-9655-4d0b-9c4a-eedd1b28c786 38611 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/11/23 03:02:02.707
  Sep 11 03:02:02.713: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6694  1780d42e-5537-4b7f-8d33-6895654f5e98 38612 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:02:02.713: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6694  1780d42e-5537-4b7f-8d33-6895654f5e98 38612 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0911 03:02:02.902182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:03.902314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:04.903027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:05.903553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:06.903964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:07.904190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:08.904486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:09.905040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:10.905521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:11.905765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/11/23 03:02:12.714
  Sep 11 03:02:12.723: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6694  1780d42e-5537-4b7f-8d33-6895654f5e98 38665 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:02:12.723: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6694  1780d42e-5537-4b7f-8d33-6895654f5e98 38665 0 2023-09-11 03:02:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-11 03:02:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0911 03:02:12.906293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:13.906522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:14.906623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:15.906740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:16.906879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:17.907967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:18.908121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:19.908264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:20.908395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:21.908496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:02:22.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6694" for this suite. @ 09/11/23 03:02:22.73
• [20.098 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 09/11/23 03:02:22.738
  Sep 11 03:02:22.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 03:02:22.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:22.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:22.763
  Sep 11 03:02:22.789: INFO: created pod pod-service-account-defaultsa
  Sep 11 03:02:22.789: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep 11 03:02:22.796: INFO: created pod pod-service-account-mountsa
  Sep 11 03:02:22.797: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep 11 03:02:22.806: INFO: created pod pod-service-account-nomountsa
  Sep 11 03:02:22.806: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep 11 03:02:22.815: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep 11 03:02:22.815: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep 11 03:02:22.830: INFO: created pod pod-service-account-mountsa-mountspec
  Sep 11 03:02:22.830: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep 11 03:02:22.843: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep 11 03:02:22.843: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep 11 03:02:22.856: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep 11 03:02:22.857: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep 11 03:02:22.887: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep 11 03:02:22.887: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep 11 03:02:22.907: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep 11 03:02:22.907: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep 11 03:02:22.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 03:02:22.908555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "svcaccounts-3672" for this suite. @ 09/11/23 03:02:22.95
• [0.235 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/11/23 03:02:22.974
  Sep 11 03:02:22.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename disruption @ 09/11/23 03:02:22.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:23.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:23.015
  STEP: Creating a kubernetes client @ 09/11/23 03:02:23.029
  Sep 11 03:02:23.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename disruption-2 @ 09/11/23 03:02:23.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:23.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:23.093
  STEP: Waiting for the pdb to be processed @ 09/11/23 03:02:23.117
  STEP: Waiting for the pdb to be processed @ 09/11/23 03:02:23.182
  STEP: Waiting for the pdb to be processed @ 09/11/23 03:02:23.192
  E0911 03:02:23.908911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:24.909598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/11/23 03:02:25.206
  STEP: listing a collection of PDBs in namespace disruption-5151 @ 09/11/23 03:02:25.21
  STEP: deleting a collection of PDBs @ 09/11/23 03:02:25.215
  STEP: Waiting for the PDB collection to be deleted @ 09/11/23 03:02:25.228
  Sep 11 03:02:25.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 03:02:25.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9708" for this suite. @ 09/11/23 03:02:25.241
  STEP: Destroying namespace "disruption-5151" for this suite. @ 09/11/23 03:02:25.249
• [2.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 09/11/23 03:02:25.264
  Sep 11 03:02:25.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 03:02:25.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:25.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:25.302
  STEP: Creating a ResourceQuota with best effort scope @ 09/11/23 03:02:25.31
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 03:02:25.318
  E0911 03:02:25.910175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:26.910373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/11/23 03:02:27.322
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 03:02:27.327
  E0911 03:02:27.911380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:28.911411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/11/23 03:02:29.331
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/11/23 03:02:29.346
  E0911 03:02:29.912347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:30.913261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/11/23 03:02:31.35
  E0911 03:02:31.913651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:32.913789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 03:02:33.354
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 03:02:33.365
  E0911 03:02:33.914854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:34.914867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/11/23 03:02:35.371
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/11/23 03:02:35.382
  E0911 03:02:35.915695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:36.916030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/11/23 03:02:37.387
  E0911 03:02:37.916313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:38.916549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 03:02:39.391
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 03:02:39.407
  E0911 03:02:39.916767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:40.916968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:02:41.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8823" for this suite. @ 09/11/23 03:02:41.415
• [16.160 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/11/23 03:02:41.423
  Sep 11 03:02:41.423: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 03:02:41.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:41.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:41.451
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 03:02:41.456
  E0911 03:02:41.917129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:42.917346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:43.918004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:44.918762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:02:45.478
  Sep 11 03:02:45.481: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-8d20bc59-aee2-4344-bbab-029839f4be7f container client-container: <nil>
  STEP: delete the pod @ 09/11/23 03:02:45.487
  Sep 11 03:02:45.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8778" for this suite. @ 09/11/23 03:02:45.506
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 09/11/23 03:02:45.517
  Sep 11 03:02:45.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename lease-test @ 09/11/23 03:02:45.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:45.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:45.543
  Sep 11 03:02:45.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7248" for this suite. @ 09/11/23 03:02:45.604
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 09/11/23 03:02:45.612
  Sep 11 03:02:45.612: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename job @ 09/11/23 03:02:45.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:45.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:45.634
  STEP: Creating a job @ 09/11/23 03:02:45.637
  STEP: Ensuring job reaches completions @ 09/11/23 03:02:45.643
  E0911 03:02:45.918869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:46.919572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:47.919749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:48.919867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:49.920590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:50.920702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:51.921379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:52.921632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:53.922235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:54.922482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:02:55.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2345" for this suite. @ 09/11/23 03:02:55.652
• [10.046 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 09/11/23 03:02:55.658
  Sep 11 03:02:55.658: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:02:55.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:55.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:55.683
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/11/23 03:02:55.687
  E0911 03:02:55.922709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:56.923068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:57.923068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:02:58.923309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:02:59.707
  Sep 11 03:02:59.710: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-3361393f-1a89-4e72-9258-56c185a22221 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:02:59.716
  Sep 11 03:02:59.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1135" for this suite. @ 09/11/23 03:02:59.735
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 09/11/23 03:02:59.743
  Sep 11 03:02:59.743: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 03:02:59.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:02:59.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:02:59.767
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/11/23 03:02:59.77
  E0911 03:02:59.923488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:00.928242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/11/23 03:03:01.793
  STEP: Then the orphan pod is adopted @ 09/11/23 03:03:01.799
  E0911 03:03:01.929218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:03:02.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7019" for this suite. @ 09/11/23 03:03:02.811
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/11/23 03:03:02.82
  Sep 11 03:03:02.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 03:03:02.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:02.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:02.851
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 03:03:02.855
  E0911 03:03:02.929773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:03.930793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:04.931354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:05.931794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:03:06.884
  Sep 11 03:03:06.887: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-e61f1c33-5d59-471a-bfca-e93083a0620f container client-container: <nil>
  STEP: delete the pod @ 09/11/23 03:03:06.894
  Sep 11 03:03:06.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6073" for this suite. @ 09/11/23 03:03:06.916
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS  E0911 03:03:06.932824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 09/11/23 03:03:06.935
  Sep 11 03:03:06.935: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:03:06.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:06.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:06.977
  STEP: Creating Pod @ 09/11/23 03:03:06.98
  E0911 03:03:07.933618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:08.933733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/11/23 03:03:09.001
  Sep 11 03:03:09.001: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7725 PodName:pod-sharedvolume-97e7e461-7ccb-4e08-b3d3-8a917f3461e3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:03:09.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:03:09.002: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:03:09.002: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-7725/pods/pod-sharedvolume-97e7e461-7ccb-4e08-b3d3-8a917f3461e3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Sep 11 03:03:09.063: INFO: Exec stderr: ""
  Sep 11 03:03:09.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7725" for this suite. @ 09/11/23 03:03:09.069
• [2.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 09/11/23 03:03:09.077
  Sep 11 03:03:09.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename gc @ 09/11/23 03:03:09.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:09.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:09.098
  STEP: create the rc @ 09/11/23 03:03:09.101
  W0911 03:03:09.107121      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0911 03:03:09.934621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:10.934667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:11.935022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:12.935401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:13.935975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/11/23 03:03:14.112
  STEP: wait for all pods to be garbage collected @ 09/11/23 03:03:14.119
  E0911 03:03:14.936306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:15.936300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:16.936501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:17.936646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:18.936743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/11/23 03:03:19.133
  W0911 03:03:19.143836      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 11 03:03:19.143: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 03:03:19.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3034" for this suite. @ 09/11/23 03:03:19.148
• [10.078 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 09/11/23 03:03:19.156
  Sep 11 03:03:19.157: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/11/23 03:03:19.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:19.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:19.179
  STEP: create the container to handle the HTTPGet hook request. @ 09/11/23 03:03:19.187
  E0911 03:03:19.937480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:20.937721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/11/23 03:03:21.208
  E0911 03:03:21.937814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:22.938020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/11/23 03:03:23.224
  STEP: delete the pod with lifecycle hook @ 09/11/23 03:03:23.243
  E0911 03:03:23.938748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:24.938887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:03:25.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8209" for this suite. @ 09/11/23 03:03:25.264
• [6.116 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/11/23 03:03:25.274
  Sep 11 03:03:25.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 03:03:25.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:25.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:25.298
  STEP: Creating a pod to test substitution in container's command @ 09/11/23 03:03:25.301
  E0911 03:03:25.939023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:26.939055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:27.940061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:28.940484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:03:29.323
  Sep 11 03:03:29.325: INFO: Trying to get logs from node ip-172-31-3-111 pod var-expansion-680ac3de-5181-486c-8b4c-65e612102cdf container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 03:03:29.331
  Sep 11 03:03:29.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3843" for this suite. @ 09/11/23 03:03:29.348
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 09/11/23 03:03:29.364
  Sep 11 03:03:29.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 03:03:29.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:29.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:29.392
  STEP: Creating namespace "e2e-ns-rg8rf" @ 09/11/23 03:03:29.397
  Sep 11 03:03:29.414: INFO: Namespace "e2e-ns-rg8rf-2710" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-rg8rf-2710" @ 09/11/23 03:03:29.415
  Sep 11 03:03:29.423: INFO: Namespace "e2e-ns-rg8rf-2710" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-rg8rf-2710" @ 09/11/23 03:03:29.423
  Sep 11 03:03:29.432: INFO: Namespace "e2e-ns-rg8rf-2710" has []v1.FinalizerName{"kubernetes"}
  Sep 11 03:03:29.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2970" for this suite. @ 09/11/23 03:03:29.436
  STEP: Destroying namespace "e2e-ns-rg8rf-2710" for this suite. @ 09/11/23 03:03:29.441
• [0.084 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 09/11/23 03:03:29.448
  Sep 11 03:03:29.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 03:03:29.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:29.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:29.468
  STEP: Create a Replicaset @ 09/11/23 03:03:29.474
  STEP: Verify that the required pods have come up. @ 09/11/23 03:03:29.479
  Sep 11 03:03:29.485: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0911 03:03:29.940650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:30.941130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:31.942163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:32.942266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:33.943068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:03:34.491: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 03:03:34.491
  STEP: Getting /status @ 09/11/23 03:03:34.491
  Sep 11 03:03:34.497: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/11/23 03:03:34.497
  Sep 11 03:03:34.509: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/11/23 03:03:34.51
  Sep 11 03:03:34.512: INFO: Observed &ReplicaSet event: ADDED
  Sep 11 03:03:34.512: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 11 03:03:34.512: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 11 03:03:34.513: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 11 03:03:34.513: INFO: Found replicaset test-rs in namespace replicaset-1370 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 11 03:03:34.513: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/11/23 03:03:34.513
  Sep 11 03:03:34.513: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 11 03:03:34.523: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/11/23 03:03:34.523
  Sep 11 03:03:34.525: INFO: Observed &ReplicaSet event: ADDED
  Sep 11 03:03:34.526: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 11 03:03:34.526: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 11 03:03:34.526: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 11 03:03:34.527: INFO: Observed replicaset test-rs in namespace replicaset-1370 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 03:03:34.527: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 11 03:03:34.527: INFO: Found replicaset test-rs in namespace replicaset-1370 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep 11 03:03:34.527: INFO: Replicaset test-rs has a patched status
  Sep 11 03:03:34.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1370" for this suite. @ 09/11/23 03:03:34.533
• [5.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/11/23 03:03:34.545
  Sep 11 03:03:34.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename init-container @ 09/11/23 03:03:34.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:03:34.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:03:34.594
  STEP: creating the pod @ 09/11/23 03:03:34.598
  Sep 11 03:03:34.598: INFO: PodSpec: initContainers in spec.initContainers
  E0911 03:03:34.943126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:35.943246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:36.944037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:37.944444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:38.944602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:39.944745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:40.945040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:41.945309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:42.945615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:43.945776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:44.945937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:45.946082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:46.946190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:47.946710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:48.947706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:49.948731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:50.948843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:51.949016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:52.949341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:53.949653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:54.949783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:55.950086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:56.950195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:57.950310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:58.950418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:03:59.950598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:00.950751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:01.950942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:02.951049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:03.951445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:04.951590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:05.952019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:06.952216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:07.953110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:08.953289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:09.953679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:10.954730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:11.954974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:12.955269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:04:13.757: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4c9a2b6c-be18-49e8-be8a-24e524a2d2e1", GenerateName:"", Namespace:"init-container-795", SelfLink:"", UID:"9f730d8e-ae05-48f9-b400-58d299fee522", ResourceVersion:"39727", Generation:0, CreationTimestamp:time.Date(2023, time.September, 11, 3, 3, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"598268556"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 11, 3, 3, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005862150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 11, 3, 4, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005862180), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5z2tz", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc007454620), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5z2tz", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5z2tz", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5z2tz", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003dba2f8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-4-243", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005d460e0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003dba380)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003dba3a0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003dba3a8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003dba3ac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0012e2780), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 3, 3, 34, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 3, 3, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 3, 3, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 3, 3, 34, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.4.243", HostIPs:[]v1.HostIP(nil), PodIP:"10.42.3.174", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.174"}}, StartTime:time.Date(2023, time.September, 11, 3, 3, 34, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc005d461c0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc005d46230)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://fe3cca3b11f4c0167a13885bd5abbf9d50165975ef022a4de3804527dca4cd1b", Started:(*bool)(0xc003dba44a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0074546a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc003dba45f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc007454680), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003dba42f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep 11 03:04:13.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-795" for this suite. @ 09/11/23 03:04:13.768
• [39.229 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/11/23 03:04:13.775
  Sep 11 03:04:13.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename events @ 09/11/23 03:04:13.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:04:13.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:04:13.803
  STEP: creating a test event @ 09/11/23 03:04:13.807
  STEP: listing events in all namespaces @ 09/11/23 03:04:13.816
  STEP: listing events in test namespace @ 09/11/23 03:04:13.821
  STEP: listing events with field selection filtering on source @ 09/11/23 03:04:13.825
  STEP: listing events with field selection filtering on reportingController @ 09/11/23 03:04:13.829
  STEP: getting the test event @ 09/11/23 03:04:13.833
  STEP: patching the test event @ 09/11/23 03:04:13.836
  STEP: getting the test event @ 09/11/23 03:04:13.849
  STEP: updating the test event @ 09/11/23 03:04:13.853
  STEP: getting the test event @ 09/11/23 03:04:13.873
  STEP: deleting the test event @ 09/11/23 03:04:13.887
  STEP: listing events in all namespaces @ 09/11/23 03:04:13.907
  STEP: listing events in test namespace @ 09/11/23 03:04:13.931
  Sep 11 03:04:13.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7806" for this suite. @ 09/11/23 03:04:13.941
  E0911 03:04:13.955521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.182 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/11/23 03:04:13.958
  Sep 11 03:04:13.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 03:04:13.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:04:13.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:04:13.99
  Sep 11 03:04:13.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:04:14.956218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:15.957284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0911 03:04:16.558564      19 warnings.go:70] unknown field "alpha"
  W0911 03:04:16.558585      19 warnings.go:70] unknown field "beta"
  W0911 03:04:16.558592      19 warnings.go:70] unknown field "delta"
  W0911 03:04:16.558599      19 warnings.go:70] unknown field "epsilon"
  W0911 03:04:16.558606      19 warnings.go:70] unknown field "gamma"
  E0911 03:04:16.957636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:04:17.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8608" for this suite. @ 09/11/23 03:04:17.108
• [3.162 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 09/11/23 03:04:17.123
  Sep 11 03:04:17.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pod-network-test @ 09/11/23 03:04:17.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:04:17.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:04:17.165
  STEP: Performing setup for networking test in namespace pod-network-test-9819 @ 09/11/23 03:04:17.176
  STEP: creating a selector @ 09/11/23 03:04:17.176
  STEP: Creating the service pods in kubernetes @ 09/11/23 03:04:17.176
  Sep 11 03:04:17.176: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0911 03:04:17.958436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:18.958702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:19.959358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:20.960069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:21.960964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:22.961057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:23.961492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:24.961702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:25.962006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:26.962130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:27.962779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:28.963016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/11/23 03:04:29.322
  E0911 03:04:29.963998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:30.964143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:04:31.340: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 11 03:04:31.340: INFO: Breadth first check of 10.42.0.103 on host 172.31.11.123...
  Sep 11 03:04:31.343: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.22:9080/dial?request=hostname&protocol=udp&host=10.42.0.103&port=8081&tries=1'] Namespace:pod-network-test-9819 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:04:31.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:04:31.344: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:04:31.344: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9819/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.22%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.103%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 03:04:31.409: INFO: Waiting for responses: map[]
  Sep 11 03:04:31.409: INFO: reached 10.42.0.103 after 0/1 tries
  Sep 11 03:04:31.409: INFO: Breadth first check of 10.42.2.122 on host 172.31.12.171...
  Sep 11 03:04:31.412: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.22:9080/dial?request=hostname&protocol=udp&host=10.42.2.122&port=8081&tries=1'] Namespace:pod-network-test-9819 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:04:31.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:04:31.413: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:04:31.413: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9819/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.22%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.122%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 03:04:31.487: INFO: Waiting for responses: map[]
  Sep 11 03:04:31.487: INFO: reached 10.42.2.122 after 0/1 tries
  Sep 11 03:04:31.487: INFO: Breadth first check of 10.42.1.21 on host 172.31.3.111...
  Sep 11 03:04:31.491: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.22:9080/dial?request=hostname&protocol=udp&host=10.42.1.21&port=8081&tries=1'] Namespace:pod-network-test-9819 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:04:31.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:04:31.492: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:04:31.492: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9819/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.22%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.21%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 03:04:31.579: INFO: Waiting for responses: map[]
  Sep 11 03:04:31.579: INFO: reached 10.42.1.21 after 0/1 tries
  Sep 11 03:04:31.579: INFO: Breadth first check of 10.42.3.175 on host 172.31.4.243...
  Sep 11 03:04:31.583: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.22:9080/dial?request=hostname&protocol=udp&host=10.42.3.175&port=8081&tries=1'] Namespace:pod-network-test-9819 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:04:31.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:04:31.584: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:04:31.584: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9819/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.22%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.175%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 03:04:31.666: INFO: Waiting for responses: map[]
  Sep 11 03:04:31.666: INFO: reached 10.42.3.175 after 0/1 tries
  Sep 11 03:04:31.666: INFO: Going to retry 0 out of 4 pods....
  Sep 11 03:04:31.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9819" for this suite. @ 09/11/23 03:04:31.67
• [14.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 09/11/23 03:04:31.681
  Sep 11 03:04:31.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:04:31.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:04:31.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:04:31.712
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/11/23 03:04:31.716
  E0911 03:04:31.964806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:32.964926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:33.965784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:34.965519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:04:35.738
  Sep 11 03:04:35.741: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-d5407431-e018-43ce-9b96-14ecaebdca5e container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:04:35.747
  Sep 11 03:04:35.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2898" for this suite. @ 09/11/23 03:04:35.766
• [4.092 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/11/23 03:04:35.774
  Sep 11 03:04:35.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 03:04:35.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:04:35.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:04:35.799
  STEP: Creating simple DaemonSet "daemon-set" @ 09/11/23 03:04:35.823
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 03:04:35.828
  Sep 11 03:04:35.837: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 03:04:35.837: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 03:04:35.966258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:04:36.850: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 03:04:36.850: INFO: Node ip-172-31-12-171 is running 0 daemon pod, expected 1
  E0911 03:04:36.967143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:04:37.848: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 03:04:37.849: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/11/23 03:04:37.851
  STEP: DeleteCollection of the DaemonSets @ 09/11/23 03:04:37.854
  STEP: Verify that ReplicaSets have been deleted @ 09/11/23 03:04:37.864
  Sep 11 03:04:37.878: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40018"},"items":null}

  Sep 11 03:04:37.883: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40018"},"items":[{"metadata":{"name":"daemon-set-7t7pl","generateName":"daemon-set-","namespace":"daemonsets-3488","uid":"870686de-e9e3-45d3-817b-dee1d4956ba5","resourceVersion":"39982","creationTimestamp":"2023-09-11T03:04:35Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c0754312-6151-4db6-b1d3-a1e17f6f43af","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c0754312-6151-4db6-b1d3-a1e17f6f43af\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-887f6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-887f6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-111","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-111"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"}],"hostIP":"172.31.3.111","podIP":"10.42.1.24","podIPs":[{"ip":"10.42.1.24"}],"startTime":"2023-09-11T03:04:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T03:04:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://b1ca9445517b57ef10e96503b95839b75853a2cae897f876ae3e078d739cc137","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-8rcdg","generateName":"daemon-set-","namespace":"daemonsets-3488","uid":"7ba09c52-417a-4e2a-8177-beddb6fbebce","resourceVersion":"39960","creationTimestamp":"2023-09-11T03:04:35Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c0754312-6151-4db6-b1d3-a1e17f6f43af","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c0754312-6151-4db6-b1d3-a1e17f6f43af\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.104\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mjkm4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mjkm4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-11-123","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-11-123"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"}],"hostIP":"172.31.11.123","podIP":"10.42.0.104","podIPs":[{"ip":"10.42.0.104"}],"startTime":"2023-09-11T03:04:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T03:04:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5e5db76aed7bb93d226bcd41797edd13542e4b863015104a0f0f7c190522d71e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-q2pgj","generateName":"daemon-set-","namespace":"daemonsets-3488","uid":"8e209593-543c-4c84-a4e5-b68d2cabf5c4","resourceVersion":"40003","creationTimestamp":"2023-09-11T03:04:35Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c0754312-6151-4db6-b1d3-a1e17f6f43af","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c0754312-6151-4db6-b1d3-a1e17f6f43af\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.123\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-w4zww","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-w4zww","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-12-171","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-12-171"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"}],"hostIP":"172.31.12.171","podIP":"10.42.2.123","podIPs":[{"ip":"10.42.2.123"}],"startTime":"2023-09-11T03:04:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T03:04:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f5418a4c4b510503e854bb53629d1459c602135ee2ae4cd91cc1713c653c66b1","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-w9mk2","generateName":"daemon-set-","namespace":"daemonsets-3488","uid":"2c05588f-ac4f-4759-b653-dcab66dffca5","resourceVersion":"39974","creationTimestamp":"2023-09-11T03:04:35Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c0754312-6151-4db6-b1d3-a1e17f6f43af","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c0754312-6151-4db6-b1d3-a1e17f6f43af\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2023-09-11T03:04:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.176\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4gpwb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4gpwb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-4-243","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-4-243"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T03:04:35Z"}],"hostIP":"172.31.4.243","podIP":"10.42.3.176","podIPs":[{"ip":"10.42.3.176"}],"startTime":"2023-09-11T03:04:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T03:04:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f0eaacab9a67f1e235c79036a8d17e8ecf7d50074c07ba4d2710f1ce03b57749","started":true}],"qosClass":"BestEffort"}}]}

  Sep 11 03:04:37.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3488" for this suite. @ 09/11/23 03:04:37.927
• [2.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/11/23 03:04:37.933
  Sep 11 03:04:37.933: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 03:04:37.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:04:37.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:04:37.961
  E0911 03:04:37.967724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:04:37.983: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 03:04:38.968108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:39.968715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:40.969026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:41.969435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:42.970013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:43.970757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:44.971347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:45.971769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:46.972743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:47.973631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:48.974074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:49.974871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:50.975025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:51.975138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:52.975604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:53.976180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:54.976412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:55.976529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:56.977404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:57.977645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:58.978526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:04:59.979080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:00.979617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:01.979713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:02.980580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:03.981306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:04.981609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:05.981747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:06.982702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:07.982821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:08.983054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:09.983310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:10.983979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:11.984340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:12.984746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:13.985429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:14.985635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:15.985738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:16.986710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:17.986996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:18.987080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:19.987186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:20.988144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:21.988529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:22.988923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:23.989615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:24.990506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:25.990916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:26.991353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:27.991439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:28.992198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:29.992487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:30.993602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:31.994361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:32.994575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:33.994655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:34.995574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:35.995767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:36.995980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:37.996117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:05:38.008: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/11/23 03:05:38.011
  Sep 11 03:05:38.032: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 11 03:05:38.042: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 11 03:05:38.062: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 11 03:05:38.068: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 11 03:05:38.084: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 11 03:05:38.091: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Sep 11 03:05:38.141: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Sep 11 03:05:38.158: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/11/23 03:05:38.158
  E0911 03:05:39.000410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:40.000908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/11/23 03:05:40.204
  E0911 03:05:41.001050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:42.002241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:43.002356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:44.002593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:05:44.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7161" for this suite. @ 09/11/23 03:05:44.368
• [66.441 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 09/11/23 03:05:44.375
  Sep 11 03:05:44.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename security-context @ 09/11/23 03:05:44.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:05:44.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:05:44.401
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/11/23 03:05:44.404
  E0911 03:05:45.003144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:46.003261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:47.003389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:48.004052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:05:48.428
  Sep 11 03:05:48.431: INFO: Trying to get logs from node ip-172-31-3-111 pod security-context-6ca6e5a7-957b-4820-af51-fec84cfb93ae container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:05:48.439
  Sep 11 03:05:48.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2732" for this suite. @ 09/11/23 03:05:48.472
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/11/23 03:05:48.48
  Sep 11 03:05:48.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:05:48.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:05:48.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:05:48.507
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-283 @ 09/11/23 03:05:48.51
  STEP: changing the ExternalName service to type=NodePort @ 09/11/23 03:05:48.515
  STEP: creating replication controller externalname-service in namespace services-283 @ 09/11/23 03:05:48.536
  I0911 03:05:48.548208      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-283, replica count: 2
  E0911 03:05:49.004382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:50.005656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:51.005684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 03:05:51.599319      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 03:05:51.599: INFO: Creating new exec pod
  E0911 03:05:52.005731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:53.005881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:54.006693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:05:54.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-283 exec execpodzk2gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 11 03:05:54.777: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 11 03:05:54.777: INFO: stdout: "externalname-service-lbpmr"
  Sep 11 03:05:54.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-283 exec execpodzk2gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.35.206 80'
  Sep 11 03:05:54.933: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.35.206 80\nConnection to 10.43.35.206 80 port [tcp/http] succeeded!\n"
  Sep 11 03:05:54.933: INFO: stdout: "externalname-service-lbpmr"
  Sep 11 03:05:54.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-283 exec execpodzk2gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.243 31117'
  E0911 03:05:55.007091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:05:55.076: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.243 31117\nConnection to 172.31.4.243 31117 port [tcp/*] succeeded!\n"
  Sep 11 03:05:55.076: INFO: stdout: ""
  E0911 03:05:56.007798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:05:56.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-283 exec execpodzk2gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.243 31117'
  Sep 11 03:05:56.222: INFO: stderr: "+ nc -v -t -w 2 172.31.4.243 31117\n+ echo hostName\nConnection to 172.31.4.243 31117 port [tcp/*] succeeded!\n"
  Sep 11 03:05:56.222: INFO: stdout: "externalname-service-lbpmr"
  Sep 11 03:05:56.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-283 exec execpodzk2gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.123 31117'
  Sep 11 03:05:56.375: INFO: stderr: "+ nc -v -t -w 2 172.31.11.123 31117\n+ echo hostName\nConnection to 172.31.11.123 31117 port [tcp/*] succeeded!\n"
  Sep 11 03:05:56.375: INFO: stdout: "externalname-service-lbpmr"
  Sep 11 03:05:56.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 03:05:56.379: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-283" for this suite. @ 09/11/23 03:05:56.416
• [7.943 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 09/11/23 03:05:56.423
  Sep 11 03:05:56.423: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:05:56.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:05:56.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:05:56.447
  STEP: creating a replication controller @ 09/11/23 03:05:56.451
  Sep 11 03:05:56.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 create -f -'
  E0911 03:05:57.008707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:05:57.252: INFO: stderr: ""
  Sep 11 03:05:57.252: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 03:05:57.252
  Sep 11 03:05:57.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:05:57.364: INFO: stderr: ""
  Sep 11 03:05:57.364: INFO: stdout: "update-demo-nautilus-kh4zc update-demo-nautilus-nb4hk "
  Sep 11 03:05:57.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods update-demo-nautilus-kh4zc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:05:57.452: INFO: stderr: ""
  Sep 11 03:05:57.452: INFO: stdout: ""
  Sep 11 03:05:57.452: INFO: update-demo-nautilus-kh4zc is created but not running
  E0911 03:05:58.009511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:05:59.009642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:00.010191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:01.010703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:02.011037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:06:02.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:06:02.573: INFO: stderr: ""
  Sep 11 03:06:02.573: INFO: stdout: "update-demo-nautilus-kh4zc update-demo-nautilus-nb4hk "
  Sep 11 03:06:02.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods update-demo-nautilus-kh4zc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:06:02.687: INFO: stderr: ""
  Sep 11 03:06:02.687: INFO: stdout: ""
  Sep 11 03:06:02.687: INFO: update-demo-nautilus-kh4zc is created but not running
  E0911 03:06:03.011141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:04.011485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:05.011644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:06.011744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:07.012105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:06:07.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:06:07.788: INFO: stderr: ""
  Sep 11 03:06:07.788: INFO: stdout: "update-demo-nautilus-kh4zc update-demo-nautilus-nb4hk "
  Sep 11 03:06:07.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods update-demo-nautilus-kh4zc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:06:07.866: INFO: stderr: ""
  Sep 11 03:06:07.866: INFO: stdout: "true"
  Sep 11 03:06:07.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods update-demo-nautilus-kh4zc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 03:06:07.967: INFO: stderr: ""
  Sep 11 03:06:07.967: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 03:06:07.967: INFO: validating pod update-demo-nautilus-kh4zc
  Sep 11 03:06:07.977: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 03:06:07.977: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 03:06:07.977: INFO: update-demo-nautilus-kh4zc is verified up and running
  Sep 11 03:06:07.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods update-demo-nautilus-nb4hk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0911 03:06:08.012627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:06:08.072: INFO: stderr: ""
  Sep 11 03:06:08.072: INFO: stdout: "true"
  Sep 11 03:06:08.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods update-demo-nautilus-nb4hk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 03:06:08.168: INFO: stderr: ""
  Sep 11 03:06:08.168: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 03:06:08.168: INFO: validating pod update-demo-nautilus-nb4hk
  Sep 11 03:06:08.178: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 03:06:08.178: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 03:06:08.178: INFO: update-demo-nautilus-nb4hk is verified up and running
  STEP: using delete to clean up resources @ 09/11/23 03:06:08.178
  Sep 11 03:06:08.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 delete --grace-period=0 --force -f -'
  Sep 11 03:06:08.292: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 03:06:08.292: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 11 03:06:08.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get rc,svc -l name=update-demo --no-headers'
  Sep 11 03:06:08.403: INFO: stderr: "No resources found in kubectl-3808 namespace.\n"
  Sep 11 03:06:08.403: INFO: stdout: ""
  Sep 11 03:06:08.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3808 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 11 03:06:08.507: INFO: stderr: ""
  Sep 11 03:06:08.507: INFO: stdout: ""
  Sep 11 03:06:08.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3808" for this suite. @ 09/11/23 03:06:08.513
• [12.103 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/11/23 03:06:08.526
  Sep 11 03:06:08.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 03:06:08.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:06:08.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:06:08.564
  Sep 11 03:06:08.581: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 03:06:09.013512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:10.013626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:11.014751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:12.015197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:13.015324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:14.015947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:15.016675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:16.016301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:17.016870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:18.017110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:19.017536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:20.017638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:21.018062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:22.018953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:23.019643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:24.020105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:25.021005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:26.021311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:27.021857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:28.022093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:29.023182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:30.023350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:31.024291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:32.024410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:33.025443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:34.026603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:35.027527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:36.028447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:37.028559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:38.028869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:39.029144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:40.029359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:41.030206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:42.030821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:43.031155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:44.031506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:45.032171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:46.032336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:47.033161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:48.033286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:49.034318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:50.034415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:51.034717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:52.034898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:53.035324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:54.035427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:55.036194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:56.036327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:57.037373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:58.037621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:06:59.038110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:00.038231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:01.038571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:02.039486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:03.039659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:04.040354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:05.040991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:06.041069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:07.042042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:08.042481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:07:08.607: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/11/23 03:07:08.61
  Sep 11 03:07:08.610: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/11/23 03:07:08.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:08.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:08.638
  STEP: Finding an available node @ 09/11/23 03:07:08.641
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/11/23 03:07:08.641
  E0911 03:07:09.043532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:10.044179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/11/23 03:07:10.665
  Sep 11 03:07:10.676: INFO: found a healthy node: ip-172-31-3-111
  E0911 03:07:11.044860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:12.044953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:13.045850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:14.046778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:15.047948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:16.048308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:07:16.780: INFO: pods created so far: [1 1 1]
  Sep 11 03:07:16.781: INFO: length of pods created so far: 3
  E0911 03:07:17.048405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:18.048651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:07:18.792: INFO: pods created so far: [2 2 1]
  E0911 03:07:19.049520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:20.050022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:21.050141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:22.050248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:23.050479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:24.050568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:25.050687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:07:25.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 03:07:25.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-671" for this suite. @ 09/11/23 03:07:25.899
  STEP: Destroying namespace "sched-preemption-8659" for this suite. @ 09/11/23 03:07:25.906
• [77.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 09/11/23 03:07:25.93
  Sep 11 03:07:25.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/11/23 03:07:25.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:25.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:25.972
  Sep 11 03:07:25.976: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:07:26.051312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:07:27.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5635" for this suite. @ 09/11/23 03:07:27.012
• [1.089 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/11/23 03:07:27.019
  Sep 11 03:07:27.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:07:27.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:27.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:27.038
  STEP: Creating configMap with name projected-configmap-test-volume-92bd5349-4f14-4dec-9be1-333ae5b8c99f @ 09/11/23 03:07:27.042
  STEP: Creating a pod to test consume configMaps @ 09/11/23 03:07:27.049
  E0911 03:07:27.052143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:28.052351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:29.052671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:30.053011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:31.053871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:07:31.075
  Sep 11 03:07:31.080: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-projected-configmaps-3c06c6ea-a3a5-45a1-837d-07887640aa9a container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 03:07:31.094
  Sep 11 03:07:31.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5224" for this suite. @ 09/11/23 03:07:31.13
• [4.123 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 09/11/23 03:07:31.142
  Sep 11 03:07:31.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename discovery @ 09/11/23 03:07:31.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:31.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:31.179
  STEP: Setting up server cert @ 09/11/23 03:07:31.19
  STEP: Requesting APIResourceList from "/api/v1" @ 09/11/23 03:07:31.737
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/11/23 03:07:31.738
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/11/23 03:07:31.74
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/11/23 03:07:31.741
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/11/23 03:07:31.742
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/11/23 03:07:31.743
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/11/23 03:07:31.744
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/11/23 03:07:31.745
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/11/23 03:07:31.746
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/11/23 03:07:31.747
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/11/23 03:07:31.748
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/11/23 03:07:31.749
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/11/23 03:07:31.75
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/11/23 03:07:31.751
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/11/23 03:07:31.752
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/11/23 03:07:31.756
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/11/23 03:07:31.758
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/11/23 03:07:31.759
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/11/23 03:07:31.762
  Sep 11 03:07:31.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-112" for this suite. @ 09/11/23 03:07:31.773
• [0.640 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 09/11/23 03:07:31.783
  Sep 11 03:07:31.783: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename podtemplate @ 09/11/23 03:07:31.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:31.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:31.808
  STEP: Create a pod template @ 09/11/23 03:07:31.811
  STEP: Replace a pod template @ 09/11/23 03:07:31.818
  Sep 11 03:07:31.828: INFO: Found updated podtemplate annotation: "true"

  Sep 11 03:07:31.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3748" for this suite. @ 09/11/23 03:07:31.833
• [0.061 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 09/11/23 03:07:31.844
  Sep 11 03:07:31.844: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 03:07:31.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:31.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:31.87
  E0911 03:07:32.054534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:33.054737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/11/23 03:07:33.898
  Sep 11 03:07:33.898: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2698 pod-service-account-e4811e7e-dc93-417b-9f81-8aad638287ce -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/11/23 03:07:34.043
  Sep 11 03:07:34.043: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2698 pod-service-account-e4811e7e-dc93-417b-9f81-8aad638287ce -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0911 03:07:34.055143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/11/23 03:07:34.185
  Sep 11 03:07:34.186: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2698 pod-service-account-e4811e7e-dc93-417b-9f81-8aad638287ce -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Sep 11 03:07:34.353: INFO: Got root ca configmap in namespace "svcaccounts-2698"
  Sep 11 03:07:34.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2698" for this suite. @ 09/11/23 03:07:34.36
• [2.522 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/11/23 03:07:34.368
  Sep 11 03:07:34.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 03:07:34.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:34.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:34.398
  STEP: Creating configMap with name configmap-test-volume-map-7f77ae7c-da76-4157-aa00-4c83fc35ca32 @ 09/11/23 03:07:34.401
  STEP: Creating a pod to test consume configMaps @ 09/11/23 03:07:34.407
  E0911 03:07:35.055458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:36.056054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:07:36.43
  Sep 11 03:07:36.433: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-3b753382-c8a9-4180-9173-e72ab60feaae container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 03:07:36.449
  Sep 11 03:07:36.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4787" for this suite. @ 09/11/23 03:07:36.473
• [2.112 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 09/11/23 03:07:36.481
  Sep 11 03:07:36.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename events @ 09/11/23 03:07:36.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:36.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:36.5
  STEP: creating a test event @ 09/11/23 03:07:36.504
  STEP: listing all events in all namespaces @ 09/11/23 03:07:36.508
  STEP: patching the test event @ 09/11/23 03:07:36.512
  STEP: fetching the test event @ 09/11/23 03:07:36.519
  STEP: updating the test event @ 09/11/23 03:07:36.522
  STEP: getting the test event @ 09/11/23 03:07:36.532
  STEP: deleting the test event @ 09/11/23 03:07:36.535
  STEP: listing all events in all namespaces @ 09/11/23 03:07:36.542
  Sep 11 03:07:36.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5611" for this suite. @ 09/11/23 03:07:36.55
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/11/23 03:07:36.56
  Sep 11 03:07:36.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:07:36.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:36.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:36.58
  STEP: Creating secret with name projected-secret-test-52f4fffc-93e1-4bc0-b4e3-d04a06242e2c @ 09/11/23 03:07:36.583
  STEP: Creating a pod to test consume secrets @ 09/11/23 03:07:36.587
  E0911 03:07:37.056095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:38.056284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:39.057172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:40.057265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:07:40.61
  Sep 11 03:07:40.614: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-secrets-e9787967-7f7f-4c60-8429-c64b477b0550 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 03:07:40.623
  Sep 11 03:07:40.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7528" for this suite. @ 09/11/23 03:07:40.644
• [4.092 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/11/23 03:07:40.652
  Sep 11 03:07:40.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 03:07:40.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:40.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:40.674
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-398.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-398.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/11/23 03:07:40.678
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-398.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-398.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/11/23 03:07:40.678
  STEP: creating a pod to probe /etc/hosts @ 09/11/23 03:07:40.678
  STEP: submitting the pod to kubernetes @ 09/11/23 03:07:40.678
  E0911 03:07:41.057421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:42.057668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 03:07:42.699
  STEP: looking for the results for each expected name from probers @ 09/11/23 03:07:42.704
  Sep 11 03:07:42.721: INFO: DNS probes using dns-398/dns-test-61603db5-553c-43c6-b52d-ca00fcc1cb54 succeeded

  Sep 11 03:07:42.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 03:07:42.726
  STEP: Destroying namespace "dns-398" for this suite. @ 09/11/23 03:07:42.737
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/11/23 03:07:42.747
  Sep 11 03:07:42.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename subpath @ 09/11/23 03:07:42.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:07:42.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:07:42.777
  STEP: Setting up data @ 09/11/23 03:07:42.78
  STEP: Creating pod pod-subpath-test-configmap-7khb @ 09/11/23 03:07:42.79
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 03:07:42.79
  E0911 03:07:43.058697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:44.059506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:45.060113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:46.060487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:47.060598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:48.061025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:49.061139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:50.061327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:51.061575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:52.061643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:53.062035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:54.062664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:55.063046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:56.063138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:57.063314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:58.063847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:07:59.063441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:00.064348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:01.065115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:02.065647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:03.067376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:04.068032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:05.068998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:06.069325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:08:06.862
  Sep 11 03:08:06.866: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-subpath-test-configmap-7khb container test-container-subpath-configmap-7khb: <nil>
  STEP: delete the pod @ 09/11/23 03:08:06.875
  STEP: Deleting pod pod-subpath-test-configmap-7khb @ 09/11/23 03:08:06.891
  Sep 11 03:08:06.891: INFO: Deleting pod "pod-subpath-test-configmap-7khb" in namespace "subpath-4083"
  Sep 11 03:08:06.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4083" for this suite. @ 09/11/23 03:08:06.902
• [24.164 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/11/23 03:08:06.911
  Sep 11 03:08:06.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-watch @ 09/11/23 03:08:06.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:08:06.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:08:06.941
  Sep 11 03:08:06.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:08:07.069809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:08.070021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:09.070532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/11/23 03:08:09.483
  Sep 11 03:08:09.489: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T03:08:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T03:08:09Z]] name:name1 resourceVersion:41554 uid:1ef82c45-98aa-439a-8baf-208e7dd32a22] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 03:08:10.070639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:11.070856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:12.071723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:13.071970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:14.072455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:15.072597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:16.072717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:17.072812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:18.073037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:19.073630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/11/23 03:08:19.489
  Sep 11 03:08:19.514: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T03:08:19Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T03:08:19Z]] name:name2 resourceVersion:41599 uid:240f5e4a-9389-451d-a4ad-cdb6953eea68] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 03:08:20.073744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:21.073845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:22.073952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:23.074752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:24.075520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:25.075644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:26.075777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:27.075918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:28.076341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:29.076564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/11/23 03:08:29.515
  Sep 11 03:08:29.523: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T03:08:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T03:08:29Z]] name:name1 resourceVersion:41635 uid:1ef82c45-98aa-439a-8baf-208e7dd32a22] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 03:08:30.076830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:31.076823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:32.077097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:33.077570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:34.078123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:35.078724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:36.079317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:37.079362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:38.079679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:39.080622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/11/23 03:08:39.524
  Sep 11 03:08:39.537: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T03:08:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T03:08:39Z]] name:name2 resourceVersion:41671 uid:240f5e4a-9389-451d-a4ad-cdb6953eea68] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 03:08:40.080992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:41.080885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:42.081032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:43.081528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:44.082536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:45.082803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:46.082913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:47.083021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:48.084651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:49.083296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/11/23 03:08:49.537
  Sep 11 03:08:49.547: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T03:08:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T03:08:29Z]] name:name1 resourceVersion:41707 uid:1ef82c45-98aa-439a-8baf-208e7dd32a22] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 03:08:50.083855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:51.084105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:52.084467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:53.084685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:54.085217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:55.088983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:56.089085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:57.089238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:58.089428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:08:59.090188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/11/23 03:08:59.547
  Sep 11 03:08:59.555: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T03:08:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T03:08:39Z]] name:name2 resourceVersion:41742 uid:240f5e4a-9389-451d-a4ad-cdb6953eea68] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 03:09:00.090690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:01.091644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:02.092483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:03.092588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:04.093602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:05.093673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:06.093799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:07.093900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:08.094158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:09.094600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:09:10.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-687" for this suite. @ 09/11/23 03:09:10.074
  E0911 03:09:10.094623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [63.488 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/11/23 03:09:10.403
  Sep 11 03:09:10.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 03:09:10.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:09:10.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:09:10.432
  STEP: Creating secret with name secret-test-map-c839a28c-c72b-40d6-a07a-cf869de923d2 @ 09/11/23 03:09:10.436
  STEP: Creating a pod to test consume secrets @ 09/11/23 03:09:10.444
  E0911 03:09:11.094763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:12.094818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:13.094989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:14.095626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:09:14.473
  Sep 11 03:09:14.477: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-secrets-e8d8f906-6e33-4fa8-8421-6bfeded62ca5 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 03:09:14.485
  Sep 11 03:09:14.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5558" for this suite. @ 09/11/23 03:09:14.517
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/11/23 03:09:14.533
  Sep 11 03:09:14.533: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:09:14.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:09:14.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:09:14.568
  STEP: Creating the pod @ 09/11/23 03:09:14.585
  E0911 03:09:15.095861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:16.096214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:17.096340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:09:17.743: INFO: Successfully updated pod "labelsupdate6107d62e-d2c2-4942-8024-218824cb4d89"
  E0911 03:09:18.097312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:19.097771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:09:19.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6508" for this suite. @ 09/11/23 03:09:19.766
• [5.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/11/23 03:09:19.781
  Sep 11 03:09:19.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:09:19.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:09:19.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:09:19.826
  STEP: Creating configMap with name configmap-projected-all-test-volume-2519acd4-9256-4181-b4ca-7f8b6bd70b18 @ 09/11/23 03:09:19.831
  STEP: Creating secret with name secret-projected-all-test-volume-037d1004-2d46-4a86-bae0-8a541abd6b0d @ 09/11/23 03:09:19.839
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/11/23 03:09:19.845
  E0911 03:09:20.097926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:21.097950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:22.098604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:23.098729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:09:23.875
  Sep 11 03:09:23.878: INFO: Trying to get logs from node ip-172-31-3-111 pod projected-volume-58dca5a1-2495-45aa-8317-122979eccb20 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 03:09:23.883
  Sep 11 03:09:23.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-517" for this suite. @ 09/11/23 03:09:23.901
• [4.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 09/11/23 03:09:23.91
  Sep 11 03:09:23.910: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:09:23.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:09:23.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:09:23.935
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/11/23 03:09:23.939
  E0911 03:09:24.099058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:25.099312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:26.099512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:27.100436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:09:27.967
  Sep 11 03:09:27.970: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-0fa77ea4-5553-4cd1-897f-fcab8181d28f container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:09:27.979
  Sep 11 03:09:27.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3158" for this suite. @ 09/11/23 03:09:27.999
• [4.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 09/11/23 03:09:28.007
  Sep 11 03:09:28.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:09:28.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:09:28.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:09:28.033
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/11/23 03:09:28.037
  E0911 03:09:28.100760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:29.101422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:30.102053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:31.103160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:09:32.057
  Sep 11 03:09:32.060: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-955b8494-5fe1-4b8d-9c68-38015b5867d9 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:09:32.065
  Sep 11 03:09:32.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2776" for this suite. @ 09/11/23 03:09:32.085
• [4.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/11/23 03:09:32.093
  Sep 11 03:09:32.093: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 03:09:32.095
  E0911 03:09:32.103676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:09:32.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:09:32.119
  STEP: Creating configMap with name cm-test-opt-del-7a9258ab-0252-46e3-9a7f-29810248f0a9 @ 09/11/23 03:09:32.125
  STEP: Creating configMap with name cm-test-opt-upd-0a705d55-49ce-471c-850a-2cab553602b9 @ 09/11/23 03:09:32.135
  STEP: Creating the pod @ 09/11/23 03:09:32.144
  E0911 03:09:33.104304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:34.104889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-7a9258ab-0252-46e3-9a7f-29810248f0a9 @ 09/11/23 03:09:34.183
  STEP: Updating configmap cm-test-opt-upd-0a705d55-49ce-471c-850a-2cab553602b9 @ 09/11/23 03:09:34.188
  STEP: Creating configMap with name cm-test-opt-create-8ecfc661-a52a-4067-a41d-05b43edd7e32 @ 09/11/23 03:09:34.193
  STEP: waiting to observe update in volume @ 09/11/23 03:09:34.2
  E0911 03:09:35.105248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:36.105601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:37.106008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:38.106104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:39.106253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:40.106403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:41.106456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:42.106565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:43.107058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:44.107599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:45.108671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:46.108767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:47.109189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:48.109611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:49.109856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:50.110748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:51.111814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:52.112174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:53.112270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:54.112545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:55.113427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:56.113604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:57.113803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:58.114164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:09:59.114485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:00.114801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:01.114916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:02.115432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:03.116415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:04.116496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:05.117188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:06.117549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:07.117680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:08.117781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:09.118652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:10.119004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:11.119637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:12.119740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:13.119884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:14.121024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:15.120942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:16.121079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:17.121911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:18.122598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:19.123131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:20.123306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:21.123425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:22.123831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:23.123953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:24.124672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:25.125197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:26.125265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:27.125790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:28.126006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:29.126559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:30.126674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:31.127312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:32.127745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:33.129894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:34.130650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:35.130944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:36.131196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:37.132045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:38.132042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:39.132576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:40.133092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:41.134156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:42.135234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:43.135567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:44.135584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:45.136505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:46.136544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:47.137363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:48.137656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:49.137696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:50.137817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:51.138694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:52.138973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:53.139398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:54.139914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:55.140032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:56.140061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:57.140866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:58.141230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:10:59.141346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:00.141520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:01.141543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:02.141655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:02.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4667" for this suite. @ 09/11/23 03:11:02.737
• [90.651 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 09/11/23 03:11:02.75
  Sep 11 03:11:02.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:11:02.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:11:02.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:11:02.777
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/11/23 03:11:02.781
  E0911 03:11:03.142756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:04.143696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:05.144023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:06.144366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:11:06.805
  Sep 11 03:11:06.809: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-d1558b4c-f530-4690-8792-3d5af58848f5 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:11:06.821
  Sep 11 03:11:06.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3519" for this suite. @ 09/11/23 03:11:06.842
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/11/23 03:11:06.856
  Sep 11 03:11:06.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/11/23 03:11:06.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:11:06.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:11:06.879
  STEP: creating @ 09/11/23 03:11:06.882
  STEP: getting @ 09/11/23 03:11:06.906
  STEP: listing in namespace @ 09/11/23 03:11:06.918
  STEP: patching @ 09/11/23 03:11:06.925
  STEP: deleting @ 09/11/23 03:11:06.939
  Sep 11 03:11:06.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3704" for this suite. @ 09/11/23 03:11:06.959
• [0.111 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 09/11/23 03:11:06.967
  Sep 11 03:11:06.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:11:06.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:11:06.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:11:06.993
  STEP: Starting the proxy @ 09/11/23 03:11:06.996
  Sep 11 03:11:06.996: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-6942 proxy --unix-socket=/tmp/kubectl-proxy-unix3164561709/test'
  STEP: retrieving proxy /api/ output @ 09/11/23 03:11:07.083
  Sep 11 03:11:07.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6942" for this suite. @ 09/11/23 03:11:07.088
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 09/11/23 03:11:07.096
  Sep 11 03:11:07.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 03:11:07.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:11:07.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:11:07.12
  STEP: Discovering how many secrets are in namespace by default @ 09/11/23 03:11:07.123
  E0911 03:11:07.145258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:08.145500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:09.145942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:10.146631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:11.147079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/11/23 03:11:12.127
  E0911 03:11:12.147599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:13.148417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:14.149562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:15.150407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:16.150630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 03:11:17.132
  STEP: Ensuring resource quota status is calculated @ 09/11/23 03:11:17.138
  E0911 03:11:17.150841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:18.150894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/11/23 03:11:19.142
  E0911 03:11:19.151526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures secret creation @ 09/11/23 03:11:19.154
  E0911 03:11:20.151699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:21.151933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/11/23 03:11:21.158
  STEP: Ensuring resource quota status released usage @ 09/11/23 03:11:21.163
  E0911 03:11:22.152092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:23.152213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:23.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5663" for this suite. @ 09/11/23 03:11:23.172
• [16.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/11/23 03:11:23.179
  Sep 11 03:11:23.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/11/23 03:11:23.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:11:23.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:11:23.211
  STEP: Setting up the test @ 09/11/23 03:11:23.217
  STEP: Creating hostNetwork=false pod @ 09/11/23 03:11:23.217
  E0911 03:11:24.152597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:25.153100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/11/23 03:11:25.254
  E0911 03:11:26.159699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:27.159739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/11/23 03:11:27.274
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/11/23 03:11:27.274
  Sep 11 03:11:27.274: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.274: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.275: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 03:11:27.343: INFO: Exec stderr: ""
  Sep 11 03:11:27.343: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.344: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.344: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 03:11:27.407: INFO: Exec stderr: ""
  Sep 11 03:11:27.407: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.408: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.408: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 03:11:27.467: INFO: Exec stderr: ""
  Sep 11 03:11:27.468: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.468: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.468: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.468: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 03:11:27.540: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/11/23 03:11:27.54
  Sep 11 03:11:27.540: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.541: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.541: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 11 03:11:27.598: INFO: Exec stderr: ""
  Sep 11 03:11:27.598: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.599: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.599: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 11 03:11:27.652: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/11/23 03:11:27.652
  Sep 11 03:11:27.652: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.653: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.653: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 03:11:27.743: INFO: Exec stderr: ""
  Sep 11 03:11:27.744: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.744: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.745: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 03:11:27.816: INFO: Exec stderr: ""
  Sep 11 03:11:27.816: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.816: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.816: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.817: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 03:11:27.880: INFO: Exec stderr: ""
  Sep 11 03:11:27.880: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3009 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:11:27.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:11:27.881: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:11:27.881: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3009/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 03:11:27.937: INFO: Exec stderr: ""
  Sep 11 03:11:27.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3009" for this suite. @ 09/11/23 03:11:27.942
• [4.769 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/11/23 03:11:27.949
  Sep 11 03:11:27.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 03:11:27.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:11:27.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:11:27.975
  STEP: Create a pod @ 09/11/23 03:11:27.979
  E0911 03:11:28.160356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:29.160902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/11/23 03:11:29.998
  Sep 11 03:11:30.006: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep 11 03:11:30.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4877" for this suite. @ 09/11/23 03:11:30.01
• [2.068 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/11/23 03:11:30.017
  Sep 11 03:11:30.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 03:11:30.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:11:30.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:11:30.089
  STEP: Creating pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094 @ 09/11/23 03:11:30.092
  E0911 03:11:30.161357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:31.161632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 03:11:32.109
  Sep 11 03:11:32.113: INFO: Initial restart count of pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 is 0
  Sep 11 03:11:32.116: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:32.162558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:33.162587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:34.121: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:34.163555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:35.164439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:36.125: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:36.165277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:37.165382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:38.130: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:38.165826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:39.166301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:40.134: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:40.167338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:41.167459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:42.138: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:42.167753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:43.167943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:44.142: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:44.169007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:45.169600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:46.146: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:46.170281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:47.171286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:48.150: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:48.171854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:49.172822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:50.154: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:50.173719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:51.174004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:52.159: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:52.174960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:53.175117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:54.164: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:54.176218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:55.176323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:56.168: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:56.177541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:57.177663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:11:58.172: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:11:58.178494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:11:59.178618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:00.175: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:00.179364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:01.179497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:02.180426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:02.181: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:03.180552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:04.180707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:04.185: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:05.180810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:06.180915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:06.189: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:07.181521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:08.181692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:08.193: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:09.182696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:10.183065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:10.198: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:11.183346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:12.183464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:12.202: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:13.183596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:14.184029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:14.207: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:15.184235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:16.184342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:16.210: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:17.184471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:18.184599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:18.215: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:19.184716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:20.184937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:20.220: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:21.185064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:22.185113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:22.225: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:23.185730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:24.186406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:24.230: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:25.186616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:26.186725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:26.234: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:27.187113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:28.187972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:28.238: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:29.188772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:30.188978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:30.243: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:31.189594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:32.189635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:32.248: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:33.189853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:34.190557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:34.252: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:35.190640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:36.190737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:36.257: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:37.190845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:38.190963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:38.262: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:39.191656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:40.191769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:40.266: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:41.192490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:42.192723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:42.271: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:43.193780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:44.194687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:44.276: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:45.194949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:46.195802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:46.281: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:47.196496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:48.196967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:48.285: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:49.197666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:50.197779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:50.718: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:51.198829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:52.199329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:52.723: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:53.199794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:54.200716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:54.726: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:55.200972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:56.201093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:56.730: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:57.201784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:12:58.201909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:12:58.736: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:12:59.202244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:00.202415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:00.740: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:01.202636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:02.202876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:02.745: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:03.203655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:04.204575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:04.749: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:05.205567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:06.205875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:06.753: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:07.206268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:08.206511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:08.757: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:09.207250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:10.207365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:10.761: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:11.208060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:12.208146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:12.765: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:13.209034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:14.209600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:14.769: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:15.209736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:16.210703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:16.773: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:17.211469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:18.211569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:18.777: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:19.211666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:20.212000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:20.781: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:21.212996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:22.213352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:22.787: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:23.213668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:24.214198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:24.791: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:25.215121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:26.215268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:26.796: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:27.215310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:28.215814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:28.801: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:29.216354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:30.216526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:30.970: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:31.217344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:32.217639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:32.976: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:33.218775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:34.218903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:34.980: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:35.219734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:36.219951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:36.984: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:37.220797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:38.221790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:38.988: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:39.222682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:40.222915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:40.991: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:41.223480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:42.223522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:42.997: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:43.224077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:44.225089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:45.001: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:45.225133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:46.225373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:47.008: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:47.225921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:48.226180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:49.012: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:49.227166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:50.228568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:51.017: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:51.228638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:52.228827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:53.022: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:53.229761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:54.230717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:55.025: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:55.231551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:56.231620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:57.029: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:57.232292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:13:58.232457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:13:59.034: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:13:59.232617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:00.232719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:01.037: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:01.232891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:02.233016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:03.042: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:03.233845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:04.234669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:05.047: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:05.235948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:06.236275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:07.051: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:07.237184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:08.237269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:09.056: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:09.238349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:10.238477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:11.059: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:11.239303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:12.239478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:13.064: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:13.239504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:14.239603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:15.068: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:15.240935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:16.241295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:17.072: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:17.241364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:18.241641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:19.077: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:19.241743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:20.241843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:21.081: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:21.242741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:22.242929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:23.086: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:23.243414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:24.244232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:25.090: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:25.245182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:26.245295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:27.103: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:27.246272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:28.246531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:29.107: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:29.246998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:30.247130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:31.111: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:31.248308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:32.248639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:33.117: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:33.249359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:34.249509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:35.121: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:35.250056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:36.250773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:37.130: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:37.251867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:38.251951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:39.134: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:39.252044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:40.252117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:41.139: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:41.252172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:42.252415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:43.143: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:43.253192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:44.253781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:45.148: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:45.254199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:46.254924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:47.153: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:47.255102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:48.255235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:49.157: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:49.256294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:50.256592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:51.162: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:51.257024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:52.257154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:53.167: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:53.258058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:54.258736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:55.171: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:55.259637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:56.259830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:57.175: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:57.259899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:14:58.260027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:14:59.179: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:14:59.260076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:00.260182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:01.183: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:01.260243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:02.260406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:03.188: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:03.261075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:04.261863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:05.194: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:05.262332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:06.262665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:07.199: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:07.263827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:08.263760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:09.204: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:09.264085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:10.264201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:11.208: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:11.264525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:12.264632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:13.212: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:13.264752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:14.265329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:15.216: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:15.266298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:16.266424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:17.220: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:17.266752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:18.266900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:19.224: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:19.267386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:20.267514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:21.229: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:21.268005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:22.268233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:23.234: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:23.269131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:24.269633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:25.239: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:25.270339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:26.275052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:27.242: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:27.275235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:28.275597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:29.247: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:29.275667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:30.275875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:31.250: INFO: Get pod liveness-b531f816-ad79-4e9b-9a2a-0b9acea6b338 in namespace container-probe-8094
  E0911 03:15:31.276201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:32.276326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:33.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 03:15:33.258
  E0911 03:15:33.276637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-8094" for this suite. @ 09/11/23 03:15:33.285
• [243.285 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 09/11/23 03:15:33.302
  Sep 11 03:15:33.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 03:15:33.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:15:33.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:15:33.336
  STEP: Counting existing ResourceQuota @ 09/11/23 03:15:33.344
  E0911 03:15:34.276558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:35.277578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:36.278532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:37.278715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:38.279161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 03:15:38.35
  STEP: Ensuring resource quota status is calculated @ 09/11/23 03:15:38.356
  E0911 03:15:39.280043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:40.280877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:40.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9994" for this suite. @ 09/11/23 03:15:40.364
• [7.068 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/11/23 03:15:40.372
  Sep 11 03:15:40.372: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 03:15:40.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:15:40.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:15:40.395
  STEP: Create set of pods @ 09/11/23 03:15:40.399
  Sep 11 03:15:40.411: INFO: created test-pod-1
  Sep 11 03:15:40.419: INFO: created test-pod-2
  Sep 11 03:15:40.427: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/11/23 03:15:40.427
  E0911 03:15:41.281889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:42.282746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/11/23 03:15:42.494
  Sep 11 03:15:42.498: INFO: Pod quantity 3 is different from expected quantity 0
  E0911 03:15:43.282845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:43.504: INFO: Pod quantity 3 is different from expected quantity 0
  E0911 03:15:44.283858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:44.504: INFO: Pod quantity 3 is different from expected quantity 0
  E0911 03:15:45.284245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:45.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1257" for this suite. @ 09/11/23 03:15:45.51
• [5.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 09/11/23 03:15:45.524
  Sep 11 03:15:45.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:15:45.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:15:45.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:15:45.547
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 03:15:45.55
  Sep 11 03:15:45.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3774 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 11 03:15:45.677: INFO: stderr: ""
  Sep 11 03:15:45.677: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/11/23 03:15:45.677
  Sep 11 03:15:45.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3774 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Sep 11 03:15:45.780: INFO: stderr: ""
  Sep 11 03:15:45.781: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 03:15:45.781
  Sep 11 03:15:45.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-3774 delete pods e2e-test-httpd-pod'
  E0911 03:15:46.284778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:15:47.269: INFO: stderr: ""
  Sep 11 03:15:47.269: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 11 03:15:47.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3774" for this suite. @ 09/11/23 03:15:47.275
• [1.758 seconds]
------------------------------
  E0911 03:15:47.285745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/11/23 03:15:47.289
  Sep 11 03:15:47.289: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename job @ 09/11/23 03:15:47.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:15:47.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:15:47.318
  STEP: Creating a job @ 09/11/23 03:15:47.323
  STEP: Ensuring active pods == parallelism @ 09/11/23 03:15:47.333
  E0911 03:15:48.286743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:49.287242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/11/23 03:15:49.338
  STEP: deleting Job.batch foo in namespace job-1042, will wait for the garbage collector to delete the pods @ 09/11/23 03:15:49.338
  Sep 11 03:15:49.399: INFO: Deleting Job.batch foo took: 7.03474ms
  Sep 11 03:15:49.499: INFO: Terminating Job.batch foo pods took: 100.614853ms
  E0911 03:15:50.287523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:51.288413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:52.289173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:53.289625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:54.289718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:55.290759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:56.291043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:57.292085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:58.292779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:15:59.293756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:00.294665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:01.295711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:02.296087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:03.296153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:04.297222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:05.297540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:06.298220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:07.298747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:08.299814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:09.300210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:10.300473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:11.300754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:12.300774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:13.301430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:14.302444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:15.302819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:16.303059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:17.303769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:18.304834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:19.305162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:20.305352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/11/23 03:16:20.4
  Sep 11 03:16:20.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1042" for this suite. @ 09/11/23 03:16:20.41
• [33.131 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 09/11/23 03:16:20.42
  Sep 11 03:16:20.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/11/23 03:16:20.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:16:20.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:16:20.446
  Sep 11 03:16:20.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:16:21.306031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:22.306905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:23.307369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:16:23.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5883" for this suite. @ 09/11/23 03:16:23.545
• [3.131 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 09/11/23 03:16:23.551
  Sep 11 03:16:23.551: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 03:16:23.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:16:23.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:16:23.572
  STEP: Creating service test in namespace statefulset-5812 @ 09/11/23 03:16:23.575
  STEP: Creating statefulset ss in namespace statefulset-5812 @ 09/11/23 03:16:23.589
  Sep 11 03:16:23.606: INFO: Found 0 stateful pods, waiting for 1
  E0911 03:16:24.308326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:25.308782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:26.308883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:27.309258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:28.310140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:29.310715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:30.310993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:31.311353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:32.311969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:33.312334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:16:33.615: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/11/23 03:16:33.622
  STEP: Getting /status @ 09/11/23 03:16:33.631
  Sep 11 03:16:33.636: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/11/23 03:16:33.636
  Sep 11 03:16:33.646: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/11/23 03:16:33.647
  Sep 11 03:16:33.649: INFO: Observed &StatefulSet event: ADDED
  Sep 11 03:16:33.649: INFO: Found Statefulset ss in namespace statefulset-5812 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 03:16:33.649: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/11/23 03:16:33.649
  Sep 11 03:16:33.649: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 11 03:16:33.656: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/11/23 03:16:33.656
  Sep 11 03:16:33.659: INFO: Observed &StatefulSet event: ADDED
  Sep 11 03:16:33.659: INFO: Observed Statefulset ss in namespace statefulset-5812 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 03:16:33.659: INFO: Observed &StatefulSet event: MODIFIED
  Sep 11 03:16:33.659: INFO: Found Statefulset ss in namespace statefulset-5812 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep 11 03:16:33.659: INFO: Deleting all statefulset in ns statefulset-5812
  Sep 11 03:16:33.663: INFO: Scaling statefulset ss to 0
  E0911 03:16:34.312491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:35.312610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:36.312774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:37.312911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:38.313902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:39.314398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:40.314535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:41.314778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:42.314828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:43.314967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:16:43.680: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 03:16:43.684: INFO: Deleting statefulset ss
  Sep 11 03:16:43.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5812" for this suite. @ 09/11/23 03:16:43.706
• [20.162 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/11/23 03:16:43.714
  Sep 11 03:16:43.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 03:16:43.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:16:43.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:16:43.741
  STEP: Setting up server cert @ 09/11/23 03:16:43.772
  E0911 03:16:44.315525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 03:16:44.69
  STEP: Deploying the webhook pod @ 09/11/23 03:16:44.699
  STEP: Wait for the deployment to be ready @ 09/11/23 03:16:44.71
  Sep 11 03:16:44.719: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 03:16:45.315650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:46.315768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 03:16:46.729
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 03:16:46.74
  E0911 03:16:47.316737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:16:47.741: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/11/23 03:16:47.803
  STEP: Creating a configMap that should be mutated @ 09/11/23 03:16:47.823
  STEP: Deleting the collection of validation webhooks @ 09/11/23 03:16:47.86
  STEP: Creating a configMap that should not be mutated @ 09/11/23 03:16:47.913
  Sep 11 03:16:47.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7345" for this suite. @ 09/11/23 03:16:47.976
  STEP: Destroying namespace "webhook-markers-4433" for this suite. @ 09/11/23 03:16:47.985
• [4.278 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/11/23 03:16:47.992
  Sep 11 03:16:47.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 03:16:47.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:16:48.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:16:48.017
  E0911 03:16:48.317146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:49.317704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:16:50.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 03:16:50.045: INFO: Deleting pod "var-expansion-6b5be1b1-2810-4289-8f0b-f345d0ecf8f6" in namespace "var-expansion-811"
  Sep 11 03:16:50.053: INFO: Wait up to 5m0s for pod "var-expansion-6b5be1b1-2810-4289-8f0b-f345d0ecf8f6" to be fully deleted
  E0911 03:16:50.318445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:51.318712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-811" for this suite. @ 09/11/23 03:16:52.064
• [4.080 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 09/11/23 03:16:52.073
  Sep 11 03:16:52.073: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:16:52.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:16:52.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:16:52.104
  STEP: creating service in namespace services-1260 @ 09/11/23 03:16:52.109
  STEP: creating service affinity-clusterip in namespace services-1260 @ 09/11/23 03:16:52.109
  STEP: creating replication controller affinity-clusterip in namespace services-1260 @ 09/11/23 03:16:52.128
  I0911 03:16:52.152918      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-1260, replica count: 3
  E0911 03:16:52.318867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:53.319488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:54.319627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 03:16:55.204680      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 03:16:55.213: INFO: Creating new exec pod
  E0911 03:16:55.320467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:56.320614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:16:57.321527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:16:58.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1260 exec execpod-affinityqcxvw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0911 03:16:58.321870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:16:58.403: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep 11 03:16:58.403: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 03:16:58.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1260 exec execpod-affinityqcxvw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.56.14 80'
  Sep 11 03:16:58.562: INFO: stderr: "+ nc -v -t -w 2 10.43.56.14 80\nConnection to 10.43.56.14 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep 11 03:16:58.562: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 03:16:58.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-1260 exec execpod-affinityqcxvw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.56.14:80/ ; done'
  Sep 11 03:16:58.816: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.56.14:80/\n"
  Sep 11 03:16:58.816: INFO: stdout: "\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5\naffinity-clusterip-24sj5"
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Received response from host: affinity-clusterip-24sj5
  Sep 11 03:16:58.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 03:16:58.821: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1260, will wait for the garbage collector to delete the pods @ 09/11/23 03:16:58.832
  Sep 11 03:16:58.895: INFO: Deleting ReplicationController affinity-clusterip took: 6.780494ms
  Sep 11 03:16:58.996: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.510606ms
  E0911 03:16:59.322584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:00.323366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:01.323917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:02.324791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1260" for this suite. @ 09/11/23 03:17:02.773
• [10.706 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 09/11/23 03:17:02.782
  Sep 11 03:17:02.782: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename gc @ 09/11/23 03:17:02.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:02.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:02.804
  STEP: create the deployment @ 09/11/23 03:17:02.807
  W0911 03:17:02.816473      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/11/23 03:17:02.816
  E0911 03:17:03.325173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/11/23 03:17:03.332
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/11/23 03:17:03.345
  STEP: Gathering metrics @ 09/11/23 03:17:03.87
  W0911 03:17:03.874702      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 11 03:17:03.874: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 03:17:03.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-545" for this suite. @ 09/11/23 03:17:03.878
• [1.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/11/23 03:17:03.886
  Sep 11 03:17:03.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 03:17:03.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:03.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:03.915
  STEP: Creating a cronjob @ 09/11/23 03:17:03.919
  STEP: creating @ 09/11/23 03:17:03.919
  STEP: getting @ 09/11/23 03:17:03.926
  STEP: listing @ 09/11/23 03:17:03.93
  STEP: watching @ 09/11/23 03:17:03.933
  Sep 11 03:17:03.933: INFO: starting watch
  STEP: cluster-wide listing @ 09/11/23 03:17:03.935
  STEP: cluster-wide watching @ 09/11/23 03:17:03.938
  Sep 11 03:17:03.938: INFO: starting watch
  STEP: patching @ 09/11/23 03:17:03.94
  STEP: updating @ 09/11/23 03:17:03.948
  Sep 11 03:17:03.958: INFO: waiting for watch events with expected annotations
  Sep 11 03:17:03.958: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/11/23 03:17:03.958
  STEP: updating /status @ 09/11/23 03:17:03.968
  STEP: get /status @ 09/11/23 03:17:03.976
  STEP: deleting @ 09/11/23 03:17:03.98
  STEP: deleting a collection @ 09/11/23 03:17:03.995
  Sep 11 03:17:04.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8086" for this suite. @ 09/11/23 03:17:04.009
• [0.129 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 09/11/23 03:17:04.017
  Sep 11 03:17:04.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:17:04.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:04.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:04.039
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 03:17:04.041
  Sep 11 03:17:04.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-2575 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 11 03:17:04.132: INFO: stderr: ""
  Sep 11 03:17:04.132: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/11/23 03:17:04.132
  E0911 03:17:04.326102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:05.326725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:06.327767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:07.327986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:08.328960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/11/23 03:17:09.184
  Sep 11 03:17:09.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-2575 get pod e2e-test-httpd-pod -o json'
  Sep 11 03:17:09.294: INFO: stderr: ""
  Sep 11 03:17:09.294: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-09-11T03:17:04Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2575\",\n        \"resourceVersion\": \"44289\",\n        \"uid\": \"68eb1c41-8b2e-486e-a08d-6f0eb8edf1c7\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-lf5vm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-3-111\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-lf5vm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T03:17:04Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T03:17:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T03:17:05Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T03:17:04Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://c8af195508cf0d9bf472283b0ed6b524250032370eddb66faf5c92144bd08b38\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-09-11T03:17:04Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.3.111\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.56\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.56\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-09-11T03:17:04Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/11/23 03:17:09.294
  Sep 11 03:17:09.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-2575 replace -f -'
  E0911 03:17:09.330097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:10.173: INFO: stderr: ""
  Sep 11 03:17:10.173: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 09/11/23 03:17:10.173
  Sep 11 03:17:10.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-2575 delete pods e2e-test-httpd-pod'
  E0911 03:17:10.330591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:11.330743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:11.469: INFO: stderr: ""
  Sep 11 03:17:11.469: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 11 03:17:11.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2575" for this suite. @ 09/11/23 03:17:11.474
• [7.465 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/11/23 03:17:11.482
  Sep 11 03:17:11.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename prestop @ 09/11/23 03:17:11.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:11.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:11.504
  STEP: Creating server pod server in namespace prestop-3727 @ 09/11/23 03:17:11.506
  STEP: Waiting for pods to come up. @ 09/11/23 03:17:11.515
  E0911 03:17:12.331028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:13.331485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-3727 @ 09/11/23 03:17:13.525
  E0911 03:17:14.332132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:15.332331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/11/23 03:17:15.542
  E0911 03:17:16.333346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:17.333483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:18.333647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:19.333767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:20.335028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:20.559: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Sep 11 03:17:20.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 09/11/23 03:17:20.563
  STEP: Destroying namespace "prestop-3727" for this suite. @ 09/11/23 03:17:20.576
• [9.104 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/11/23 03:17:20.586
  Sep 11 03:17:20.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 03:17:20.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:20.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:20.621
  STEP: Creating the pod @ 09/11/23 03:17:20.625
  E0911 03:17:21.335869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:22.335969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:23.176: INFO: Successfully updated pod "annotationupdate23fce162-ce4e-44c6-94b9-b593ae4903c9"
  E0911 03:17:23.336325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:24.336765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:25.337150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:26.337438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:27.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7297" for this suite. @ 09/11/23 03:17:27.2
• [6.621 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/11/23 03:17:27.209
  Sep 11 03:17:27.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/11/23 03:17:27.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:27.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:27.23
  E0911 03:17:27.337550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:28.337721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:29.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 09/11/23 03:17:29.274
  STEP: Cleaning up the configmap @ 09/11/23 03:17:29.28
  STEP: Cleaning up the pod @ 09/11/23 03:17:29.286
  STEP: Destroying namespace "emptydir-wrapper-1297" for this suite. @ 09/11/23 03:17:29.305
• [2.105 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/11/23 03:17:29.314
  Sep 11 03:17:29.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 03:17:29.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:29.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:29.338
  E0911 03:17:29.338516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test substitution in container's args @ 09/11/23 03:17:29.34
  E0911 03:17:30.338696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:31.338876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:32.339026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:33.339207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:17:33.364
  Sep 11 03:17:33.366: INFO: Trying to get logs from node ip-172-31-3-111 pod var-expansion-72ca1d94-d1a8-4107-b327-c64e46afef88 container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 03:17:33.383
  Sep 11 03:17:33.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8644" for this suite. @ 09/11/23 03:17:33.419
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 09/11/23 03:17:33.427
  Sep 11 03:17:33.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 03:17:33.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:33.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:33.447
  Sep 11 03:17:33.458: INFO: Endpoints addresses: [18.118.26.76 18.188.162.225 3.142.196.75] , ports: [6443]
  Sep 11 03:17:33.459: INFO: EndpointSlices addresses: [18.118.26.76 18.188.162.225 3.142.196.75] , ports: [6443]
  Sep 11 03:17:33.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5467" for this suite. @ 09/11/23 03:17:33.463
• [0.042 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/11/23 03:17:33.47
  Sep 11 03:17:33.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:17:33.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:33.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:33.489
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4247 @ 09/11/23 03:17:33.491
  STEP: changing the ExternalName service to type=ClusterIP @ 09/11/23 03:17:33.497
  STEP: creating replication controller externalname-service in namespace services-4247 @ 09/11/23 03:17:33.511
  I0911 03:17:33.520892      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4247, replica count: 2
  E0911 03:17:34.340129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:35.340250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:36.340660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 03:17:36.572324      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 03:17:36.572: INFO: Creating new exec pod
  E0911 03:17:37.340794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:38.340911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:39.341147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:39.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4247 exec execpodnq98g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 11 03:17:39.739: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 11 03:17:39.739: INFO: stdout: ""
  E0911 03:17:40.342181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:17:40.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4247 exec execpodnq98g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 11 03:17:40.895: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 11 03:17:40.895: INFO: stdout: "externalname-service-42b75"
  Sep 11 03:17:40.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-4247 exec execpodnq98g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.119.223 80'
  Sep 11 03:17:41.035: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.119.223 80\nConnection to 10.43.119.223 80 port [tcp/http] succeeded!\n"
  Sep 11 03:17:41.035: INFO: stdout: "externalname-service-42b75"
  Sep 11 03:17:41.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 03:17:41.039: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-4247" for this suite. @ 09/11/23 03:17:41.069
• [7.606 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/11/23 03:17:41.077
  Sep 11 03:17:41.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:17:41.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:17:41.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:17:41.105
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-fcbe396c-cbb7-48d2-ba37-137365e4fe69 @ 09/11/23 03:17:41.112
  STEP: Creating the pod @ 09/11/23 03:17:41.117
  E0911 03:17:41.343154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:42.343439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-fcbe396c-cbb7-48d2-ba37-137365e4fe69 @ 09/11/23 03:17:43.158
  STEP: waiting to observe update in volume @ 09/11/23 03:17:43.163
  E0911 03:17:43.343431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:44.343567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:45.344269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:46.344745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:47.345204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:48.345257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:49.346203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:50.346759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:51.346850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:52.346971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:53.347175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:54.347361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:55.347422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:56.347528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:57.347679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:58.347813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:17:59.348785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:00.348912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:01.349406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:02.349691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:03.350303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:04.350745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:05.351667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:06.351761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:07.352843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:08.353190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:09.353894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:10.354936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:11.355604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:12.355781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:13.356739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:14.356878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:15.357593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:16.357691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:17.358243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:18.358350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:19.359302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:20.359259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:21.359677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:22.359753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:23.360661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:24.360805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:25.361631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:26.361890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:27.362638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:28.363186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:29.363962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:30.364083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:31.365033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:32.365149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:33.365838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:34.365951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:35.366942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:36.367052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:37.367133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:38.367971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:39.368293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:40.368560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:41.368788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:42.369915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:43.370803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:44.370950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:45.371220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:46.371337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:47.371483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:48.372381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:49.372577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:50.372943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:51.373162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:52.373640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:53.374268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:54.374649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:55.374811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:56.375099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:57.375343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:58.375685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:18:59.375843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:00.375982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:01.376090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:02.376576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:03.378158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:04.378675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:05.378781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:06.378951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:07.379676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:08.380604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:09.380919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:10.381044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:11.381153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:11.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5333" for this suite. @ 09/11/23 03:19:11.589
• [90.518 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/11/23 03:19:11.596
  Sep 11 03:19:11.596: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename watch @ 09/11/23 03:19:11.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:11.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:11.647
  STEP: creating a new configmap @ 09/11/23 03:19:11.65
  STEP: modifying the configmap once @ 09/11/23 03:19:11.655
  STEP: modifying the configmap a second time @ 09/11/23 03:19:11.664
  STEP: deleting the configmap @ 09/11/23 03:19:11.673
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/11/23 03:19:11.68
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/11/23 03:19:11.682
  Sep 11 03:19:11.682: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6043  3cdd8e01-8fcd-475b-84c0-d03be5b1b37a 45036 0 2023-09-11 03:19:11 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-11 03:19:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:19:11.682: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6043  3cdd8e01-8fcd-475b-84c0-d03be5b1b37a 45038 0 2023-09-11 03:19:11 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-11 03:19:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:19:11.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6043" for this suite. @ 09/11/23 03:19:11.687
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/11/23 03:19:11.695
  Sep 11 03:19:11.696: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:19:11.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:11.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:11.719
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 03:19:11.722
  E0911 03:19:12.381318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:13.381602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:14.382362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:15.382469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:19:15.744
  Sep 11 03:19:15.747: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-b8faf980-205c-4aa1-ae1d-95e7efeab84e container client-container: <nil>
  STEP: delete the pod @ 09/11/23 03:19:15.758
  Sep 11 03:19:15.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5668" for this suite. @ 09/11/23 03:19:15.778
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/11/23 03:19:15.788
  Sep 11 03:19:15.789: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 03:19:15.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:15.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:15.813
  STEP: Setting up server cert @ 09/11/23 03:19:15.846
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 03:19:16.226
  STEP: Deploying the webhook pod @ 09/11/23 03:19:16.234
  STEP: Wait for the deployment to be ready @ 09/11/23 03:19:16.246
  Sep 11 03:19:16.262: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 03:19:16.383098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:17.383376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 03:19:18.271
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 03:19:18.28
  E0911 03:19:18.383685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:19.281: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 11 03:19:19.288: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:19:19.383970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4739-crds.webhook.example.com via the AdmissionRegistration API @ 09/11/23 03:19:19.802
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/11/23 03:19:19.822
  E0911 03:19:20.384030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:21.384422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:21.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 03:19:22.385447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-879" for this suite. @ 09/11/23 03:19:22.432
  STEP: Destroying namespace "webhook-markers-2034" for this suite. @ 09/11/23 03:19:22.44
• [6.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/11/23 03:19:22.449
  Sep 11 03:19:22.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 03:19:22.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:22.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:22.474
  Sep 11 03:19:22.477: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 03:19:22.486: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 03:19:22.490: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-123 before test
  Sep 11 03:19:22.496: INFO: coredns-6799fbcd5-t5lmx from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: helm-install-traefik-25npw from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container helm ready: false, restart count 1
  Sep 11 03:19:22.496: INFO: helm-install-traefik-crd-n6vdt from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container helm ready: false, restart count 0
  Sep 11 03:19:22.496: INFO: local-path-provisioner-84db5d44d9-wmj2n from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: metrics-server-67c658944b-4kxpp from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: svclb-traefik-d4416a3e-v4mbb from kube-system started at 2023-09-11 01:33:59 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: traefik-7bf7d7576d-zts4g from kube-system started at 2023-09-11 01:33:59 +0000 UTC (1 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container traefik ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-rdpcs from sonobuoy started at 2023-09-11 01:45:14 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.496: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 03:19:22.496: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-171 before test
  Sep 11 03:19:22.501: INFO: svclb-traefik-d4416a3e-gjxxg from kube-system started at 2023-09-11 01:36:25 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.501: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:19:22.501: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:19:22.501: INFO: sonobuoy-e2e-job-3860deceeabb4fa2 from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.501: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 03:19:22.501: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:19:22.501: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-8mdgj from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.501: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:19:22.501: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 03:19:22.501: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-111 before test
  Sep 11 03:19:22.505: INFO: svclb-traefik-d4416a3e-g59hv from kube-system started at 2023-09-11 02:52:11 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.505: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:19:22.505: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:19:22.505: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mxbgr from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.505: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:19:22.505: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 03:19:22.505: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-243 before test
  Sep 11 03:19:22.511: INFO: svclb-traefik-d4416a3e-m87c8 from kube-system started at 2023-09-11 01:36:39 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.512: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:19:22.512: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:19:22.512: INFO: sonobuoy from sonobuoy started at 2023-09-11 01:45:10 +0000 UTC (1 container statuses recorded)
  Sep 11 03:19:22.512: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 03:19:22.512: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mnxvh from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:19:22.512: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:19:22.512: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/11/23 03:19:22.512
  E0911 03:19:23.386234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:24.386338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/11/23 03:19:24.535
  STEP: Trying to apply a random label on the found node. @ 09/11/23 03:19:24.547
  STEP: verifying the node has the label kubernetes.io/e2e-996a6137-19e5-4915-80ee-3fb7d8cc6232 42 @ 09/11/23 03:19:24.559
  STEP: Trying to relaunch the pod, now with labels. @ 09/11/23 03:19:24.564
  E0911 03:19:25.386616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:26.396615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-996a6137-19e5-4915-80ee-3fb7d8cc6232 off the node ip-172-31-3-111 @ 09/11/23 03:19:26.582
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-996a6137-19e5-4915-80ee-3fb7d8cc6232 @ 09/11/23 03:19:26.593
  Sep 11 03:19:26.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4467" for this suite. @ 09/11/23 03:19:26.601
• [4.158 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/11/23 03:19:26.607
  Sep 11 03:19:26.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:19:26.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:26.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:26.639
  STEP: Creating projection with secret that has name projected-secret-test-map-c5309d08-c8ab-4d57-8cc6-541273c66de7 @ 09/11/23 03:19:26.643
  STEP: Creating a pod to test consume secrets @ 09/11/23 03:19:26.649
  E0911 03:19:27.397526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:28.397632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:19:28.683
  Sep 11 03:19:28.688: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-projected-secrets-07013395-c239-4600-985f-6261a4550668 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 03:19:28.698
  Sep 11 03:19:28.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6359" for this suite. @ 09/11/23 03:19:28.721
• [2.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 09/11/23 03:19:28.727
  Sep 11 03:19:28.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename events @ 09/11/23 03:19:28.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:28.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:28.747
  STEP: Create set of events @ 09/11/23 03:19:28.749
  Sep 11 03:19:28.753: INFO: created test-event-1
  Sep 11 03:19:28.758: INFO: created test-event-2
  Sep 11 03:19:28.763: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/11/23 03:19:28.763
  STEP: delete collection of events @ 09/11/23 03:19:28.766
  Sep 11 03:19:28.766: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/11/23 03:19:28.785
  Sep 11 03:19:28.785: INFO: requesting list of events to confirm quantity
  Sep 11 03:19:28.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7636" for this suite. @ 09/11/23 03:19:28.792
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 09/11/23 03:19:28.8
  Sep 11 03:19:28.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:19:28.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:28.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:28.818
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/11/23 03:19:28.821
  E0911 03:19:29.398491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:30.398703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:19:30.837
  Sep 11 03:19:30.840: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-282dff75-dc45-403e-92c9-0992f5c760cd container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:19:30.846
  Sep 11 03:19:30.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6366" for this suite. @ 09/11/23 03:19:30.883
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/11/23 03:19:30.899
  Sep 11 03:19:30.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 03:19:30.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:30.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:30.926
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/11/23 03:19:30.928
  Sep 11 03:19:30.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:19:31.398998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:32.399175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:32.790: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:19:33.400116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:34.400765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:35.401310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:36.401263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:37.401401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:38.401649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:39.402650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:39.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7351" for this suite. @ 09/11/23 03:19:39.678
• [8.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 09/11/23 03:19:39.689
  Sep 11 03:19:39.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 03:19:39.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:39.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:39.714
  STEP: Creating configMap configmap-158/configmap-test-4d27dea1-d7cf-4d75-abdd-ea1e6fa4a248 @ 09/11/23 03:19:39.719
  STEP: Creating a pod to test consume configMaps @ 09/11/23 03:19:39.728
  E0911 03:19:40.403649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:41.404063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:42.404160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:43.404268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:19:43.754
  Sep 11 03:19:43.757: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-a5ea3332-cece-4b5c-bfa9-a94912651507 container env-test: <nil>
  STEP: delete the pod @ 09/11/23 03:19:43.765
  Sep 11 03:19:43.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-158" for this suite. @ 09/11/23 03:19:43.785
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/11/23 03:19:43.795
  Sep 11 03:19:43.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 03:19:43.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:43.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:43.82
  STEP: Setting up server cert @ 09/11/23 03:19:43.846
  E0911 03:19:44.404715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 03:19:44.653
  STEP: Deploying the webhook pod @ 09/11/23 03:19:44.658
  STEP: Wait for the deployment to be ready @ 09/11/23 03:19:44.67
  Sep 11 03:19:44.681: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 03:19:45.405636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:46.405739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 03:19:46.692
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 03:19:46.701
  E0911 03:19:47.406750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:47.702: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 11 03:19:48.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:19:48.407717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1599-crds.webhook.example.com via the AdmissionRegistration API @ 09/11/23 03:19:48.548
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/11/23 03:19:48.578
  E0911 03:19:49.408159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:19:50.408209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:50.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6240" for this suite. @ 09/11/23 03:19:51.243
  STEP: Destroying namespace "webhook-markers-9725" for this suite. @ 09/11/23 03:19:51.249
• [7.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 09/11/23 03:19:51.257
  Sep 11 03:19:51.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:19:51.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:51.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:51.281
  STEP: creating a collection of services @ 09/11/23 03:19:51.285
  Sep 11 03:19:51.285: INFO: Creating e2e-svc-a-8nxhl
  Sep 11 03:19:51.296: INFO: Creating e2e-svc-b-zncxm
  Sep 11 03:19:51.308: INFO: Creating e2e-svc-c-ddg9f
  STEP: deleting service collection @ 09/11/23 03:19:51.321
  Sep 11 03:19:51.348: INFO: Collection of services has been deleted
  Sep 11 03:19:51.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2040" for this suite. @ 09/11/23 03:19:51.352
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/11/23 03:19:51.363
  Sep 11 03:19:51.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 03:19:51.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:19:51.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:19:51.382
  E0911 03:19:51.408378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:51.408: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 03:19:51.413
  Sep 11 03:19:51.425: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 03:19:51.425: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 03:19:52.408654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:52.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 11 03:19:52.433: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 03:19:53.408688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:53.440: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 03:19:53.440: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/11/23 03:19:53.452
  STEP: Check that daemon pods images are updated. @ 09/11/23 03:19:53.468
  Sep 11 03:19:53.475: INFO: Wrong image for pod: daemon-set-hjk4l. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 11 03:19:53.475: INFO: Wrong image for pod: daemon-set-nlf6v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 11 03:19:53.475: INFO: Wrong image for pod: daemon-set-tmz8k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0911 03:19:54.409310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:54.489: INFO: Wrong image for pod: daemon-set-hjk4l. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 11 03:19:54.489: INFO: Wrong image for pod: daemon-set-nlf6v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 11 03:19:54.489: INFO: Pod daemon-set-rnzlc is not available
  Sep 11 03:19:54.490: INFO: Wrong image for pod: daemon-set-tmz8k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0911 03:19:55.410323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:55.494: INFO: Wrong image for pod: daemon-set-hjk4l. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 11 03:19:55.494: INFO: Wrong image for pod: daemon-set-nlf6v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 11 03:19:55.494: INFO: Pod daemon-set-t54qk is not available
  E0911 03:19:56.411153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:56.490: INFO: Wrong image for pod: daemon-set-nlf6v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 11 03:19:56.490: INFO: Pod daemon-set-sg5ql is not available
  E0911 03:19:57.411489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:57.489: INFO: Pod daemon-set-drnx5 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/11/23 03:19:57.494
  Sep 11 03:19:57.502: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 03:19:57.502: INFO: Node ip-172-31-12-171 is running 0 daemon pod, expected 1
  E0911 03:19:58.411718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:19:58.510: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 03:19:58.510: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 03:19:58.525
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-638, will wait for the garbage collector to delete the pods @ 09/11/23 03:19:58.525
  Sep 11 03:19:58.585: INFO: Deleting DaemonSet.extensions daemon-set took: 6.86958ms
  Sep 11 03:19:58.686: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.04518ms
  E0911 03:19:59.411657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:20:00.391: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 03:20:00.391: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 03:20:00.395: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45726"},"items":null}

  Sep 11 03:20:00.399: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45726"},"items":null}

  E0911 03:20:00.412311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:20:00.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-638" for this suite. @ 09/11/23 03:20:00.422
• [9.066 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 09/11/23 03:20:00.429
  Sep 11 03:20:00.429: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 03:20:00.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:20:00.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:20:00.452
  STEP: Creating a pod to test service account token:  @ 09/11/23 03:20:00.455
  E0911 03:20:01.413143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:02.413261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:03.413619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:04.414081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:20:04.474
  Sep 11 03:20:04.480: INFO: Trying to get logs from node ip-172-31-3-111 pod test-pod-537436f4-e0c1-4bc1-84c6-a1cef910a9df container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 03:20:04.491
  Sep 11 03:20:04.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6965" for this suite. @ 09/11/23 03:20:04.529
• [4.116 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/11/23 03:20:04.546
  Sep 11 03:20:04.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:20:04.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:20:04.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:20:04.587
  STEP: Creating projection with secret that has name projected-secret-test-b56a7e5f-ea97-4452-9673-e46c8d76f5cb @ 09/11/23 03:20:04.593
  STEP: Creating a pod to test consume secrets @ 09/11/23 03:20:04.6
  E0911 03:20:05.414423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:06.414522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:07.414761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:08.415142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:20:08.629
  Sep 11 03:20:08.632: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-secrets-0793ea5d-1a58-4a2a-84cb-cd16100d4c26 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 03:20:08.638
  Sep 11 03:20:08.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9008" for this suite. @ 09/11/23 03:20:08.661
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/11/23 03:20:08.67
  Sep 11 03:20:08.670: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 03:20:08.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:20:08.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:20:08.7
  STEP: creating the pod with failed condition @ 09/11/23 03:20:08.704
  E0911 03:20:09.415286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:10.415385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:11.415630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:12.415637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:13.416122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:14.416659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:15.417722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:16.417838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:17.417992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:18.418092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:19.418635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:20.419788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:21.420823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:22.420936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:23.422001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:24.422220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:25.422311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:26.422424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:27.422783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:28.423154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:29.423484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:30.423751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:31.423936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:32.424051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:33.424977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:34.425755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:35.425889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:36.429381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:37.429790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:38.429959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:39.430742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:40.431494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:41.431949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:42.432107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:43.432221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:44.433010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:45.433130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:46.433269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:47.434242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:48.434375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:49.435189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:50.435541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:51.436379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:52.436490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:53.436620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:54.436825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:55.437804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:56.438710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:57.439120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:58.439388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:20:59.439634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:00.439918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:01.439904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:02.440380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:03.441811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:04.442763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:05.443485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:06.444023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:07.444173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:08.444294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:09.444406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:10.444579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:11.444938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:12.445241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:13.446076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:14.446780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:15.447599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:16.447935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:17.448057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:18.448157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:19.448906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:20.449036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:21.449200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:22.449301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:23.450163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:24.450706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:25.450824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:26.450922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:27.451068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:28.451171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:29.452180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:30.452647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:31.452816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:32.453624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:33.454325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:34.454679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:35.454842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:36.454967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:37.455771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:38.455919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:39.456259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:40.456349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:41.456858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:42.456974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:43.457418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:44.457623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:45.457845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:46.458677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:47.459395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:48.460338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:49.460455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:50.460602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:51.460707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:52.460827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:53.460987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:54.461145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:55.461269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:56.462178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:57.462684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:58.462819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:21:59.463828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:00.464727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:01.465367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:02.465623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:03.465715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:04.466523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:05.467559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:06.467634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:07.468677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:08.468964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/11/23 03:22:08.712
  Sep 11 03:22:09.226: INFO: Successfully updated pod "var-expansion-395bb352-088f-4ed0-aaff-75c70dff82ea"
  STEP: waiting for pod running @ 09/11/23 03:22:09.226
  E0911 03:22:09.469537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:10.469740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/11/23 03:22:11.236
  Sep 11 03:22:11.236: INFO: Deleting pod "var-expansion-395bb352-088f-4ed0-aaff-75c70dff82ea" in namespace "var-expansion-3023"
  Sep 11 03:22:11.243: INFO: Wait up to 5m0s for pod "var-expansion-395bb352-088f-4ed0-aaff-75c70dff82ea" to be fully deleted
  E0911 03:22:11.470690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:12.471423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:13.473395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:14.473824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:15.474628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:16.474743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:17.475480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:18.475768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:19.476300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:20.476930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:21.477540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:22.477666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:23.478266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:24.478726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:25.478829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:26.478946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:27.479112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:28.479205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:29.479254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:30.479340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:31.480070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:32.480362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:33.480485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:34.480752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:35.481110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:36.481183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:37.481691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:38.482732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:39.482787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:40.483492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:41.483839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:42.484228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:22:43.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3023" for this suite. @ 09/11/23 03:22:43.318
• [154.654 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/11/23 03:22:43.325
  Sep 11 03:22:43.325: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 03:22:43.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:22:43.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:22:43.35
  Sep 11 03:22:43.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1031" for this suite. @ 09/11/23 03:22:43.403
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/11/23 03:22:43.411
  Sep 11 03:22:43.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 03:22:43.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:22:43.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:22:43.433
  STEP: create the container @ 09/11/23 03:22:43.436
  W0911 03:22:43.444780      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/11/23 03:22:43.444
  E0911 03:22:43.485026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:44.485833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:45.486217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/11/23 03:22:46.46
  STEP: the container should be terminated @ 09/11/23 03:22:46.464
  STEP: the termination message should be set @ 09/11/23 03:22:46.464
  Sep 11 03:22:46.464: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/11/23 03:22:46.464
  Sep 11 03:22:46.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7290" for this suite. @ 09/11/23 03:22:46.485
  E0911 03:22:46.486288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [3.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/11/23 03:22:46.494
  Sep 11 03:22:46.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 03:22:46.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:22:46.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:22:46.517
  Sep 11 03:22:46.520: INFO: Creating deployment "test-recreate-deployment"
  Sep 11 03:22:46.525: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep 11 03:22:46.539: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0911 03:22:47.486428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:48.487023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:22:48.548: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep 11 03:22:48.551: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep 11 03:22:48.561: INFO: Updating deployment test-recreate-deployment
  Sep 11 03:22:48.562: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep 11 03:22:48.710: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-553",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a7d550d-3c1c-44ff-9b3c-1361629fe0a5",
      ResourceVersion: (string) (len=5) "46536",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999366,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 03:22:48.726: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-553",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31a6ed6b-e779-440b-b6ac-b69d73475c2f",
      ResourceVersion: (string) (len=5) "46533",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6a7d550d-3c1c-44ff-9b3c-1361629fe0a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 61 37 64 35 35  30 64 2d 33 63 31 63 2d  |\"6a7d550d-3c1c-|
              00000120  34 34 66 66 2d 39 62 33  63 2d 31 33 36 31 36 32  |44ff-9b3c-136162|
              00000130  39 66 65 30 61 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9fe0a5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 03:22:48.727: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep 11 03:22:48.727: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-553",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e7a2ceb-3319-476a-bf75-7d59f2c86e67",
      ResourceVersion: (string) (len=5) "46523",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999366,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6a7d550d-3c1c-44ff-9b3c-1361629fe0a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 61 37 64 35 35  30 64 2d 33 63 31 63 2d  |\"6a7d550d-3c1c-|
              00000120  34 34 66 66 2d 39 62 33  63 2d 31 33 36 31 36 32  |44ff-9b3c-136162|
              00000130  39 66 65 30 61 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9fe0a5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 03:22:48.736: INFO: Pod "test-recreate-deployment-76fb77d45-vbndc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-vbndc",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-553",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29bdfb34-1bb4-4fdd-a0da-60ad160c554c",
      ResourceVersion: (string) (len=5) "46534",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "31a6ed6b-e779-440b-b6ac-b69d73475c2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 31  61 36 65 64 36 62 2d 65  |d\":\"31a6ed6b-e|
              00000090  37 37 39 2d 34 34 30 62  2d 62 36 61 63 2d 62 36  |779-440b-b6ac-b6|
              000000a0  39 64 37 33 34 37 35 63  32 66 5c 22 7d 22 3a 7b  |9d73475c2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fdslc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fdslc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:22:48.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-553" for this suite. @ 09/11/23 03:22:48.745
• [2.262 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/11/23 03:22:48.758
  Sep 11 03:22:48.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename proxy @ 09/11/23 03:22:48.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:22:48.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:22:48.787
  STEP: starting an echo server on multiple ports @ 09/11/23 03:22:48.801
  STEP: creating replication controller proxy-service-ddxzb in namespace proxy-6405 @ 09/11/23 03:22:48.801
  I0911 03:22:48.816278      19 runners.go:197] Created replication controller with name: proxy-service-ddxzb, namespace: proxy-6405, replica count: 1
  E0911 03:22:49.487587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 03:22:49.867358      19 runners.go:197] proxy-service-ddxzb Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0911 03:22:50.487538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 03:22:50.867877      19 runners.go:197] proxy-service-ddxzb Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0911 03:22:51.488535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 03:22:51.868112      19 runners.go:197] proxy-service-ddxzb Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 03:22:51.872: INFO: setup took 3.081835088s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/11/23 03:22:51.872
  Sep 11 03:22:51.905: INFO: (0) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 32.981836ms)
  Sep 11 03:22:51.912: INFO: (0) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 39.618506ms)
  Sep 11 03:22:51.923: INFO: (0) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 49.916844ms)
  Sep 11 03:22:51.923: INFO: (0) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 50.376439ms)
  Sep 11 03:22:51.923: INFO: (0) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 49.912024ms)
  Sep 11 03:22:51.925: INFO: (0) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 52.005685ms)
  Sep 11 03:22:51.925: INFO: (0) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 52.189717ms)
  Sep 11 03:22:51.926: INFO: (0) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 53.723154ms)
  Sep 11 03:22:51.928: INFO: (0) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 55.878787ms)
  Sep 11 03:22:51.928: INFO: (0) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 55.443212ms)
  Sep 11 03:22:51.930: INFO: (0) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 57.508823ms)
  Sep 11 03:22:51.930: INFO: (0) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 57.545223ms)
  Sep 11 03:22:51.930: INFO: (0) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 58.09511ms)
  Sep 11 03:22:51.930: INFO: (0) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 57.380052ms)
  Sep 11 03:22:51.931: INFO: (0) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 58.622145ms)
  Sep 11 03:22:51.931: INFO: (0) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 58.805888ms)
  Sep 11 03:22:51.944: INFO: (1) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 11.363429ms)
  Sep 11 03:22:51.945: INFO: (1) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 13.969236ms)
  Sep 11 03:22:51.946: INFO: (1) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 13.411321ms)
  Sep 11 03:22:51.946: INFO: (1) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 14.400012ms)
  Sep 11 03:22:51.946: INFO: (1) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 14.429002ms)
  Sep 11 03:22:51.947: INFO: (1) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 15.524443ms)
  Sep 11 03:22:51.948: INFO: (1) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 16.16635ms)
  Sep 11 03:22:51.948: INFO: (1) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 16.514744ms)
  Sep 11 03:22:51.948: INFO: (1) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 16.741836ms)
  Sep 11 03:22:51.951: INFO: (1) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 18.851578ms)
  Sep 11 03:22:51.951: INFO: (1) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 19.098651ms)
  Sep 11 03:22:51.951: INFO: (1) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 19.370443ms)
  Sep 11 03:22:51.952: INFO: (1) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 19.618096ms)
  Sep 11 03:22:51.952: INFO: (1) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 19.780048ms)
  Sep 11 03:22:51.952: INFO: (1) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 20.04048ms)
  Sep 11 03:22:51.953: INFO: (1) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 21.226923ms)
  Sep 11 03:22:51.970: INFO: (2) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 16.263891ms)
  Sep 11 03:22:51.970: INFO: (2) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 16.406922ms)
  Sep 11 03:22:51.970: INFO: (2) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 16.320891ms)
  Sep 11 03:22:51.970: INFO: (2) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 16.504533ms)
  Sep 11 03:22:51.970: INFO: (2) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 17.267071ms)
  Sep 11 03:22:51.971: INFO: (2) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 17.280971ms)
  Sep 11 03:22:51.971: INFO: (2) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 17.486103ms)
  Sep 11 03:22:51.971: INFO: (2) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 17.664695ms)
  Sep 11 03:22:51.971: INFO: (2) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 17.905107ms)
  Sep 11 03:22:51.971: INFO: (2) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 18.0547ms)
  Sep 11 03:22:51.971: INFO: (2) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 18.13013ms)
  Sep 11 03:22:51.973: INFO: (2) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 19.406294ms)
  Sep 11 03:22:51.974: INFO: (2) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 20.824469ms)
  Sep 11 03:22:51.975: INFO: (2) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 21.496656ms)
  Sep 11 03:22:51.975: INFO: (2) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 21.86002ms)
  Sep 11 03:22:51.977: INFO: (2) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 23.687489ms)
  Sep 11 03:22:51.991: INFO: (3) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 13.067037ms)
  Sep 11 03:22:51.991: INFO: (3) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 13.753894ms)
  Sep 11 03:22:51.991: INFO: (3) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 14.422681ms)
  Sep 11 03:22:51.992: INFO: (3) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 14.777305ms)
  Sep 11 03:22:51.993: INFO: (3) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 15.524452ms)
  Sep 11 03:22:51.995: INFO: (3) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 17.1885ms)
  Sep 11 03:22:51.995: INFO: (3) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 17.810686ms)
  Sep 11 03:22:51.997: INFO: (3) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 19.06884ms)
  Sep 11 03:22:51.997: INFO: (3) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 19.783578ms)
  Sep 11 03:22:51.998: INFO: (3) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 20.422264ms)
  Sep 11 03:22:51.998: INFO: (3) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 20.354993ms)
  Sep 11 03:22:51.999: INFO: (3) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 21.692488ms)
  Sep 11 03:22:51.999: INFO: (3) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 21.478315ms)
  Sep 11 03:22:51.999: INFO: (3) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 21.572707ms)
  Sep 11 03:22:52.001: INFO: (3) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 23.071852ms)
  Sep 11 03:22:52.002: INFO: (3) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 24.305725ms)
  Sep 11 03:22:52.017: INFO: (4) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 14.902997ms)
  Sep 11 03:22:52.019: INFO: (4) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 16.441852ms)
  Sep 11 03:22:52.019: INFO: (4) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 16.507163ms)
  Sep 11 03:22:52.020: INFO: (4) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 16.993208ms)
  Sep 11 03:22:52.020: INFO: (4) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 17.053789ms)
  Sep 11 03:22:52.021: INFO: (4) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 18.844157ms)
  Sep 11 03:22:52.023: INFO: (4) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 20.512085ms)
  Sep 11 03:22:52.023: INFO: (4) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 20.862268ms)
  Sep 11 03:22:52.023: INFO: (4) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 20.850388ms)
  Sep 11 03:22:52.024: INFO: (4) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 21.098821ms)
  Sep 11 03:22:52.024: INFO: (4) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 21.467875ms)
  Sep 11 03:22:52.025: INFO: (4) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 22.347424ms)
  Sep 11 03:22:52.025: INFO: (4) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 22.858369ms)
  Sep 11 03:22:52.025: INFO: (4) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 23.037662ms)
  Sep 11 03:22:52.026: INFO: (4) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 22.969941ms)
  Sep 11 03:22:52.026: INFO: (4) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 23.493077ms)
  Sep 11 03:22:52.034: INFO: (5) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 8.421949ms)
  Sep 11 03:22:52.037: INFO: (5) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 11.590251ms)
  Sep 11 03:22:52.037: INFO: (5) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 10.764203ms)
  Sep 11 03:22:52.038: INFO: (5) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 11.526121ms)
  Sep 11 03:22:52.038: INFO: (5) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 11.915865ms)
  Sep 11 03:22:52.039: INFO: (5) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 12.604313ms)
  Sep 11 03:22:52.043: INFO: (5) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 16.18458ms)
  Sep 11 03:22:52.043: INFO: (5) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 16.487344ms)
  Sep 11 03:22:52.043: INFO: (5) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 17.336883ms)
  Sep 11 03:22:52.044: INFO: (5) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 16.633555ms)
  Sep 11 03:22:52.044: INFO: (5) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 16.894257ms)
  Sep 11 03:22:52.045: INFO: (5) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 18.522134ms)
  Sep 11 03:22:52.045: INFO: (5) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 19.189972ms)
  Sep 11 03:22:52.045: INFO: (5) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 18.946709ms)
  Sep 11 03:22:52.045: INFO: (5) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 18.341683ms)
  Sep 11 03:22:52.047: INFO: (5) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 20.203432ms)
  Sep 11 03:22:52.060: INFO: (6) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 13.083497ms)
  Sep 11 03:22:52.064: INFO: (6) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 16.764566ms)
  Sep 11 03:22:52.065: INFO: (6) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 16.676824ms)
  Sep 11 03:22:52.065: INFO: (6) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 16.439953ms)
  Sep 11 03:22:52.066: INFO: (6) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 17.932718ms)
  Sep 11 03:22:52.066: INFO: (6) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 17.717636ms)
  Sep 11 03:22:52.069: INFO: (6) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 21.138662ms)
  Sep 11 03:22:52.070: INFO: (6) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 21.035261ms)
  Sep 11 03:22:52.070: INFO: (6) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 21.416125ms)
  Sep 11 03:22:52.070: INFO: (6) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 21.649987ms)
  Sep 11 03:22:52.070: INFO: (6) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 22.437206ms)
  Sep 11 03:22:52.072: INFO: (6) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 24.387656ms)
  Sep 11 03:22:52.072: INFO: (6) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 23.86671ms)
  Sep 11 03:22:52.072: INFO: (6) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 23.79768ms)
  Sep 11 03:22:52.072: INFO: (6) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 24.345245ms)
  Sep 11 03:22:52.072: INFO: (6) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 23.518227ms)
  Sep 11 03:22:52.080: INFO: (7) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 7.520449ms)
  Sep 11 03:22:52.085: INFO: (7) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 12.210999ms)
  Sep 11 03:22:52.120: INFO: (7) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 46.68796ms)
  Sep 11 03:22:52.120: INFO: (7) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 46.70449ms)
  Sep 11 03:22:52.120: INFO: (7) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 46.889492ms)
  Sep 11 03:22:52.121: INFO: (7) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 47.383127ms)
  Sep 11 03:22:52.121: INFO: (7) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 47.380607ms)
  Sep 11 03:22:52.121: INFO: (7) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 47.877622ms)
  Sep 11 03:22:52.121: INFO: (7) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 48.139295ms)
  Sep 11 03:22:52.121: INFO: (7) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 47.833212ms)
  Sep 11 03:22:52.149: INFO: (7) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 76.17866ms)
  Sep 11 03:22:52.149: INFO: (7) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 76.553173ms)
  Sep 11 03:22:52.149: INFO: (7) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 76.491492ms)
  Sep 11 03:22:52.149: INFO: (7) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 76.068828ms)
  Sep 11 03:22:52.152: INFO: (7) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 79.541485ms)
  Sep 11 03:22:52.154: INFO: (7) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 80.607126ms)
  Sep 11 03:22:52.195: INFO: (8) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 41.138771ms)
  Sep 11 03:22:52.195: INFO: (8) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 40.431554ms)
  Sep 11 03:22:52.216: INFO: (8) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 61.299314ms)
  Sep 11 03:22:52.216: INFO: (8) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 61.804748ms)
  Sep 11 03:22:52.216: INFO: (8) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 61.109071ms)
  Sep 11 03:22:52.216: INFO: (8) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 61.809299ms)
  Sep 11 03:22:52.217: INFO: (8) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 61.91778ms)
  Sep 11 03:22:52.227: INFO: (8) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 71.708943ms)
  Sep 11 03:22:52.227: INFO: (8) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 72.357659ms)
  Sep 11 03:22:52.227: INFO: (8) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 71.994995ms)
  Sep 11 03:22:52.228: INFO: (8) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 73.352849ms)
  Sep 11 03:22:52.238: INFO: (8) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 83.88026ms)
  Sep 11 03:22:52.239: INFO: (8) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 83.955871ms)
  Sep 11 03:22:52.239: INFO: (8) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 84.417976ms)
  Sep 11 03:22:52.239: INFO: (8) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 84.408416ms)
  Sep 11 03:22:52.240: INFO: (8) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 85.80526ms)
  Sep 11 03:22:52.256: INFO: (9) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 15.327361ms)
  Sep 11 03:22:52.256: INFO: (9) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 14.916477ms)
  Sep 11 03:22:52.258: INFO: (9) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 18.12096ms)
  Sep 11 03:22:52.258: INFO: (9) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 17.254631ms)
  Sep 11 03:22:52.258: INFO: (9) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 18.372563ms)
  Sep 11 03:22:52.259: INFO: (9) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 17.403353ms)
  Sep 11 03:22:52.259: INFO: (9) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 18.009929ms)
  Sep 11 03:22:52.259: INFO: (9) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 18.198191ms)
  Sep 11 03:22:52.260: INFO: (9) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 18.744906ms)
  Sep 11 03:22:52.260: INFO: (9) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 18.664186ms)
  Sep 11 03:22:52.260: INFO: (9) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 19.738407ms)
  Sep 11 03:22:52.260: INFO: (9) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 19.173602ms)
  Sep 11 03:22:52.262: INFO: (9) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 20.97115ms)
  Sep 11 03:22:52.262: INFO: (9) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 21.519716ms)
  Sep 11 03:22:52.263: INFO: (9) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 21.809559ms)
  Sep 11 03:22:52.263: INFO: (9) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 22.394045ms)
  Sep 11 03:22:52.269: INFO: (10) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 5.73248ms)
  Sep 11 03:22:52.273: INFO: (10) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 9.954785ms)
  Sep 11 03:22:52.273: INFO: (10) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 10.599332ms)
  Sep 11 03:22:52.274: INFO: (10) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 10.732643ms)
  Sep 11 03:22:52.274: INFO: (10) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 11.002236ms)
  Sep 11 03:22:52.275: INFO: (10) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 11.735623ms)
  Sep 11 03:22:52.275: INFO: (10) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 11.663043ms)
  Sep 11 03:22:52.276: INFO: (10) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 12.685873ms)
  Sep 11 03:22:52.277: INFO: (10) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 13.30197ms)
  Sep 11 03:22:52.277: INFO: (10) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 14.383951ms)
  Sep 11 03:22:52.277: INFO: (10) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 13.893416ms)
  Sep 11 03:22:52.278: INFO: (10) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 14.596083ms)
  Sep 11 03:22:52.279: INFO: (10) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 16.167879ms)
  Sep 11 03:22:52.279: INFO: (10) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 15.378612ms)
  Sep 11 03:22:52.281: INFO: (10) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 16.902547ms)
  Sep 11 03:22:52.281: INFO: (10) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 17.505753ms)
  Sep 11 03:22:52.288: INFO: (11) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 6.862962ms)
  Sep 11 03:22:52.292: INFO: (11) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 10.44242ms)
  Sep 11 03:22:52.293: INFO: (11) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 11.142937ms)
  Sep 11 03:22:52.293: INFO: (11) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 11.889915ms)
  Sep 11 03:22:52.293: INFO: (11) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 11.38395ms)
  Sep 11 03:22:52.294: INFO: (11) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 11.980555ms)
  Sep 11 03:22:52.296: INFO: (11) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 13.996947ms)
  Sep 11 03:22:52.296: INFO: (11) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 14.31717ms)
  Sep 11 03:22:52.296: INFO: (11) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 13.574743ms)
  Sep 11 03:22:52.296: INFO: (11) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 13.998837ms)
  Sep 11 03:22:52.297: INFO: (11) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 14.577863ms)
  Sep 11 03:22:52.298: INFO: (11) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 15.886396ms)
  Sep 11 03:22:52.298: INFO: (11) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 16.341341ms)
  Sep 11 03:22:52.298: INFO: (11) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 15.689765ms)
  Sep 11 03:22:52.298: INFO: (11) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 15.210009ms)
  Sep 11 03:22:52.298: INFO: (11) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 15.358581ms)
  Sep 11 03:22:52.307: INFO: (12) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 8.376648ms)
  Sep 11 03:22:52.311: INFO: (12) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 12.323079ms)
  Sep 11 03:22:52.312: INFO: (12) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 14.003137ms)
  Sep 11 03:22:52.312: INFO: (12) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 12.976847ms)
  Sep 11 03:22:52.313: INFO: (12) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 14.343051ms)
  Sep 11 03:22:52.313: INFO: (12) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 14.225019ms)
  Sep 11 03:22:52.314: INFO: (12) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 14.683514ms)
  Sep 11 03:22:52.314: INFO: (12) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 14.931827ms)
  Sep 11 03:22:52.314: INFO: (12) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 15.408902ms)
  Sep 11 03:22:52.314: INFO: (12) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 15.24175ms)
  Sep 11 03:22:52.314: INFO: (12) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 14.579533ms)
  Sep 11 03:22:52.315: INFO: (12) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 16.472653ms)
  Sep 11 03:22:52.316: INFO: (12) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 17.017389ms)
  Sep 11 03:22:52.316: INFO: (12) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 16.580424ms)
  Sep 11 03:22:52.316: INFO: (12) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 17.585445ms)
  Sep 11 03:22:52.316: INFO: (12) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 17.509604ms)
  Sep 11 03:22:52.323: INFO: (13) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 6.734581ms)
  Sep 11 03:22:52.328: INFO: (13) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 10.977295ms)
  Sep 11 03:22:52.328: INFO: (13) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 10.656552ms)
  Sep 11 03:22:52.328: INFO: (13) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 11.818984ms)
  Sep 11 03:22:52.328: INFO: (13) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 11.340159ms)
  Sep 11 03:22:52.328: INFO: (13) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 11.727163ms)
  Sep 11 03:22:52.328: INFO: (13) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 12.467ms)
  Sep 11 03:22:52.329: INFO: (13) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 11.583181ms)
  Sep 11 03:22:52.329: INFO: (13) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 12.538552ms)
  Sep 11 03:22:52.329: INFO: (13) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 11.817234ms)
  Sep 11 03:22:52.329: INFO: (13) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 12.621843ms)
  Sep 11 03:22:52.332: INFO: (13) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 15.739646ms)
  Sep 11 03:22:52.332: INFO: (13) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 15.501813ms)
  Sep 11 03:22:52.332: INFO: (13) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 15.601074ms)
  Sep 11 03:22:52.332: INFO: (13) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 15.403581ms)
  Sep 11 03:22:52.332: INFO: (13) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 15.24572ms)
  Sep 11 03:22:52.342: INFO: (14) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 9.665892ms)
  Sep 11 03:22:52.342: INFO: (14) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 8.723082ms)
  Sep 11 03:22:52.342: INFO: (14) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 9.46411ms)
  Sep 11 03:22:52.344: INFO: (14) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 10.060435ms)
  Sep 11 03:22:52.344: INFO: (14) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 11.489231ms)
  Sep 11 03:22:52.344: INFO: (14) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 10.795063ms)
  Sep 11 03:22:52.345: INFO: (14) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 11.45447ms)
  Sep 11 03:22:52.345: INFO: (14) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 12.33272ms)
  Sep 11 03:22:52.346: INFO: (14) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 12.34711ms)
  Sep 11 03:22:52.346: INFO: (14) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 13.37622ms)
  Sep 11 03:22:52.346: INFO: (14) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 13.666673ms)
  Sep 11 03:22:52.346: INFO: (14) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 13.366701ms)
  Sep 11 03:22:52.347: INFO: (14) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 13.460901ms)
  Sep 11 03:22:52.348: INFO: (14) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 15.107319ms)
  Sep 11 03:22:52.348: INFO: (14) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 15.155299ms)
  Sep 11 03:22:52.348: INFO: (14) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 15.366891ms)
  Sep 11 03:22:52.355: INFO: (15) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 6.610049ms)
  Sep 11 03:22:52.359: INFO: (15) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 10.906075ms)
  Sep 11 03:22:52.359: INFO: (15) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 10.325308ms)
  Sep 11 03:22:52.360: INFO: (15) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 11.345799ms)
  Sep 11 03:22:52.360: INFO: (15) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 11.102507ms)
  Sep 11 03:22:52.361: INFO: (15) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 11.939985ms)
  Sep 11 03:22:52.361: INFO: (15) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 12.067737ms)
  Sep 11 03:22:52.361: INFO: (15) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 12.237038ms)
  Sep 11 03:22:52.361: INFO: (15) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 12.36491ms)
  Sep 11 03:22:52.361: INFO: (15) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 11.940135ms)
  Sep 11 03:22:52.361: INFO: (15) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 12.104877ms)
  Sep 11 03:22:52.362: INFO: (15) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 13.063837ms)
  Sep 11 03:22:52.364: INFO: (15) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 14.921866ms)
  Sep 11 03:22:52.364: INFO: (15) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 15.362881ms)
  Sep 11 03:22:52.364: INFO: (15) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 15.308881ms)
  Sep 11 03:22:52.364: INFO: (15) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 15.688104ms)
  Sep 11 03:22:52.375: INFO: (16) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 10.47383ms)
  Sep 11 03:22:52.375: INFO: (16) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 10.634211ms)
  Sep 11 03:22:52.375: INFO: (16) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 10.869335ms)
  Sep 11 03:22:52.375: INFO: (16) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 10.775273ms)
  Sep 11 03:22:52.376: INFO: (16) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 11.49676ms)
  Sep 11 03:22:52.376: INFO: (16) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 11.312439ms)
  Sep 11 03:22:52.376: INFO: (16) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 11.349349ms)
  Sep 11 03:22:52.377: INFO: (16) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 12.043386ms)
  Sep 11 03:22:52.377: INFO: (16) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 12.36558ms)
  Sep 11 03:22:52.377: INFO: (16) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 12.4142ms)
  Sep 11 03:22:52.378: INFO: (16) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 12.859015ms)
  Sep 11 03:22:52.380: INFO: (16) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 14.841146ms)
  Sep 11 03:22:52.380: INFO: (16) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 15.394262ms)
  Sep 11 03:22:52.380: INFO: (16) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 15.554294ms)
  Sep 11 03:22:52.380: INFO: (16) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 15.30163ms)
  Sep 11 03:22:52.381: INFO: (16) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 15.916337ms)
  Sep 11 03:22:52.388: INFO: (17) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 6.860021ms)
  Sep 11 03:22:52.388: INFO: (17) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 7.084764ms)
  Sep 11 03:22:52.391: INFO: (17) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 9.313187ms)
  Sep 11 03:22:52.391: INFO: (17) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 9.841993ms)
  Sep 11 03:22:52.393: INFO: (17) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 11.317139ms)
  Sep 11 03:22:52.393: INFO: (17) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 12.289898ms)
  Sep 11 03:22:52.394: INFO: (17) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 12.569311ms)
  Sep 11 03:22:52.394: INFO: (17) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 12.717413ms)
  Sep 11 03:22:52.394: INFO: (17) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 13.198059ms)
  Sep 11 03:22:52.395: INFO: (17) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 13.569342ms)
  Sep 11 03:22:52.395: INFO: (17) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 14.081597ms)
  Sep 11 03:22:52.395: INFO: (17) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 13.816135ms)
  Sep 11 03:22:52.397: INFO: (17) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 15.899937ms)
  Sep 11 03:22:52.398: INFO: (17) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 17.038308ms)
  Sep 11 03:22:52.398: INFO: (17) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 16.607344ms)
  Sep 11 03:22:52.399: INFO: (17) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 17.252181ms)
  Sep 11 03:22:52.407: INFO: (18) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 7.897173ms)
  Sep 11 03:22:52.407: INFO: (18) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 7.883613ms)
  Sep 11 03:22:52.408: INFO: (18) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 8.826883ms)
  Sep 11 03:22:52.409: INFO: (18) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 10.087846ms)
  Sep 11 03:22:52.410: INFO: (18) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 10.691962ms)
  Sep 11 03:22:52.410: INFO: (18) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 11.732204ms)
  Sep 11 03:22:52.411: INFO: (18) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 11.290328ms)
  Sep 11 03:22:52.411: INFO: (18) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 11.806694ms)
  Sep 11 03:22:52.413: INFO: (18) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 14.25278ms)
  Sep 11 03:22:52.413: INFO: (18) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 14.067417ms)
  Sep 11 03:22:52.413: INFO: (18) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 14.046388ms)
  Sep 11 03:22:52.414: INFO: (18) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 15.119369ms)
  Sep 11 03:22:52.415: INFO: (18) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 16.011568ms)
  Sep 11 03:22:52.415: INFO: (18) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 15.915207ms)
  Sep 11 03:22:52.415: INFO: (18) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 15.583313ms)
  Sep 11 03:22:52.415: INFO: (18) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 16.15988ms)
  Sep 11 03:22:52.427: INFO: (19) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:462/proxy/: tls qux (200; 12.126687ms)
  Sep 11 03:22:52.429: INFO: (19) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 13.432571ms)
  Sep 11 03:22:52.429: INFO: (19) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:443/proxy/tlsrewritem... (200; 13.647333ms)
  Sep 11 03:22:52.430: INFO: (19) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:160/proxy/: foo (200; 14.689244ms)
  Sep 11 03:22:52.431: INFO: (19) /api/v1/namespaces/proxy-6405/pods/https:proxy-service-ddxzb-rqpzl:460/proxy/: tls baz (200; 14.431622ms)
  Sep 11 03:22:52.432: INFO: (19) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">... (200; 15.991198ms)
  Sep 11 03:22:52.432: INFO: (19) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl/proxy/rewriteme">test</a> (200; 16.145209ms)
  Sep 11 03:22:52.432: INFO: (19) /api/v1/namespaces/proxy-6405/pods/http:proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 16.110859ms)
  Sep 11 03:22:52.432: INFO: (19) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:162/proxy/: bar (200; 16.335991ms)
  Sep 11 03:22:52.433: INFO: (19) /api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/: <a href="/api/v1/namespaces/proxy-6405/pods/proxy-service-ddxzb-rqpzl:1080/proxy/rewriteme">test<... (200; 17.14234ms)
  Sep 11 03:22:52.433: INFO: (19) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname2/proxy/: bar (200; 17.906888ms)
  Sep 11 03:22:52.435: INFO: (19) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname2/proxy/: tls qux (200; 18.995339ms)
  Sep 11 03:22:52.435: INFO: (19) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname1/proxy/: foo (200; 19.318933ms)
  Sep 11 03:22:52.435: INFO: (19) /api/v1/namespaces/proxy-6405/services/http:proxy-service-ddxzb:portname2/proxy/: bar (200; 19.876049ms)
  Sep 11 03:22:52.436: INFO: (19) /api/v1/namespaces/proxy-6405/services/proxy-service-ddxzb:portname1/proxy/: foo (200; 19.590695ms)
  Sep 11 03:22:52.436: INFO: (19) /api/v1/namespaces/proxy-6405/services/https:proxy-service-ddxzb:tlsportname1/proxy/: tls baz (200; 19.445614ms)
  Sep 11 03:22:52.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-ddxzb in namespace proxy-6405, will wait for the garbage collector to delete the pods @ 09/11/23 03:22:52.439
  E0911 03:22:52.489511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:22:52.498: INFO: Deleting ReplicationController proxy-service-ddxzb took: 6.083864ms
  Sep 11 03:22:52.600: INFO: Terminating ReplicationController proxy-service-ddxzb pods took: 101.083091ms
  E0911 03:22:53.490197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-6405" for this suite. @ 09/11/23 03:22:54
• [5.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/11/23 03:22:54.008
  Sep 11 03:22:54.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename configmap @ 09/11/23 03:22:54.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:22:54.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:22:54.039
  STEP: Creating configMap with name configmap-test-volume-b2264f00-29e4-46f0-8f34-1f3128bb619b @ 09/11/23 03:22:54.042
  STEP: Creating a pod to test consume configMaps @ 09/11/23 03:22:54.048
  E0911 03:22:54.490652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:55.490893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:56.491055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:22:57.491605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:22:58.07
  Sep 11 03:22:58.073: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-764e1767-a30b-4ad9-8c04-96b6a610a316 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 03:22:58.088
  Sep 11 03:22:58.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3928" for this suite. @ 09/11/23 03:22:58.108
• [4.107 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 09/11/23 03:22:58.115
  Sep 11 03:22:58.116: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:22:58.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:22:58.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:22:58.139
  STEP: creating Agnhost RC @ 09/11/23 03:22:58.143
  Sep 11 03:22:58.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-7551 create -f -'
  Sep 11 03:22:58.448: INFO: stderr: ""
  Sep 11 03:22:58.448: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/11/23 03:22:58.448
  E0911 03:22:58.492434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:22:59.451: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 03:22:59.451: INFO: Found 1 / 1
  Sep 11 03:22:59.451: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/11/23 03:22:59.451
  Sep 11 03:22:59.454: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 03:22:59.454: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 03:22:59.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-7551 patch pod agnhost-primary-nsrt9 -p {"metadata":{"annotations":{"x":"y"}}}'
  E0911 03:22:59.493039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:22:59.559: INFO: stderr: ""
  Sep 11 03:22:59.559: INFO: stdout: "pod/agnhost-primary-nsrt9 patched\n"
  STEP: checking annotations @ 09/11/23 03:22:59.559
  Sep 11 03:22:59.562: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 03:22:59.562: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 03:22:59.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7551" for this suite. @ 09/11/23 03:22:59.566
• [1.457 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 09/11/23 03:22:59.573
  Sep 11 03:22:59.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:22:59.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:22:59.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:22:59.594
  Sep 11 03:22:59.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-8819 create -f -'
  Sep 11 03:22:59.871: INFO: stderr: ""
  Sep 11 03:22:59.871: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep 11 03:22:59.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-8819 create -f -'
  Sep 11 03:23:00.192: INFO: stderr: ""
  Sep 11 03:23:00.192: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/11/23 03:23:00.192
  E0911 03:23:00.493826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:01.196: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 03:23:01.196: INFO: Found 1 / 1
  Sep 11 03:23:01.196: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 11 03:23:01.199: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 03:23:01.199: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 03:23:01.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-8819 describe pod agnhost-primary-rhtf8'
  Sep 11 03:23:01.296: INFO: stderr: ""
  Sep 11 03:23:01.296: INFO: stdout: "Name:             agnhost-primary-rhtf8\nNamespace:        kubectl-8819\nPriority:         0\nService Account:  default\nNode:             ip-172-31-4-243/172.31.4.243\nStart Time:       Mon, 11 Sep 2023 03:22:59 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.3.196\nIPs:\n  IP:           10.42.3.196\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://beaa8dda5fceed32ae24159f0d7ad074d9305a06a9d30584233d0bf6a0bb5535\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 11 Sep 2023 03:23:00 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-tvcxx (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-tvcxx:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8819/agnhost-primary-rhtf8 to ip-172-31-4-243\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Sep 11 03:23:01.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-8819 describe rc agnhost-primary'
  Sep 11 03:23:01.403: INFO: stderr: ""
  Sep 11 03:23:01.403: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8819\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-rhtf8\n"
  Sep 11 03:23:01.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-8819 describe service agnhost-primary'
  Sep 11 03:23:01.493: INFO: stderr: ""
  Sep 11 03:23:01.493: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8819\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.208.134\nIPs:               10.43.208.134\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.3.196:6379\nSession Affinity:  None\nEvents:            <none>\n"
  E0911 03:23:01.494079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:01.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-8819 describe node ip-172-31-11-123'
  Sep 11 03:23:01.616: INFO: stderr: ""
  Sep 11 03:23:01.616: INFO: stdout: "Name:               ip-172-31-11-123\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=k3s\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-11-123\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=k3s\nAnnotations:        etcd.k3s.cattle.io/node-address: 172.31.11.123\n                    etcd.k3s.cattle.io/node-name: ip-172-31-11-123-9c851f78\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"b2:1d:22:92:10:6c\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.11.123\n                    k3s.io/encryption-config-hash: start-211c3e85361921bd571dfe7f7e9faad67e354c54f245786a1812e8e1612722a8\n                    k3s.io/external-ip: 18.188.162.225\n                    k3s.io/hostname: ip-172-31-11-123\n                    k3s.io/internal-ip: 172.31.11.123\n                    k3s.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--node-external-ip\",\"18.188.162.225\",\"--cluster-init\",\"true\",\"--...\n                    k3s.io/node-config-hash: 4ITZI2NO2JHNAAJ4EHO7ZCO3IKV3MMX2QSYMGXZWRAGB5G7VL3XA====\n                    k3s.io/node-env: {\"K3S_DATA_DIR\":\"/var/lib/rancher/k3s/data/58763e38f9aff0578a2fba6ad34069a5a1eff3ce99bb09f3fee2fce8e742b16c\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 11 Sep 2023 01:33:02 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-11-123\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 11 Sep 2023 03:22:54 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Mon, 11 Sep 2023 03:17:59 +0000   Mon, 11 Sep 2023 01:33:02 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Mon, 11 Sep 2023 03:17:59 +0000   Mon, 11 Sep 2023 01:33:02 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Mon, 11 Sep 2023 03:17:59 +0000   Mon, 11 Sep 2023 01:33:02 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Mon, 11 Sep 2023 03:17:59 +0000   Mon, 11 Sep 2023 01:40:15 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.11.123\n  ExternalIP:  18.188.162.225\n  Hostname:    ip-172-31-11-123\nCapacity:\n  cpu:                2\n  ephemeral-storage:  20937708Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3961848Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  20368202327\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3961848Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec20789fb1d9075234850ed2ad6eae57\n  System UUID:                ec20789f-b1d9-0752-3485-0ed2ad6eae57\n  Boot ID:                    0f029db6-d61c-477e-8cbb-604cee3fd61b\n  Kernel Version:             5.14.21-150400.22-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP4\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.3-k3s2\n  Kubelet Version:            v1.28.1+k3s1\n  Kube-Proxy Version:         v1.28.1+k3s1\nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   k3s://ip-172-31-11-123\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-6799fbcd5-t5lmx                                    100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     109m\n  kube-system                 local-path-provisioner-84db5d44d9-wmj2n                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         109m\n  kube-system                 metrics-server-67c658944b-4kxpp                            100m (5%)     0 (0%)      70Mi (1%)        0 (0%)         109m\n  kube-system                 svclb-traefik-d4416a3e-v4mbb                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         109m\n  kube-system                 traefik-7bf7d7576d-zts4g                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         109m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-rdpcs    0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                200m (10%)  0 (0%)\n  memory             140Mi (3%)  170Mi (4%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Sep 11 03:23:01.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-8819 describe namespace kubectl-8819'
  Sep 11 03:23:01.702: INFO: stderr: ""
  Sep 11 03:23:01.702: INFO: stdout: "Name:         kubectl-8819\nLabels:       e2e-framework=kubectl\n              e2e-run=861f17c9-e2ef-4649-b541-9b74bec08298\n              kubernetes.io/metadata.name=kubectl-8819\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep 11 03:23:01.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8819" for this suite. @ 09/11/23 03:23:01.706
• [2.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/11/23 03:23:01.713
  Sep 11 03:23:01.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 03:23:01.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:23:01.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:23:01.737
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/11/23 03:23:01.74
  Sep 11 03:23:01.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:23:02.494653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:03.495635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:04.496145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:05.496995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:06.497934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:07.498358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:08.498756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/11/23 03:23:08.599
  Sep 11 03:23:08.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:23:09.499723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:10.500595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:10.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:23:11.500728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:12.500943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:13.501702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:14.504060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:15.504063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:16.504870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:17.505049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:17.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1399" for this suite. @ 09/11/23 03:23:17.564
• [15.858 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/11/23 03:23:17.575
  Sep 11 03:23:17.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 03:23:17.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:23:17.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:23:17.604
  Sep 11 03:23:17.613: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 03:23:17.623: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 03:23:17.627: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-123 before test
  Sep 11 03:23:17.633: INFO: coredns-6799fbcd5-t5lmx from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:23:17.633: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 03:23:17.633: INFO: helm-install-traefik-25npw from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:23:17.633: INFO: 	Container helm ready: false, restart count 1
  Sep 11 03:23:17.633: INFO: helm-install-traefik-crd-n6vdt from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:23:17.633: INFO: 	Container helm ready: false, restart count 0
  Sep 11 03:23:17.633: INFO: local-path-provisioner-84db5d44d9-wmj2n from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:23:17.634: INFO: 	Container local-path-provisioner ready: true, restart count 0
  Sep 11 03:23:17.634: INFO: metrics-server-67c658944b-4kxpp from kube-system started at 2023-09-11 01:33:16 +0000 UTC (1 container statuses recorded)
  Sep 11 03:23:17.634: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 03:23:17.634: INFO: svclb-traefik-d4416a3e-v4mbb from kube-system started at 2023-09-11 01:33:59 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.634: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:23:17.634: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:23:17.634: INFO: traefik-7bf7d7576d-zts4g from kube-system started at 2023-09-11 01:33:59 +0000 UTC (1 container statuses recorded)
  Sep 11 03:23:17.634: INFO: 	Container traefik ready: true, restart count 0
  Sep 11 03:23:17.634: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-rdpcs from sonobuoy started at 2023-09-11 01:45:14 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.634: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:23:17.634: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 03:23:17.634: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-171 before test
  Sep 11 03:23:17.639: INFO: svclb-traefik-d4416a3e-gjxxg from kube-system started at 2023-09-11 01:36:25 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.639: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:23:17.639: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:23:17.639: INFO: sonobuoy-e2e-job-3860deceeabb4fa2 from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.639: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 03:23:17.639: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:23:17.639: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-8mdgj from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.639: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:23:17.639: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 03:23:17.639: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-111 before test
  Sep 11 03:23:17.644: INFO: svclb-traefik-d4416a3e-g59hv from kube-system started at 2023-09-11 02:52:11 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.644: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:23:17.644: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:23:17.644: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mxbgr from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.644: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:23:17.644: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 03:23:17.644: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-243 before test
  Sep 11 03:23:17.649: INFO: svclb-traefik-d4416a3e-m87c8 from kube-system started at 2023-09-11 01:36:39 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.650: INFO: 	Container lb-tcp-443 ready: true, restart count 0
  Sep 11 03:23:17.650: INFO: 	Container lb-tcp-80 ready: true, restart count 0
  Sep 11 03:23:17.650: INFO: sonobuoy from sonobuoy started at 2023-09-11 01:45:10 +0000 UTC (1 container statuses recorded)
  Sep 11 03:23:17.650: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 03:23:17.650: INFO: sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mnxvh from sonobuoy started at 2023-09-11 01:45:13 +0000 UTC (2 container statuses recorded)
  Sep 11 03:23:17.650: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 03:23:17.650: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-11-123 @ 09/11/23 03:23:17.667
  STEP: verifying the node has the label node ip-172-31-12-171 @ 09/11/23 03:23:17.688
  STEP: verifying the node has the label node ip-172-31-3-111 @ 09/11/23 03:23:17.723
  STEP: verifying the node has the label node ip-172-31-4-243 @ 09/11/23 03:23:17.745
  Sep 11 03:23:17.758: INFO: Pod coredns-6799fbcd5-t5lmx requesting resource cpu=100m on Node ip-172-31-11-123
  Sep 11 03:23:17.758: INFO: Pod local-path-provisioner-84db5d44d9-wmj2n requesting resource cpu=0m on Node ip-172-31-11-123
  Sep 11 03:23:17.758: INFO: Pod metrics-server-67c658944b-4kxpp requesting resource cpu=100m on Node ip-172-31-11-123
  Sep 11 03:23:17.758: INFO: Pod svclb-traefik-d4416a3e-g59hv requesting resource cpu=0m on Node ip-172-31-3-111
  Sep 11 03:23:17.758: INFO: Pod svclb-traefik-d4416a3e-gjxxg requesting resource cpu=0m on Node ip-172-31-12-171
  Sep 11 03:23:17.758: INFO: Pod svclb-traefik-d4416a3e-m87c8 requesting resource cpu=0m on Node ip-172-31-4-243
  Sep 11 03:23:17.758: INFO: Pod svclb-traefik-d4416a3e-v4mbb requesting resource cpu=0m on Node ip-172-31-11-123
  Sep 11 03:23:17.758: INFO: Pod traefik-7bf7d7576d-zts4g requesting resource cpu=0m on Node ip-172-31-11-123
  Sep 11 03:23:17.758: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-4-243
  Sep 11 03:23:17.758: INFO: Pod sonobuoy-e2e-job-3860deceeabb4fa2 requesting resource cpu=0m on Node ip-172-31-12-171
  Sep 11 03:23:17.758: INFO: Pod sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-8mdgj requesting resource cpu=0m on Node ip-172-31-12-171
  Sep 11 03:23:17.758: INFO: Pod sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mnxvh requesting resource cpu=0m on Node ip-172-31-4-243
  Sep 11 03:23:17.758: INFO: Pod sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-mxbgr requesting resource cpu=0m on Node ip-172-31-3-111
  Sep 11 03:23:17.758: INFO: Pod sonobuoy-systemd-logs-daemon-set-f24eebb6669b4172-rdpcs requesting resource cpu=0m on Node ip-172-31-11-123
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/11/23 03:23:17.758
  Sep 11 03:23:17.758: INFO: Creating a pod which consumes cpu=1260m on Node ip-172-31-11-123
  Sep 11 03:23:17.776: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-12-171
  Sep 11 03:23:17.788: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-3-111
  Sep 11 03:23:17.798: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-4-243
  E0911 03:23:18.505738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:19.505742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/11/23 03:23:19.825
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5daf0ddc-fecd-4087-8d78-5c28cc1d5226.1783ba2f77624931], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8513/filler-pod-5daf0ddc-fecd-4087-8d78-5c28cc1d5226 to ip-172-31-4-243] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5daf0ddc-fecd-4087-8d78-5c28cc1d5226.1783ba2f94f2137c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5daf0ddc-fecd-4087-8d78-5c28cc1d5226.1783ba2f95ff78df], Reason = [Created], Message = [Created container filler-pod-5daf0ddc-fecd-4087-8d78-5c28cc1d5226] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5daf0ddc-fecd-4087-8d78-5c28cc1d5226.1783ba2f9d7cb800], Reason = [Started], Message = [Started container filler-pod-5daf0ddc-fecd-4087-8d78-5c28cc1d5226] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-86323ba6-770f-4380-a8ef-2974feb7a041.1783ba2f76a3a26f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8513/filler-pod-86323ba6-770f-4380-a8ef-2974feb7a041 to ip-172-31-3-111] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-86323ba6-770f-4380-a8ef-2974feb7a041.1783ba2f944fccda], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-86323ba6-770f-4380-a8ef-2974feb7a041.1783ba2f957a1bd6], Reason = [Created], Message = [Created container filler-pod-86323ba6-770f-4380-a8ef-2974feb7a041] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-86323ba6-770f-4380-a8ef-2974feb7a041.1783ba2f9d3bb26c], Reason = [Started], Message = [Started container filler-pod-86323ba6-770f-4380-a8ef-2974feb7a041] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad313b2b-01ec-473d-8dbb-930a17ad2e1b.1783ba2f737726e5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8513/filler-pod-ad313b2b-01ec-473d-8dbb-930a17ad2e1b to ip-172-31-11-123] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad313b2b-01ec-473d-8dbb-930a17ad2e1b.1783ba2f9493ed4b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad313b2b-01ec-473d-8dbb-930a17ad2e1b.1783ba2f95c2206b], Reason = [Created], Message = [Created container filler-pod-ad313b2b-01ec-473d-8dbb-930a17ad2e1b] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad313b2b-01ec-473d-8dbb-930a17ad2e1b.1783ba2f9cfd9832], Reason = [Started], Message = [Started container filler-pod-ad313b2b-01ec-473d-8dbb-930a17ad2e1b] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5d612f8-3d19-4271-bbe1-2de0012762ab.1783ba2f75f9a813], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8513/filler-pod-d5d612f8-3d19-4271-bbe1-2de0012762ab to ip-172-31-12-171] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5d612f8-3d19-4271-bbe1-2de0012762ab.1783ba2f9379f5b1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5d612f8-3d19-4271-bbe1-2de0012762ab.1783ba2f947f2f04], Reason = [Created], Message = [Created container filler-pod-d5d612f8-3d19-4271-bbe1-2de0012762ab] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5d612f8-3d19-4271-bbe1-2de0012762ab.1783ba2f9b8f52b6], Reason = [Started], Message = [Started container filler-pod-d5d612f8-3d19-4271-bbe1-2de0012762ab] @ 09/11/23 03:23:19.83
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1783ba2fedd80073], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod..] @ 09/11/23 03:23:19.843
  E0911 03:23:20.505864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-11-123 @ 09/11/23 03:23:20.846
  STEP: verifying the node doesn't have the label node @ 09/11/23 03:23:20.869
  STEP: removing the label node off the node ip-172-31-12-171 @ 09/11/23 03:23:20.893
  STEP: verifying the node doesn't have the label node @ 09/11/23 03:23:20.905
  STEP: removing the label node off the node ip-172-31-3-111 @ 09/11/23 03:23:20.911
  STEP: verifying the node doesn't have the label node @ 09/11/23 03:23:20.95
  STEP: removing the label node off the node ip-172-31-4-243 @ 09/11/23 03:23:20.955
  STEP: verifying the node doesn't have the label node @ 09/11/23 03:23:20.975
  Sep 11 03:23:20.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8513" for this suite. @ 09/11/23 03:23:20.986
• [3.420 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 09/11/23 03:23:20.996
  Sep 11 03:23:20.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 03:23:20.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:23:21.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:23:21.021
  STEP: Creating a ResourceQuota with terminating scope @ 09/11/23 03:23:21.025
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 03:23:21.03
  E0911 03:23:21.506661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:22.507151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/11/23 03:23:23.034
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 03:23:23.041
  E0911 03:23:23.507477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:24.507591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/11/23 03:23:25.045
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/11/23 03:23:25.061
  E0911 03:23:25.508009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:26.508407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/11/23 03:23:27.068
  E0911 03:23:27.509017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:28.509422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 03:23:29.072
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 03:23:29.087
  E0911 03:23:29.510153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:30.510852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/11/23 03:23:31.092
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/11/23 03:23:31.102
  E0911 03:23:31.511709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:32.511877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/11/23 03:23:33.107
  E0911 03:23:33.514611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:34.515334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 03:23:35.111
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 03:23:35.124
  E0911 03:23:35.515582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:36.515566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:37.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2663" for this suite. @ 09/11/23 03:23:37.133
• [16.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/11/23 03:23:37.143
  Sep 11 03:23:37.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl-logs @ 09/11/23 03:23:37.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:23:37.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:23:37.167
  STEP: creating an pod @ 09/11/23 03:23:37.171
  Sep 11 03:23:37.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep 11 03:23:37.277: INFO: stderr: ""
  Sep 11 03:23:37.277: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/11/23 03:23:37.277
  Sep 11 03:23:37.277: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0911 03:23:37.516704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:38.521504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:39.286: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/11/23 03:23:39.286
  Sep 11 03:23:39.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 logs logs-generator logs-generator'
  Sep 11 03:23:39.380: INFO: stderr: ""
  Sep 11 03:23:39.380: INFO: stdout: "I0911 03:23:38.046342       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/zv9 529\nI0911 03:23:38.246498       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/xwc 513\nI0911 03:23:38.446878       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/mz9x 294\nI0911 03:23:38.647195       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/rffv 478\nI0911 03:23:38.846469       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/hxj 462\nI0911 03:23:39.046869       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/fbgn 599\nI0911 03:23:39.247227       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/hfwg 511\n"
  STEP: limiting log lines @ 09/11/23 03:23:39.38
  Sep 11 03:23:39.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 logs logs-generator logs-generator --tail=1'
  Sep 11 03:23:39.479: INFO: stderr: ""
  Sep 11 03:23:39.479: INFO: stdout: "I0911 03:23:39.446644       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/nk5q 381\n"
  Sep 11 03:23:39.479: INFO: got output "I0911 03:23:39.446644       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/nk5q 381\n"
  STEP: limiting log bytes @ 09/11/23 03:23:39.479
  Sep 11 03:23:39.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 logs logs-generator logs-generator --limit-bytes=1'
  E0911 03:23:39.522095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:39.573: INFO: stderr: ""
  Sep 11 03:23:39.573: INFO: stdout: "I"
  Sep 11 03:23:39.573: INFO: got output "I"
  STEP: exposing timestamps @ 09/11/23 03:23:39.573
  Sep 11 03:23:39.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 logs logs-generator logs-generator --tail=1 --timestamps'
  Sep 11 03:23:39.664: INFO: stderr: ""
  Sep 11 03:23:39.664: INFO: stdout: "2023-09-11T03:23:39.647198942Z I0911 03:23:39.647030       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/rzjz 321\n"
  Sep 11 03:23:39.665: INFO: got output "2023-09-11T03:23:39.647198942Z I0911 03:23:39.647030       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/rzjz 321\n"
  STEP: restricting to a time range @ 09/11/23 03:23:39.665
  E0911 03:23:40.522680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:41.522832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:42.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 logs logs-generator logs-generator --since=1s'
  Sep 11 03:23:42.309: INFO: stderr: ""
  Sep 11 03:23:42.309: INFO: stdout: "I0911 03:23:41.447099       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/k8tz 217\nI0911 03:23:41.646376       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/dgk 252\nI0911 03:23:41.846771       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/dcc8 577\nI0911 03:23:42.047120       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/w2r 451\nI0911 03:23:42.246361       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/wm7j 495\n"
  Sep 11 03:23:42.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 logs logs-generator logs-generator --since=24h'
  Sep 11 03:23:42.438: INFO: stderr: ""
  Sep 11 03:23:42.438: INFO: stdout: "I0911 03:23:38.046342       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/zv9 529\nI0911 03:23:38.246498       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/xwc 513\nI0911 03:23:38.446878       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/mz9x 294\nI0911 03:23:38.647195       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/rffv 478\nI0911 03:23:38.846469       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/hxj 462\nI0911 03:23:39.046869       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/fbgn 599\nI0911 03:23:39.247227       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/hfwg 511\nI0911 03:23:39.446644       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/nk5q 381\nI0911 03:23:39.647030       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/rzjz 321\nI0911 03:23:39.846318       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/47qk 227\nI0911 03:23:40.046750       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/vmd 213\nI0911 03:23:40.247057       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/5cnn 379\nI0911 03:23:40.446377       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/lthn 390\nI0911 03:23:40.646764       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/7wt7 414\nI0911 03:23:40.847132       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/6ngm 352\nI0911 03:23:41.046357       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/k8x2 446\nI0911 03:23:41.246769       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/9v2k 358\nI0911 03:23:41.447099       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/k8tz 217\nI0911 03:23:41.646376       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/dgk 252\nI0911 03:23:41.846771       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/dcc8 577\nI0911 03:23:42.047120       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/w2r 451\nI0911 03:23:42.246361       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/wm7j 495\n"
  Sep 11 03:23:42.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-logs-1726 delete pod logs-generator'
  E0911 03:23:42.523806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:43.266: INFO: stderr: ""
  Sep 11 03:23:43.266: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep 11 03:23:43.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1726" for this suite. @ 09/11/23 03:23:43.271
• [6.136 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/11/23 03:23:43.279
  Sep 11 03:23:43.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:23:43.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:23:43.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:23:43.299
  STEP: Creating configMap with name projected-configmap-test-volume-map-10f02378-2174-4085-aa9a-4a963c6caf54 @ 09/11/23 03:23:43.302
  STEP: Creating a pod to test consume configMaps @ 09/11/23 03:23:43.306
  E0911 03:23:43.524118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:44.524799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:45.525380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:46.525655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:23:47.325
  Sep 11 03:23:47.330: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-projected-configmaps-db9abd81-52e4-48a6-bc7d-a7dd0f863b30 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 03:23:47.336
  Sep 11 03:23:47.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4880" for this suite. @ 09/11/23 03:23:47.364
• [4.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/11/23 03:23:47.375
  Sep 11 03:23:47.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:23:47.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:23:47.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:23:47.406
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-937 @ 09/11/23 03:23:47.411
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/11/23 03:23:47.439
  STEP: creating service externalsvc in namespace services-937 @ 09/11/23 03:23:47.439
  STEP: creating replication controller externalsvc in namespace services-937 @ 09/11/23 03:23:47.475
  I0911 03:23:47.487510      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-937, replica count: 2
  E0911 03:23:47.526615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:48.526780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:49.527740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:50.527923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 03:23:50.539281      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/11/23 03:23:50.543
  Sep 11 03:23:50.560: INFO: Creating new exec pod
  E0911 03:23:51.528810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:52.529130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:52.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-937 exec execpodp2dnw -- /bin/sh -x -c nslookup nodeport-service.services-937.svc.cluster.local'
  Sep 11 03:23:52.796: INFO: stderr: "+ nslookup nodeport-service.services-937.svc.cluster.local\n"
  Sep 11 03:23:52.796: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-937.svc.cluster.local\tcanonical name = externalsvc.services-937.svc.cluster.local.\nName:\texternalsvc.services-937.svc.cluster.local\nAddress: 10.43.64.16\n\n"
  Sep 11 03:23:52.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-937, will wait for the garbage collector to delete the pods @ 09/11/23 03:23:52.802
  Sep 11 03:23:52.873: INFO: Deleting ReplicationController externalsvc took: 15.96697ms
  Sep 11 03:23:52.974: INFO: Terminating ReplicationController externalsvc pods took: 100.689967ms
  E0911 03:23:53.529756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:54.530760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:55.531027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:23:56.218: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-937" for this suite. @ 09/11/23 03:23:56.235
• [8.871 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 09/11/23 03:23:56.253
  Sep 11 03:23:56.253: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename limitrange @ 09/11/23 03:23:56.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:23:56.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:23:56.276
  STEP: Creating a LimitRange @ 09/11/23 03:23:56.282
  STEP: Setting up watch @ 09/11/23 03:23:56.282
  STEP: Submitting a LimitRange @ 09/11/23 03:23:56.386
  STEP: Verifying LimitRange creation was observed @ 09/11/23 03:23:56.395
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/11/23 03:23:56.395
  Sep 11 03:23:56.399: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 11 03:23:56.399: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/11/23 03:23:56.399
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/11/23 03:23:56.406
  Sep 11 03:23:56.410: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 11 03:23:56.410: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/11/23 03:23:56.41
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/11/23 03:23:56.418
  Sep 11 03:23:56.422: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep 11 03:23:56.422: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/11/23 03:23:56.423
  STEP: Failing to create a Pod with more than max resources @ 09/11/23 03:23:56.427
  STEP: Updating a LimitRange @ 09/11/23 03:23:56.431
  STEP: Verifying LimitRange updating is effective @ 09/11/23 03:23:56.439
  E0911 03:23:56.532219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:57.532583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/11/23 03:23:58.444
  STEP: Failing to create a Pod with more than max resources @ 09/11/23 03:23:58.454
  STEP: Deleting a LimitRange @ 09/11/23 03:23:58.459
  STEP: Verifying the LimitRange was deleted @ 09/11/23 03:23:58.465
  E0911 03:23:58.533103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:23:59.533191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:00.533530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:01.533627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:02.533717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:03.468: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/11/23 03:24:03.469
  Sep 11 03:24:03.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6251" for this suite. @ 09/11/23 03:24:03.494
• [7.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 09/11/23 03:24:03.511
  Sep 11 03:24:03.511: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:24:03.537095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 03:24:03.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:24:03.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:24:03.591
  E0911 03:24:04.537758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:05.537646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:06.538826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:07.539243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:07.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8638" for this suite. @ 09/11/23 03:24:07.634
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/11/23 03:24:07.646
  Sep 11 03:24:07.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:24:07.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:24:07.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:24:07.676
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 03:24:07.686
  E0911 03:24:08.539206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:09.539834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:10.540006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:11.540118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:24:11.728
  Sep 11 03:24:11.730: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-4d1b0581-897f-4133-9472-cca117ad8abd container client-container: <nil>
  STEP: delete the pod @ 09/11/23 03:24:11.736
  Sep 11 03:24:11.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2186" for this suite. @ 09/11/23 03:24:11.77
• [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/11/23 03:24:11.788
  Sep 11 03:24:11.788: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename pods @ 09/11/23 03:24:11.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:24:11.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:24:11.826
  STEP: creating the pod @ 09/11/23 03:24:11.834
  STEP: submitting the pod to kubernetes @ 09/11/23 03:24:11.835
  W0911 03:24:11.845879      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0911 03:24:12.540984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:13.541087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/11/23 03:24:13.858
  STEP: updating the pod @ 09/11/23 03:24:13.861
  Sep 11 03:24:14.374: INFO: Successfully updated pod "pod-update-activedeadlineseconds-b76967e5-a87a-4239-9e54-9e419674ca55"
  E0911 03:24:14.541617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:15.542654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:16.543202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:17.543588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:18.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3333" for this suite. @ 09/11/23 03:24:18.409
• [6.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 09/11/23 03:24:18.416
  Sep 11 03:24:18.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:24:18.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:24:18.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:24:18.471
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 03:24:18.475
  Sep 11 03:24:18.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-446 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E0911 03:24:18.547354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:18.676: INFO: stderr: ""
  Sep 11 03:24:18.676: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/11/23 03:24:18.676
  Sep 11 03:24:18.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-446 delete pods e2e-test-httpd-pod'
  E0911 03:24:19.547461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:20.361: INFO: stderr: ""
  Sep 11 03:24:20.361: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 11 03:24:20.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-446" for this suite. @ 09/11/23 03:24:20.368
• [1.961 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/11/23 03:24:20.378
  Sep 11 03:24:20.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 03:24:20.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:24:20.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:24:20.406
  Sep 11 03:24:20.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-615" for this suite. @ 09/11/23 03:24:20.472
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/11/23 03:24:20.484
  Sep 11 03:24:20.485: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 03:24:20.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:24:20.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:24:20.513
  E0911 03:24:20.547736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:21.547862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:22.547941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:23.548106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:24.548547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:25.548760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:26.549582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:27.550023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:28.550279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:29.551304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:30.552228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:31.552384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:32.552470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:33.552642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:34.552758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:35.553089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:36.553174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:37.553650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:38.554715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:39.555260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:40.555392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:41.555467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:42.555679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:42.592: INFO: Container started at 2023-09-11 03:24:21 +0000 UTC, pod became ready at 2023-09-11 03:24:40 +0000 UTC
  Sep 11 03:24:42.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-91" for this suite. @ 09/11/23 03:24:42.597
• [22.120 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 09/11/23 03:24:42.605
  Sep 11 03:24:42.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:24:42.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:24:42.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:24:42.64
  STEP: creating a replication controller @ 09/11/23 03:24:42.646
  Sep 11 03:24:42.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 create -f -'
  Sep 11 03:24:43.524: INFO: stderr: ""
  Sep 11 03:24:43.524: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 03:24:43.524
  Sep 11 03:24:43.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0911 03:24:43.556424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:43.650: INFO: stderr: ""
  Sep 11 03:24:43.650: INFO: stdout: "update-demo-nautilus-tsvhq update-demo-nautilus-wvngf "
  Sep 11 03:24:43.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-tsvhq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:24:43.746: INFO: stderr: ""
  Sep 11 03:24:43.746: INFO: stdout: ""
  Sep 11 03:24:43.746: INFO: update-demo-nautilus-tsvhq is created but not running
  E0911 03:24:44.557426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:45.557667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:46.557796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:47.558739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:48.558826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:48.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:24:48.840: INFO: stderr: ""
  Sep 11 03:24:48.841: INFO: stdout: "update-demo-nautilus-tsvhq update-demo-nautilus-wvngf "
  Sep 11 03:24:48.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-tsvhq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:24:48.932: INFO: stderr: ""
  Sep 11 03:24:48.932: INFO: stdout: "true"
  Sep 11 03:24:48.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-tsvhq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 03:24:49.031: INFO: stderr: ""
  Sep 11 03:24:49.031: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 03:24:49.031: INFO: validating pod update-demo-nautilus-tsvhq
  Sep 11 03:24:49.039: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 03:24:49.039: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 03:24:49.039: INFO: update-demo-nautilus-tsvhq is verified up and running
  Sep 11 03:24:49.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-wvngf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:24:49.124: INFO: stderr: ""
  Sep 11 03:24:49.124: INFO: stdout: "true"
  Sep 11 03:24:49.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-wvngf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 03:24:49.210: INFO: stderr: ""
  Sep 11 03:24:49.210: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 03:24:49.210: INFO: validating pod update-demo-nautilus-wvngf
  Sep 11 03:24:49.217: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 03:24:49.217: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 03:24:49.217: INFO: update-demo-nautilus-wvngf is verified up and running
  STEP: scaling down the replication controller @ 09/11/23 03:24:49.217
  Sep 11 03:24:49.219: INFO: scanned /root for discovery docs: <nil>
  Sep 11 03:24:49.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0911 03:24:49.559927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:50.316: INFO: stderr: ""
  Sep 11 03:24:50.316: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 03:24:50.316
  Sep 11 03:24:50.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:24:50.408: INFO: stderr: ""
  Sep 11 03:24:50.408: INFO: stdout: "update-demo-nautilus-tsvhq update-demo-nautilus-wvngf "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/11/23 03:24:50.408
  E0911 03:24:50.560896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:51.561011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:52.561321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:53.561430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:54.561607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:55.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:24:55.502: INFO: stderr: ""
  Sep 11 03:24:55.502: INFO: stdout: "update-demo-nautilus-wvngf "
  Sep 11 03:24:55.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-wvngf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0911 03:24:55.562505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:55.583: INFO: stderr: ""
  Sep 11 03:24:55.583: INFO: stdout: "true"
  Sep 11 03:24:55.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-wvngf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 03:24:55.664: INFO: stderr: ""
  Sep 11 03:24:55.664: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 03:24:55.664: INFO: validating pod update-demo-nautilus-wvngf
  Sep 11 03:24:55.668: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 03:24:55.668: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 03:24:55.668: INFO: update-demo-nautilus-wvngf is verified up and running
  STEP: scaling up the replication controller @ 09/11/23 03:24:55.668
  Sep 11 03:24:55.670: INFO: scanned /root for discovery docs: <nil>
  Sep 11 03:24:55.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0911 03:24:56.563787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:24:56.786: INFO: stderr: ""
  Sep 11 03:24:56.786: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 03:24:56.786
  Sep 11 03:24:56.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:24:56.865: INFO: stderr: ""
  Sep 11 03:24:56.865: INFO: stdout: "update-demo-nautilus-9tmv4 update-demo-nautilus-wvngf "
  Sep 11 03:24:56.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-9tmv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:24:56.943: INFO: stderr: ""
  Sep 11 03:24:56.943: INFO: stdout: ""
  Sep 11 03:24:56.943: INFO: update-demo-nautilus-9tmv4 is created but not running
  E0911 03:24:57.563627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:58.563756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:24:59.563910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:00.564267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:01.564449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:01.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 03:25:02.025: INFO: stderr: ""
  Sep 11 03:25:02.025: INFO: stdout: "update-demo-nautilus-9tmv4 update-demo-nautilus-wvngf "
  Sep 11 03:25:02.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-9tmv4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:25:02.109: INFO: stderr: ""
  Sep 11 03:25:02.109: INFO: stdout: "true"
  Sep 11 03:25:02.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-9tmv4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 03:25:02.204: INFO: stderr: ""
  Sep 11 03:25:02.204: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 03:25:02.204: INFO: validating pod update-demo-nautilus-9tmv4
  Sep 11 03:25:02.212: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 03:25:02.212: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 03:25:02.212: INFO: update-demo-nautilus-9tmv4 is verified up and running
  Sep 11 03:25:02.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-wvngf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 03:25:02.295: INFO: stderr: ""
  Sep 11 03:25:02.295: INFO: stdout: "true"
  Sep 11 03:25:02.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods update-demo-nautilus-wvngf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 03:25:02.385: INFO: stderr: ""
  Sep 11 03:25:02.385: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 03:25:02.385: INFO: validating pod update-demo-nautilus-wvngf
  Sep 11 03:25:02.389: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 03:25:02.389: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 03:25:02.389: INFO: update-demo-nautilus-wvngf is verified up and running
  STEP: using delete to clean up resources @ 09/11/23 03:25:02.389
  Sep 11 03:25:02.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 delete --grace-period=0 --force -f -'
  Sep 11 03:25:02.477: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 03:25:02.477: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 11 03:25:02.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get rc,svc -l name=update-demo --no-headers'
  E0911 03:25:02.564844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:02.586: INFO: stderr: "No resources found in kubectl-9685 namespace.\n"
  Sep 11 03:25:02.586: INFO: stdout: ""
  Sep 11 03:25:02.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9685 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 11 03:25:02.673: INFO: stderr: ""
  Sep 11 03:25:02.673: INFO: stdout: ""
  Sep 11 03:25:02.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9685" for this suite. @ 09/11/23 03:25:02.678
• [20.079 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 09/11/23 03:25:02.685
  Sep 11 03:25:02.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 03:25:02.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:02.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:02.717
  STEP: getting /apis @ 09/11/23 03:25:02.726
  STEP: getting /apis/discovery.k8s.io @ 09/11/23 03:25:02.734
  STEP: getting /apis/discovery.k8s.iov1 @ 09/11/23 03:25:02.736
  STEP: creating @ 09/11/23 03:25:02.737
  STEP: getting @ 09/11/23 03:25:02.762
  STEP: listing @ 09/11/23 03:25:02.765
  STEP: watching @ 09/11/23 03:25:02.768
  Sep 11 03:25:02.768: INFO: starting watch
  STEP: cluster-wide listing @ 09/11/23 03:25:02.77
  STEP: cluster-wide watching @ 09/11/23 03:25:02.774
  Sep 11 03:25:02.774: INFO: starting watch
  STEP: patching @ 09/11/23 03:25:02.776
  STEP: updating @ 09/11/23 03:25:02.782
  Sep 11 03:25:02.793: INFO: waiting for watch events with expected annotations
  Sep 11 03:25:02.793: INFO: saw patched and updated annotations
  STEP: deleting @ 09/11/23 03:25:02.793
  STEP: deleting a collection @ 09/11/23 03:25:02.807
  Sep 11 03:25:02.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2493" for this suite. @ 09/11/23 03:25:02.827
• [0.150 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/11/23 03:25:02.835
  Sep 11 03:25:02.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 03:25:02.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:02.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:02.857
  STEP: create the container @ 09/11/23 03:25:02.862
  W0911 03:25:02.871437      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/11/23 03:25:02.871
  E0911 03:25:03.564928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:04.565682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:05.566014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/11/23 03:25:05.89
  STEP: the container should be terminated @ 09/11/23 03:25:05.893
  STEP: the termination message should be set @ 09/11/23 03:25:05.893
  Sep 11 03:25:05.893: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/11/23 03:25:05.893
  Sep 11 03:25:05.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4730" for this suite. @ 09/11/23 03:25:05.917
• [3.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 09/11/23 03:25:05.926
  Sep 11 03:25:05.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 03:25:05.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:05.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:05.949
  STEP: Counting existing ResourceQuota @ 09/11/23 03:25:05.954
  E0911 03:25:06.566689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:07.566853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:08.567123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:09.567246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:10.567847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 03:25:10.96
  STEP: Ensuring resource quota status is calculated @ 09/11/23 03:25:10.967
  E0911 03:25:11.567993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:12.568106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/11/23 03:25:12.972
  STEP: Ensuring resource quota status captures replication controller creation @ 09/11/23 03:25:12.985
  E0911 03:25:13.568143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:14.568929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/11/23 03:25:14.99
  STEP: Ensuring resource quota status released usage @ 09/11/23 03:25:14.996
  E0911 03:25:15.569312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:16.569657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:17.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7710" for this suite. @ 09/11/23 03:25:17.007
• [11.087 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/11/23 03:25:17.014
  Sep 11 03:25:17.014: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 03:25:17.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:17.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:17.045
  Sep 11 03:25:17.050: INFO: Creating simple deployment test-new-deployment
  Sep 11 03:25:17.087: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0911 03:25:17.570675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:18.571207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/11/23 03:25:19.103
  STEP: updating a scale subresource @ 09/11/23 03:25:19.106
  STEP: verifying the deployment Spec.Replicas was modified @ 09/11/23 03:25:19.114
  STEP: Patch a scale subresource @ 09/11/23 03:25:19.124
  Sep 11 03:25:19.168: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7677",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf6ababe-1711-4403-be2f-c81a531359e7",
      ResourceVersion: (string) (len=5) "47921",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999518,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 03:25:19.177: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7677",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "006f082a-952c-497c-9038-88e3351a5a0a",
      ResourceVersion: (string) (len=5) "47924",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "cf6ababe-1711-4403-be2f-c81a531359e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 66 36 61 62 61  62 65 2d 31 37 31 31 2d  |\"cf6ababe-1711-|
              00000120  34 34 30 33 2d 62 65 32  66 2d 63 38 31 61 35 33  |4403-be2f-c81a53|
              00000130  31 33 35 39 65 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1359e7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 03:25:19.184: INFO: Pod "test-new-deployment-557759b7c7-58968" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-58968",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7677",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16624913-f492-4518-b584-6e930e776399",
      ResourceVersion: (string) (len=5) "47919",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999519,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "006f082a-952c-497c-9038-88e3351a5a0a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  36 66 30 38 32 61 2d 39  |d\":\"006f082a-9|
              00000090  35 32 63 2d 34 39 37 63  2d 39 30 33 38 2d 38 38  |52c-497c-9038-88|
              000000a0  65 33 33 35 31 61 35 61  30 61 5c 22 7d 22 3a 7b  |e3351a5a0a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7cg9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7cg9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:25:19.186: INFO: Pod "test-new-deployment-557759b7c7-sg4v2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-sg4v2",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7677",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33fa7c2a-7223-40b7-aa04-2bcba06a585c",
      ResourceVersion: (string) (len=5) "47909",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "006f082a-952c-497c-9038-88e3351a5a0a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  36 66 30 38 32 61 2d 39  |d\":\"006f082a-9|
              00000090  35 32 63 2d 34 39 37 63  2d 39 30 33 38 2d 38 38  |52c-497c-9038-88|
              000000a0  65 33 33 35 31 61 35 61  30 61 5c 22 7d 22 3a 7b  |e3351a5a0a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999518,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  39 31 5c 22 7d 22 3a 7b  |10.42.1.91\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pffbn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pffbn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999518,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999518,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.1.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999517,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0fd0516c3d3be96f1a205e942dfc6d0a47160012e0ea618a38fee3a433000433",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:25:19.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7677" for this suite. @ 09/11/23 03:25:19.197
• [2.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 09/11/23 03:25:19.219
  Sep 11 03:25:19.219: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/11/23 03:25:19.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:19.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:19.291
  STEP: create the container to handle the HTTPGet hook request. @ 09/11/23 03:25:19.304
  E0911 03:25:19.571245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:20.571636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/11/23 03:25:21.335
  E0911 03:25:21.572170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:22.572261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/11/23 03:25:23.366
  E0911 03:25:23.573180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:24.573869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/11/23 03:25:25.381
  Sep 11 03:25:25.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4161" for this suite. @ 09/11/23 03:25:25.391
• [6.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/11/23 03:25:25.398
  Sep 11 03:25:25.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:25:25.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:25.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:25.421
  STEP: creating service endpoint-test2 in namespace services-3609 @ 09/11/23 03:25:25.426
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3609 to expose endpoints map[] @ 09/11/23 03:25:25.439
  Sep 11 03:25:25.450: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0911 03:25:25.574305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:26.459: INFO: successfully validated that service endpoint-test2 in namespace services-3609 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3609 @ 09/11/23 03:25:26.459
  E0911 03:25:26.575040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:27.575228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3609 to expose endpoints map[pod1:[80]] @ 09/11/23 03:25:28.481
  Sep 11 03:25:28.492: INFO: successfully validated that service endpoint-test2 in namespace services-3609 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/11/23 03:25:28.492
  Sep 11 03:25:28.492: INFO: Creating new exec pod
  E0911 03:25:28.575597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:29.576573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:30.585620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:31.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3609 exec execpodjmfw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0911 03:25:31.586524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:31.676: INFO: stderr: "+ + echonc -v -t hostName -w\n 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 11 03:25:31.676: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 03:25:31.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3609 exec execpodjmfw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.181.19 80'
  Sep 11 03:25:31.809: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.181.19 80\nConnection to 10.43.181.19 80 port [tcp/http] succeeded!\n"
  Sep 11 03:25:31.809: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3609 @ 09/11/23 03:25:31.809
  E0911 03:25:32.586892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:33.587156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3609 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/11/23 03:25:33.828
  Sep 11 03:25:33.840: INFO: successfully validated that service endpoint-test2 in namespace services-3609 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/11/23 03:25:33.841
  E0911 03:25:34.587799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:34.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3609 exec execpodjmfw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 11 03:25:35.080: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 11 03:25:35.080: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 03:25:35.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3609 exec execpodjmfw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.181.19 80'
  Sep 11 03:25:35.231: INFO: stderr: "+ nc -v -t -w 2 10.43.181.19 80\n+ echo hostName\nConnection to 10.43.181.19 80 port [tcp/http] succeeded!\n"
  Sep 11 03:25:35.231: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3609 @ 09/11/23 03:25:35.231
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3609 to expose endpoints map[pod2:[80]] @ 09/11/23 03:25:35.242
  E0911 03:25:35.587948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:36.295: INFO: successfully validated that service endpoint-test2 in namespace services-3609 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/11/23 03:25:36.295
  E0911 03:25:36.588732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:37.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3609 exec execpodjmfw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 11 03:25:37.446: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 11 03:25:37.446: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 03:25:37.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=services-3609 exec execpodjmfw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.181.19 80'
  E0911 03:25:37.588985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:37.611: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.181.19 80\nConnection to 10.43.181.19 80 port [tcp/http] succeeded!\n"
  Sep 11 03:25:37.611: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3609 @ 09/11/23 03:25:37.611
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3609 to expose endpoints map[] @ 09/11/23 03:25:37.628
  Sep 11 03:25:37.661: INFO: successfully validated that service endpoint-test2 in namespace services-3609 exposes endpoints map[]
  Sep 11 03:25:37.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3609" for this suite. @ 09/11/23 03:25:37.695
• [12.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 09/11/23 03:25:37.707
  Sep 11 03:25:37.707: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 03:25:37.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:37.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:37.727
  STEP: Counting existing ResourceQuota @ 09/11/23 03:25:37.73
  E0911 03:25:38.589608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:39.589737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:40.590032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:41.590127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:42.590279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 03:25:42.735
  STEP: Ensuring resource quota status is calculated @ 09/11/23 03:25:42.741
  E0911 03:25:43.591083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:44.591918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/11/23 03:25:44.746
  STEP: Creating a NodePort Service @ 09/11/23 03:25:44.771
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/11/23 03:25:44.816
  STEP: Ensuring resource quota status captures service creation @ 09/11/23 03:25:44.838
  E0911 03:25:45.592075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:46.592172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/11/23 03:25:46.842
  STEP: Ensuring resource quota status released usage @ 09/11/23 03:25:46.892
  E0911 03:25:47.592330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:48.592415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:48.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8683" for this suite. @ 09/11/23 03:25:48.907
• [11.216 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 09/11/23 03:25:48.924
  Sep 11 03:25:48.924: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 03:25:48.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:48.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:48.96
  STEP: create deployment with httpd image @ 09/11/23 03:25:48.974
  Sep 11 03:25:48.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9867 create -f -'
  Sep 11 03:25:49.299: INFO: stderr: ""
  Sep 11 03:25:49.299: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/11/23 03:25:49.299
  Sep 11 03:25:49.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9867 diff -f -'
  Sep 11 03:25:49.515: INFO: rc: 1
  Sep 11 03:25:49.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2166035651 --namespace=kubectl-9867 delete -f -'
  E0911 03:25:49.593365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:25:49.603: INFO: stderr: ""
  Sep 11 03:25:49.603: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep 11 03:25:49.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9867" for this suite. @ 09/11/23 03:25:49.607
• [0.691 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 09/11/23 03:25:49.616
  Sep 11 03:25:49.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 03:25:49.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:49.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:49.636
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/11/23 03:25:49.64
  E0911 03:25:50.593171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:51.593303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:52.593629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:53.593801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:25:53.659
  Sep 11 03:25:53.662: INFO: Trying to get logs from node ip-172-31-4-243 pod pod-92dbc794-07e2-4701-ab37-72d3bb361e13 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 03:25:53.675
  Sep 11 03:25:53.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-989" for this suite. @ 09/11/23 03:25:53.694
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/11/23 03:25:53.711
  Sep 11 03:25:53.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 03:25:53.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:25:53.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:25:53.734
  STEP: set up a multi version CRD @ 09/11/23 03:25:53.738
  Sep 11 03:25:53.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:25:54.593911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:55.594732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:56.594782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:25:57.595709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/11/23 03:25:57.996
  STEP: check the unserved version gets removed @ 09/11/23 03:25:58.021
  E0911 03:25:58.596197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/11/23 03:25:59.34
  E0911 03:25:59.596754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:00.596969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:01.597341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:02.597646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:02.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5101" for this suite. @ 09/11/23 03:26:02.772
• [9.068 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/11/23 03:26:02.782
  Sep 11 03:26:02.782: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename projected @ 09/11/23 03:26:02.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:02.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:02.807
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 03:26:02.812
  E0911 03:26:03.597868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:04.598661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:05.598706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:06.598848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:26:06.839
  Sep 11 03:26:06.843: INFO: Trying to get logs from node ip-172-31-3-111 pod downwardapi-volume-eb1f9981-da71-47dd-aa42-35a555eac6b5 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 03:26:06.849
  Sep 11 03:26:06.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5423" for this suite. @ 09/11/23 03:26:06.875
• [4.101 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/11/23 03:26:06.883
  Sep 11 03:26:06.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 03:26:06.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:06.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:06.904
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/11/23 03:26:06.931
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 03:26:06.938
  Sep 11 03:26:06.974: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 03:26:06.975: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 03:26:07.598938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:07.991: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 03:26:07.991: INFO: Node ip-172-31-11-123 is running 0 daemon pod, expected 1
  E0911 03:26:08.599090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:08.992: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 03:26:08.992: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/11/23 03:26:08.995
  Sep 11 03:26:09.026: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 03:26:09.026: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/11/23 03:26:09.026
  E0911 03:26:09.599578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 03:26:10.044
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9825, will wait for the garbage collector to delete the pods @ 09/11/23 03:26:10.044
  Sep 11 03:26:10.105: INFO: Deleting DaemonSet.extensions daemon-set took: 6.799042ms
  Sep 11 03:26:10.206: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.651978ms
  E0911 03:26:10.599941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:11.600770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:11.612: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 03:26:11.612: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 03:26:11.615: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48484"},"items":null}

  Sep 11 03:26:11.618: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48484"},"items":null}

  Sep 11 03:26:11.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9825" for this suite. @ 09/11/23 03:26:11.641
• [4.763 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 09/11/23 03:26:11.648
  Sep 11 03:26:11.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:26:11.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:11.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:11.67
  STEP: creating an Endpoint @ 09/11/23 03:26:11.68
  STEP: waiting for available Endpoint @ 09/11/23 03:26:11.687
  STEP: listing all Endpoints @ 09/11/23 03:26:11.689
  STEP: updating the Endpoint @ 09/11/23 03:26:11.694
  STEP: fetching the Endpoint @ 09/11/23 03:26:11.704
  STEP: patching the Endpoint @ 09/11/23 03:26:11.708
  STEP: fetching the Endpoint @ 09/11/23 03:26:11.72
  STEP: deleting the Endpoint by Collection @ 09/11/23 03:26:11.723
  STEP: waiting for Endpoint deletion @ 09/11/23 03:26:11.732
  STEP: fetching the Endpoint @ 09/11/23 03:26:11.737
  Sep 11 03:26:11.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2574" for this suite. @ 09/11/23 03:26:11.747
• [0.106 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/11/23 03:26:11.754
  Sep 11 03:26:11.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 03:26:11.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:11.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:11.777
  STEP: create the container @ 09/11/23 03:26:11.782
  W0911 03:26:11.790350      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/11/23 03:26:11.79
  E0911 03:26:12.600880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:13.600993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/11/23 03:26:13.801
  STEP: the container should be terminated @ 09/11/23 03:26:13.805
  STEP: the termination message should be set @ 09/11/23 03:26:13.805
  Sep 11 03:26:13.805: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/11/23 03:26:13.805
  Sep 11 03:26:13.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4411" for this suite. @ 09/11/23 03:26:13.827
• [2.080 seconds]
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 09/11/23 03:26:13.834
  Sep 11 03:26:13.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename limitrange @ 09/11/23 03:26:13.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:13.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:13.859
  STEP: Creating LimitRange "e2e-limitrange-plndh" in namespace "limitrange-5611" @ 09/11/23 03:26:13.862
  STEP: Creating another limitRange in another namespace @ 09/11/23 03:26:13.868
  Sep 11 03:26:13.886: INFO: Namespace "e2e-limitrange-plndh-9368" created
  Sep 11 03:26:13.886: INFO: Creating LimitRange "e2e-limitrange-plndh" in namespace "e2e-limitrange-plndh-9368"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-plndh" @ 09/11/23 03:26:13.893
  Sep 11 03:26:13.896: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-plndh" in "limitrange-5611" namespace @ 09/11/23 03:26:13.897
  Sep 11 03:26:13.905: INFO: LimitRange "e2e-limitrange-plndh" has been patched
  STEP: Delete LimitRange "e2e-limitrange-plndh" by Collection with labelSelector: "e2e-limitrange-plndh=patched" @ 09/11/23 03:26:13.905
  STEP: Confirm that the limitRange "e2e-limitrange-plndh" has been deleted @ 09/11/23 03:26:13.92
  Sep 11 03:26:13.920: INFO: Requesting list of LimitRange to confirm quantity
  Sep 11 03:26:13.928: INFO: Found 0 LimitRange with label "e2e-limitrange-plndh=patched"
  Sep 11 03:26:13.928: INFO: LimitRange "e2e-limitrange-plndh" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-plndh" @ 09/11/23 03:26:13.928
  Sep 11 03:26:13.935: INFO: Found 1 limitRange
  Sep 11 03:26:13.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5611" for this suite. @ 09/11/23 03:26:13.94
  STEP: Destroying namespace "e2e-limitrange-plndh-9368" for this suite. @ 09/11/23 03:26:13.948
• [0.121 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 09/11/23 03:26:13.955
  Sep 11 03:26:13.955: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/11/23 03:26:13.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:13.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:13.979
  STEP: getting /apis @ 09/11/23 03:26:13.982
  STEP: getting /apis/storage.k8s.io @ 09/11/23 03:26:13.988
  STEP: getting /apis/storage.k8s.io/v1 @ 09/11/23 03:26:13.989
  STEP: creating @ 09/11/23 03:26:13.992
  STEP: watching @ 09/11/23 03:26:14.011
  Sep 11 03:26:14.011: INFO: starting watch
  STEP: getting @ 09/11/23 03:26:14.022
  STEP: listing in namespace @ 09/11/23 03:26:14.025
  STEP: listing across namespaces @ 09/11/23 03:26:14.029
  STEP: patching @ 09/11/23 03:26:14.032
  STEP: updating @ 09/11/23 03:26:14.038
  Sep 11 03:26:14.044: INFO: waiting for watch events with expected annotations in namespace
  Sep 11 03:26:14.044: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/11/23 03:26:14.044
  STEP: deleting a collection @ 09/11/23 03:26:14.063
  Sep 11 03:26:14.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5203" for this suite. @ 09/11/23 03:26:14.085
• [0.137 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 09/11/23 03:26:14.094
  Sep 11 03:26:14.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename services @ 09/11/23 03:26:14.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:14.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:14.12
  STEP: fetching services @ 09/11/23 03:26:14.125
  Sep 11 03:26:14.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6609" for this suite. @ 09/11/23 03:26:14.137
• [0.051 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/11/23 03:26:14.146
  Sep 11 03:26:14.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 03:26:14.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:14.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:14.172
  STEP: Creating secret with name secret-test-6d1ffde1-b71a-408f-a006-3ca68373e570 @ 09/11/23 03:26:14.178
  STEP: Creating a pod to test consume secrets @ 09/11/23 03:26:14.186
  E0911 03:26:14.601121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:15.601225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:16.602119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:17.602709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:26:18.216
  Sep 11 03:26:18.220: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-secrets-92f79e51-d270-4322-8a42-e1a984a436d4 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 03:26:18.226
  Sep 11 03:26:18.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9024" for this suite. @ 09/11/23 03:26:18.247
• [4.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/11/23 03:26:18.256
  Sep 11 03:26:18.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 03:26:18.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:18.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:18.276
  Sep 11 03:26:18.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  W0911 03:26:18.281969      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0013e3010 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0911 03:26:18.602890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:19.603028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:20.603382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0911 03:26:20.818320      19 warnings.go:70] unknown field "alpha"
  W0911 03:26:20.818434      19 warnings.go:70] unknown field "beta"
  W0911 03:26:20.818491      19 warnings.go:70] unknown field "delta"
  W0911 03:26:20.818536      19 warnings.go:70] unknown field "epsilon"
  W0911 03:26:20.818579      19 warnings.go:70] unknown field "gamma"
  Sep 11 03:26:21.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3180" for this suite. @ 09/11/23 03:26:21.365
• [3.115 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/11/23 03:26:21.371
  Sep 11 03:26:21.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename dns @ 09/11/23 03:26:21.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:21.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:21.398
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/11/23 03:26:21.402
  Sep 11 03:26:21.419: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4982  7b825dfd-0ed6-443b-bd41-2db1f1fe0a07 48680 0 2023-09-11 03:26:21 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-09-11 03:26:21 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qfbh5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qfbh5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0911 03:26:21.603822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:22.603931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/11/23 03:26:23.427
  Sep 11 03:26:23.427: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4982 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:26:23.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:26:23.427: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:26:23.428: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-4982/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/11/23 03:26:23.531
  Sep 11 03:26:23.531: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4982 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 03:26:23.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  Sep 11 03:26:23.532: INFO: ExecWithOptions: Clientset creation
  Sep 11 03:26:23.532: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-4982/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0911 03:26:23.604385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:23.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 03:26:23.629: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-4982" for this suite. @ 09/11/23 03:26:23.642
• [2.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/11/23 03:26:23.654
  Sep 11 03:26:23.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 03:26:23.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:23.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:23.676
  STEP: create the container @ 09/11/23 03:26:23.679
  W0911 03:26:23.687975      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/11/23 03:26:23.688
  E0911 03:26:24.604783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:25.604936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:26.605588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/11/23 03:26:26.712
  STEP: the container should be terminated @ 09/11/23 03:26:26.717
  STEP: the termination message should be set @ 09/11/23 03:26:26.717
  Sep 11 03:26:26.717: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/11/23 03:26:26.717
  Sep 11 03:26:26.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6039" for this suite. @ 09/11/23 03:26:26.746
• [3.099 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/11/23 03:26:26.754
  Sep 11 03:26:26.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 03:26:26.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:26.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:26.782
  Sep 11 03:26:26.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  E0911 03:26:27.606224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:28.606829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0911 03:26:29.343064      19 warnings.go:70] unknown field "alpha"
  W0911 03:26:29.343100      19 warnings.go:70] unknown field "beta"
  W0911 03:26:29.343107      19 warnings.go:70] unknown field "delta"
  W0911 03:26:29.343113      19 warnings.go:70] unknown field "epsilon"
  W0911 03:26:29.343119      19 warnings.go:70] unknown field "gamma"
  E0911 03:26:29.607363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:29.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2131" for this suite. @ 09/11/23 03:26:29.891
• [3.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 09/11/23 03:26:29.899
  Sep 11 03:26:29.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 03:26:29.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:29.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:29.924
  STEP: Creating a pod to test downward api env vars @ 09/11/23 03:26:29.928
  E0911 03:26:30.607556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:31.608050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:26:31.95
  Sep 11 03:26:31.957: INFO: Trying to get logs from node ip-172-31-3-111 pod downward-api-f1184916-be93-4843-8657-7f50aeadc7da container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 03:26:31.975
  Sep 11 03:26:32.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4722" for this suite. @ 09/11/23 03:26:32.015
• [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/11/23 03:26:32.029
  Sep 11 03:26:32.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 03:26:32.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:32.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:32.057
  Sep 11 03:26:32.078: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0911 03:26:32.608812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:33.609226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:34.609743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:35.610715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:36.611263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:37.086: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 03:26:37.086
  Sep 11 03:26:37.086: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/11/23 03:26:37.097
  Sep 11 03:26:37.112: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4233",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d10d42cd-6141-4998-a8d3-be501c2898b5",
      ResourceVersion: (string) (len=5) "48851",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 03:26:37.117: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Sep 11 03:26:37.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4233" for this suite. @ 09/11/23 03:26:37.127
• [5.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 09/11/23 03:26:37.141
  Sep 11 03:26:37.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename ingressclass @ 09/11/23 03:26:37.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:37.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:37.18
  STEP: getting /apis @ 09/11/23 03:26:37.191
  STEP: getting /apis/networking.k8s.io @ 09/11/23 03:26:37.207
  STEP: getting /apis/networking.k8s.iov1 @ 09/11/23 03:26:37.211
  STEP: creating @ 09/11/23 03:26:37.215
  STEP: getting @ 09/11/23 03:26:37.271
  STEP: listing @ 09/11/23 03:26:37.281
  STEP: watching @ 09/11/23 03:26:37.288
  Sep 11 03:26:37.288: INFO: starting watch
  STEP: patching @ 09/11/23 03:26:37.292
  STEP: updating @ 09/11/23 03:26:37.314
  Sep 11 03:26:37.335: INFO: waiting for watch events with expected annotations
  Sep 11 03:26:37.335: INFO: saw patched and updated annotations
  STEP: deleting @ 09/11/23 03:26:37.335
  STEP: deleting a collection @ 09/11/23 03:26:37.392
  Sep 11 03:26:37.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5824" for this suite. @ 09/11/23 03:26:37.434
• [0.329 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/11/23 03:26:37.472
  Sep 11 03:26:37.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename deployment @ 09/11/23 03:26:37.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:37.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:37.505
  Sep 11 03:26:37.532: INFO: Creating deployment "webserver-deployment"
  Sep 11 03:26:37.547: INFO: Waiting for observed generation 1
  E0911 03:26:37.612034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:38.612331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:39.559: INFO: Waiting for all required pods to come up
  Sep 11 03:26:39.563: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/11/23 03:26:39.564
  Sep 11 03:26:39.564: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep 11 03:26:39.571: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep 11 03:26:39.579: INFO: Updating deployment webserver-deployment
  Sep 11 03:26:39.579: INFO: Waiting for observed generation 2
  E0911 03:26:39.612953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:40.613238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:41.596: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep 11 03:26:41.599: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep 11 03:26:41.603: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 11 03:26:41.613: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep 11 03:26:41.614: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  E0911 03:26:41.614022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:41.617: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 11 03:26:41.624: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep 11 03:26:41.624: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep 11 03:26:41.633: INFO: Updating deployment webserver-deployment
  Sep 11 03:26:41.633: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep 11 03:26:41.639: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep 11 03:26:41.643: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0911 03:26:42.615437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:43.615565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:43.657: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5377639f-972d-4872-9584-686c9c34dd26",
      ResourceVersion: (string) (len=5) "49323",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      UnavailableReplicas: (int32) 19,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 03:26:43.663: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
      ResourceVersion: (string) (len=5) "49178",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5377639f-972d-4872-9584-686c9c34dd26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 37 37 36 33  39 66 2d 39 37 32 64 2d  |\"5377639f-972d-|
              00000120  34 38 37 32 2d 39 35 38  34 2d 36 38 36 63 39 63  |4872-9584-686c9c|
              00000130  33 34 64 64 32 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |34dd26\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 03:26:43.664: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep 11 03:26:43.664: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
      ResourceVersion: (string) (len=5) "49321",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5377639f-972d-4872-9584-686c9c34dd26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 37 37 36 33  39 66 2d 39 37 32 64 2d  |\"5377639f-972d-|
              00000120  34 38 37 32 2d 39 35 38  34 2d 36 38 36 63 39 63  |4872-9584-686c9c|
              00000130  33 34 64 64 32 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |34dd26\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 03:26:43.675: INFO: Pod "webserver-deployment-557759b7c7-2q664" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2q664",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35455e7c-38bf-4210-9d4c-c331c2de05d2",
      ResourceVersion: (string) (len=5) "49153",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wqc5h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wqc5h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.677: INFO: Pod "webserver-deployment-557759b7c7-42zjn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-42zjn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e85de573-f0ca-45b4-b5da-f23652757e02",
      ResourceVersion: (string) (len=5) "49194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s899g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s899g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.679: INFO: Pod "webserver-deployment-557759b7c7-4s7l6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4s7l6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "093a5a9e-b5ee-4462-8da2-1d4b02bc8e4a",
      ResourceVersion: (string) (len=5) "49192",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zkzlk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zkzlk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.681: INFO: Pod "webserver-deployment-557759b7c7-6xw4v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6xw4v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4cfcd5ae-489c-456b-a981-14202f713fdf",
      ResourceVersion: (string) (len=5) "48982",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  31 30 34 5c 22 7d 22 3a  |10.42.1.104\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cx22n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cx22n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.1.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c0df6f774c16defd787ebf75b05f69c9eb2c19c75f01dc064ba1a8cea0116f15",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.682: INFO: Pod "webserver-deployment-557759b7c7-772jw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-772jw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c744a748-0852-4f3b-8e09-545851d56d1e",
      ResourceVersion: (string) (len=5) "49195",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7pjb8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7pjb8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.684: INFO: Pod "webserver-deployment-557759b7c7-8cqts" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8cqts",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1455e18f-2d5c-488c-80bd-547dc20b824e",
      ResourceVersion: (string) (len=5) "48986",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  31 33 33 5c 22 7d 22 3a  |10.42.2.133\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zh4nl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zh4nl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://75f6b6623c4c5fd90972bb6b85e692a8fb5a99ef13052e3e490bde7d678ec9d4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.686: INFO: Pod "webserver-deployment-557759b7c7-8v67l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8v67l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c8eba72-f24c-4c09-8e94-bc22addf785a",
      ResourceVersion: (string) (len=5) "48996",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  32 30 35 5c 22 7d 22 3a  |10.42.3.205\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8w76",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8w76",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://69988632ba04a1dfba95fbc892a66a89d7e7ff1a4f5a121bb6b1c749bca16d03",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.688: INFO: Pod "webserver-deployment-557759b7c7-9dzn8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9dzn8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fbaa872-72e1-47d1-ba2a-27517fe03e9d",
      ResourceVersion: (string) (len=5) "49310",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  32 31 30 5c 22 7d 22 3a  |10.42.3.210\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8ccm4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8ccm4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999602,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6fa10807e4e88978d6961fe923edcf070c23c410512bca718771ce9104d841f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.695: INFO: Pod "webserver-deployment-557759b7c7-c8d6z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c8d6z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3d82129-ff3b-4f77-874d-8b8601e6d9d6",
      ResourceVersion: (string) (len=5) "49290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  31 33 38 5c 22 7d 22 3a  |10.42.2.138\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kngbz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kngbz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999603,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://be5c837f10f40fe9a600016c2334bb8b2b81537053930a408944abc9b7a47aa9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.697: INFO: Pod "webserver-deployment-557759b7c7-cpjj9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cpjj9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb062a8f-f125-4e33-9eeb-ef56cbadbd15",
      ResourceVersion: (string) (len=5) "49250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  31 30 39 5c 22 7d 22 3a  |10.42.1.109\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kml5t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kml5t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.1.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999602,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1a7f25805a926094cfae40acd8aec5a4508cc93f0c479f3e3dca06f71b845db1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.704: INFO: Pod "webserver-deployment-557759b7c7-dww9j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dww9j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edae838b-d849-41ff-be36-8f2730d758a4",
      ResourceVersion: (string) (len=5) "49298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  31 33 36 5c 22 7d 22 3a  |10.42.2.136\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6rw6j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6rw6j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999603,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://57a79641109bafdc05ca828497b1ffc7463d1e814e821b36fdc3f9000e6b1a3e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.711: INFO: Pod "webserver-deployment-557759b7c7-g4t5k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-g4t5k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83f22361-315c-40a2-b055-493cfa5840a8",
      ResourceVersion: (string) (len=5) "48993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  32 30 36 5c 22 7d 22 3a  |10.42.3.206\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8psgc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8psgc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bbc312c9b098595b1de5f2768d0a29a64c718403d2729a5f70335864963f55a0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.713: INFO: Pod "webserver-deployment-557759b7c7-hq9zg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hq9zg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6ae0104-9dd3-4db3-a342-37416e567271",
      ResourceVersion: (string) (len=5) "48969",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 30 2e  31 31 34 5c 22 7d 22 3a  |10.42.0.114\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2tzms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2tzms",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.0.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8ef0be4fd6e16976b210ce3cc61914fc4cb78968499ea9df31557a5c18ef7f66",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.716: INFO: Pod "webserver-deployment-557759b7c7-l6vwj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l6vwj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "774338dc-f772-4d0f-8ee2-44b1cf766a1f",
      ResourceVersion: (string) (len=5) "48988",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  31 33 34 5c 22 7d 22 3a  |10.42.2.134\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ck7zj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ck7zj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6087756c52f0e0616e31dbb3618a225d9402507654908e5edbd1336ea5a7ee58",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.720: INFO: Pod "webserver-deployment-557759b7c7-pptsn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pptsn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e95705a2-2dbf-4c82-b149-c876004bfec8",
      ResourceVersion: (string) (len=5) "49164",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dqjqw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dqjqw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.724: INFO: Pod "webserver-deployment-557759b7c7-q754s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q754s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25e9954e-993a-4964-a42b-78b8f5e58321",
      ResourceVersion: (string) (len=5) "49300",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  31 34 30 5c 22 7d 22 3a  |10.42.2.140\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9nj7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9nj7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999603,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8b50ad2c5b98fde6099ebf39f4ddf228f1d002f4f6f9713a6ae88417ae5b6d1a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.729: INFO: Pod "webserver-deployment-557759b7c7-swnrb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-swnrb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33541093-de81-49af-b048-6c6a7cbcb171",
      ResourceVersion: (string) (len=5) "49196",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j5g2d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j5g2d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.731: INFO: Pod "webserver-deployment-557759b7c7-tg2hd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tg2hd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6f01949-fb96-48a0-b991-5793e938d7af",
      ResourceVersion: (string) (len=5) "49319",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  32 30 39 5c 22 7d 22 3a  |10.42.3.209\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rxfwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rxfwt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999602,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e22737a2829d3fa3e84ea9d81979c7e6fae04d1c4384e0e8c5dfdc78d098a700",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.733: INFO: Pod "webserver-deployment-557759b7c7-tnll5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tnll5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d2c3496-d468-4950-93c5-0f450755172a",
      ResourceVersion: (string) (len=5) "48999",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  32 30 34 5c 22 7d 22 3a  |10.42.3.204\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpzm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpzm6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.204",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.204"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b9400bb0975cfcb6de70c2a166afba9c9210bca932112430eab8aa064ba3138a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.736: INFO: Pod "webserver-deployment-557759b7c7-wqhd6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wqhd6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92fbb0a9-b448-4ced-ac5b-d473cdead9ae",
      ResourceVersion: (string) (len=5) "48973",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "77a52170-e838-49d2-a479-14ced586967d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  61 35 32 31 37 30 2d 65  |d\":\"77a52170-e|
              00000090  38 33 38 2d 34 39 64 32  2d 61 34 37 39 2d 31 34  |838-49d2-a479-14|
              000000a0  63 65 64 35 38 36 39 36  37 64 5c 22 7d 22 3a 7b  |ced586967d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 30 2e  31 31 33 5c 22 7d 22 3a  |10.42.0.113\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zzrf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zzrf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.0.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829999598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9b578afd24781e37e34c6819ad0cc51558dca8cc3cb79896dcdc01d9c9b839b7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.739: INFO: Pod "webserver-deployment-9b4f5bf69-9xvhf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9xvhf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb85fccb-9e8f-490f-838d-1078c489a27f",
      ResourceVersion: (string) (len=5) "49185",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrjgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrjgg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.743: INFO: Pod "webserver-deployment-9b4f5bf69-cjpjl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cjpjl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83cc6bcf-6ffd-4a9f-90e0-e41cffd3e943",
      ResourceVersion: (string) (len=5) "49092",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 31 2e 31 30 37  5c 22 7d 22 3a 7b 22 2e  |42.1.107\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p6nh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p6nh7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.1.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.745: INFO: Pod "webserver-deployment-9b4f5bf69-csqnp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-csqnp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d217e88-94ea-455d-a655-0ca2782de04d",
      ResourceVersion: (string) (len=5) "49305",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 32 2e 31 33 37  5c 22 7d 22 3a 7b 22 2e  |42.2.137\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9q7w7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9q7w7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.748: INFO: Pod "webserver-deployment-9b4f5bf69-f7k8g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-f7k8g",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "caf3bcbd-bacd-445b-9ac0-ddeba1982bad",
      ResourceVersion: (string) (len=5) "49080",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 33 2e 32 30 37  5c 22 7d 22 3a 7b 22 2e  |42.3.207\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7l4c6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7l4c6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.207",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.207"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.751: INFO: Pod "webserver-deployment-9b4f5bf69-f7sjh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-f7sjh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bca961e-6bb5-4d4e-821e-b153091dd51d",
      ResourceVersion: (string) (len=5) "49317",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 33 2e 32 30 38  5c 22 7d 22 3a 7b 22 2e  |42.3.208\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n4zkx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n4zkx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.753: INFO: Pod "webserver-deployment-9b4f5bf69-jkz9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jkz9l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4ea4085-02ac-40d6-9391-8476ba088044",
      ResourceVersion: (string) (len=5) "49324",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 33 2e 32 31 31  5c 22 7d 22 3a 7b 22 2e  |42.3.211\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwqxk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwqxk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.211",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.211"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.755: INFO: Pod "webserver-deployment-9b4f5bf69-jzkvj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jzkvj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3ecd2a9-e67d-4859-bb6f-b7372f11272b",
      ResourceVersion: (string) (len=5) "49198",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-62dqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-62dqh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.758: INFO: Pod "webserver-deployment-9b4f5bf69-qnz4x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qnz4x",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56a1731a-2eb2-4353-969f-f6898a4b516c",
      ResourceVersion: (string) (len=5) "49241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 30 2e 31 31 36  5c 22 7d 22 3a 7b 22 2e  |42.0.116\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x4mpn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x4mpn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.0.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.761: INFO: Pod "webserver-deployment-9b4f5bf69-sdvkg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sdvkg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c454bcd-050f-411b-93f3-a2f09c193a91",
      ResourceVersion: (string) (len=5) "49089",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 31 2e 31 30 38  5c 22 7d 22 3a 7b 22 2e  |42.1.108\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nr8n4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nr8n4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.1.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.763: INFO: Pod "webserver-deployment-9b4f5bf69-sgft8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sgft8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0984734-74ab-4538-8e16-12892887add8",
      ResourceVersion: (string) (len=5) "49326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 33 2e 32 31 32  5c 22 7d 22 3a 7b 22 2e  |42.3.212\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2nrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2nrk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.243",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.778: INFO: Pod "webserver-deployment-9b4f5bf69-vlpxp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vlpxp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb54da8d-afaa-4a45-8e3d-882cb2a4bd02",
      ResourceVersion: (string) (len=5) "49085",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 30 2e 31 31 35  5c 22 7d 22 3a 7b 22 2e  |42.0.115\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m767s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m767s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-123",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.123",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.0.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.786: INFO: Pod "webserver-deployment-9b4f5bf69-wjf2h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wjf2h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56ff8911-3b91-43ce-9042-aacd08f4c848",
      ResourceVersion: (string) (len=5) "49294",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 32 2e 31 33 39  5c 22 7d 22 3a 7b 22 2e  |42.2.139\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rkb9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rkb9g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999601,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999601,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.790: INFO: Pod "webserver-deployment-9b4f5bf69-wxpcq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wxpcq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-532",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa3f804e-8b4c-4fdc-abf0-387b437b736a",
      ResourceVersion: (string) (len=5) "49074",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "830cbf29-ff31-466e-8fb9-eb64f180b14e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  30 63 62 66 32 39 2d 66  |d\":\"830cbf29-f|
              00000090  66 33 31 2d 34 36 36 65  2d 38 66 62 39 2d 65 62  |f31-466e-8fb9-eb|
              000000a0  36 34 66 31 38 30 62 31  34 65 5c 22 7d 22 3a 7b  |64f180b14e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 32 2e 31 33 35  5c 22 7d 22 3a 7b 22 2e  |42.2.135\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6tsx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6tsx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-12-171",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829999599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.12.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.2.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829999599,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 03:26:43.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-532" for this suite. @ 09/11/23 03:26:43.807
• [6.358 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 09/11/23 03:26:43.831
  Sep 11 03:26:43.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 03:26:43.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:43.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:43.876
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/11/23 03:26:43.893
  Sep 11 03:26:43.920: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0911 03:26:44.615708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:45.616136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:46.616380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:47.617175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:48.617355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:49.024: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 03:26:49.024
  STEP: getting scale subresource @ 09/11/23 03:26:49.024
  STEP: updating a scale subresource @ 09/11/23 03:26:49.168
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/11/23 03:26:49.235
  STEP: Patch a scale subresource @ 09/11/23 03:26:49.336
  Sep 11 03:26:49.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 03:26:49.618843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-8788" for this suite. @ 09/11/23 03:26:49.642
• [5.996 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/11/23 03:26:49.827
  Sep 11 03:26:49.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename watch @ 09/11/23 03:26:49.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:49.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:50.023
  STEP: creating a watch on configmaps @ 09/11/23 03:26:50.072
  STEP: creating a new configmap @ 09/11/23 03:26:50.095
  STEP: modifying the configmap once @ 09/11/23 03:26:50.125
  STEP: closing the watch once it receives two notifications @ 09/11/23 03:26:50.186
  Sep 11 03:26:50.187: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9748  14b8782a-6c1f-4f62-b7e9-cf18b4c73e9f 49475 0 2023-09-11 03:26:50 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 03:26:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:26:50.187: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9748  14b8782a-6c1f-4f62-b7e9-cf18b4c73e9f 49476 0 2023-09-11 03:26:50 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 03:26:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/11/23 03:26:50.187
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/11/23 03:26:50.247
  STEP: deleting the configmap @ 09/11/23 03:26:50.254
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/11/23 03:26:50.264
  Sep 11 03:26:50.265: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9748  14b8782a-6c1f-4f62-b7e9-cf18b4c73e9f 49477 0 2023-09-11 03:26:50 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 03:26:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:26:50.265: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9748  14b8782a-6c1f-4f62-b7e9-cf18b4c73e9f 49478 0 2023-09-11 03:26:50 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 03:26:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 03:26:50.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9748" for this suite. @ 09/11/23 03:26:50.275
• [0.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 09/11/23 03:26:50.298
  Sep 11 03:26:50.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 03:26:50.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:50.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:50.338
  STEP: Creating ReplicationController "e2e-rc-jgvzb" @ 09/11/23 03:26:50.342
  Sep 11 03:26:50.354: INFO: Get Replication Controller "e2e-rc-jgvzb" to confirm replicas
  E0911 03:26:50.619270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:51.364: INFO: Get Replication Controller "e2e-rc-jgvzb" to confirm replicas
  Sep 11 03:26:51.367: INFO: Found 1 replicas for "e2e-rc-jgvzb" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-jgvzb" @ 09/11/23 03:26:51.368
  STEP: Updating a scale subresource @ 09/11/23 03:26:51.371
  STEP: Verifying replicas where modified for replication controller "e2e-rc-jgvzb" @ 09/11/23 03:26:51.378
  Sep 11 03:26:51.378: INFO: Get Replication Controller "e2e-rc-jgvzb" to confirm replicas
  E0911 03:26:51.619721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:26:52.384: INFO: Get Replication Controller "e2e-rc-jgvzb" to confirm replicas
  Sep 11 03:26:52.387: INFO: Found 2 replicas for "e2e-rc-jgvzb" replication controller
  Sep 11 03:26:52.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4390" for this suite. @ 09/11/23 03:26:52.391
• [2.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 09/11/23 03:26:52.399
  Sep 11 03:26:52.399: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 03:26:52.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:52.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:52.421
  STEP: creating a Namespace @ 09/11/23 03:26:52.425
  STEP: patching the Namespace @ 09/11/23 03:26:52.442
  STEP: get the Namespace and ensuring it has the label @ 09/11/23 03:26:52.45
  Sep 11 03:26:52.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4364" for this suite. @ 09/11/23 03:26:52.459
  STEP: Destroying namespace "nspatchtest-eaa67f84-b642-4357-ab54-28e226b8e07a-4457" for this suite. @ 09/11/23 03:26:52.467
• [0.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 09/11/23 03:26:52.476
  Sep 11 03:26:52.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 03:26:52.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:26:52.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:26:52.505
  Sep 11 03:26:52.521: INFO: created pod
  E0911 03:26:52.620349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:53.621446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:54.622035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:55.622119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:26:56.531
  E0911 03:26:56.623224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:57.623461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:58.623550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:26:59.623699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:00.624100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:01.625272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:02.625563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:03.625875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:04.626013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:05.626578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:06.626830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:07.627048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:08.627721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:09.627973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:10.628252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:11.628598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:12.628900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:13.629160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:14.629644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:15.630709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:16.630806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:17.630950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:18.631171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:19.631558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:20.631680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:21.631854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:22.631994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:23.632147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:24.632285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:25.632367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:27:26.532: INFO: polling logs
  Sep 11 03:27:26.546: INFO: Pod logs: 
  I0911 03:26:53.129030       1 log.go:194] OK: Got token
  I0911 03:26:53.129119       1 log.go:194] validating with in-cluster discovery
  I0911 03:26:53.130363       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0911 03:26:53.130406       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5274:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000126298), NotBefore:(*jwt.NumericDate)(0xc000126378), IssuedAt:(*jwt.NumericDate)(0xc0001262a8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5274", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"051d1101-05e6-4868-87f8-42f30e0b595e"}}}
  I0911 03:26:53.140761       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0911 03:26:53.146335       1 log.go:194] OK: Validated signature on JWT
  I0911 03:26:53.146595       1 log.go:194] OK: Got valid claims from token!
  I0911 03:26:53.146741       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5274:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004a77d0), NotBefore:(*jwt.NumericDate)(0xc0004a77f8), IssuedAt:(*jwt.NumericDate)(0xc0004a77d8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5274", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"051d1101-05e6-4868-87f8-42f30e0b595e"}}}

  Sep 11 03:27:26.546: INFO: completed pod
  Sep 11 03:27:26.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5274" for this suite. @ 09/11/23 03:27:26.557
• [34.088 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/11/23 03:27:26.564
  Sep 11 03:27:26.565: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename init-container @ 09/11/23 03:27:26.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:27:26.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:27:26.593
  STEP: creating the pod @ 09/11/23 03:27:26.598
  Sep 11 03:27:26.598: INFO: PodSpec: initContainers in spec.initContainers
  E0911 03:27:26.633322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:27.634163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:28.634853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:29.634951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:27:30.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2532" for this suite. @ 09/11/23 03:27:30.1
• [3.551 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/11/23 03:27:30.118
  Sep 11 03:27:30.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 03:27:30.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:27:30.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:27:30.145
  STEP: Creating a pod to test substitution in volume subpath @ 09/11/23 03:27:30.151
  E0911 03:27:30.635060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:31.635223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:27:32.166
  Sep 11 03:27:32.172: INFO: Trying to get logs from node ip-172-31-3-111 pod var-expansion-b65b411f-d5ed-479c-b748-e2e95461fa62 container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 03:27:32.184
  Sep 11 03:27:32.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3580" for this suite. @ 09/11/23 03:27:32.201
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 09/11/23 03:27:32.21
  Sep 11 03:27:32.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename secrets @ 09/11/23 03:27:32.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:27:32.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:27:32.234
  STEP: creating secret secrets-7174/secret-test-62d2b8d5-5935-4797-b2bd-43a18411e2c2 @ 09/11/23 03:27:32.238
  STEP: Creating a pod to test consume secrets @ 09/11/23 03:27:32.243
  E0911 03:27:32.635936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:33.636533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 03:27:34.259
  Sep 11 03:27:34.261: INFO: Trying to get logs from node ip-172-31-3-111 pod pod-configmaps-20b11bf0-7c16-44cf-818c-e116e58a05d1 container env-test: <nil>
  STEP: delete the pod @ 09/11/23 03:27:34.268
  Sep 11 03:27:34.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7174" for this suite. @ 09/11/23 03:27:34.288
• [2.085 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/11/23 03:27:34.296
  Sep 11 03:27:34.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2166035651
  STEP: Building a namespace api object, basename webhook @ 09/11/23 03:27:34.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 03:27:34.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 03:27:34.317
  STEP: Setting up server cert @ 09/11/23 03:27:34.345
  E0911 03:27:34.637292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 03:27:34.799
  STEP: Deploying the webhook pod @ 09/11/23 03:27:34.807
  STEP: Wait for the deployment to be ready @ 09/11/23 03:27:34.82
  Sep 11 03:27:34.844: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 03:27:35.638222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 03:27:36.638338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 03:27:36.856
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 03:27:36.869
  E0911 03:27:37.638446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 03:27:37.871: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/11/23 03:27:37.877
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/11/23 03:27:37.901
  STEP: Creating a dummy validating-webhook-configuration object @ 09/11/23 03:27:37.958
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/11/23 03:27:37.98
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/11/23 03:27:37.989
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/11/23 03:27:38.013
  Sep 11 03:27:38.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9108" for this suite. @ 09/11/23 03:27:38.176
  STEP: Destroying namespace "webhook-markers-7883" for this suite. @ 09/11/23 03:27:38.183
• [3.895 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Sep 11 03:27:38.196: INFO: Running AfterSuite actions on node 1
  Sep 11 03:27:38.196: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.113 seconds]
------------------------------

Ran 380 of 7387 Specs in 6133.802 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h42m14.475007304s
Test Suite Passed
